// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.iosxe.Utilities;
import com.pulumi.iosxe.iosxe.VrfArgs;
import com.pulumi.iosxe.iosxe.inputs.VrfState;
import com.pulumi.iosxe.iosxe.outputs.VrfIpv4RouteTargetExport;
import com.pulumi.iosxe.iosxe.outputs.VrfIpv4RouteTargetExportStitching;
import com.pulumi.iosxe.iosxe.outputs.VrfIpv4RouteTargetImport;
import com.pulumi.iosxe.iosxe.outputs.VrfIpv4RouteTargetImportStitching;
import com.pulumi.iosxe.iosxe.outputs.VrfIpv6RouteTargetExport;
import com.pulumi.iosxe.iosxe.outputs.VrfIpv6RouteTargetExportStitching;
import com.pulumi.iosxe.iosxe.outputs.VrfIpv6RouteTargetImport;
import com.pulumi.iosxe.iosxe.outputs.VrfIpv6RouteTargetImportStitching;
import com.pulumi.iosxe.iosxe.outputs.VrfRouteTargetExport;
import com.pulumi.iosxe.iosxe.outputs.VrfRouteTargetImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage the VRF configuration.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.iosxe.iosxe.Vrf;
 * import com.pulumi.iosxe.iosxe.VrfArgs;
 * import com.pulumi.iosxe.iosxe.inputs.VrfIpv4RouteTargetExportArgs;
 * import com.pulumi.iosxe.iosxe.inputs.VrfIpv4RouteTargetExportStitchingArgs;
 * import com.pulumi.iosxe.iosxe.inputs.VrfIpv4RouteTargetImportArgs;
 * import com.pulumi.iosxe.iosxe.inputs.VrfIpv4RouteTargetImportStitchingArgs;
 * import com.pulumi.iosxe.iosxe.inputs.VrfIpv6RouteTargetExportArgs;
 * import com.pulumi.iosxe.iosxe.inputs.VrfIpv6RouteTargetExportStitchingArgs;
 * import com.pulumi.iosxe.iosxe.inputs.VrfIpv6RouteTargetImportArgs;
 * import com.pulumi.iosxe.iosxe.inputs.VrfIpv6RouteTargetImportStitchingArgs;
 * import com.pulumi.iosxe.iosxe.inputs.VrfRouteTargetExportArgs;
 * import com.pulumi.iosxe.iosxe.inputs.VrfRouteTargetImportArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Vrf(&#34;example&#34;, VrfArgs.builder()        
 *             .addressFamilyIpv4(true)
 *             .addressFamilyIpv6(true)
 *             .description(&#34;VRF22 description&#34;)
 *             .ipv4RouteTargetExports(VrfIpv4RouteTargetExportArgs.builder()
 *                 .value(&#34;22:22&#34;)
 *                 .build())
 *             .ipv4RouteTargetExportStitchings(VrfIpv4RouteTargetExportStitchingArgs.builder()
 *                 .value(&#34;22:22&#34;)
 *                 .build())
 *             .ipv4RouteTargetImports(VrfIpv4RouteTargetImportArgs.builder()
 *                 .value(&#34;22:22&#34;)
 *                 .build())
 *             .ipv4RouteTargetImportStitchings(VrfIpv4RouteTargetImportStitchingArgs.builder()
 *                 .value(&#34;22:22&#34;)
 *                 .build())
 *             .ipv6RouteTargetExports(VrfIpv6RouteTargetExportArgs.builder()
 *                 .value(&#34;22:22&#34;)
 *                 .build())
 *             .ipv6RouteTargetExportStitchings(VrfIpv6RouteTargetExportStitchingArgs.builder()
 *                 .value(&#34;22:22&#34;)
 *                 .build())
 *             .ipv6RouteTargetImports(VrfIpv6RouteTargetImportArgs.builder()
 *                 .value(&#34;22:22&#34;)
 *                 .build())
 *             .ipv6RouteTargetImportStitchings(VrfIpv6RouteTargetImportStitchingArgs.builder()
 *                 .value(&#34;22:22&#34;)
 *                 .build())
 *             .rd(&#34;22:22&#34;)
 *             .routeTargetExports(VrfRouteTargetExportArgs.builder()
 *                 .stitching(false)
 *                 .value(&#34;22:22&#34;)
 *                 .build())
 *             .routeTargetImports(VrfRouteTargetImportArgs.builder()
 *                 .stitching(false)
 *                 .value(&#34;22:22&#34;)
 *                 .build())
 *             .vpnId(&#34;22:22&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import iosxe:iosxe/vrf:Vrf example &#34;Cisco-IOS-XE-native:native/vrf/definition=VRF22&#34;
 * ```
 * 
 */
@ResourceType(type="iosxe:iosxe/vrf:Vrf")
public class Vrf extends com.pulumi.resources.CustomResource {
    /**
     * Address family
     * 
     */
    @Export(name="addressFamilyIpv4", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> addressFamilyIpv4;

    /**
     * @return Address family
     * 
     */
    public Output<Optional<Boolean>> addressFamilyIpv4() {
        return Codegen.optional(this.addressFamilyIpv4);
    }
    /**
     * Address family
     * 
     */
    @Export(name="addressFamilyIpv6", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> addressFamilyIpv6;

    /**
     * @return Address family
     * 
     */
    public Output<Optional<Boolean>> addressFamilyIpv6() {
        return Codegen.optional(this.addressFamilyIpv6);
    }
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    @Export(name="deleteMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deleteMode;

    /**
     * @return Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    public Output<Optional<String>> deleteMode() {
        return Codegen.optional(this.deleteMode);
    }
    /**
     * VRF specific description
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return VRF specific description
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A device name from the provider configuration.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }
    /**
     * Export Target-VPN community
     * 
     */
    @Export(name="ipv4RouteTargetExportStitchings", refs={List.class,VrfIpv4RouteTargetExportStitching.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VrfIpv4RouteTargetExportStitching>> ipv4RouteTargetExportStitchings;

    /**
     * @return Export Target-VPN community
     * 
     */
    public Output<Optional<List<VrfIpv4RouteTargetExportStitching>>> ipv4RouteTargetExportStitchings() {
        return Codegen.optional(this.ipv4RouteTargetExportStitchings);
    }
    /**
     * Export Target-VPN community
     * 
     */
    @Export(name="ipv4RouteTargetExports", refs={List.class,VrfIpv4RouteTargetExport.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VrfIpv4RouteTargetExport>> ipv4RouteTargetExports;

    /**
     * @return Export Target-VPN community
     * 
     */
    public Output<Optional<List<VrfIpv4RouteTargetExport>>> ipv4RouteTargetExports() {
        return Codegen.optional(this.ipv4RouteTargetExports);
    }
    /**
     * Import Target-VPN community
     * 
     */
    @Export(name="ipv4RouteTargetImportStitchings", refs={List.class,VrfIpv4RouteTargetImportStitching.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VrfIpv4RouteTargetImportStitching>> ipv4RouteTargetImportStitchings;

    /**
     * @return Import Target-VPN community
     * 
     */
    public Output<Optional<List<VrfIpv4RouteTargetImportStitching>>> ipv4RouteTargetImportStitchings() {
        return Codegen.optional(this.ipv4RouteTargetImportStitchings);
    }
    /**
     * Import Target-VPN community
     * 
     */
    @Export(name="ipv4RouteTargetImports", refs={List.class,VrfIpv4RouteTargetImport.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VrfIpv4RouteTargetImport>> ipv4RouteTargetImports;

    /**
     * @return Import Target-VPN community
     * 
     */
    public Output<Optional<List<VrfIpv4RouteTargetImport>>> ipv4RouteTargetImports() {
        return Codegen.optional(this.ipv4RouteTargetImports);
    }
    /**
     * Export Target-VPN community
     * 
     */
    @Export(name="ipv6RouteTargetExportStitchings", refs={List.class,VrfIpv6RouteTargetExportStitching.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VrfIpv6RouteTargetExportStitching>> ipv6RouteTargetExportStitchings;

    /**
     * @return Export Target-VPN community
     * 
     */
    public Output<Optional<List<VrfIpv6RouteTargetExportStitching>>> ipv6RouteTargetExportStitchings() {
        return Codegen.optional(this.ipv6RouteTargetExportStitchings);
    }
    /**
     * Export Target-VPN community
     * 
     */
    @Export(name="ipv6RouteTargetExports", refs={List.class,VrfIpv6RouteTargetExport.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VrfIpv6RouteTargetExport>> ipv6RouteTargetExports;

    /**
     * @return Export Target-VPN community
     * 
     */
    public Output<Optional<List<VrfIpv6RouteTargetExport>>> ipv6RouteTargetExports() {
        return Codegen.optional(this.ipv6RouteTargetExports);
    }
    /**
     * Import Target-VPN community
     * 
     */
    @Export(name="ipv6RouteTargetImportStitchings", refs={List.class,VrfIpv6RouteTargetImportStitching.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VrfIpv6RouteTargetImportStitching>> ipv6RouteTargetImportStitchings;

    /**
     * @return Import Target-VPN community
     * 
     */
    public Output<Optional<List<VrfIpv6RouteTargetImportStitching>>> ipv6RouteTargetImportStitchings() {
        return Codegen.optional(this.ipv6RouteTargetImportStitchings);
    }
    /**
     * Import Target-VPN community
     * 
     */
    @Export(name="ipv6RouteTargetImports", refs={List.class,VrfIpv6RouteTargetImport.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VrfIpv6RouteTargetImport>> ipv6RouteTargetImports;

    /**
     * @return Import Target-VPN community
     * 
     */
    public Output<Optional<List<VrfIpv6RouteTargetImport>>> ipv6RouteTargetImports() {
        return Codegen.optional(this.ipv6RouteTargetImports);
    }
    /**
     * WORD;;VRF name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return WORD;;VRF name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specify Route Distinguisher
     * 
     */
    @Export(name="rd", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> rd;

    /**
     * @return Specify Route Distinguisher
     * 
     */
    public Output<Optional<String>> rd() {
        return Codegen.optional(this.rd);
    }
    /**
     * Export Target-VPN community
     * 
     */
    @Export(name="routeTargetExports", refs={List.class,VrfRouteTargetExport.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VrfRouteTargetExport>> routeTargetExports;

    /**
     * @return Export Target-VPN community
     * 
     */
    public Output<Optional<List<VrfRouteTargetExport>>> routeTargetExports() {
        return Codegen.optional(this.routeTargetExports);
    }
    /**
     * Import Target-VPN community
     * 
     */
    @Export(name="routeTargetImports", refs={List.class,VrfRouteTargetImport.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VrfRouteTargetImport>> routeTargetImports;

    /**
     * @return Import Target-VPN community
     * 
     */
    public Output<Optional<List<VrfRouteTargetImport>>> routeTargetImports() {
        return Codegen.optional(this.routeTargetImports);
    }
    /**
     * Configure VPN ID in rfc2685 format
     * 
     */
    @Export(name="vpnId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpnId;

    /**
     * @return Configure VPN ID in rfc2685 format
     * 
     */
    public Output<Optional<String>> vpnId() {
        return Codegen.optional(this.vpnId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Vrf(String name) {
        this(name, VrfArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Vrf(String name, @Nullable VrfArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Vrf(String name, @Nullable VrfArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/vrf:Vrf", name, args == null ? VrfArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Vrf(String name, Output<String> id, @Nullable VrfState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/vrf:Vrf", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Vrf get(String name, Output<String> id, @Nullable VrfState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Vrf(name, id, state, options);
    }
}
