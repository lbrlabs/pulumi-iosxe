// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CryptoIkev2KeyringPeerArgs extends com.pulumi.resources.ResourceArgs {

    public static final CryptoIkev2KeyringPeerArgs Empty = new CryptoIkev2KeyringPeerArgs();

    /**
     * Specify a description of this peer
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Specify a description of this peer
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Hostname of peer
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return Hostname of peer
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * IP address
     * 
     */
    @Import(name="identityAddress")
    private @Nullable Output<String> identityAddress;

    /**
     * @return IP address
     * 
     */
    public Optional<Output<String>> identityAddress() {
        return Optional.ofNullable(this.identityAddress);
    }

    /**
     * email Domain Name
     * 
     */
    @Import(name="identityEmailDomain")
    private @Nullable Output<String> identityEmailDomain;

    /**
     * @return email Domain Name
     * 
     */
    public Optional<Output<String>> identityEmailDomain() {
        return Optional.ofNullable(this.identityEmailDomain);
    }

    /**
     * Specify the name string
     * 
     */
    @Import(name="identityEmailName")
    private @Nullable Output<String> identityEmailName;

    /**
     * @return Specify the name string
     * 
     */
    public Optional<Output<String>> identityEmailName() {
        return Optional.ofNullable(this.identityEmailName);
    }

    /**
     * email Domain Name
     * 
     */
    @Import(name="identityFqdnDomain")
    private @Nullable Output<String> identityFqdnDomain;

    /**
     * @return email Domain Name
     * 
     */
    public Optional<Output<String>> identityFqdnDomain() {
        return Optional.ofNullable(this.identityFqdnDomain);
    }

    /**
     * Specify the name string
     * 
     */
    @Import(name="identityFqdnName")
    private @Nullable Output<String> identityFqdnName;

    /**
     * @return Specify the name string
     * 
     */
    public Optional<Output<String>> identityFqdnName() {
        return Optional.ofNullable(this.identityFqdnName);
    }

    /**
     * proprietary types of identification (ID KEY ID)
     * 
     */
    @Import(name="identityKeyId")
    private @Nullable Output<String> identityKeyId;

    /**
     * @return proprietary types of identification (ID KEY ID)
     * 
     */
    public Optional<Output<String>> identityKeyId() {
        return Optional.ofNullable(this.identityKeyId);
    }

    @Import(name="ipv4Address")
    private @Nullable Output<String> ipv4Address;

    public Optional<Output<String>> ipv4Address() {
        return Optional.ofNullable(this.ipv4Address);
    }

    @Import(name="ipv4Mask")
    private @Nullable Output<String> ipv4Mask;

    public Optional<Output<String>> ipv4Mask() {
        return Optional.ofNullable(this.ipv4Mask);
    }

    @Import(name="ipv6Prefix")
    private @Nullable Output<String> ipv6Prefix;

    public Optional<Output<String>> ipv6Prefix() {
        return Optional.ofNullable(this.ipv6Prefix);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="preSharedKey")
    private @Nullable Output<String> preSharedKey;

    public Optional<Output<String>> preSharedKey() {
        return Optional.ofNullable(this.preSharedKey);
    }

    /**
     * - Choices: `0`, `6`
     * 
     */
    @Import(name="preSharedKeyEncryption")
    private @Nullable Output<String> preSharedKeyEncryption;

    /**
     * @return - Choices: `0`, `6`
     * 
     */
    public Optional<Output<String>> preSharedKeyEncryption() {
        return Optional.ofNullable(this.preSharedKeyEncryption);
    }

    @Import(name="preSharedKeyLocal")
    private @Nullable Output<String> preSharedKeyLocal;

    public Optional<Output<String>> preSharedKeyLocal() {
        return Optional.ofNullable(this.preSharedKeyLocal);
    }

    /**
     * - Choices: `0`, `6`
     * 
     */
    @Import(name="preSharedKeyLocalEncryption")
    private @Nullable Output<String> preSharedKeyLocalEncryption;

    /**
     * @return - Choices: `0`, `6`
     * 
     */
    public Optional<Output<String>> preSharedKeyLocalEncryption() {
        return Optional.ofNullable(this.preSharedKeyLocalEncryption);
    }

    @Import(name="preSharedKeyRemote")
    private @Nullable Output<String> preSharedKeyRemote;

    public Optional<Output<String>> preSharedKeyRemote() {
        return Optional.ofNullable(this.preSharedKeyRemote);
    }

    /**
     * - Choices: `0`, `6`
     * 
     */
    @Import(name="preSharedKeyRemoteEncryption")
    private @Nullable Output<String> preSharedKeyRemoteEncryption;

    /**
     * @return - Choices: `0`, `6`
     * 
     */
    public Optional<Output<String>> preSharedKeyRemoteEncryption() {
        return Optional.ofNullable(this.preSharedKeyRemoteEncryption);
    }

    private CryptoIkev2KeyringPeerArgs() {}

    private CryptoIkev2KeyringPeerArgs(CryptoIkev2KeyringPeerArgs $) {
        this.description = $.description;
        this.hostname = $.hostname;
        this.identityAddress = $.identityAddress;
        this.identityEmailDomain = $.identityEmailDomain;
        this.identityEmailName = $.identityEmailName;
        this.identityFqdnDomain = $.identityFqdnDomain;
        this.identityFqdnName = $.identityFqdnName;
        this.identityKeyId = $.identityKeyId;
        this.ipv4Address = $.ipv4Address;
        this.ipv4Mask = $.ipv4Mask;
        this.ipv6Prefix = $.ipv6Prefix;
        this.name = $.name;
        this.preSharedKey = $.preSharedKey;
        this.preSharedKeyEncryption = $.preSharedKeyEncryption;
        this.preSharedKeyLocal = $.preSharedKeyLocal;
        this.preSharedKeyLocalEncryption = $.preSharedKeyLocalEncryption;
        this.preSharedKeyRemote = $.preSharedKeyRemote;
        this.preSharedKeyRemoteEncryption = $.preSharedKeyRemoteEncryption;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CryptoIkev2KeyringPeerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CryptoIkev2KeyringPeerArgs $;

        public Builder() {
            $ = new CryptoIkev2KeyringPeerArgs();
        }

        public Builder(CryptoIkev2KeyringPeerArgs defaults) {
            $ = new CryptoIkev2KeyringPeerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Specify a description of this peer
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Specify a description of this peer
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param hostname Hostname of peer
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname Hostname of peer
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param identityAddress IP address
         * 
         * @return builder
         * 
         */
        public Builder identityAddress(@Nullable Output<String> identityAddress) {
            $.identityAddress = identityAddress;
            return this;
        }

        /**
         * @param identityAddress IP address
         * 
         * @return builder
         * 
         */
        public Builder identityAddress(String identityAddress) {
            return identityAddress(Output.of(identityAddress));
        }

        /**
         * @param identityEmailDomain email Domain Name
         * 
         * @return builder
         * 
         */
        public Builder identityEmailDomain(@Nullable Output<String> identityEmailDomain) {
            $.identityEmailDomain = identityEmailDomain;
            return this;
        }

        /**
         * @param identityEmailDomain email Domain Name
         * 
         * @return builder
         * 
         */
        public Builder identityEmailDomain(String identityEmailDomain) {
            return identityEmailDomain(Output.of(identityEmailDomain));
        }

        /**
         * @param identityEmailName Specify the name string
         * 
         * @return builder
         * 
         */
        public Builder identityEmailName(@Nullable Output<String> identityEmailName) {
            $.identityEmailName = identityEmailName;
            return this;
        }

        /**
         * @param identityEmailName Specify the name string
         * 
         * @return builder
         * 
         */
        public Builder identityEmailName(String identityEmailName) {
            return identityEmailName(Output.of(identityEmailName));
        }

        /**
         * @param identityFqdnDomain email Domain Name
         * 
         * @return builder
         * 
         */
        public Builder identityFqdnDomain(@Nullable Output<String> identityFqdnDomain) {
            $.identityFqdnDomain = identityFqdnDomain;
            return this;
        }

        /**
         * @param identityFqdnDomain email Domain Name
         * 
         * @return builder
         * 
         */
        public Builder identityFqdnDomain(String identityFqdnDomain) {
            return identityFqdnDomain(Output.of(identityFqdnDomain));
        }

        /**
         * @param identityFqdnName Specify the name string
         * 
         * @return builder
         * 
         */
        public Builder identityFqdnName(@Nullable Output<String> identityFqdnName) {
            $.identityFqdnName = identityFqdnName;
            return this;
        }

        /**
         * @param identityFqdnName Specify the name string
         * 
         * @return builder
         * 
         */
        public Builder identityFqdnName(String identityFqdnName) {
            return identityFqdnName(Output.of(identityFqdnName));
        }

        /**
         * @param identityKeyId proprietary types of identification (ID KEY ID)
         * 
         * @return builder
         * 
         */
        public Builder identityKeyId(@Nullable Output<String> identityKeyId) {
            $.identityKeyId = identityKeyId;
            return this;
        }

        /**
         * @param identityKeyId proprietary types of identification (ID KEY ID)
         * 
         * @return builder
         * 
         */
        public Builder identityKeyId(String identityKeyId) {
            return identityKeyId(Output.of(identityKeyId));
        }

        public Builder ipv4Address(@Nullable Output<String> ipv4Address) {
            $.ipv4Address = ipv4Address;
            return this;
        }

        public Builder ipv4Address(String ipv4Address) {
            return ipv4Address(Output.of(ipv4Address));
        }

        public Builder ipv4Mask(@Nullable Output<String> ipv4Mask) {
            $.ipv4Mask = ipv4Mask;
            return this;
        }

        public Builder ipv4Mask(String ipv4Mask) {
            return ipv4Mask(Output.of(ipv4Mask));
        }

        public Builder ipv6Prefix(@Nullable Output<String> ipv6Prefix) {
            $.ipv6Prefix = ipv6Prefix;
            return this;
        }

        public Builder ipv6Prefix(String ipv6Prefix) {
            return ipv6Prefix(Output.of(ipv6Prefix));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder preSharedKey(@Nullable Output<String> preSharedKey) {
            $.preSharedKey = preSharedKey;
            return this;
        }

        public Builder preSharedKey(String preSharedKey) {
            return preSharedKey(Output.of(preSharedKey));
        }

        /**
         * @param preSharedKeyEncryption - Choices: `0`, `6`
         * 
         * @return builder
         * 
         */
        public Builder preSharedKeyEncryption(@Nullable Output<String> preSharedKeyEncryption) {
            $.preSharedKeyEncryption = preSharedKeyEncryption;
            return this;
        }

        /**
         * @param preSharedKeyEncryption - Choices: `0`, `6`
         * 
         * @return builder
         * 
         */
        public Builder preSharedKeyEncryption(String preSharedKeyEncryption) {
            return preSharedKeyEncryption(Output.of(preSharedKeyEncryption));
        }

        public Builder preSharedKeyLocal(@Nullable Output<String> preSharedKeyLocal) {
            $.preSharedKeyLocal = preSharedKeyLocal;
            return this;
        }

        public Builder preSharedKeyLocal(String preSharedKeyLocal) {
            return preSharedKeyLocal(Output.of(preSharedKeyLocal));
        }

        /**
         * @param preSharedKeyLocalEncryption - Choices: `0`, `6`
         * 
         * @return builder
         * 
         */
        public Builder preSharedKeyLocalEncryption(@Nullable Output<String> preSharedKeyLocalEncryption) {
            $.preSharedKeyLocalEncryption = preSharedKeyLocalEncryption;
            return this;
        }

        /**
         * @param preSharedKeyLocalEncryption - Choices: `0`, `6`
         * 
         * @return builder
         * 
         */
        public Builder preSharedKeyLocalEncryption(String preSharedKeyLocalEncryption) {
            return preSharedKeyLocalEncryption(Output.of(preSharedKeyLocalEncryption));
        }

        public Builder preSharedKeyRemote(@Nullable Output<String> preSharedKeyRemote) {
            $.preSharedKeyRemote = preSharedKeyRemote;
            return this;
        }

        public Builder preSharedKeyRemote(String preSharedKeyRemote) {
            return preSharedKeyRemote(Output.of(preSharedKeyRemote));
        }

        /**
         * @param preSharedKeyRemoteEncryption - Choices: `0`, `6`
         * 
         * @return builder
         * 
         */
        public Builder preSharedKeyRemoteEncryption(@Nullable Output<String> preSharedKeyRemoteEncryption) {
            $.preSharedKeyRemoteEncryption = preSharedKeyRemoteEncryption;
            return this;
        }

        /**
         * @param preSharedKeyRemoteEncryption - Choices: `0`, `6`
         * 
         * @return builder
         * 
         */
        public Builder preSharedKeyRemoteEncryption(String preSharedKeyRemoteEncryption) {
            return preSharedKeyRemoteEncryption(Output.of(preSharedKeyRemoteEncryption));
        }

        public CryptoIkev2KeyringPeerArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
