// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CdpTlvListArgs extends com.pulumi.resources.ResourceArgs {

    public static final CdpTlvListArgs Empty = new CdpTlvListArgs();

    @Import(name="cos")
    private @Nullable Output<Boolean> cos;

    public Optional<Output<Boolean>> cos() {
        return Optional.ofNullable(this.cos);
    }

    @Import(name="duplex")
    private @Nullable Output<Boolean> duplex;

    public Optional<Output<Boolean>> duplex() {
        return Optional.ofNullable(this.duplex);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="trust")
    private @Nullable Output<Boolean> trust;

    public Optional<Output<Boolean>> trust() {
        return Optional.ofNullable(this.trust);
    }

    @Import(name="version")
    private @Nullable Output<Boolean> version;

    public Optional<Output<Boolean>> version() {
        return Optional.ofNullable(this.version);
    }

    @Import(name="vtpMgmtDomain")
    private @Nullable Output<Boolean> vtpMgmtDomain;

    public Optional<Output<Boolean>> vtpMgmtDomain() {
        return Optional.ofNullable(this.vtpMgmtDomain);
    }

    private CdpTlvListArgs() {}

    private CdpTlvListArgs(CdpTlvListArgs $) {
        this.cos = $.cos;
        this.duplex = $.duplex;
        this.name = $.name;
        this.trust = $.trust;
        this.version = $.version;
        this.vtpMgmtDomain = $.vtpMgmtDomain;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CdpTlvListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CdpTlvListArgs $;

        public Builder() {
            $ = new CdpTlvListArgs();
        }

        public Builder(CdpTlvListArgs defaults) {
            $ = new CdpTlvListArgs(Objects.requireNonNull(defaults));
        }

        public Builder cos(@Nullable Output<Boolean> cos) {
            $.cos = cos;
            return this;
        }

        public Builder cos(Boolean cos) {
            return cos(Output.of(cos));
        }

        public Builder duplex(@Nullable Output<Boolean> duplex) {
            $.duplex = duplex;
            return this;
        }

        public Builder duplex(Boolean duplex) {
            return duplex(Output.of(duplex));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder trust(@Nullable Output<Boolean> trust) {
            $.trust = trust;
            return this;
        }

        public Builder trust(Boolean trust) {
            return trust(Output.of(trust));
        }

        public Builder version(@Nullable Output<Boolean> version) {
            $.version = version;
            return this;
        }

        public Builder version(Boolean version) {
            return version(Output.of(version));
        }

        public Builder vtpMgmtDomain(@Nullable Output<Boolean> vtpMgmtDomain) {
            $.vtpMgmtDomain = vtpMgmtDomain;
            return this;
        }

        public Builder vtpMgmtDomain(Boolean vtpMgmtDomain) {
            return vtpMgmtDomain(Output.of(vtpMgmtDomain));
        }

        public CdpTlvListArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
