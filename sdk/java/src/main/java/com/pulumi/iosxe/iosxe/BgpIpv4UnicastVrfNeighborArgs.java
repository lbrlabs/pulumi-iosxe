// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.iosxe.iosxe.inputs.BgpIpv4UnicastVrfNeighborRouteMapArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BgpIpv4UnicastVrfNeighborArgs extends com.pulumi.resources.ResourceArgs {

    public static final BgpIpv4UnicastVrfNeighborArgs Empty = new BgpIpv4UnicastVrfNeighborArgs();

    /**
     * Enable the address family for this neighbor - Default value: `true`
     * 
     */
    @Import(name="activate")
    private @Nullable Output<Boolean> activate;

    /**
     * @return Enable the address family for this neighbor - Default value: `true`
     * 
     */
    public Optional<Output<Boolean>> activate() {
        return Optional.ofNullable(this.activate);
    }

    @Import(name="asn", required=true)
    private Output<String> asn;

    public Output<String> asn() {
        return this.asn;
    }

    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    @Import(name="deleteMode")
    private @Nullable Output<String> deleteMode;

    /**
     * @return Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    public Optional<Output<String>> deleteMode() {
        return Optional.ofNullable(this.deleteMode);
    }

    /**
     * Neighbor specific description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Neighbor specific description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * one-hop away EBGP peer using loopback address
     * 
     */
    @Import(name="disableConnectedCheck")
    private @Nullable Output<Boolean> disableConnectedCheck;

    /**
     * @return one-hop away EBGP peer using loopback address
     * 
     */
    public Optional<Output<Boolean>> disableConnectedCheck() {
        return Optional.ofNullable(this.disableConnectedCheck);
    }

    /**
     * Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
     * 
     */
    @Import(name="ebgpMultihop")
    private @Nullable Output<Boolean> ebgpMultihop;

    /**
     * @return Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
     * 
     */
    public Optional<Output<Boolean>> ebgpMultihop() {
        return Optional.ofNullable(this.ebgpMultihop);
    }

    /**
     * - Range: `2`-`255`
     * 
     */
    @Import(name="ebgpMultihopMaxHop")
    private @Nullable Output<Integer> ebgpMultihopMaxHop;

    /**
     * @return - Range: `2`-`255`
     * 
     */
    public Optional<Output<Integer>> ebgpMultihopMaxHop() {
        return Optional.ofNullable(this.ebgpMultihopMaxHop);
    }

    /**
     * Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
     * 
     */
    @Import(name="fallOverBfdCheckControlPlaneFailure")
    private @Nullable Output<Boolean> fallOverBfdCheckControlPlaneFailure;

    /**
     * @return Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
     * 
     */
    public Optional<Output<Boolean>> fallOverBfdCheckControlPlaneFailure() {
        return Optional.ofNullable(this.fallOverBfdCheckControlPlaneFailure);
    }

    /**
     * Force BFD multi-hop to detect failure
     * 
     */
    @Import(name="fallOverBfdMultiHop")
    private @Nullable Output<Boolean> fallOverBfdMultiHop;

    /**
     * @return Force BFD multi-hop to detect failure
     * 
     */
    public Optional<Output<Boolean>> fallOverBfdMultiHop() {
        return Optional.ofNullable(this.fallOverBfdMultiHop);
    }

    /**
     * Force BFD single-hop to detect failure
     * 
     */
    @Import(name="fallOverBfdSingleHop")
    private @Nullable Output<Boolean> fallOverBfdSingleHop;

    /**
     * @return Force BFD single-hop to detect failure
     * 
     */
    public Optional<Output<Boolean>> fallOverBfdSingleHop() {
        return Optional.ofNullable(this.fallOverBfdSingleHop);
    }

    /**
     * Enable BFD strict-mode
     * 
     */
    @Import(name="fallOverBfdStrictMode")
    private @Nullable Output<Boolean> fallOverBfdStrictMode;

    /**
     * @return Enable BFD strict-mode
     * 
     */
    public Optional<Output<Boolean>> fallOverBfdStrictMode() {
        return Optional.ofNullable(this.fallOverBfdStrictMode);
    }

    @Import(name="fallOverDefaultRouteMap")
    private @Nullable Output<String> fallOverDefaultRouteMap;

    public Optional<Output<String>> fallOverDefaultRouteMap() {
        return Optional.ofNullable(this.fallOverDefaultRouteMap);
    }

    @Import(name="fallOverMaximumMetricRouteMap")
    private @Nullable Output<String> fallOverMaximumMetricRouteMap;

    public Optional<Output<String>> fallOverMaximumMetricRouteMap() {
        return Optional.ofNullable(this.fallOverMaximumMetricRouteMap);
    }

    @Import(name="ip", required=true)
    private Output<String> ip;

    public Output<String> ip() {
        return this.ip;
    }

    @Import(name="localAs")
    private @Nullable Output<String> localAs;

    public Optional<Output<String>> localAs() {
        return Optional.ofNullable(this.localAs);
    }

    /**
     * Accept either real AS or local AS from the ebgp peer
     * 
     */
    @Import(name="localAsDualAs")
    private @Nullable Output<Boolean> localAsDualAs;

    /**
     * @return Accept either real AS or local AS from the ebgp peer
     * 
     */
    public Optional<Output<Boolean>> localAsDualAs() {
        return Optional.ofNullable(this.localAsDualAs);
    }

    /**
     * Do not prepend local-as to updates from ebgp peers
     * 
     */
    @Import(name="localAsNoPrepend")
    private @Nullable Output<Boolean> localAsNoPrepend;

    /**
     * @return Do not prepend local-as to updates from ebgp peers
     * 
     */
    public Optional<Output<Boolean>> localAsNoPrepend() {
        return Optional.ofNullable(this.localAsNoPrepend);
    }

    /**
     * Replace real AS with local AS in the EBGP updates
     * 
     */
    @Import(name="localAsReplaceAs")
    private @Nullable Output<Boolean> localAsReplaceAs;

    /**
     * @return Replace real AS with local AS in the EBGP updates
     * 
     */
    public Optional<Output<Boolean>> localAsReplaceAs() {
        return Optional.ofNullable(this.localAsReplaceAs);
    }

    /**
     * disable
     * 
     */
    @Import(name="logNeighborChangesDisable")
    private @Nullable Output<Boolean> logNeighborChangesDisable;

    /**
     * @return disable
     * 
     */
    public Optional<Output<Boolean>> logNeighborChangesDisable() {
        return Optional.ofNullable(this.logNeighborChangesDisable);
    }

    @Import(name="password")
    private @Nullable Output<String> password;

    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
     * 
     */
    @Import(name="passwordType")
    private @Nullable Output<Integer> passwordType;

    /**
     * @return Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
     * 
     */
    public Optional<Output<Integer>> passwordType() {
        return Optional.ofNullable(this.passwordType);
    }

    /**
     * Specify a BGP peer-group remote-as
     * 
     */
    @Import(name="remoteAs")
    private @Nullable Output<String> remoteAs;

    /**
     * @return Specify a BGP peer-group remote-as
     * 
     */
    public Optional<Output<String>> remoteAs() {
        return Optional.ofNullable(this.remoteAs);
    }

    /**
     * Apply route map to neighbor
     * 
     */
    @Import(name="routeMaps")
    private @Nullable Output<List<BgpIpv4UnicastVrfNeighborRouteMapArgs>> routeMaps;

    /**
     * @return Apply route map to neighbor
     * 
     */
    public Optional<Output<List<BgpIpv4UnicastVrfNeighborRouteMapArgs>>> routeMaps() {
        return Optional.ofNullable(this.routeMaps);
    }

    /**
     * Configure a neighbor as Route Reflector client
     * 
     */
    @Import(name="routeReflectorClient")
    private @Nullable Output<Boolean> routeReflectorClient;

    /**
     * @return Configure a neighbor as Route Reflector client
     * 
     */
    public Optional<Output<Boolean>> routeReflectorClient() {
        return Optional.ofNullable(this.routeReflectorClient);
    }

    /**
     * - Choices: `both`, `extended`, `standard`
     * 
     */
    @Import(name="sendCommunity")
    private @Nullable Output<String> sendCommunity;

    /**
     * @return - Choices: `both`, `extended`, `standard`
     * 
     */
    public Optional<Output<String>> sendCommunity() {
        return Optional.ofNullable(this.sendCommunity);
    }

    /**
     * Administratively shut down this neighbor
     * 
     */
    @Import(name="shutdown")
    private @Nullable Output<Boolean> shutdown;

    /**
     * @return Administratively shut down this neighbor
     * 
     */
    public Optional<Output<Boolean>> shutdown() {
        return Optional.ofNullable(this.shutdown);
    }

    /**
     * - Range: `0`-`65535`
     * 
     */
    @Import(name="timersHoldtime")
    private @Nullable Output<Integer> timersHoldtime;

    /**
     * @return - Range: `0`-`65535`
     * 
     */
    public Optional<Output<Integer>> timersHoldtime() {
        return Optional.ofNullable(this.timersHoldtime);
    }

    /**
     * - Range: `0`-`65535`
     * 
     */
    @Import(name="timersKeepaliveInterval")
    private @Nullable Output<Integer> timersKeepaliveInterval;

    /**
     * @return - Range: `0`-`65535`
     * 
     */
    public Optional<Output<Integer>> timersKeepaliveInterval() {
        return Optional.ofNullable(this.timersKeepaliveInterval);
    }

    /**
     * - Range: `0`-`65535`
     * 
     */
    @Import(name="timersMinimumNeighborHold")
    private @Nullable Output<Integer> timersMinimumNeighborHold;

    /**
     * @return - Range: `0`-`65535`
     * 
     */
    public Optional<Output<Integer>> timersMinimumNeighborHold() {
        return Optional.ofNullable(this.timersMinimumNeighborHold);
    }

    /**
     * IP hops - Range: `1`-`254`
     * 
     */
    @Import(name="ttlSecurityHops")
    private @Nullable Output<Integer> ttlSecurityHops;

    /**
     * @return IP hops - Range: `1`-`254`
     * 
     */
    public Optional<Output<Integer>> ttlSecurityHops() {
        return Optional.ofNullable(this.ttlSecurityHops);
    }

    /**
     * Loopback interface
     * 
     */
    @Import(name="updateSourceLoopback")
    private @Nullable Output<String> updateSourceLoopback;

    /**
     * @return Loopback interface
     * 
     */
    public Optional<Output<String>> updateSourceLoopback() {
        return Optional.ofNullable(this.updateSourceLoopback);
    }

    /**
     * Set the BGP version to match a neighbor - Range: `4`-`4`
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return Set the BGP version to match a neighbor - Range: `4`-`4`
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    @Import(name="vrf", required=true)
    private Output<String> vrf;

    public Output<String> vrf() {
        return this.vrf;
    }

    private BgpIpv4UnicastVrfNeighborArgs() {}

    private BgpIpv4UnicastVrfNeighborArgs(BgpIpv4UnicastVrfNeighborArgs $) {
        this.activate = $.activate;
        this.asn = $.asn;
        this.clusterId = $.clusterId;
        this.deleteMode = $.deleteMode;
        this.description = $.description;
        this.device = $.device;
        this.disableConnectedCheck = $.disableConnectedCheck;
        this.ebgpMultihop = $.ebgpMultihop;
        this.ebgpMultihopMaxHop = $.ebgpMultihopMaxHop;
        this.fallOverBfdCheckControlPlaneFailure = $.fallOverBfdCheckControlPlaneFailure;
        this.fallOverBfdMultiHop = $.fallOverBfdMultiHop;
        this.fallOverBfdSingleHop = $.fallOverBfdSingleHop;
        this.fallOverBfdStrictMode = $.fallOverBfdStrictMode;
        this.fallOverDefaultRouteMap = $.fallOverDefaultRouteMap;
        this.fallOverMaximumMetricRouteMap = $.fallOverMaximumMetricRouteMap;
        this.ip = $.ip;
        this.localAs = $.localAs;
        this.localAsDualAs = $.localAsDualAs;
        this.localAsNoPrepend = $.localAsNoPrepend;
        this.localAsReplaceAs = $.localAsReplaceAs;
        this.logNeighborChangesDisable = $.logNeighborChangesDisable;
        this.password = $.password;
        this.passwordType = $.passwordType;
        this.remoteAs = $.remoteAs;
        this.routeMaps = $.routeMaps;
        this.routeReflectorClient = $.routeReflectorClient;
        this.sendCommunity = $.sendCommunity;
        this.shutdown = $.shutdown;
        this.timersHoldtime = $.timersHoldtime;
        this.timersKeepaliveInterval = $.timersKeepaliveInterval;
        this.timersMinimumNeighborHold = $.timersMinimumNeighborHold;
        this.ttlSecurityHops = $.ttlSecurityHops;
        this.updateSourceLoopback = $.updateSourceLoopback;
        this.version = $.version;
        this.vrf = $.vrf;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BgpIpv4UnicastVrfNeighborArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BgpIpv4UnicastVrfNeighborArgs $;

        public Builder() {
            $ = new BgpIpv4UnicastVrfNeighborArgs();
        }

        public Builder(BgpIpv4UnicastVrfNeighborArgs defaults) {
            $ = new BgpIpv4UnicastVrfNeighborArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activate Enable the address family for this neighbor - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder activate(@Nullable Output<Boolean> activate) {
            $.activate = activate;
            return this;
        }

        /**
         * @param activate Enable the address family for this neighbor - Default value: `true`
         * 
         * @return builder
         * 
         */
        public Builder activate(Boolean activate) {
            return activate(Output.of(activate));
        }

        public Builder asn(Output<String> asn) {
            $.asn = asn;
            return this;
        }

        public Builder asn(String asn) {
            return asn(Output.of(asn));
        }

        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param deleteMode Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
         * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
         * Default value is `all`. - Choices: `all`, `attributes`
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(@Nullable Output<String> deleteMode) {
            $.deleteMode = deleteMode;
            return this;
        }

        /**
         * @param deleteMode Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
         * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
         * Default value is `all`. - Choices: `all`, `attributes`
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(String deleteMode) {
            return deleteMode(Output.of(deleteMode));
        }

        /**
         * @param description Neighbor specific description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Neighbor specific description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param disableConnectedCheck one-hop away EBGP peer using loopback address
         * 
         * @return builder
         * 
         */
        public Builder disableConnectedCheck(@Nullable Output<Boolean> disableConnectedCheck) {
            $.disableConnectedCheck = disableConnectedCheck;
            return this;
        }

        /**
         * @param disableConnectedCheck one-hop away EBGP peer using loopback address
         * 
         * @return builder
         * 
         */
        public Builder disableConnectedCheck(Boolean disableConnectedCheck) {
            return disableConnectedCheck(Output.of(disableConnectedCheck));
        }

        /**
         * @param ebgpMultihop Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
         * 
         * @return builder
         * 
         */
        public Builder ebgpMultihop(@Nullable Output<Boolean> ebgpMultihop) {
            $.ebgpMultihop = ebgpMultihop;
            return this;
        }

        /**
         * @param ebgpMultihop Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
         * 
         * @return builder
         * 
         */
        public Builder ebgpMultihop(Boolean ebgpMultihop) {
            return ebgpMultihop(Output.of(ebgpMultihop));
        }

        /**
         * @param ebgpMultihopMaxHop - Range: `2`-`255`
         * 
         * @return builder
         * 
         */
        public Builder ebgpMultihopMaxHop(@Nullable Output<Integer> ebgpMultihopMaxHop) {
            $.ebgpMultihopMaxHop = ebgpMultihopMaxHop;
            return this;
        }

        /**
         * @param ebgpMultihopMaxHop - Range: `2`-`255`
         * 
         * @return builder
         * 
         */
        public Builder ebgpMultihopMaxHop(Integer ebgpMultihopMaxHop) {
            return ebgpMultihopMaxHop(Output.of(ebgpMultihopMaxHop));
        }

        /**
         * @param fallOverBfdCheckControlPlaneFailure Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
         * 
         * @return builder
         * 
         */
        public Builder fallOverBfdCheckControlPlaneFailure(@Nullable Output<Boolean> fallOverBfdCheckControlPlaneFailure) {
            $.fallOverBfdCheckControlPlaneFailure = fallOverBfdCheckControlPlaneFailure;
            return this;
        }

        /**
         * @param fallOverBfdCheckControlPlaneFailure Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
         * 
         * @return builder
         * 
         */
        public Builder fallOverBfdCheckControlPlaneFailure(Boolean fallOverBfdCheckControlPlaneFailure) {
            return fallOverBfdCheckControlPlaneFailure(Output.of(fallOverBfdCheckControlPlaneFailure));
        }

        /**
         * @param fallOverBfdMultiHop Force BFD multi-hop to detect failure
         * 
         * @return builder
         * 
         */
        public Builder fallOverBfdMultiHop(@Nullable Output<Boolean> fallOverBfdMultiHop) {
            $.fallOverBfdMultiHop = fallOverBfdMultiHop;
            return this;
        }

        /**
         * @param fallOverBfdMultiHop Force BFD multi-hop to detect failure
         * 
         * @return builder
         * 
         */
        public Builder fallOverBfdMultiHop(Boolean fallOverBfdMultiHop) {
            return fallOverBfdMultiHop(Output.of(fallOverBfdMultiHop));
        }

        /**
         * @param fallOverBfdSingleHop Force BFD single-hop to detect failure
         * 
         * @return builder
         * 
         */
        public Builder fallOverBfdSingleHop(@Nullable Output<Boolean> fallOverBfdSingleHop) {
            $.fallOverBfdSingleHop = fallOverBfdSingleHop;
            return this;
        }

        /**
         * @param fallOverBfdSingleHop Force BFD single-hop to detect failure
         * 
         * @return builder
         * 
         */
        public Builder fallOverBfdSingleHop(Boolean fallOverBfdSingleHop) {
            return fallOverBfdSingleHop(Output.of(fallOverBfdSingleHop));
        }

        /**
         * @param fallOverBfdStrictMode Enable BFD strict-mode
         * 
         * @return builder
         * 
         */
        public Builder fallOverBfdStrictMode(@Nullable Output<Boolean> fallOverBfdStrictMode) {
            $.fallOverBfdStrictMode = fallOverBfdStrictMode;
            return this;
        }

        /**
         * @param fallOverBfdStrictMode Enable BFD strict-mode
         * 
         * @return builder
         * 
         */
        public Builder fallOverBfdStrictMode(Boolean fallOverBfdStrictMode) {
            return fallOverBfdStrictMode(Output.of(fallOverBfdStrictMode));
        }

        public Builder fallOverDefaultRouteMap(@Nullable Output<String> fallOverDefaultRouteMap) {
            $.fallOverDefaultRouteMap = fallOverDefaultRouteMap;
            return this;
        }

        public Builder fallOverDefaultRouteMap(String fallOverDefaultRouteMap) {
            return fallOverDefaultRouteMap(Output.of(fallOverDefaultRouteMap));
        }

        public Builder fallOverMaximumMetricRouteMap(@Nullable Output<String> fallOverMaximumMetricRouteMap) {
            $.fallOverMaximumMetricRouteMap = fallOverMaximumMetricRouteMap;
            return this;
        }

        public Builder fallOverMaximumMetricRouteMap(String fallOverMaximumMetricRouteMap) {
            return fallOverMaximumMetricRouteMap(Output.of(fallOverMaximumMetricRouteMap));
        }

        public Builder ip(Output<String> ip) {
            $.ip = ip;
            return this;
        }

        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        public Builder localAs(@Nullable Output<String> localAs) {
            $.localAs = localAs;
            return this;
        }

        public Builder localAs(String localAs) {
            return localAs(Output.of(localAs));
        }

        /**
         * @param localAsDualAs Accept either real AS or local AS from the ebgp peer
         * 
         * @return builder
         * 
         */
        public Builder localAsDualAs(@Nullable Output<Boolean> localAsDualAs) {
            $.localAsDualAs = localAsDualAs;
            return this;
        }

        /**
         * @param localAsDualAs Accept either real AS or local AS from the ebgp peer
         * 
         * @return builder
         * 
         */
        public Builder localAsDualAs(Boolean localAsDualAs) {
            return localAsDualAs(Output.of(localAsDualAs));
        }

        /**
         * @param localAsNoPrepend Do not prepend local-as to updates from ebgp peers
         * 
         * @return builder
         * 
         */
        public Builder localAsNoPrepend(@Nullable Output<Boolean> localAsNoPrepend) {
            $.localAsNoPrepend = localAsNoPrepend;
            return this;
        }

        /**
         * @param localAsNoPrepend Do not prepend local-as to updates from ebgp peers
         * 
         * @return builder
         * 
         */
        public Builder localAsNoPrepend(Boolean localAsNoPrepend) {
            return localAsNoPrepend(Output.of(localAsNoPrepend));
        }

        /**
         * @param localAsReplaceAs Replace real AS with local AS in the EBGP updates
         * 
         * @return builder
         * 
         */
        public Builder localAsReplaceAs(@Nullable Output<Boolean> localAsReplaceAs) {
            $.localAsReplaceAs = localAsReplaceAs;
            return this;
        }

        /**
         * @param localAsReplaceAs Replace real AS with local AS in the EBGP updates
         * 
         * @return builder
         * 
         */
        public Builder localAsReplaceAs(Boolean localAsReplaceAs) {
            return localAsReplaceAs(Output.of(localAsReplaceAs));
        }

        /**
         * @param logNeighborChangesDisable disable
         * 
         * @return builder
         * 
         */
        public Builder logNeighborChangesDisable(@Nullable Output<Boolean> logNeighborChangesDisable) {
            $.logNeighborChangesDisable = logNeighborChangesDisable;
            return this;
        }

        /**
         * @param logNeighborChangesDisable disable
         * 
         * @return builder
         * 
         */
        public Builder logNeighborChangesDisable(Boolean logNeighborChangesDisable) {
            return logNeighborChangesDisable(Output.of(logNeighborChangesDisable));
        }

        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param passwordType Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
         * 
         * @return builder
         * 
         */
        public Builder passwordType(@Nullable Output<Integer> passwordType) {
            $.passwordType = passwordType;
            return this;
        }

        /**
         * @param passwordType Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
         * 
         * @return builder
         * 
         */
        public Builder passwordType(Integer passwordType) {
            return passwordType(Output.of(passwordType));
        }

        /**
         * @param remoteAs Specify a BGP peer-group remote-as
         * 
         * @return builder
         * 
         */
        public Builder remoteAs(@Nullable Output<String> remoteAs) {
            $.remoteAs = remoteAs;
            return this;
        }

        /**
         * @param remoteAs Specify a BGP peer-group remote-as
         * 
         * @return builder
         * 
         */
        public Builder remoteAs(String remoteAs) {
            return remoteAs(Output.of(remoteAs));
        }

        /**
         * @param routeMaps Apply route map to neighbor
         * 
         * @return builder
         * 
         */
        public Builder routeMaps(@Nullable Output<List<BgpIpv4UnicastVrfNeighborRouteMapArgs>> routeMaps) {
            $.routeMaps = routeMaps;
            return this;
        }

        /**
         * @param routeMaps Apply route map to neighbor
         * 
         * @return builder
         * 
         */
        public Builder routeMaps(List<BgpIpv4UnicastVrfNeighborRouteMapArgs> routeMaps) {
            return routeMaps(Output.of(routeMaps));
        }

        /**
         * @param routeMaps Apply route map to neighbor
         * 
         * @return builder
         * 
         */
        public Builder routeMaps(BgpIpv4UnicastVrfNeighborRouteMapArgs... routeMaps) {
            return routeMaps(List.of(routeMaps));
        }

        /**
         * @param routeReflectorClient Configure a neighbor as Route Reflector client
         * 
         * @return builder
         * 
         */
        public Builder routeReflectorClient(@Nullable Output<Boolean> routeReflectorClient) {
            $.routeReflectorClient = routeReflectorClient;
            return this;
        }

        /**
         * @param routeReflectorClient Configure a neighbor as Route Reflector client
         * 
         * @return builder
         * 
         */
        public Builder routeReflectorClient(Boolean routeReflectorClient) {
            return routeReflectorClient(Output.of(routeReflectorClient));
        }

        /**
         * @param sendCommunity - Choices: `both`, `extended`, `standard`
         * 
         * @return builder
         * 
         */
        public Builder sendCommunity(@Nullable Output<String> sendCommunity) {
            $.sendCommunity = sendCommunity;
            return this;
        }

        /**
         * @param sendCommunity - Choices: `both`, `extended`, `standard`
         * 
         * @return builder
         * 
         */
        public Builder sendCommunity(String sendCommunity) {
            return sendCommunity(Output.of(sendCommunity));
        }

        /**
         * @param shutdown Administratively shut down this neighbor
         * 
         * @return builder
         * 
         */
        public Builder shutdown(@Nullable Output<Boolean> shutdown) {
            $.shutdown = shutdown;
            return this;
        }

        /**
         * @param shutdown Administratively shut down this neighbor
         * 
         * @return builder
         * 
         */
        public Builder shutdown(Boolean shutdown) {
            return shutdown(Output.of(shutdown));
        }

        /**
         * @param timersHoldtime - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder timersHoldtime(@Nullable Output<Integer> timersHoldtime) {
            $.timersHoldtime = timersHoldtime;
            return this;
        }

        /**
         * @param timersHoldtime - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder timersHoldtime(Integer timersHoldtime) {
            return timersHoldtime(Output.of(timersHoldtime));
        }

        /**
         * @param timersKeepaliveInterval - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder timersKeepaliveInterval(@Nullable Output<Integer> timersKeepaliveInterval) {
            $.timersKeepaliveInterval = timersKeepaliveInterval;
            return this;
        }

        /**
         * @param timersKeepaliveInterval - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder timersKeepaliveInterval(Integer timersKeepaliveInterval) {
            return timersKeepaliveInterval(Output.of(timersKeepaliveInterval));
        }

        /**
         * @param timersMinimumNeighborHold - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder timersMinimumNeighborHold(@Nullable Output<Integer> timersMinimumNeighborHold) {
            $.timersMinimumNeighborHold = timersMinimumNeighborHold;
            return this;
        }

        /**
         * @param timersMinimumNeighborHold - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder timersMinimumNeighborHold(Integer timersMinimumNeighborHold) {
            return timersMinimumNeighborHold(Output.of(timersMinimumNeighborHold));
        }

        /**
         * @param ttlSecurityHops IP hops - Range: `1`-`254`
         * 
         * @return builder
         * 
         */
        public Builder ttlSecurityHops(@Nullable Output<Integer> ttlSecurityHops) {
            $.ttlSecurityHops = ttlSecurityHops;
            return this;
        }

        /**
         * @param ttlSecurityHops IP hops - Range: `1`-`254`
         * 
         * @return builder
         * 
         */
        public Builder ttlSecurityHops(Integer ttlSecurityHops) {
            return ttlSecurityHops(Output.of(ttlSecurityHops));
        }

        /**
         * @param updateSourceLoopback Loopback interface
         * 
         * @return builder
         * 
         */
        public Builder updateSourceLoopback(@Nullable Output<String> updateSourceLoopback) {
            $.updateSourceLoopback = updateSourceLoopback;
            return this;
        }

        /**
         * @param updateSourceLoopback Loopback interface
         * 
         * @return builder
         * 
         */
        public Builder updateSourceLoopback(String updateSourceLoopback) {
            return updateSourceLoopback(Output.of(updateSourceLoopback));
        }

        /**
         * @param version Set the BGP version to match a neighbor - Range: `4`-`4`
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Set the BGP version to match a neighbor - Range: `4`-`4`
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public Builder vrf(Output<String> vrf) {
            $.vrf = vrf;
            return this;
        }

        public Builder vrf(String vrf) {
            return vrf(Output.of(vrf));
        }

        public BgpIpv4UnicastVrfNeighborArgs build() {
            $.asn = Objects.requireNonNull($.asn, "expected parameter 'asn' to be non-null");
            $.ip = Objects.requireNonNull($.ip, "expected parameter 'ip' to be non-null");
            $.vrf = Objects.requireNonNull($.vrf, "expected parameter 'vrf' to be non-null");
            return $;
        }
    }

}
