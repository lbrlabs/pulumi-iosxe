// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.iosxe.Utilities;
import com.pulumi.iosxe.iosxe.PolicyMapEventArgs;
import com.pulumi.iosxe.iosxe.inputs.PolicyMapEventState;
import com.pulumi.iosxe.iosxe.outputs.PolicyMapEventClassNumber;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="iosxe:iosxe/policyMapEvent:PolicyMapEvent")
public class PolicyMapEvent extends com.pulumi.resources.CustomResource {
    /**
     * class number, 1 for 1st class, 2 for 2nd...
     * 
     */
    @Export(name="classNumbers", refs={List.class,PolicyMapEventClassNumber.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PolicyMapEventClassNumber>> classNumbers;

    /**
     * @return class number, 1 for 1st class, 2 for 2nd...
     * 
     */
    public Output<Optional<List<PolicyMapEventClassNumber>>> classNumbers() {
        return Codegen.optional(this.classNumbers);
    }
    /**
     * A device name from the provider configuration.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }
    /**
     * - Choices: `aaa-available`, `absolute-timeout`, `agent-found`, `authentication-failure`, `authentication-success`,
     *   `authorization-failure`, `authorization-success`, `identity-update`, `inactivity-timeout`,
     *   `remote-authentication-failure`, `remote-authentication-success`, `remote-update`, `session-disconnected`,
     *   `session-started`, `tag-added`, `tag-removed`, `template-activated`, `template-activation-failed`,
     *   `template-deactivated`, `template-deactivation-failed`, `timer-expiry`, `violation`
     * 
     */
    @Export(name="eventType", refs={String.class}, tree="[0]")
    private Output<String> eventType;

    /**
     * @return - Choices: `aaa-available`, `absolute-timeout`, `agent-found`, `authentication-failure`, `authentication-success`,
     * `authorization-failure`, `authorization-success`, `identity-update`, `inactivity-timeout`,
     * `remote-authentication-failure`, `remote-authentication-success`, `remote-update`, `session-disconnected`,
     * `session-started`, `tag-added`, `tag-removed`, `template-activated`, `template-activation-failed`,
     * `template-deactivated`, `template-deactivation-failed`, `timer-expiry`, `violation`
     * 
     */
    public Output<String> eventType() {
        return this.eventType;
    }
    /**
     * - Choices: `match-all`, `match-first`
     * 
     */
    @Export(name="matchType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> matchType;

    /**
     * @return - Choices: `match-all`, `match-first`
     * 
     */
    public Output<Optional<String>> matchType() {
        return Codegen.optional(this.matchType);
    }
    /**
     * Name of the policy map
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the policy map
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PolicyMapEvent(String name) {
        this(name, PolicyMapEventArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PolicyMapEvent(String name, PolicyMapEventArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PolicyMapEvent(String name, PolicyMapEventArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/policyMapEvent:PolicyMapEvent", name, args == null ? PolicyMapEventArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PolicyMapEvent(String name, Output<String> id, @Nullable PolicyMapEventState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/policyMapEvent:PolicyMapEvent", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PolicyMapEvent get(String name, Output<String> id, @Nullable PolicyMapEventState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PolicyMapEvent(name, id, state, options);
    }
}
