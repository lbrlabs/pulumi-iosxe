// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.iosxe.Utilities;
import com.pulumi.iosxe.iosxe.VtpArgs;
import com.pulumi.iosxe.iosxe.inputs.VtpState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="iosxe:iosxe/vtp:Vtp")
public class Vtp extends com.pulumi.resources.CustomResource {
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    @Export(name="deleteMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deleteMode;

    /**
     * @return Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    public Output<Optional<String>> deleteMode() {
        return Codegen.optional(this.deleteMode);
    }
    /**
     * A device name from the provider configuration.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }
    /**
     * Set the name of the VTP administrative domain.
     * 
     */
    @Export(name="domain", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> domain;

    /**
     * @return Set the name of the VTP administrative domain.
     * 
     */
    public Output<Optional<String>> domain() {
        return Codegen.optional(this.domain);
    }
    /**
     * Configure IFS filesystem file where VTP configuration is stored.
     * 
     */
    @Export(name="file", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> file;

    /**
     * @return Configure IFS filesystem file where VTP configuration is stored.
     * 
     */
    public Output<Optional<String>> file() {
        return Codegen.optional(this.file);
    }
    /**
     * The name of the interface providing the VTP updater ID for this device
     * 
     */
    @Export(name="interface", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interface_;

    /**
     * @return The name of the interface providing the VTP updater ID for this device
     * 
     */
    public Output<Optional<String>> interface_() {
        return Codegen.optional(this.interface_);
    }
    /**
     * Use only this interface&#39;s IP address as the VTP IP updater address
     * 
     */
    @Export(name="interfaceOnly", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> interfaceOnly;

    /**
     * @return Use only this interface&#39;s IP address as the VTP IP updater address
     * 
     */
    public Output<Optional<Boolean>> interfaceOnly() {
        return Codegen.optional(this.interfaceOnly);
    }
    /**
     * Set the mode for MST VTP instance
     * 
     */
    @Export(name="modeClientMst", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> modeClientMst;

    /**
     * @return Set the mode for MST VTP instance
     * 
     */
    public Output<Optional<Boolean>> modeClientMst() {
        return Codegen.optional(this.modeClientMst);
    }
    /**
     * Set the mode for unknown VTP instances
     * 
     */
    @Export(name="modeClientUnknown", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> modeClientUnknown;

    /**
     * @return Set the mode for unknown VTP instances
     * 
     */
    public Output<Optional<Boolean>> modeClientUnknown() {
        return Codegen.optional(this.modeClientUnknown);
    }
    /**
     * Set the mode for VLAN VTP instance
     * 
     */
    @Export(name="modeClientVlan", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> modeClientVlan;

    /**
     * @return Set the mode for VLAN VTP instance
     * 
     */
    public Output<Optional<Boolean>> modeClientVlan() {
        return Codegen.optional(this.modeClientVlan);
    }
    /**
     * Set the mode for MST VTP instance
     * 
     */
    @Export(name="modeOffMst", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> modeOffMst;

    /**
     * @return Set the mode for MST VTP instance
     * 
     */
    public Output<Optional<Boolean>> modeOffMst() {
        return Codegen.optional(this.modeOffMst);
    }
    /**
     * Set the mode for unknown VTP instances
     * 
     */
    @Export(name="modeOffUnknown", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> modeOffUnknown;

    /**
     * @return Set the mode for unknown VTP instances
     * 
     */
    public Output<Optional<Boolean>> modeOffUnknown() {
        return Codegen.optional(this.modeOffUnknown);
    }
    /**
     * Set the mode for VLAN VTP instance
     * 
     */
    @Export(name="modeOffVlan", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> modeOffVlan;

    /**
     * @return Set the mode for VLAN VTP instance
     * 
     */
    public Output<Optional<Boolean>> modeOffVlan() {
        return Codegen.optional(this.modeOffVlan);
    }
    /**
     * Set the mode for MST VTP instance
     * 
     */
    @Export(name="modeServerMst", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> modeServerMst;

    /**
     * @return Set the mode for MST VTP instance
     * 
     */
    public Output<Optional<Boolean>> modeServerMst() {
        return Codegen.optional(this.modeServerMst);
    }
    /**
     * Set the mode for unknown VTP instances
     * 
     */
    @Export(name="modeServerUnknown", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> modeServerUnknown;

    /**
     * @return Set the mode for unknown VTP instances
     * 
     */
    public Output<Optional<Boolean>> modeServerUnknown() {
        return Codegen.optional(this.modeServerUnknown);
    }
    /**
     * Set the mode for VLAN VTP instance
     * 
     */
    @Export(name="modeServerVlan", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> modeServerVlan;

    /**
     * @return Set the mode for VLAN VTP instance
     * 
     */
    public Output<Optional<Boolean>> modeServerVlan() {
        return Codegen.optional(this.modeServerVlan);
    }
    /**
     * Set the mode for MST VTP instance
     * 
     */
    @Export(name="modeTransparentMst", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> modeTransparentMst;

    /**
     * @return Set the mode for MST VTP instance
     * 
     */
    public Output<Optional<Boolean>> modeTransparentMst() {
        return Codegen.optional(this.modeTransparentMst);
    }
    /**
     * Set the mode for unknown VTP instances
     * 
     */
    @Export(name="modeTransparentUnknown", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> modeTransparentUnknown;

    /**
     * @return Set the mode for unknown VTP instances
     * 
     */
    public Output<Optional<Boolean>> modeTransparentUnknown() {
        return Codegen.optional(this.modeTransparentUnknown);
    }
    /**
     * Set the mode for VLAN VTP instance
     * 
     */
    @Export(name="modeTransparentVlan", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> modeTransparentVlan;

    /**
     * @return Set the mode for VLAN VTP instance
     * 
     */
    public Output<Optional<Boolean>> modeTransparentVlan() {
        return Codegen.optional(this.modeTransparentVlan);
    }
    /**
     * The ascii password for the VTP administrative domain
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> password;

    /**
     * @return The ascii password for the VTP administrative domain
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * Set the VTP password hidden option
     * 
     */
    @Export(name="passwordHidden", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> passwordHidden;

    /**
     * @return Set the VTP password hidden option
     * 
     */
    public Output<Optional<Boolean>> passwordHidden() {
        return Codegen.optional(this.passwordHidden);
    }
    /**
     * Specify the vtp password in encrypted form
     * 
     */
    @Export(name="passwordSecret", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> passwordSecret;

    /**
     * @return Specify the vtp password in encrypted form
     * 
     */
    public Output<Optional<Boolean>> passwordSecret() {
        return Codegen.optional(this.passwordSecret);
    }
    /**
     * Set the administrative domain to permit pruning
     * 
     */
    @Export(name="pruning", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> pruning;

    /**
     * @return Set the administrative domain to permit pruning
     * 
     */
    public Output<Optional<Boolean>> pruning() {
        return Codegen.optional(this.pruning);
    }
    /**
     * Set the administrative domain to VTP version - Range: `1`-`3`
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> version;

    /**
     * @return Set the administrative domain to VTP version - Range: `1`-`3`
     * 
     */
    public Output<Optional<Integer>> version() {
        return Codegen.optional(this.version);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Vtp(String name) {
        this(name, VtpArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Vtp(String name, @Nullable VtpArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Vtp(String name, @Nullable VtpArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/vtp:Vtp", name, args == null ? VtpArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Vtp(String name, Output<String> id, @Nullable VtpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/vtp:Vtp", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Vtp get(String name, Output<String> id, @Nullable VtpState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Vtp(name, id, state, options);
    }
}
