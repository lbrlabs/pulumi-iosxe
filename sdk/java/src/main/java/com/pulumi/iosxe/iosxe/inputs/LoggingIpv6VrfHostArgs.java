// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class LoggingIpv6VrfHostArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoggingIpv6VrfHostArgs Empty = new LoggingIpv6VrfHostArgs();

    @Import(name="ipv6Host", required=true)
    private Output<String> ipv6Host;

    public Output<String> ipv6Host() {
        return this.ipv6Host;
    }

    @Import(name="vrf", required=true)
    private Output<String> vrf;

    public Output<String> vrf() {
        return this.vrf;
    }

    private LoggingIpv6VrfHostArgs() {}

    private LoggingIpv6VrfHostArgs(LoggingIpv6VrfHostArgs $) {
        this.ipv6Host = $.ipv6Host;
        this.vrf = $.vrf;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoggingIpv6VrfHostArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggingIpv6VrfHostArgs $;

        public Builder() {
            $ = new LoggingIpv6VrfHostArgs();
        }

        public Builder(LoggingIpv6VrfHostArgs defaults) {
            $ = new LoggingIpv6VrfHostArgs(Objects.requireNonNull(defaults));
        }

        public Builder ipv6Host(Output<String> ipv6Host) {
            $.ipv6Host = ipv6Host;
            return this;
        }

        public Builder ipv6Host(String ipv6Host) {
            return ipv6Host(Output.of(ipv6Host));
        }

        public Builder vrf(Output<String> vrf) {
            $.vrf = vrf;
            return this;
        }

        public Builder vrf(String vrf) {
            return vrf(Output.of(vrf));
        }

        public LoggingIpv6VrfHostArgs build() {
            $.ipv6Host = Objects.requireNonNull($.ipv6Host, "expected parameter 'ipv6Host' to be non-null");
            $.vrf = Objects.requireNonNull($.vrf, "expected parameter 'vrf' to be non-null");
            return $;
        }
    }

}
