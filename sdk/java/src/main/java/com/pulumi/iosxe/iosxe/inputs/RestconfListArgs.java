// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RestconfListArgs extends com.pulumi.resources.ResourceArgs {

    public static final RestconfListArgs Empty = new RestconfListArgs();

    @Import(name="items")
    private @Nullable Output<List<Map<String,String>>> items;

    public Optional<Output<List<Map<String,String>>>> items() {
        return Optional.ofNullable(this.items);
    }

    @Import(name="key", required=true)
    private Output<String> key;

    public Output<String> key() {
        return this.key;
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="values")
    private @Nullable Output<List<String>> values;

    public Optional<Output<List<String>>> values() {
        return Optional.ofNullable(this.values);
    }

    private RestconfListArgs() {}

    private RestconfListArgs(RestconfListArgs $) {
        this.items = $.items;
        this.key = $.key;
        this.name = $.name;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RestconfListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RestconfListArgs $;

        public Builder() {
            $ = new RestconfListArgs();
        }

        public Builder(RestconfListArgs defaults) {
            $ = new RestconfListArgs(Objects.requireNonNull(defaults));
        }

        public Builder items(@Nullable Output<List<Map<String,String>>> items) {
            $.items = items;
            return this;
        }

        public Builder items(List<Map<String,String>> items) {
            return items(Output.of(items));
        }

        public Builder items(Map<String,String>... items) {
            return items(List.of(items));
        }

        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        public Builder key(String key) {
            return key(Output.of(key));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder values(@Nullable Output<List<String>> values) {
            $.values = values;
            return this;
        }

        public Builder values(List<String> values) {
            return values(Output.of(values));
        }

        public Builder values(String... values) {
            return values(List.of(values));
        }

        public RestconfListArgs build() {
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
