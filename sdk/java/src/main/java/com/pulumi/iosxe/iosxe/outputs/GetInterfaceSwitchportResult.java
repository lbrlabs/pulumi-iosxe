// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInterfaceSwitchportResult {
    private String accessVlan;
    /**
     * @return A device name from the provider configuration.
     * 
     */
    private @Nullable String device;
    /**
     * @return Set port host
     * 
     */
    private Boolean host;
    /**
     * @return The path of the retrieved object.
     * 
     */
    private String id;
    /**
     * @return Set trunking mode to ACCESS unconditionally
     * 
     */
    private Boolean modeAccess;
    /**
     * @return set trunking mode to TUNNEL unconditionally
     * 
     */
    private Boolean modeDot1qTunnel;
    /**
     * @return Set the mode to private-vlan host
     * 
     */
    private Boolean modePrivateVlanHost;
    /**
     * @return Set the mode to private-vlan promiscuous
     * 
     */
    private Boolean modePrivateVlanPromiscuous;
    /**
     * @return Set the mode to private-vlan trunk
     * 
     */
    private Boolean modePrivateVlanTrunk;
    /**
     * @return Set trunking mode to TRUNK unconditionally
     * 
     */
    private Boolean modeTrunk;
    private String name;
    /**
     * @return Device will not engage in negotiation protocol on this interface
     * 
     */
    private Boolean nonegotiate;
    private String trunkAllowedVlans;
    /**
     * @return no VLANs
     * 
     */
    private Boolean trunkAllowedVlansNone;
    private Integer trunkNativeVlan;
    private Boolean trunkNativeVlanTag;
    /**
     * @return Interface type
     * 
     */
    private String type;

    private GetInterfaceSwitchportResult() {}
    public String accessVlan() {
        return this.accessVlan;
    }
    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    /**
     * @return Set port host
     * 
     */
    public Boolean host() {
        return this.host;
    }
    /**
     * @return The path of the retrieved object.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Set trunking mode to ACCESS unconditionally
     * 
     */
    public Boolean modeAccess() {
        return this.modeAccess;
    }
    /**
     * @return set trunking mode to TUNNEL unconditionally
     * 
     */
    public Boolean modeDot1qTunnel() {
        return this.modeDot1qTunnel;
    }
    /**
     * @return Set the mode to private-vlan host
     * 
     */
    public Boolean modePrivateVlanHost() {
        return this.modePrivateVlanHost;
    }
    /**
     * @return Set the mode to private-vlan promiscuous
     * 
     */
    public Boolean modePrivateVlanPromiscuous() {
        return this.modePrivateVlanPromiscuous;
    }
    /**
     * @return Set the mode to private-vlan trunk
     * 
     */
    public Boolean modePrivateVlanTrunk() {
        return this.modePrivateVlanTrunk;
    }
    /**
     * @return Set trunking mode to TRUNK unconditionally
     * 
     */
    public Boolean modeTrunk() {
        return this.modeTrunk;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Device will not engage in negotiation protocol on this interface
     * 
     */
    public Boolean nonegotiate() {
        return this.nonegotiate;
    }
    public String trunkAllowedVlans() {
        return this.trunkAllowedVlans;
    }
    /**
     * @return no VLANs
     * 
     */
    public Boolean trunkAllowedVlansNone() {
        return this.trunkAllowedVlansNone;
    }
    public Integer trunkNativeVlan() {
        return this.trunkNativeVlan;
    }
    public Boolean trunkNativeVlanTag() {
        return this.trunkNativeVlanTag;
    }
    /**
     * @return Interface type
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInterfaceSwitchportResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessVlan;
        private @Nullable String device;
        private Boolean host;
        private String id;
        private Boolean modeAccess;
        private Boolean modeDot1qTunnel;
        private Boolean modePrivateVlanHost;
        private Boolean modePrivateVlanPromiscuous;
        private Boolean modePrivateVlanTrunk;
        private Boolean modeTrunk;
        private String name;
        private Boolean nonegotiate;
        private String trunkAllowedVlans;
        private Boolean trunkAllowedVlansNone;
        private Integer trunkNativeVlan;
        private Boolean trunkNativeVlanTag;
        private String type;
        public Builder() {}
        public Builder(GetInterfaceSwitchportResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessVlan = defaults.accessVlan;
    	      this.device = defaults.device;
    	      this.host = defaults.host;
    	      this.id = defaults.id;
    	      this.modeAccess = defaults.modeAccess;
    	      this.modeDot1qTunnel = defaults.modeDot1qTunnel;
    	      this.modePrivateVlanHost = defaults.modePrivateVlanHost;
    	      this.modePrivateVlanPromiscuous = defaults.modePrivateVlanPromiscuous;
    	      this.modePrivateVlanTrunk = defaults.modePrivateVlanTrunk;
    	      this.modeTrunk = defaults.modeTrunk;
    	      this.name = defaults.name;
    	      this.nonegotiate = defaults.nonegotiate;
    	      this.trunkAllowedVlans = defaults.trunkAllowedVlans;
    	      this.trunkAllowedVlansNone = defaults.trunkAllowedVlansNone;
    	      this.trunkNativeVlan = defaults.trunkNativeVlan;
    	      this.trunkNativeVlanTag = defaults.trunkNativeVlanTag;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accessVlan(String accessVlan) {
            this.accessVlan = Objects.requireNonNull(accessVlan);
            return this;
        }
        @CustomType.Setter
        public Builder device(@Nullable String device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder host(Boolean host) {
            this.host = Objects.requireNonNull(host);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder modeAccess(Boolean modeAccess) {
            this.modeAccess = Objects.requireNonNull(modeAccess);
            return this;
        }
        @CustomType.Setter
        public Builder modeDot1qTunnel(Boolean modeDot1qTunnel) {
            this.modeDot1qTunnel = Objects.requireNonNull(modeDot1qTunnel);
            return this;
        }
        @CustomType.Setter
        public Builder modePrivateVlanHost(Boolean modePrivateVlanHost) {
            this.modePrivateVlanHost = Objects.requireNonNull(modePrivateVlanHost);
            return this;
        }
        @CustomType.Setter
        public Builder modePrivateVlanPromiscuous(Boolean modePrivateVlanPromiscuous) {
            this.modePrivateVlanPromiscuous = Objects.requireNonNull(modePrivateVlanPromiscuous);
            return this;
        }
        @CustomType.Setter
        public Builder modePrivateVlanTrunk(Boolean modePrivateVlanTrunk) {
            this.modePrivateVlanTrunk = Objects.requireNonNull(modePrivateVlanTrunk);
            return this;
        }
        @CustomType.Setter
        public Builder modeTrunk(Boolean modeTrunk) {
            this.modeTrunk = Objects.requireNonNull(modeTrunk);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder nonegotiate(Boolean nonegotiate) {
            this.nonegotiate = Objects.requireNonNull(nonegotiate);
            return this;
        }
        @CustomType.Setter
        public Builder trunkAllowedVlans(String trunkAllowedVlans) {
            this.trunkAllowedVlans = Objects.requireNonNull(trunkAllowedVlans);
            return this;
        }
        @CustomType.Setter
        public Builder trunkAllowedVlansNone(Boolean trunkAllowedVlansNone) {
            this.trunkAllowedVlansNone = Objects.requireNonNull(trunkAllowedVlansNone);
            return this;
        }
        @CustomType.Setter
        public Builder trunkNativeVlan(Integer trunkNativeVlan) {
            this.trunkNativeVlan = Objects.requireNonNull(trunkNativeVlan);
            return this;
        }
        @CustomType.Setter
        public Builder trunkNativeVlanTag(Boolean trunkNativeVlanTag) {
            this.trunkNativeVlanTag = Objects.requireNonNull(trunkNativeVlanTag);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetInterfaceSwitchportResult build() {
            final var o = new GetInterfaceSwitchportResult();
            o.accessVlan = accessVlan;
            o.device = device;
            o.host = host;
            o.id = id;
            o.modeAccess = modeAccess;
            o.modeDot1qTunnel = modeDot1qTunnel;
            o.modePrivateVlanHost = modePrivateVlanHost;
            o.modePrivateVlanPromiscuous = modePrivateVlanPromiscuous;
            o.modePrivateVlanTrunk = modePrivateVlanTrunk;
            o.modeTrunk = modeTrunk;
            o.name = name;
            o.nonegotiate = nonegotiate;
            o.trunkAllowedVlans = trunkAllowedVlans;
            o.trunkAllowedVlansNone = trunkAllowedVlansNone;
            o.trunkNativeVlan = trunkNativeVlan;
            o.trunkNativeVlanTag = trunkNativeVlanTag;
            o.type = type;
            return o;
        }
    }
}
