// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.iosxe.Utilities;
import com.pulumi.iosxe.iosxe.AccessListExtendedArgs;
import com.pulumi.iosxe.iosxe.inputs.AccessListExtendedState;
import com.pulumi.iosxe.iosxe.outputs.AccessListExtendedEntry;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage the Access List Extended configuration.
 * 
 * ## Example Usage
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.iosxe.iosxe.AccessListExtended;
 * import com.pulumi.iosxe.iosxe.AccessListExtendedArgs;
 * import com.pulumi.iosxe.iosxe.inputs.AccessListExtendedEntryArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new AccessListExtended(&#34;example&#34;, AccessListExtendedArgs.builder()        
 *             .entries(AccessListExtendedEntryArgs.builder()
 *                 .ace_rule_action(&#34;permit&#34;)
 *                 .ace_rule_protocol(&#34;tcp&#34;)
 *                 .ack(true)
 *                 .destination_host(&#34;10.1.1.1&#34;)
 *                 .destination_port_range_from(&#34;1000&#34;)
 *                 .destination_port_range_to(&#34;2000&#34;)
 *                 .dscp(&#34;46&#34;)
 *                 .fin(true)
 *                 .log(true)
 *                 .psh(true)
 *                 .remark(&#34;Description&#34;)
 *                 .rst(true)
 *                 .sequence(10)
 *                 .source_port_equal(&#34;1000&#34;)
 *                 .source_prefix(&#34;10.0.0.0&#34;)
 *                 .source_prefix_mask(&#34;0.0.0.255&#34;)
 *                 .syn(true)
 *                 .urg(true)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import iosxe:iosxe/accessListExtended:AccessListExtended example &#34;Cisco-IOS-XE-native:native/ip/access-list/Cisco-IOS-XE-acl:extended=EACL1&#34;
 * ```
 * 
 */
@ResourceType(type="iosxe:iosxe/accessListExtended:AccessListExtended")
public class AccessListExtended extends com.pulumi.resources.CustomResource {
    /**
     * A device name from the provider configuration.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }
    @Export(name="entries", refs={List.class,AccessListExtendedEntry.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AccessListExtendedEntry>> entries;

    public Output<Optional<List<AccessListExtendedEntry>>> entries() {
        return Codegen.optional(this.entries);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccessListExtended(String name) {
        this(name, AccessListExtendedArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccessListExtended(String name, @Nullable AccessListExtendedArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccessListExtended(String name, @Nullable AccessListExtendedArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/accessListExtended:AccessListExtended", name, args == null ? AccessListExtendedArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AccessListExtended(String name, Output<String> id, @Nullable AccessListExtendedState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/accessListExtended:AccessListExtended", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccessListExtended get(String name, Output<String> id, @Nullable AccessListExtendedState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AccessListExtended(name, id, state, options);
    }
}
