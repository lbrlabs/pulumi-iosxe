// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.iosxe.Utilities;
import com.pulumi.iosxe.iosxe.AaaAccountingArgs;
import com.pulumi.iosxe.iosxe.inputs.AaaAccountingState;
import com.pulumi.iosxe.iosxe.outputs.AaaAccountingExec;
import com.pulumi.iosxe.iosxe.outputs.AaaAccountingNetwork;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage the AAA Accounting configuration.
 * 
 * ## Example Usage
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.iosxe.iosxe.AaaAccounting;
 * import com.pulumi.iosxe.iosxe.AaaAccountingArgs;
 * import com.pulumi.iosxe.iosxe.inputs.AaaAccountingExecArgs;
 * import com.pulumi.iosxe.iosxe.inputs.AaaAccountingNetworkArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new AaaAccounting(&#34;example&#34;, AaaAccountingArgs.builder()        
 *             .execs(AaaAccountingExecArgs.builder()
 *                 .name(&#34;default&#34;)
 *                 .start_stop_group1(&#34;T-Group&#34;)
 *                 .build())
 *             .identityDefaultStartStopGroup1(&#34;RADIUS-GROUP&#34;)
 *             .identityDefaultStartStopGroup2(&#34;RADIUS-GROUP2&#34;)
 *             .identityDefaultStartStopGroup3(&#34;RADIUS-GROUP3&#34;)
 *             .identityDefaultStartStopGroup4(&#34;RADIUS-GROUP4&#34;)
 *             .networks(AaaAccountingNetworkArgs.builder()
 *                 .id(&#34;network1&#34;)
 *                 .start_stop_group1(&#34;radius&#34;)
 *                 .start_stop_group2(&#34;tacacs+&#34;)
 *                 .build())
 *             .systemGuaranteeFirst(false)
 *             .updateNewinfoPeriodic(2880)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import iosxe:iosxe/aaaAccounting:AaaAccounting example &#34;Cisco-IOS-XE-native:native/aaa/Cisco-IOS-XE-aaa:accounting&#34;
 * ```
 * 
 */
@ResourceType(type="iosxe:iosxe/aaaAccounting:AaaAccounting")
public class AaaAccounting extends com.pulumi.resources.CustomResource {
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    @Export(name="deleteMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deleteMode;

    /**
     * @return Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    public Output<Optional<String>> deleteMode() {
        return Codegen.optional(this.deleteMode);
    }
    /**
     * A device name from the provider configuration.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }
    /**
     * For starting an exec (shell).
     * 
     */
    @Export(name="execs", refs={List.class,AaaAccountingExec.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AaaAccountingExec>> execs;

    /**
     * @return For starting an exec (shell).
     * 
     */
    public Output<Optional<List<AaaAccountingExec>>> execs() {
        return Codegen.optional(this.execs);
    }
    /**
     * Use Server-group
     * 
     */
    @Export(name="identityDefaultStartStopGroup1", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> identityDefaultStartStopGroup1;

    /**
     * @return Use Server-group
     * 
     */
    public Output<Optional<String>> identityDefaultStartStopGroup1() {
        return Codegen.optional(this.identityDefaultStartStopGroup1);
    }
    /**
     * Use Server-group
     * 
     */
    @Export(name="identityDefaultStartStopGroup2", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> identityDefaultStartStopGroup2;

    /**
     * @return Use Server-group
     * 
     */
    public Output<Optional<String>> identityDefaultStartStopGroup2() {
        return Codegen.optional(this.identityDefaultStartStopGroup2);
    }
    /**
     * Use Server-group
     * 
     */
    @Export(name="identityDefaultStartStopGroup3", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> identityDefaultStartStopGroup3;

    /**
     * @return Use Server-group
     * 
     */
    public Output<Optional<String>> identityDefaultStartStopGroup3() {
        return Codegen.optional(this.identityDefaultStartStopGroup3);
    }
    /**
     * Use Server-group
     * 
     */
    @Export(name="identityDefaultStartStopGroup4", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> identityDefaultStartStopGroup4;

    /**
     * @return Use Server-group
     * 
     */
    public Output<Optional<String>> identityDefaultStartStopGroup4() {
        return Codegen.optional(this.identityDefaultStartStopGroup4);
    }
    /**
     * For network services. (PPP, SLIP, ARAP)
     * 
     */
    @Export(name="networks", refs={List.class,AaaAccountingNetwork.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AaaAccountingNetwork>> networks;

    /**
     * @return For network services. (PPP, SLIP, ARAP)
     * 
     */
    public Output<Optional<List<AaaAccountingNetwork>>> networks() {
        return Codegen.optional(this.networks);
    }
    /**
     * Guarantee system accounting as first record.
     * 
     */
    @Export(name="systemGuaranteeFirst", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> systemGuaranteeFirst;

    /**
     * @return Guarantee system accounting as first record.
     * 
     */
    public Output<Optional<Boolean>> systemGuaranteeFirst() {
        return Codegen.optional(this.systemGuaranteeFirst);
    }
    /**
     * Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
     * 
     */
    @Export(name="updateNewinfoPeriodic", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> updateNewinfoPeriodic;

    /**
     * @return Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
     * 
     */
    public Output<Optional<Integer>> updateNewinfoPeriodic() {
        return Codegen.optional(this.updateNewinfoPeriodic);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AaaAccounting(String name) {
        this(name, AaaAccountingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AaaAccounting(String name, @Nullable AaaAccountingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AaaAccounting(String name, @Nullable AaaAccountingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/aaaAccounting:AaaAccounting", name, args == null ? AaaAccountingArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AaaAccounting(String name, Output<String> id, @Nullable AaaAccountingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/aaaAccounting:AaaAccounting", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AaaAccounting get(String name, Output<String> id, @Nullable AaaAccountingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AaaAccounting(name, id, state, options);
    }
}
