// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VlanAccessMapArgs extends com.pulumi.resources.ResourceArgs {

    public static final VlanAccessMapArgs Empty = new VlanAccessMapArgs();

    /**
     * Take the action - Choices: `drop`, `forward`
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return Take the action - Choices: `drop`, `forward`
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    @Import(name="matchIpAddresses")
    private @Nullable Output<List<String>> matchIpAddresses;

    public Optional<Output<List<String>>> matchIpAddresses() {
        return Optional.ofNullable(this.matchIpAddresses);
    }

    /**
     * Match IPv6 address to access control.
     * 
     */
    @Import(name="matchIpv6Addresses")
    private @Nullable Output<List<String>> matchIpv6Addresses;

    /**
     * @return Match IPv6 address to access control.
     * 
     */
    public Optional<Output<List<String>>> matchIpv6Addresses() {
        return Optional.ofNullable(this.matchIpv6Addresses);
    }

    /**
     * Vlan access map tag
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Vlan access map tag
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`
     * 
     */
    @Import(name="sequence", required=true)
    private Output<Integer> sequence;

    /**
     * @return Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`
     * 
     */
    public Output<Integer> sequence() {
        return this.sequence;
    }

    private VlanAccessMapArgs() {}

    private VlanAccessMapArgs(VlanAccessMapArgs $) {
        this.action = $.action;
        this.device = $.device;
        this.matchIpAddresses = $.matchIpAddresses;
        this.matchIpv6Addresses = $.matchIpv6Addresses;
        this.name = $.name;
        this.sequence = $.sequence;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VlanAccessMapArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VlanAccessMapArgs $;

        public Builder() {
            $ = new VlanAccessMapArgs();
        }

        public Builder(VlanAccessMapArgs defaults) {
            $ = new VlanAccessMapArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Take the action - Choices: `drop`, `forward`
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Take the action - Choices: `drop`, `forward`
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        public Builder matchIpAddresses(@Nullable Output<List<String>> matchIpAddresses) {
            $.matchIpAddresses = matchIpAddresses;
            return this;
        }

        public Builder matchIpAddresses(List<String> matchIpAddresses) {
            return matchIpAddresses(Output.of(matchIpAddresses));
        }

        public Builder matchIpAddresses(String... matchIpAddresses) {
            return matchIpAddresses(List.of(matchIpAddresses));
        }

        /**
         * @param matchIpv6Addresses Match IPv6 address to access control.
         * 
         * @return builder
         * 
         */
        public Builder matchIpv6Addresses(@Nullable Output<List<String>> matchIpv6Addresses) {
            $.matchIpv6Addresses = matchIpv6Addresses;
            return this;
        }

        /**
         * @param matchIpv6Addresses Match IPv6 address to access control.
         * 
         * @return builder
         * 
         */
        public Builder matchIpv6Addresses(List<String> matchIpv6Addresses) {
            return matchIpv6Addresses(Output.of(matchIpv6Addresses));
        }

        /**
         * @param matchIpv6Addresses Match IPv6 address to access control.
         * 
         * @return builder
         * 
         */
        public Builder matchIpv6Addresses(String... matchIpv6Addresses) {
            return matchIpv6Addresses(List.of(matchIpv6Addresses));
        }

        /**
         * @param name Vlan access map tag
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Vlan access map tag
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sequence Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder sequence(Output<Integer> sequence) {
            $.sequence = sequence;
            return this;
        }

        /**
         * @param sequence Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder sequence(Integer sequence) {
            return sequence(Output.of(sequence));
        }

        public VlanAccessMapArgs build() {
            $.sequence = Objects.requireNonNull($.sequence, "expected parameter 'sequence' to be non-null");
            return $;
        }
    }

}
