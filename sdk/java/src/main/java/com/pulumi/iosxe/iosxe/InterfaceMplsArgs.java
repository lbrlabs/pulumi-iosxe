// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InterfaceMplsArgs extends com.pulumi.resources.ResourceArgs {

    public static final InterfaceMplsArgs Empty = new InterfaceMplsArgs();

    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    @Import(name="deleteMode")
    private @Nullable Output<String> deleteMode;

    /**
     * @return Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    public Optional<Output<String>> deleteMode() {
        return Optional.ofNullable(this.deleteMode);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * Configure dynamic MPLS forwarding for IP
     * 
     */
    @Import(name="ip")
    private @Nullable Output<Boolean> ip;

    /**
     * @return Configure dynamic MPLS forwarding for IP
     * 
     */
    public Optional<Output<Boolean>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * Set MPLS Maximum Transmission Unit
     * 
     */
    @Import(name="mtu")
    private @Nullable Output<String> mtu;

    /**
     * @return Set MPLS Maximum Transmission Unit
     * 
     */
    public Optional<Output<String>> mtu() {
        return Optional.ofNullable(this.mtu);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
     * `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
     * `Port-channel`
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
     * `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
     * `Port-channel`
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private InterfaceMplsArgs() {}

    private InterfaceMplsArgs(InterfaceMplsArgs $) {
        this.deleteMode = $.deleteMode;
        this.device = $.device;
        this.ip = $.ip;
        this.mtu = $.mtu;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InterfaceMplsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InterfaceMplsArgs $;

        public Builder() {
            $ = new InterfaceMplsArgs();
        }

        public Builder(InterfaceMplsArgs defaults) {
            $ = new InterfaceMplsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deleteMode Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
         * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
         * Default value is `all`. - Choices: `all`, `attributes`
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(@Nullable Output<String> deleteMode) {
            $.deleteMode = deleteMode;
            return this;
        }

        /**
         * @param deleteMode Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
         * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
         * Default value is `all`. - Choices: `all`, `attributes`
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(String deleteMode) {
            return deleteMode(Output.of(deleteMode));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param ip Configure dynamic MPLS forwarding for IP
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<Boolean> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip Configure dynamic MPLS forwarding for IP
         * 
         * @return builder
         * 
         */
        public Builder ip(Boolean ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param mtu Set MPLS Maximum Transmission Unit
         * 
         * @return builder
         * 
         */
        public Builder mtu(@Nullable Output<String> mtu) {
            $.mtu = mtu;
            return this;
        }

        /**
         * @param mtu Set MPLS Maximum Transmission Unit
         * 
         * @return builder
         * 
         */
        public Builder mtu(String mtu) {
            return mtu(Output.of(mtu));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
         * `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
         * `Port-channel`
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
         * `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
         * `Port-channel`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public InterfaceMplsArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
