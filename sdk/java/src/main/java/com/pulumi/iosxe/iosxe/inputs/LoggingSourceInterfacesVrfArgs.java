// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class LoggingSourceInterfacesVrfArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoggingSourceInterfacesVrfArgs Empty = new LoggingSourceInterfacesVrfArgs();

    @Import(name="interfaceName", required=true)
    private Output<String> interfaceName;

    public Output<String> interfaceName() {
        return this.interfaceName;
    }

    @Import(name="vrf", required=true)
    private Output<String> vrf;

    public Output<String> vrf() {
        return this.vrf;
    }

    private LoggingSourceInterfacesVrfArgs() {}

    private LoggingSourceInterfacesVrfArgs(LoggingSourceInterfacesVrfArgs $) {
        this.interfaceName = $.interfaceName;
        this.vrf = $.vrf;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoggingSourceInterfacesVrfArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggingSourceInterfacesVrfArgs $;

        public Builder() {
            $ = new LoggingSourceInterfacesVrfArgs();
        }

        public Builder(LoggingSourceInterfacesVrfArgs defaults) {
            $ = new LoggingSourceInterfacesVrfArgs(Objects.requireNonNull(defaults));
        }

        public Builder interfaceName(Output<String> interfaceName) {
            $.interfaceName = interfaceName;
            return this;
        }

        public Builder interfaceName(String interfaceName) {
            return interfaceName(Output.of(interfaceName));
        }

        public Builder vrf(Output<String> vrf) {
            $.vrf = vrf;
            return this;
        }

        public Builder vrf(String vrf) {
            return vrf(Output.of(vrf));
        }

        public LoggingSourceInterfacesVrfArgs build() {
            $.interfaceName = Objects.requireNonNull($.interfaceName, "expected parameter 'interfaceName' to be non-null");
            $.vrf = Objects.requireNonNull($.vrf, "expected parameter 'vrf' to be non-null");
            return $;
        }
    }

}
