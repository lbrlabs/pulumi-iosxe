// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.iosxe.Utilities;
import com.pulumi.iosxe.iosxe.SystemArgs;
import com.pulumi.iosxe.iosxe.inputs.SystemState;
import com.pulumi.iosxe.iosxe.outputs.SystemMulticastRoutingVrf;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage the System configuration.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.iosxe.iosxe.System;
 * import com.pulumi.iosxe.iosxe.SystemArgs;
 * import com.pulumi.iosxe.iosxe.inputs.SystemMulticastRoutingVrfArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new System(&#34;example&#34;, SystemArgs.builder()        
 *             .hostname(&#34;ROUTER-1&#34;)
 *             .ipDomainLookup(false)
 *             .ipDomainName(&#34;test.com&#34;)
 *             .ipSourceRoute(false)
 *             .ipv6UnicastRouting(true)
 *             .loginDelay(10)
 *             .loginOnFailure(true)
 *             .loginOnFailureLog(true)
 *             .loginOnSuccess(true)
 *             .loginOnSuccessLog(true)
 *             .multicastRoutingVrfs(SystemMulticastRoutingVrfArgs.builder()
 *                 .vrf(&#34;VRF1&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import iosxe:iosxe/system:System example &#34;Cisco-IOS-XE-native:native&#34;
 * ```
 * 
 */
@ResourceType(type="iosxe:iosxe/system:System")
public class System extends com.pulumi.resources.CustomResource {
    /**
     * A device name from the provider configuration.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }
    /**
     * Set system&#39;s network name
     * 
     */
    @Export(name="hostname", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> hostname;

    /**
     * @return Set system&#39;s network name
     * 
     */
    public Output<Optional<String>> hostname() {
        return Codegen.optional(this.hostname);
    }
    /**
     * Enable IP Domain Name System hostname translation
     * 
     */
    @Export(name="ipDomainLookup", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipDomainLookup;

    /**
     * @return Enable IP Domain Name System hostname translation
     * 
     */
    public Output<Optional<Boolean>> ipDomainLookup() {
        return Codegen.optional(this.ipDomainLookup);
    }
    /**
     * Define the default domain name
     * 
     */
    @Export(name="ipDomainName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipDomainName;

    /**
     * @return Define the default domain name
     * 
     */
    public Output<Optional<String>> ipDomainName() {
        return Codegen.optional(this.ipDomainName);
    }
    /**
     * Enable IP multicast forwarding
     * 
     */
    @Export(name="ipMulticastRouting", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipMulticastRouting;

    /**
     * @return Enable IP multicast forwarding
     * 
     */
    public Output<Optional<Boolean>> ipMulticastRouting() {
        return Codegen.optional(this.ipMulticastRouting);
    }
    /**
     * Distributed multicast switching
     * 
     */
    @Export(name="ipMulticastRoutingDistributed", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipMulticastRoutingDistributed;

    /**
     * @return Distributed multicast switching
     * 
     */
    public Output<Optional<Boolean>> ipMulticastRoutingDistributed() {
        return Codegen.optional(this.ipMulticastRoutingDistributed);
    }
    /**
     * Enable or disable IP routing
     * 
     */
    @Export(name="ipRouting", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipRouting;

    /**
     * @return Enable or disable IP routing
     * 
     */
    public Output<Optional<Boolean>> ipRouting() {
        return Codegen.optional(this.ipRouting);
    }
    /**
     * Process packets with source routing header options
     * 
     */
    @Export(name="ipSourceRoute", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipSourceRoute;

    /**
     * @return Process packets with source routing header options
     * 
     */
    public Output<Optional<Boolean>> ipSourceRoute() {
        return Codegen.optional(this.ipSourceRoute);
    }
    /**
     * Enable unicast routing
     * 
     */
    @Export(name="ipv6UnicastRouting", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipv6UnicastRouting;

    /**
     * @return Enable unicast routing
     * 
     */
    public Output<Optional<Boolean>> ipv6UnicastRouting() {
        return Codegen.optional(this.ipv6UnicastRouting);
    }
    /**
     * Set delay between successive fail login - Range: `1`-`10`
     * 
     */
    @Export(name="loginDelay", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> loginDelay;

    /**
     * @return Set delay between successive fail login - Range: `1`-`10`
     * 
     */
    public Output<Optional<Integer>> loginDelay() {
        return Codegen.optional(this.loginDelay);
    }
    /**
     * Set options for failed login attempt
     * 
     */
    @Export(name="loginOnFailure", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> loginOnFailure;

    /**
     * @return Set options for failed login attempt
     * 
     */
    public Output<Optional<Boolean>> loginOnFailure() {
        return Codegen.optional(this.loginOnFailure);
    }
    /**
     * Generate syslogs on failure logins
     * 
     */
    @Export(name="loginOnFailureLog", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> loginOnFailureLog;

    /**
     * @return Generate syslogs on failure logins
     * 
     */
    public Output<Optional<Boolean>> loginOnFailureLog() {
        return Codegen.optional(this.loginOnFailureLog);
    }
    /**
     * Set options for successful login attempt
     * 
     */
    @Export(name="loginOnSuccess", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> loginOnSuccess;

    /**
     * @return Set options for successful login attempt
     * 
     */
    public Output<Optional<Boolean>> loginOnSuccess() {
        return Codegen.optional(this.loginOnSuccess);
    }
    /**
     * Generate syslogs on successful logins
     * 
     */
    @Export(name="loginOnSuccessLog", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> loginOnSuccessLog;

    /**
     * @return Generate syslogs on successful logins
     * 
     */
    public Output<Optional<Boolean>> loginOnSuccessLog() {
        return Codegen.optional(this.loginOnSuccessLog);
    }
    /**
     * - Range: `1500`-`9198`
     * 
     */
    @Export(name="mtu", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> mtu;

    /**
     * @return - Range: `1500`-`9198`
     * 
     */
    public Output<Optional<Integer>> mtu() {
        return Codegen.optional(this.mtu);
    }
    /**
     * Enable IP multicast forwarding, some XE devices use this option instead of `multicast_routing`.
     * 
     */
    @Export(name="multicastRoutingSwitch", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> multicastRoutingSwitch;

    /**
     * @return Enable IP multicast forwarding, some XE devices use this option instead of `multicast_routing`.
     * 
     */
    public Output<Optional<Boolean>> multicastRoutingSwitch() {
        return Codegen.optional(this.multicastRoutingSwitch);
    }
    /**
     * Select VPN Routing/Forwarding instance
     * 
     */
    @Export(name="multicastRoutingVrfs", refs={List.class,SystemMulticastRoutingVrf.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SystemMulticastRoutingVrf>> multicastRoutingVrfs;

    /**
     * @return Select VPN Routing/Forwarding instance
     * 
     */
    public Output<Optional<List<SystemMulticastRoutingVrf>>> multicastRoutingVrfs() {
        return Codegen.optional(this.multicastRoutingVrfs);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public System(String name) {
        this(name, SystemArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public System(String name, @Nullable SystemArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public System(String name, @Nullable SystemArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/system:System", name, args == null ? SystemArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private System(String name, Output<String> id, @Nullable SystemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/system:System", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static System get(String name, Output<String> id, @Nullable SystemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new System(name, id, state, options);
    }
}
