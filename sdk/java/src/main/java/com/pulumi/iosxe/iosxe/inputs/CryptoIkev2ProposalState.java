// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CryptoIkev2ProposalState extends com.pulumi.resources.ResourceArgs {

    public static final CryptoIkev2ProposalState Empty = new CryptoIkev2ProposalState();

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * AES-CBC-128
     * 
     */
    @Import(name="encryptionAesCbc128")
    private @Nullable Output<Boolean> encryptionAesCbc128;

    /**
     * @return AES-CBC-128
     * 
     */
    public Optional<Output<Boolean>> encryptionAesCbc128() {
        return Optional.ofNullable(this.encryptionAesCbc128);
    }

    /**
     * AES-CBC-192
     * 
     */
    @Import(name="encryptionAesCbc192")
    private @Nullable Output<Boolean> encryptionAesCbc192;

    /**
     * @return AES-CBC-192
     * 
     */
    public Optional<Output<Boolean>> encryptionAesCbc192() {
        return Optional.ofNullable(this.encryptionAesCbc192);
    }

    /**
     * AES-CBC-256
     * 
     */
    @Import(name="encryptionAesCbc256")
    private @Nullable Output<Boolean> encryptionAesCbc256;

    /**
     * @return AES-CBC-256
     * 
     */
    public Optional<Output<Boolean>> encryptionAesCbc256() {
        return Optional.ofNullable(this.encryptionAesCbc256);
    }

    /**
     * Combined-mode,128 bit key,16 byte ICV(Authentication Tag)
     * 
     */
    @Import(name="encryptionAesGcm128")
    private @Nullable Output<Boolean> encryptionAesGcm128;

    /**
     * @return Combined-mode,128 bit key,16 byte ICV(Authentication Tag)
     * 
     */
    public Optional<Output<Boolean>> encryptionAesGcm128() {
        return Optional.ofNullable(this.encryptionAesGcm128);
    }

    /**
     * Combined-mode,256 bit key,16 byte ICV(Authentication Tag)
     * 
     */
    @Import(name="encryptionAesGcm256")
    private @Nullable Output<Boolean> encryptionAesGcm256;

    /**
     * @return Combined-mode,256 bit key,16 byte ICV(Authentication Tag)
     * 
     */
    public Optional<Output<Boolean>> encryptionAesGcm256() {
        return Optional.ofNullable(this.encryptionAesGcm256);
    }

    /**
     * 3DES
     * 
     */
    @Import(name="encryptionEn3des")
    private @Nullable Output<Boolean> encryptionEn3des;

    /**
     * @return 3DES
     * 
     */
    public Optional<Output<Boolean>> encryptionEn3des() {
        return Optional.ofNullable(this.encryptionEn3des);
    }

    /**
     * DH 3072 MODP
     * 
     */
    @Import(name="groupFifteen")
    private @Nullable Output<Boolean> groupFifteen;

    /**
     * @return DH 3072 MODP
     * 
     */
    public Optional<Output<Boolean>> groupFifteen() {
        return Optional.ofNullable(this.groupFifteen);
    }

    /**
     * DH 2048 MODP
     * 
     */
    @Import(name="groupFourteen")
    private @Nullable Output<Boolean> groupFourteen;

    /**
     * @return DH 2048 MODP
     * 
     */
    public Optional<Output<Boolean>> groupFourteen() {
        return Optional.ofNullable(this.groupFourteen);
    }

    /**
     * DH 256 ECP
     * 
     */
    @Import(name="groupNineteen")
    private @Nullable Output<Boolean> groupNineteen;

    /**
     * @return DH 256 ECP
     * 
     */
    public Optional<Output<Boolean>> groupNineteen() {
        return Optional.ofNullable(this.groupNineteen);
    }

    /**
     * DH 768 MODP
     * 
     */
    @Import(name="groupOne")
    private @Nullable Output<Boolean> groupOne;

    /**
     * @return DH 768 MODP
     * 
     */
    public Optional<Output<Boolean>> groupOne() {
        return Optional.ofNullable(this.groupOne);
    }

    /**
     * DH 4096 MODP
     * 
     */
    @Import(name="groupSixteen")
    private @Nullable Output<Boolean> groupSixteen;

    /**
     * @return DH 4096 MODP
     * 
     */
    public Optional<Output<Boolean>> groupSixteen() {
        return Optional.ofNullable(this.groupSixteen);
    }

    /**
     * DH 384 ECP
     * 
     */
    @Import(name="groupTwenty")
    private @Nullable Output<Boolean> groupTwenty;

    /**
     * @return DH 384 ECP
     * 
     */
    public Optional<Output<Boolean>> groupTwenty() {
        return Optional.ofNullable(this.groupTwenty);
    }

    /**
     * DH 2048 (256 subgroup) MODP
     * 
     */
    @Import(name="groupTwentyFour")
    private @Nullable Output<Boolean> groupTwentyFour;

    /**
     * @return DH 2048 (256 subgroup) MODP
     * 
     */
    public Optional<Output<Boolean>> groupTwentyFour() {
        return Optional.ofNullable(this.groupTwentyFour);
    }

    /**
     * DH 521 ECP
     * 
     */
    @Import(name="groupTwentyOne")
    private @Nullable Output<Boolean> groupTwentyOne;

    /**
     * @return DH 521 ECP
     * 
     */
    public Optional<Output<Boolean>> groupTwentyOne() {
        return Optional.ofNullable(this.groupTwentyOne);
    }

    /**
     * DH 1024 MODP
     * 
     */
    @Import(name="groupTwo")
    private @Nullable Output<Boolean> groupTwo;

    /**
     * @return DH 1024 MODP
     * 
     */
    public Optional<Output<Boolean>> groupTwo() {
        return Optional.ofNullable(this.groupTwo);
    }

    /**
     * Message Digest 5
     * 
     */
    @Import(name="integrityMd5")
    private @Nullable Output<Boolean> integrityMd5;

    /**
     * @return Message Digest 5
     * 
     */
    public Optional<Output<Boolean>> integrityMd5() {
        return Optional.ofNullable(this.integrityMd5);
    }

    /**
     * Secure Hash Standard
     * 
     */
    @Import(name="integritySha1")
    private @Nullable Output<Boolean> integritySha1;

    /**
     * @return Secure Hash Standard
     * 
     */
    public Optional<Output<Boolean>> integritySha1() {
        return Optional.ofNullable(this.integritySha1);
    }

    /**
     * Secure Hash Standard 2 (256 bit)
     * 
     */
    @Import(name="integritySha256")
    private @Nullable Output<Boolean> integritySha256;

    /**
     * @return Secure Hash Standard 2 (256 bit)
     * 
     */
    public Optional<Output<Boolean>> integritySha256() {
        return Optional.ofNullable(this.integritySha256);
    }

    /**
     * Secure Hash Standard 2 (384 bit)
     * 
     */
    @Import(name="integritySha384")
    private @Nullable Output<Boolean> integritySha384;

    /**
     * @return Secure Hash Standard 2 (384 bit)
     * 
     */
    public Optional<Output<Boolean>> integritySha384() {
        return Optional.ofNullable(this.integritySha384);
    }

    /**
     * Secure Hash Standard 2 (512 bit)
     * 
     */
    @Import(name="integritySha512")
    private @Nullable Output<Boolean> integritySha512;

    /**
     * @return Secure Hash Standard 2 (512 bit)
     * 
     */
    public Optional<Output<Boolean>> integritySha512() {
        return Optional.ofNullable(this.integritySha512);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Message Digest 5
     * 
     */
    @Import(name="prfMd5")
    private @Nullable Output<Boolean> prfMd5;

    /**
     * @return Message Digest 5
     * 
     */
    public Optional<Output<Boolean>> prfMd5() {
        return Optional.ofNullable(this.prfMd5);
    }

    /**
     * Secure Hash Standard
     * 
     */
    @Import(name="prfSha1")
    private @Nullable Output<Boolean> prfSha1;

    /**
     * @return Secure Hash Standard
     * 
     */
    public Optional<Output<Boolean>> prfSha1() {
        return Optional.ofNullable(this.prfSha1);
    }

    /**
     * Secure Hash Standard 2 (256 bit)
     * 
     */
    @Import(name="prfSha256")
    private @Nullable Output<Boolean> prfSha256;

    /**
     * @return Secure Hash Standard 2 (256 bit)
     * 
     */
    public Optional<Output<Boolean>> prfSha256() {
        return Optional.ofNullable(this.prfSha256);
    }

    /**
     * Secure Hash Standard 2 (384 bit)
     * 
     */
    @Import(name="prfSha384")
    private @Nullable Output<Boolean> prfSha384;

    /**
     * @return Secure Hash Standard 2 (384 bit)
     * 
     */
    public Optional<Output<Boolean>> prfSha384() {
        return Optional.ofNullable(this.prfSha384);
    }

    /**
     * Secure Hash Standard 2 (512 bit)
     * 
     */
    @Import(name="prfSha512")
    private @Nullable Output<Boolean> prfSha512;

    /**
     * @return Secure Hash Standard 2 (512 bit)
     * 
     */
    public Optional<Output<Boolean>> prfSha512() {
        return Optional.ofNullable(this.prfSha512);
    }

    private CryptoIkev2ProposalState() {}

    private CryptoIkev2ProposalState(CryptoIkev2ProposalState $) {
        this.device = $.device;
        this.encryptionAesCbc128 = $.encryptionAesCbc128;
        this.encryptionAesCbc192 = $.encryptionAesCbc192;
        this.encryptionAesCbc256 = $.encryptionAesCbc256;
        this.encryptionAesGcm128 = $.encryptionAesGcm128;
        this.encryptionAesGcm256 = $.encryptionAesGcm256;
        this.encryptionEn3des = $.encryptionEn3des;
        this.groupFifteen = $.groupFifteen;
        this.groupFourteen = $.groupFourteen;
        this.groupNineteen = $.groupNineteen;
        this.groupOne = $.groupOne;
        this.groupSixteen = $.groupSixteen;
        this.groupTwenty = $.groupTwenty;
        this.groupTwentyFour = $.groupTwentyFour;
        this.groupTwentyOne = $.groupTwentyOne;
        this.groupTwo = $.groupTwo;
        this.integrityMd5 = $.integrityMd5;
        this.integritySha1 = $.integritySha1;
        this.integritySha256 = $.integritySha256;
        this.integritySha384 = $.integritySha384;
        this.integritySha512 = $.integritySha512;
        this.name = $.name;
        this.prfMd5 = $.prfMd5;
        this.prfSha1 = $.prfSha1;
        this.prfSha256 = $.prfSha256;
        this.prfSha384 = $.prfSha384;
        this.prfSha512 = $.prfSha512;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CryptoIkev2ProposalState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CryptoIkev2ProposalState $;

        public Builder() {
            $ = new CryptoIkev2ProposalState();
        }

        public Builder(CryptoIkev2ProposalState defaults) {
            $ = new CryptoIkev2ProposalState(Objects.requireNonNull(defaults));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param encryptionAesCbc128 AES-CBC-128
         * 
         * @return builder
         * 
         */
        public Builder encryptionAesCbc128(@Nullable Output<Boolean> encryptionAesCbc128) {
            $.encryptionAesCbc128 = encryptionAesCbc128;
            return this;
        }

        /**
         * @param encryptionAesCbc128 AES-CBC-128
         * 
         * @return builder
         * 
         */
        public Builder encryptionAesCbc128(Boolean encryptionAesCbc128) {
            return encryptionAesCbc128(Output.of(encryptionAesCbc128));
        }

        /**
         * @param encryptionAesCbc192 AES-CBC-192
         * 
         * @return builder
         * 
         */
        public Builder encryptionAesCbc192(@Nullable Output<Boolean> encryptionAesCbc192) {
            $.encryptionAesCbc192 = encryptionAesCbc192;
            return this;
        }

        /**
         * @param encryptionAesCbc192 AES-CBC-192
         * 
         * @return builder
         * 
         */
        public Builder encryptionAesCbc192(Boolean encryptionAesCbc192) {
            return encryptionAesCbc192(Output.of(encryptionAesCbc192));
        }

        /**
         * @param encryptionAesCbc256 AES-CBC-256
         * 
         * @return builder
         * 
         */
        public Builder encryptionAesCbc256(@Nullable Output<Boolean> encryptionAesCbc256) {
            $.encryptionAesCbc256 = encryptionAesCbc256;
            return this;
        }

        /**
         * @param encryptionAesCbc256 AES-CBC-256
         * 
         * @return builder
         * 
         */
        public Builder encryptionAesCbc256(Boolean encryptionAesCbc256) {
            return encryptionAesCbc256(Output.of(encryptionAesCbc256));
        }

        /**
         * @param encryptionAesGcm128 Combined-mode,128 bit key,16 byte ICV(Authentication Tag)
         * 
         * @return builder
         * 
         */
        public Builder encryptionAesGcm128(@Nullable Output<Boolean> encryptionAesGcm128) {
            $.encryptionAesGcm128 = encryptionAesGcm128;
            return this;
        }

        /**
         * @param encryptionAesGcm128 Combined-mode,128 bit key,16 byte ICV(Authentication Tag)
         * 
         * @return builder
         * 
         */
        public Builder encryptionAesGcm128(Boolean encryptionAesGcm128) {
            return encryptionAesGcm128(Output.of(encryptionAesGcm128));
        }

        /**
         * @param encryptionAesGcm256 Combined-mode,256 bit key,16 byte ICV(Authentication Tag)
         * 
         * @return builder
         * 
         */
        public Builder encryptionAesGcm256(@Nullable Output<Boolean> encryptionAesGcm256) {
            $.encryptionAesGcm256 = encryptionAesGcm256;
            return this;
        }

        /**
         * @param encryptionAesGcm256 Combined-mode,256 bit key,16 byte ICV(Authentication Tag)
         * 
         * @return builder
         * 
         */
        public Builder encryptionAesGcm256(Boolean encryptionAesGcm256) {
            return encryptionAesGcm256(Output.of(encryptionAesGcm256));
        }

        /**
         * @param encryptionEn3des 3DES
         * 
         * @return builder
         * 
         */
        public Builder encryptionEn3des(@Nullable Output<Boolean> encryptionEn3des) {
            $.encryptionEn3des = encryptionEn3des;
            return this;
        }

        /**
         * @param encryptionEn3des 3DES
         * 
         * @return builder
         * 
         */
        public Builder encryptionEn3des(Boolean encryptionEn3des) {
            return encryptionEn3des(Output.of(encryptionEn3des));
        }

        /**
         * @param groupFifteen DH 3072 MODP
         * 
         * @return builder
         * 
         */
        public Builder groupFifteen(@Nullable Output<Boolean> groupFifteen) {
            $.groupFifteen = groupFifteen;
            return this;
        }

        /**
         * @param groupFifteen DH 3072 MODP
         * 
         * @return builder
         * 
         */
        public Builder groupFifteen(Boolean groupFifteen) {
            return groupFifteen(Output.of(groupFifteen));
        }

        /**
         * @param groupFourteen DH 2048 MODP
         * 
         * @return builder
         * 
         */
        public Builder groupFourteen(@Nullable Output<Boolean> groupFourteen) {
            $.groupFourteen = groupFourteen;
            return this;
        }

        /**
         * @param groupFourteen DH 2048 MODP
         * 
         * @return builder
         * 
         */
        public Builder groupFourteen(Boolean groupFourteen) {
            return groupFourteen(Output.of(groupFourteen));
        }

        /**
         * @param groupNineteen DH 256 ECP
         * 
         * @return builder
         * 
         */
        public Builder groupNineteen(@Nullable Output<Boolean> groupNineteen) {
            $.groupNineteen = groupNineteen;
            return this;
        }

        /**
         * @param groupNineteen DH 256 ECP
         * 
         * @return builder
         * 
         */
        public Builder groupNineteen(Boolean groupNineteen) {
            return groupNineteen(Output.of(groupNineteen));
        }

        /**
         * @param groupOne DH 768 MODP
         * 
         * @return builder
         * 
         */
        public Builder groupOne(@Nullable Output<Boolean> groupOne) {
            $.groupOne = groupOne;
            return this;
        }

        /**
         * @param groupOne DH 768 MODP
         * 
         * @return builder
         * 
         */
        public Builder groupOne(Boolean groupOne) {
            return groupOne(Output.of(groupOne));
        }

        /**
         * @param groupSixteen DH 4096 MODP
         * 
         * @return builder
         * 
         */
        public Builder groupSixteen(@Nullable Output<Boolean> groupSixteen) {
            $.groupSixteen = groupSixteen;
            return this;
        }

        /**
         * @param groupSixteen DH 4096 MODP
         * 
         * @return builder
         * 
         */
        public Builder groupSixteen(Boolean groupSixteen) {
            return groupSixteen(Output.of(groupSixteen));
        }

        /**
         * @param groupTwenty DH 384 ECP
         * 
         * @return builder
         * 
         */
        public Builder groupTwenty(@Nullable Output<Boolean> groupTwenty) {
            $.groupTwenty = groupTwenty;
            return this;
        }

        /**
         * @param groupTwenty DH 384 ECP
         * 
         * @return builder
         * 
         */
        public Builder groupTwenty(Boolean groupTwenty) {
            return groupTwenty(Output.of(groupTwenty));
        }

        /**
         * @param groupTwentyFour DH 2048 (256 subgroup) MODP
         * 
         * @return builder
         * 
         */
        public Builder groupTwentyFour(@Nullable Output<Boolean> groupTwentyFour) {
            $.groupTwentyFour = groupTwentyFour;
            return this;
        }

        /**
         * @param groupTwentyFour DH 2048 (256 subgroup) MODP
         * 
         * @return builder
         * 
         */
        public Builder groupTwentyFour(Boolean groupTwentyFour) {
            return groupTwentyFour(Output.of(groupTwentyFour));
        }

        /**
         * @param groupTwentyOne DH 521 ECP
         * 
         * @return builder
         * 
         */
        public Builder groupTwentyOne(@Nullable Output<Boolean> groupTwentyOne) {
            $.groupTwentyOne = groupTwentyOne;
            return this;
        }

        /**
         * @param groupTwentyOne DH 521 ECP
         * 
         * @return builder
         * 
         */
        public Builder groupTwentyOne(Boolean groupTwentyOne) {
            return groupTwentyOne(Output.of(groupTwentyOne));
        }

        /**
         * @param groupTwo DH 1024 MODP
         * 
         * @return builder
         * 
         */
        public Builder groupTwo(@Nullable Output<Boolean> groupTwo) {
            $.groupTwo = groupTwo;
            return this;
        }

        /**
         * @param groupTwo DH 1024 MODP
         * 
         * @return builder
         * 
         */
        public Builder groupTwo(Boolean groupTwo) {
            return groupTwo(Output.of(groupTwo));
        }

        /**
         * @param integrityMd5 Message Digest 5
         * 
         * @return builder
         * 
         */
        public Builder integrityMd5(@Nullable Output<Boolean> integrityMd5) {
            $.integrityMd5 = integrityMd5;
            return this;
        }

        /**
         * @param integrityMd5 Message Digest 5
         * 
         * @return builder
         * 
         */
        public Builder integrityMd5(Boolean integrityMd5) {
            return integrityMd5(Output.of(integrityMd5));
        }

        /**
         * @param integritySha1 Secure Hash Standard
         * 
         * @return builder
         * 
         */
        public Builder integritySha1(@Nullable Output<Boolean> integritySha1) {
            $.integritySha1 = integritySha1;
            return this;
        }

        /**
         * @param integritySha1 Secure Hash Standard
         * 
         * @return builder
         * 
         */
        public Builder integritySha1(Boolean integritySha1) {
            return integritySha1(Output.of(integritySha1));
        }

        /**
         * @param integritySha256 Secure Hash Standard 2 (256 bit)
         * 
         * @return builder
         * 
         */
        public Builder integritySha256(@Nullable Output<Boolean> integritySha256) {
            $.integritySha256 = integritySha256;
            return this;
        }

        /**
         * @param integritySha256 Secure Hash Standard 2 (256 bit)
         * 
         * @return builder
         * 
         */
        public Builder integritySha256(Boolean integritySha256) {
            return integritySha256(Output.of(integritySha256));
        }

        /**
         * @param integritySha384 Secure Hash Standard 2 (384 bit)
         * 
         * @return builder
         * 
         */
        public Builder integritySha384(@Nullable Output<Boolean> integritySha384) {
            $.integritySha384 = integritySha384;
            return this;
        }

        /**
         * @param integritySha384 Secure Hash Standard 2 (384 bit)
         * 
         * @return builder
         * 
         */
        public Builder integritySha384(Boolean integritySha384) {
            return integritySha384(Output.of(integritySha384));
        }

        /**
         * @param integritySha512 Secure Hash Standard 2 (512 bit)
         * 
         * @return builder
         * 
         */
        public Builder integritySha512(@Nullable Output<Boolean> integritySha512) {
            $.integritySha512 = integritySha512;
            return this;
        }

        /**
         * @param integritySha512 Secure Hash Standard 2 (512 bit)
         * 
         * @return builder
         * 
         */
        public Builder integritySha512(Boolean integritySha512) {
            return integritySha512(Output.of(integritySha512));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param prfMd5 Message Digest 5
         * 
         * @return builder
         * 
         */
        public Builder prfMd5(@Nullable Output<Boolean> prfMd5) {
            $.prfMd5 = prfMd5;
            return this;
        }

        /**
         * @param prfMd5 Message Digest 5
         * 
         * @return builder
         * 
         */
        public Builder prfMd5(Boolean prfMd5) {
            return prfMd5(Output.of(prfMd5));
        }

        /**
         * @param prfSha1 Secure Hash Standard
         * 
         * @return builder
         * 
         */
        public Builder prfSha1(@Nullable Output<Boolean> prfSha1) {
            $.prfSha1 = prfSha1;
            return this;
        }

        /**
         * @param prfSha1 Secure Hash Standard
         * 
         * @return builder
         * 
         */
        public Builder prfSha1(Boolean prfSha1) {
            return prfSha1(Output.of(prfSha1));
        }

        /**
         * @param prfSha256 Secure Hash Standard 2 (256 bit)
         * 
         * @return builder
         * 
         */
        public Builder prfSha256(@Nullable Output<Boolean> prfSha256) {
            $.prfSha256 = prfSha256;
            return this;
        }

        /**
         * @param prfSha256 Secure Hash Standard 2 (256 bit)
         * 
         * @return builder
         * 
         */
        public Builder prfSha256(Boolean prfSha256) {
            return prfSha256(Output.of(prfSha256));
        }

        /**
         * @param prfSha384 Secure Hash Standard 2 (384 bit)
         * 
         * @return builder
         * 
         */
        public Builder prfSha384(@Nullable Output<Boolean> prfSha384) {
            $.prfSha384 = prfSha384;
            return this;
        }

        /**
         * @param prfSha384 Secure Hash Standard 2 (384 bit)
         * 
         * @return builder
         * 
         */
        public Builder prfSha384(Boolean prfSha384) {
            return prfSha384(Output.of(prfSha384));
        }

        /**
         * @param prfSha512 Secure Hash Standard 2 (512 bit)
         * 
         * @return builder
         * 
         */
        public Builder prfSha512(@Nullable Output<Boolean> prfSha512) {
            $.prfSha512 = prfSha512;
            return this;
        }

        /**
         * @param prfSha512 Secure Hash Standard 2 (512 bit)
         * 
         * @return builder
         * 
         */
        public Builder prfSha512(Boolean prfSha512) {
            return prfSha512(Output.of(prfSha512));
        }

        public CryptoIkev2ProposalState build() {
            return $;
        }
    }

}
