// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.iosxe.Utilities;
import com.pulumi.iosxe.iosxe.RadiusArgs;
import com.pulumi.iosxe.iosxe.inputs.RadiusState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage the Radius configuration.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.iosxe.iosxe.Radius;
 * import com.pulumi.iosxe.iosxe.RadiusArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Radius(&#34;example&#34;, RadiusArgs.builder()        
 *             .accountingPort(1812)
 *             .authenticationPort(1813)
 *             .automateTesterIgnoreAcctPort(true)
 *             .automateTesterProbeOnConfig(true)
 *             .automateTesterUsername(&#34;dummy&#34;)
 *             .ipv4Address(&#34;10.10.15.12&#34;)
 *             .key(&#34;123&#34;)
 *             .pacKey(&#34;123&#34;)
 *             .pacKeyEncryption(&#34;0&#34;)
 *             .retransmit(3)
 *             .timeout(4)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import iosxe:iosxe/radius:Radius example &#34;Cisco-IOS-XE-native:native/radius/Cisco-IOS-XE-aaa:server=radius_10.10.15.12&#34;
 * ```
 * 
 */
@ResourceType(type="iosxe:iosxe/radius:Radius")
public class Radius extends com.pulumi.resources.CustomResource {
    /**
     * UDP port for RADIUS accounting server (default is 1813) - Range: `0`-`65534`
     * 
     */
    @Export(name="accountingPort", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> accountingPort;

    /**
     * @return UDP port for RADIUS accounting server (default is 1813) - Range: `0`-`65534`
     * 
     */
    public Output<Optional<Integer>> accountingPort() {
        return Codegen.optional(this.accountingPort);
    }
    /**
     * UDP port for RADIUS authentication server (default is 1812) - Range: `0`-`65534`
     * 
     */
    @Export(name="authenticationPort", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> authenticationPort;

    /**
     * @return UDP port for RADIUS authentication server (default is 1812) - Range: `0`-`65534`
     * 
     */
    public Output<Optional<Integer>> authenticationPort() {
        return Codegen.optional(this.authenticationPort);
    }
    /**
     * Do not test accounting ports of the servers.
     * 
     */
    @Export(name="automateTesterIgnoreAcctPort", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> automateTesterIgnoreAcctPort;

    /**
     * @return Do not test accounting ports of the servers.
     * 
     */
    public Output<Optional<Boolean>> automateTesterIgnoreAcctPort() {
        return Codegen.optional(this.automateTesterIgnoreAcctPort);
    }
    /**
     * Send a packet to verify the server status
     * 
     */
    @Export(name="automateTesterProbeOnConfig", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> automateTesterProbeOnConfig;

    /**
     * @return Send a packet to verify the server status
     * 
     */
    public Output<Optional<Boolean>> automateTesterProbeOnConfig() {
        return Codegen.optional(this.automateTesterProbeOnConfig);
    }
    @Export(name="automateTesterUsername", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> automateTesterUsername;

    public Output<Optional<String>> automateTesterUsername() {
        return Codegen.optional(this.automateTesterUsername);
    }
    /**
     * A device name from the provider configuration.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }
    /**
     * IPv4 address or Hostname for radius server
     * 
     */
    @Export(name="ipv4Address", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipv4Address;

    /**
     * @return IPv4 address or Hostname for radius server
     * 
     */
    public Output<Optional<String>> ipv4Address() {
        return Codegen.optional(this.ipv4Address);
    }
    @Export(name="key", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> key;

    public Output<Optional<String>> key() {
        return Codegen.optional(this.key);
    }
    /**
     * Name for the radius server configuration
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name for the radius server configuration
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The UNENCRYPTED (cleartext) server key
     * 
     */
    @Export(name="pacKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pacKey;

    /**
     * @return The UNENCRYPTED (cleartext) server key
     * 
     */
    public Output<Optional<String>> pacKey() {
        return Codegen.optional(this.pacKey);
    }
    /**
     * 0 - Specifies an UNENCRYPTED key will follow 6 - Specifies an ENCRYPTED key will follow 7 - Specifies HIDDEN key will
     * follow - Choices: `0`, `6`, `7`
     * 
     */
    @Export(name="pacKeyEncryption", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pacKeyEncryption;

    /**
     * @return 0 - Specifies an UNENCRYPTED key will follow 6 - Specifies an ENCRYPTED key will follow 7 - Specifies HIDDEN key will
     * follow - Choices: `0`, `6`, `7`
     * 
     */
    public Output<Optional<String>> pacKeyEncryption() {
        return Codegen.optional(this.pacKeyEncryption);
    }
    /**
     * Number of retries to active server (overrides default) - Range: `0`-`100`
     * 
     */
    @Export(name="retransmit", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> retransmit;

    /**
     * @return Number of retries to active server (overrides default) - Range: `0`-`100`
     * 
     */
    public Output<Optional<Integer>> retransmit() {
        return Codegen.optional(this.retransmit);
    }
    /**
     * Time to wait for a RADIUS server to reply (overrides default) - Range: `1`-`1000`
     * 
     */
    @Export(name="timeout", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> timeout;

    /**
     * @return Time to wait for a RADIUS server to reply (overrides default) - Range: `1`-`1000`
     * 
     */
    public Output<Optional<Integer>> timeout() {
        return Codegen.optional(this.timeout);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Radius(String name) {
        this(name, RadiusArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Radius(String name, @Nullable RadiusArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Radius(String name, @Nullable RadiusArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/radius:Radius", name, args == null ? RadiusArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Radius(String name, Output<String> id, @Nullable RadiusState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/radius:Radius", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Radius get(String name, Output<String> id, @Nullable RadiusState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Radius(name, id, state, options);
    }
}
