// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.iosxe.iosxe.inputs.SnmpServerGroupV3SecurityArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SnmpServerGroupState extends com.pulumi.resources.ResourceArgs {

    public static final SnmpServerGroupState Empty = new SnmpServerGroupState();

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * group using security Level
     * 
     */
    @Import(name="v3Securities")
    private @Nullable Output<List<SnmpServerGroupV3SecurityArgs>> v3Securities;

    /**
     * @return group using security Level
     * 
     */
    public Optional<Output<List<SnmpServerGroupV3SecurityArgs>>> v3Securities() {
        return Optional.ofNullable(this.v3Securities);
    }

    private SnmpServerGroupState() {}

    private SnmpServerGroupState(SnmpServerGroupState $) {
        this.device = $.device;
        this.name = $.name;
        this.v3Securities = $.v3Securities;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SnmpServerGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SnmpServerGroupState $;

        public Builder() {
            $ = new SnmpServerGroupState();
        }

        public Builder(SnmpServerGroupState defaults) {
            $ = new SnmpServerGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param v3Securities group using security Level
         * 
         * @return builder
         * 
         */
        public Builder v3Securities(@Nullable Output<List<SnmpServerGroupV3SecurityArgs>> v3Securities) {
            $.v3Securities = v3Securities;
            return this;
        }

        /**
         * @param v3Securities group using security Level
         * 
         * @return builder
         * 
         */
        public Builder v3Securities(List<SnmpServerGroupV3SecurityArgs> v3Securities) {
            return v3Securities(Output.of(v3Securities));
        }

        /**
         * @param v3Securities group using security Level
         * 
         * @return builder
         * 
         */
        public Builder v3Securities(SnmpServerGroupV3SecurityArgs... v3Securities) {
            return v3Securities(List.of(v3Securities));
        }

        public SnmpServerGroupState build() {
            return $;
        }
    }

}
