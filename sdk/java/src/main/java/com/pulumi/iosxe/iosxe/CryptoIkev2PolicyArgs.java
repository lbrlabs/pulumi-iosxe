// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.iosxe.iosxe.inputs.CryptoIkev2PolicyProposalArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CryptoIkev2PolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final CryptoIkev2PolicyArgs Empty = new CryptoIkev2PolicyArgs();

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * Local address
     * 
     */
    @Import(name="matchAddressLocalIps")
    private @Nullable Output<List<String>> matchAddressLocalIps;

    /**
     * @return Local address
     * 
     */
    public Optional<Output<List<String>>> matchAddressLocalIps() {
        return Optional.ofNullable(this.matchAddressLocalIps);
    }

    @Import(name="matchFvrf")
    private @Nullable Output<String> matchFvrf;

    public Optional<Output<String>> matchFvrf() {
        return Optional.ofNullable(this.matchFvrf);
    }

    /**
     * Any fvrf
     * 
     */
    @Import(name="matchFvrfAny")
    private @Nullable Output<Boolean> matchFvrfAny;

    /**
     * @return Any fvrf
     * 
     */
    public Optional<Output<Boolean>> matchFvrfAny() {
        return Optional.ofNullable(this.matchFvrfAny);
    }

    /**
     * inbound only for controller
     * 
     */
    @Import(name="matchInboundOnly")
    private @Nullable Output<Boolean> matchInboundOnly;

    /**
     * @return inbound only for controller
     * 
     */
    public Optional<Output<Boolean>> matchInboundOnly() {
        return Optional.ofNullable(this.matchInboundOnly);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specify Proposal
     * 
     */
    @Import(name="proposals", required=true)
    private Output<List<CryptoIkev2PolicyProposalArgs>> proposals;

    /**
     * @return Specify Proposal
     * 
     */
    public Output<List<CryptoIkev2PolicyProposalArgs>> proposals() {
        return this.proposals;
    }

    private CryptoIkev2PolicyArgs() {}

    private CryptoIkev2PolicyArgs(CryptoIkev2PolicyArgs $) {
        this.device = $.device;
        this.matchAddressLocalIps = $.matchAddressLocalIps;
        this.matchFvrf = $.matchFvrf;
        this.matchFvrfAny = $.matchFvrfAny;
        this.matchInboundOnly = $.matchInboundOnly;
        this.name = $.name;
        this.proposals = $.proposals;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CryptoIkev2PolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CryptoIkev2PolicyArgs $;

        public Builder() {
            $ = new CryptoIkev2PolicyArgs();
        }

        public Builder(CryptoIkev2PolicyArgs defaults) {
            $ = new CryptoIkev2PolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param matchAddressLocalIps Local address
         * 
         * @return builder
         * 
         */
        public Builder matchAddressLocalIps(@Nullable Output<List<String>> matchAddressLocalIps) {
            $.matchAddressLocalIps = matchAddressLocalIps;
            return this;
        }

        /**
         * @param matchAddressLocalIps Local address
         * 
         * @return builder
         * 
         */
        public Builder matchAddressLocalIps(List<String> matchAddressLocalIps) {
            return matchAddressLocalIps(Output.of(matchAddressLocalIps));
        }

        /**
         * @param matchAddressLocalIps Local address
         * 
         * @return builder
         * 
         */
        public Builder matchAddressLocalIps(String... matchAddressLocalIps) {
            return matchAddressLocalIps(List.of(matchAddressLocalIps));
        }

        public Builder matchFvrf(@Nullable Output<String> matchFvrf) {
            $.matchFvrf = matchFvrf;
            return this;
        }

        public Builder matchFvrf(String matchFvrf) {
            return matchFvrf(Output.of(matchFvrf));
        }

        /**
         * @param matchFvrfAny Any fvrf
         * 
         * @return builder
         * 
         */
        public Builder matchFvrfAny(@Nullable Output<Boolean> matchFvrfAny) {
            $.matchFvrfAny = matchFvrfAny;
            return this;
        }

        /**
         * @param matchFvrfAny Any fvrf
         * 
         * @return builder
         * 
         */
        public Builder matchFvrfAny(Boolean matchFvrfAny) {
            return matchFvrfAny(Output.of(matchFvrfAny));
        }

        /**
         * @param matchInboundOnly inbound only for controller
         * 
         * @return builder
         * 
         */
        public Builder matchInboundOnly(@Nullable Output<Boolean> matchInboundOnly) {
            $.matchInboundOnly = matchInboundOnly;
            return this;
        }

        /**
         * @param matchInboundOnly inbound only for controller
         * 
         * @return builder
         * 
         */
        public Builder matchInboundOnly(Boolean matchInboundOnly) {
            return matchInboundOnly(Output.of(matchInboundOnly));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param proposals Specify Proposal
         * 
         * @return builder
         * 
         */
        public Builder proposals(Output<List<CryptoIkev2PolicyProposalArgs>> proposals) {
            $.proposals = proposals;
            return this;
        }

        /**
         * @param proposals Specify Proposal
         * 
         * @return builder
         * 
         */
        public Builder proposals(List<CryptoIkev2PolicyProposalArgs> proposals) {
            return proposals(Output.of(proposals));
        }

        /**
         * @param proposals Specify Proposal
         * 
         * @return builder
         * 
         */
        public Builder proposals(CryptoIkev2PolicyProposalArgs... proposals) {
            return proposals(List.of(proposals));
        }

        public CryptoIkev2PolicyArgs build() {
            $.proposals = Objects.requireNonNull($.proposals, "expected parameter 'proposals' to be non-null");
            return $;
        }
    }

}
