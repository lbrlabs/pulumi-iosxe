// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPimRpAddress {
    /**
     * @return IP Access-list
     * 
     */
    private String accessList;
    /**
     * @return Group range treated in bidirectional shared-tree mode
     * 
     */
    private Boolean bidir;
    /**
     * @return Overrides dynamically learnt RP mappings
     * 
     */
    private Boolean override;
    /**
     * @return IP address of Rendezvous-point for group
     * 
     */
    private String rpAddress;

    private GetPimRpAddress() {}
    /**
     * @return IP Access-list
     * 
     */
    public String accessList() {
        return this.accessList;
    }
    /**
     * @return Group range treated in bidirectional shared-tree mode
     * 
     */
    public Boolean bidir() {
        return this.bidir;
    }
    /**
     * @return Overrides dynamically learnt RP mappings
     * 
     */
    public Boolean override() {
        return this.override;
    }
    /**
     * @return IP address of Rendezvous-point for group
     * 
     */
    public String rpAddress() {
        return this.rpAddress;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPimRpAddress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessList;
        private Boolean bidir;
        private Boolean override;
        private String rpAddress;
        public Builder() {}
        public Builder(GetPimRpAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessList = defaults.accessList;
    	      this.bidir = defaults.bidir;
    	      this.override = defaults.override;
    	      this.rpAddress = defaults.rpAddress;
        }

        @CustomType.Setter
        public Builder accessList(String accessList) {
            this.accessList = Objects.requireNonNull(accessList);
            return this;
        }
        @CustomType.Setter
        public Builder bidir(Boolean bidir) {
            this.bidir = Objects.requireNonNull(bidir);
            return this;
        }
        @CustomType.Setter
        public Builder override(Boolean override) {
            this.override = Objects.requireNonNull(override);
            return this;
        }
        @CustomType.Setter
        public Builder rpAddress(String rpAddress) {
            this.rpAddress = Objects.requireNonNull(rpAddress);
            return this;
        }
        public GetPimRpAddress build() {
            final var o = new GetPimRpAddress();
            o.accessList = accessList;
            o.bidir = bidir;
            o.override = override;
            o.rpAddress = rpAddress;
            return o;
        }
    }
}
