// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CryptoIkev2Args extends com.pulumi.resources.ResourceArgs {

    public static final CryptoIkev2Args Empty = new CryptoIkev2Args();

    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    @Import(name="deleteMode")
    private @Nullable Output<String> deleteMode;

    /**
     * @return Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    public Optional<Output<String>> deleteMode() {
        return Optional.ofNullable(this.deleteMode);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * Enable IKE liveness check for peers - Range: `10`-`3600`
     * 
     */
    @Import(name="dpd")
    private @Nullable Output<Integer> dpd;

    /**
     * @return Enable IKE liveness check for peers - Range: `10`-`3600`
     * 
     */
    public Optional<Output<Integer>> dpd() {
        return Optional.ofNullable(this.dpd);
    }

    /**
     * - Choices: `on-demand`, `periodic`
     * 
     */
    @Import(name="dpdQuery")
    private @Nullable Output<String> dpdQuery;

    /**
     * @return - Choices: `on-demand`, `periodic`
     * 
     */
    public Optional<Output<String>> dpdQuery() {
        return Optional.ofNullable(this.dpdQuery);
    }

    /**
     * - Range: `2`-`60`
     * 
     */
    @Import(name="dpdRetryInterval")
    private @Nullable Output<Integer> dpdRetryInterval;

    /**
     * @return - Range: `2`-`60`
     * 
     */
    public Optional<Output<Integer>> dpdRetryInterval() {
        return Optional.ofNullable(this.dpdRetryInterval);
    }

    /**
     * Set NAT keepalive interval - Range: `5`-`3600`
     * 
     */
    @Import(name="natKeepalive")
    private @Nullable Output<Integer> natKeepalive;

    /**
     * @return Set NAT keepalive interval - Range: `5`-`3600`
     * 
     */
    public Optional<Output<Integer>> natKeepalive() {
        return Optional.ofNullable(this.natKeepalive);
    }

    private CryptoIkev2Args() {}

    private CryptoIkev2Args(CryptoIkev2Args $) {
        this.deleteMode = $.deleteMode;
        this.device = $.device;
        this.dpd = $.dpd;
        this.dpdQuery = $.dpdQuery;
        this.dpdRetryInterval = $.dpdRetryInterval;
        this.natKeepalive = $.natKeepalive;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CryptoIkev2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CryptoIkev2Args $;

        public Builder() {
            $ = new CryptoIkev2Args();
        }

        public Builder(CryptoIkev2Args defaults) {
            $ = new CryptoIkev2Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param deleteMode Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
         * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
         * Default value is `all`. - Choices: `all`, `attributes`
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(@Nullable Output<String> deleteMode) {
            $.deleteMode = deleteMode;
            return this;
        }

        /**
         * @param deleteMode Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
         * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
         * Default value is `all`. - Choices: `all`, `attributes`
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(String deleteMode) {
            return deleteMode(Output.of(deleteMode));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param dpd Enable IKE liveness check for peers - Range: `10`-`3600`
         * 
         * @return builder
         * 
         */
        public Builder dpd(@Nullable Output<Integer> dpd) {
            $.dpd = dpd;
            return this;
        }

        /**
         * @param dpd Enable IKE liveness check for peers - Range: `10`-`3600`
         * 
         * @return builder
         * 
         */
        public Builder dpd(Integer dpd) {
            return dpd(Output.of(dpd));
        }

        /**
         * @param dpdQuery - Choices: `on-demand`, `periodic`
         * 
         * @return builder
         * 
         */
        public Builder dpdQuery(@Nullable Output<String> dpdQuery) {
            $.dpdQuery = dpdQuery;
            return this;
        }

        /**
         * @param dpdQuery - Choices: `on-demand`, `periodic`
         * 
         * @return builder
         * 
         */
        public Builder dpdQuery(String dpdQuery) {
            return dpdQuery(Output.of(dpdQuery));
        }

        /**
         * @param dpdRetryInterval - Range: `2`-`60`
         * 
         * @return builder
         * 
         */
        public Builder dpdRetryInterval(@Nullable Output<Integer> dpdRetryInterval) {
            $.dpdRetryInterval = dpdRetryInterval;
            return this;
        }

        /**
         * @param dpdRetryInterval - Range: `2`-`60`
         * 
         * @return builder
         * 
         */
        public Builder dpdRetryInterval(Integer dpdRetryInterval) {
            return dpdRetryInterval(Output.of(dpdRetryInterval));
        }

        /**
         * @param natKeepalive Set NAT keepalive interval - Range: `5`-`3600`
         * 
         * @return builder
         * 
         */
        public Builder natKeepalive(@Nullable Output<Integer> natKeepalive) {
            $.natKeepalive = natKeepalive;
            return this;
        }

        /**
         * @param natKeepalive Set NAT keepalive interval - Range: `5`-`3600`
         * 
         * @return builder
         * 
         */
        public Builder natKeepalive(Integer natKeepalive) {
            return natKeepalive(Output.of(natKeepalive));
        }

        public CryptoIkev2Args build() {
            return $;
        }
    }

}
