// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.iosxe.Utilities;
import com.pulumi.iosxe.iosxe.RadiusServerArgs;
import com.pulumi.iosxe.iosxe.inputs.RadiusServerState;
import com.pulumi.iosxe.iosxe.outputs.RadiusServerAttribute;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="iosxe:iosxe/radiusServer:RadiusServer")
public class RadiusServer extends com.pulumi.resources.CustomResource {
    /**
     * Customize selected radius attributes
     * 
     */
    @Export(name="attributes", refs={List.class,RadiusServerAttribute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RadiusServerAttribute>> attributes;

    /**
     * @return Customize selected radius attributes
     * 
     */
    public Output<Optional<List<RadiusServerAttribute>>> attributes() {
        return Codegen.optional(this.attributes);
    }
    /**
     * The time during which no properly formed response must be received from the RADIUS server - Range: `1`-`120`
     * 
     */
    @Export(name="deadCriteriaTime", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> deadCriteriaTime;

    /**
     * @return The time during which no properly formed response must be received from the RADIUS server - Range: `1`-`120`
     * 
     */
    public Output<Optional<Integer>> deadCriteriaTime() {
        return Codegen.optional(this.deadCriteriaTime);
    }
    /**
     * The number of times the router must fail to receive a response from the radius server to mark it as dead - Range:
     * `1`-`100`
     * 
     */
    @Export(name="deadCriteriaTries", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> deadCriteriaTries;

    /**
     * @return The number of times the router must fail to receive a response from the radius server to mark it as dead - Range:
     * `1`-`100`
     * 
     */
    public Output<Optional<Integer>> deadCriteriaTries() {
        return Codegen.optional(this.deadCriteriaTries);
    }
    /**
     * Time to stop using a server that does not respond - Range: `1`-`1440`
     * 
     */
    @Export(name="deadtime", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> deadtime;

    /**
     * @return Time to stop using a server that does not respond - Range: `1`-`1440`
     * 
     */
    public Output<Optional<Integer>> deadtime() {
        return Codegen.optional(this.deadtime);
    }
    /**
     * A device name from the provider configuration.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RadiusServer(String name) {
        this(name, RadiusServerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RadiusServer(String name, @Nullable RadiusServerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RadiusServer(String name, @Nullable RadiusServerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/radiusServer:RadiusServer", name, args == null ? RadiusServerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RadiusServer(String name, Output<String> id, @Nullable RadiusServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/radiusServer:RadiusServer", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RadiusServer get(String name, Output<String> id, @Nullable RadiusServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RadiusServer(name, id, state, options);
    }
}
