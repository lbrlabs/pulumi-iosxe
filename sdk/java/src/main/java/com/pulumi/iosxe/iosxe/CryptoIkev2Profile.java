// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.iosxe.Utilities;
import com.pulumi.iosxe.iosxe.CryptoIkev2ProfileArgs;
import com.pulumi.iosxe.iosxe.inputs.CryptoIkev2ProfileState;
import com.pulumi.iosxe.iosxe.outputs.CryptoIkev2ProfileMatchIdentityRemoteIpv4Address;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage the Crypto IKEv2 Profile configuration.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.iosxe.iosxe.CryptoIkev2Profile;
 * import com.pulumi.iosxe.iosxe.CryptoIkev2ProfileArgs;
 * import com.pulumi.iosxe.iosxe.inputs.CryptoIkev2ProfileMatchIdentityRemoteIpv4AddressArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new CryptoIkev2Profile(&#34;example&#34;, CryptoIkev2ProfileArgs.builder()        
 *             .authenticationLocalPreShare(true)
 *             .authenticationRemotePreShare(true)
 *             .configExchangeRequest(false)
 *             .description(&#34;My description&#34;)
 *             .dpdInterval(10)
 *             .dpdQuery(&#34;periodic&#34;)
 *             .dpdRetry(2)
 *             .identityLocalKeyId(&#34;key1&#34;)
 *             .keyringLocal(&#34;test&#34;)
 *             .matchAddressLocalIp(&#34;1.2.3.4&#34;)
 *             .matchFvrfAny(true)
 *             .matchIdentityRemoteIpv4Addresses(CryptoIkev2ProfileMatchIdentityRemoteIpv4AddressArgs.builder()
 *                 .address(&#34;1.2.3.4&#34;)
 *                 .mask(&#34;255.255.255.0&#34;)
 *                 .build())
 *             .matchIdentityRemoteKeys(&#34;key1&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import iosxe:iosxe/cryptoIkev2Profile:CryptoIkev2Profile example &#34;Cisco-IOS-XE-native:native/crypto/Cisco-IOS-XE-crypto:ikev2/profile=profile1&#34;
 * ```
 * 
 */
@ResourceType(type="iosxe:iosxe/cryptoIkev2Profile:CryptoIkev2Profile")
public class CryptoIkev2Profile extends com.pulumi.resources.CustomResource {
    /**
     * Pre-Shared Key
     * 
     */
    @Export(name="authenticationLocalPreShare", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> authenticationLocalPreShare;

    /**
     * @return Pre-Shared Key
     * 
     */
    public Output<Optional<Boolean>> authenticationLocalPreShare() {
        return Codegen.optional(this.authenticationLocalPreShare);
    }
    /**
     * Pre-Shared Key
     * 
     */
    @Export(name="authenticationRemotePreShare", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> authenticationRemotePreShare;

    /**
     * @return Pre-Shared Key
     * 
     */
    public Output<Optional<Boolean>> authenticationRemotePreShare() {
        return Codegen.optional(this.authenticationRemotePreShare);
    }
    /**
     * enable config-exchange request
     * 
     */
    @Export(name="configExchangeRequest", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> configExchangeRequest;

    /**
     * @return enable config-exchange request
     * 
     */
    public Output<Optional<Boolean>> configExchangeRequest() {
        return Codegen.optional(this.configExchangeRequest);
    }
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    @Export(name="deleteMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deleteMode;

    /**
     * @return Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    public Output<Optional<String>> deleteMode() {
        return Codegen.optional(this.deleteMode);
    }
    /**
     * Specify a description of this profile
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Specify a description of this profile
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A device name from the provider configuration.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }
    /**
     * - Range: `10`-`3600`
     * 
     */
    @Export(name="dpdInterval", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> dpdInterval;

    /**
     * @return - Range: `10`-`3600`
     * 
     */
    public Output<Optional<Integer>> dpdInterval() {
        return Codegen.optional(this.dpdInterval);
    }
    /**
     * - Choices: `on-demand`, `periodic`
     * 
     */
    @Export(name="dpdQuery", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dpdQuery;

    /**
     * @return - Choices: `on-demand`, `periodic`
     * 
     */
    public Output<Optional<String>> dpdQuery() {
        return Codegen.optional(this.dpdQuery);
    }
    /**
     * - Range: `2`-`60`
     * 
     */
    @Export(name="dpdRetry", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> dpdRetry;

    /**
     * @return - Range: `2`-`60`
     * 
     */
    public Output<Optional<Integer>> dpdRetry() {
        return Codegen.optional(this.dpdRetry);
    }
    /**
     * address
     * 
     */
    @Export(name="identityLocalAddress", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> identityLocalAddress;

    /**
     * @return address
     * 
     */
    public Output<Optional<String>> identityLocalAddress() {
        return Codegen.optional(this.identityLocalAddress);
    }
    /**
     * key-id opaque string - proprietary types of identification key-id string
     * 
     */
    @Export(name="identityLocalKeyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> identityLocalKeyId;

    /**
     * @return key-id opaque string - proprietary types of identification key-id string
     * 
     */
    public Output<Optional<String>> identityLocalKeyId() {
        return Codegen.optional(this.identityLocalKeyId);
    }
    /**
     * Keyring name
     * 
     */
    @Export(name="keyringLocal", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keyringLocal;

    /**
     * @return Keyring name
     * 
     */
    public Output<Optional<String>> keyringLocal() {
        return Codegen.optional(this.keyringLocal);
    }
    @Export(name="matchAddressLocalIp", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> matchAddressLocalIp;

    public Output<Optional<String>> matchAddressLocalIp() {
        return Codegen.optional(this.matchAddressLocalIp);
    }
    @Export(name="matchFvrf", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> matchFvrf;

    public Output<Optional<String>> matchFvrf() {
        return Codegen.optional(this.matchFvrf);
    }
    /**
     * Any fvrf
     * 
     */
    @Export(name="matchFvrfAny", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> matchFvrfAny;

    /**
     * @return Any fvrf
     * 
     */
    public Output<Optional<Boolean>> matchFvrfAny() {
        return Codegen.optional(this.matchFvrfAny);
    }
    @Export(name="matchIdentityRemoteIpv4Addresses", refs={List.class,CryptoIkev2ProfileMatchIdentityRemoteIpv4Address.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CryptoIkev2ProfileMatchIdentityRemoteIpv4Address>> matchIdentityRemoteIpv4Addresses;

    public Output<Optional<List<CryptoIkev2ProfileMatchIdentityRemoteIpv4Address>>> matchIdentityRemoteIpv4Addresses() {
        return Codegen.optional(this.matchIdentityRemoteIpv4Addresses);
    }
    @Export(name="matchIdentityRemoteIpv6Prefixes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> matchIdentityRemoteIpv6Prefixes;

    public Output<Optional<List<String>>> matchIdentityRemoteIpv6Prefixes() {
        return Codegen.optional(this.matchIdentityRemoteIpv6Prefixes);
    }
    /**
     * key-id opaque string
     * 
     */
    @Export(name="matchIdentityRemoteKeys", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> matchIdentityRemoteKeys;

    /**
     * @return key-id opaque string
     * 
     */
    public Output<Optional<List<String>>> matchIdentityRemoteKeys() {
        return Codegen.optional(this.matchIdentityRemoteKeys);
    }
    /**
     * Match the profile for incoming connections only
     * 
     */
    @Export(name="matchInboundOnly", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> matchInboundOnly;

    /**
     * @return Match the profile for incoming connections only
     * 
     */
    public Output<Optional<Boolean>> matchInboundOnly() {
        return Codegen.optional(this.matchInboundOnly);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CryptoIkev2Profile(String name) {
        this(name, CryptoIkev2ProfileArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CryptoIkev2Profile(String name, @Nullable CryptoIkev2ProfileArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CryptoIkev2Profile(String name, @Nullable CryptoIkev2ProfileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/cryptoIkev2Profile:CryptoIkev2Profile", name, args == null ? CryptoIkev2ProfileArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CryptoIkev2Profile(String name, Output<String> id, @Nullable CryptoIkev2ProfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/cryptoIkev2Profile:CryptoIkev2Profile", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CryptoIkev2Profile get(String name, Output<String> id, @Nullable CryptoIkev2ProfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CryptoIkev2Profile(name, id, state, options);
    }
}
