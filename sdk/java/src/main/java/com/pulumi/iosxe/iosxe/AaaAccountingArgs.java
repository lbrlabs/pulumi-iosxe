// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.iosxe.iosxe.inputs.AaaAccountingExecArgs;
import com.pulumi.iosxe.iosxe.inputs.AaaAccountingNetworkArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AaaAccountingArgs extends com.pulumi.resources.ResourceArgs {

    public static final AaaAccountingArgs Empty = new AaaAccountingArgs();

    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    @Import(name="deleteMode")
    private @Nullable Output<String> deleteMode;

    /**
     * @return Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    public Optional<Output<String>> deleteMode() {
        return Optional.ofNullable(this.deleteMode);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * For starting an exec (shell).
     * 
     */
    @Import(name="execs")
    private @Nullable Output<List<AaaAccountingExecArgs>> execs;

    /**
     * @return For starting an exec (shell).
     * 
     */
    public Optional<Output<List<AaaAccountingExecArgs>>> execs() {
        return Optional.ofNullable(this.execs);
    }

    /**
     * Use Server-group
     * 
     */
    @Import(name="identityDefaultStartStopGroup1")
    private @Nullable Output<String> identityDefaultStartStopGroup1;

    /**
     * @return Use Server-group
     * 
     */
    public Optional<Output<String>> identityDefaultStartStopGroup1() {
        return Optional.ofNullable(this.identityDefaultStartStopGroup1);
    }

    /**
     * Use Server-group
     * 
     */
    @Import(name="identityDefaultStartStopGroup2")
    private @Nullable Output<String> identityDefaultStartStopGroup2;

    /**
     * @return Use Server-group
     * 
     */
    public Optional<Output<String>> identityDefaultStartStopGroup2() {
        return Optional.ofNullable(this.identityDefaultStartStopGroup2);
    }

    /**
     * Use Server-group
     * 
     */
    @Import(name="identityDefaultStartStopGroup3")
    private @Nullable Output<String> identityDefaultStartStopGroup3;

    /**
     * @return Use Server-group
     * 
     */
    public Optional<Output<String>> identityDefaultStartStopGroup3() {
        return Optional.ofNullable(this.identityDefaultStartStopGroup3);
    }

    /**
     * Use Server-group
     * 
     */
    @Import(name="identityDefaultStartStopGroup4")
    private @Nullable Output<String> identityDefaultStartStopGroup4;

    /**
     * @return Use Server-group
     * 
     */
    public Optional<Output<String>> identityDefaultStartStopGroup4() {
        return Optional.ofNullable(this.identityDefaultStartStopGroup4);
    }

    /**
     * For network services. (PPP, SLIP, ARAP)
     * 
     */
    @Import(name="networks")
    private @Nullable Output<List<AaaAccountingNetworkArgs>> networks;

    /**
     * @return For network services. (PPP, SLIP, ARAP)
     * 
     */
    public Optional<Output<List<AaaAccountingNetworkArgs>>> networks() {
        return Optional.ofNullable(this.networks);
    }

    /**
     * Guarantee system accounting as first record.
     * 
     */
    @Import(name="systemGuaranteeFirst")
    private @Nullable Output<Boolean> systemGuaranteeFirst;

    /**
     * @return Guarantee system accounting as first record.
     * 
     */
    public Optional<Output<Boolean>> systemGuaranteeFirst() {
        return Optional.ofNullable(this.systemGuaranteeFirst);
    }

    /**
     * Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
     * 
     */
    @Import(name="updateNewinfoPeriodic")
    private @Nullable Output<Integer> updateNewinfoPeriodic;

    /**
     * @return Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
     * 
     */
    public Optional<Output<Integer>> updateNewinfoPeriodic() {
        return Optional.ofNullable(this.updateNewinfoPeriodic);
    }

    private AaaAccountingArgs() {}

    private AaaAccountingArgs(AaaAccountingArgs $) {
        this.deleteMode = $.deleteMode;
        this.device = $.device;
        this.execs = $.execs;
        this.identityDefaultStartStopGroup1 = $.identityDefaultStartStopGroup1;
        this.identityDefaultStartStopGroup2 = $.identityDefaultStartStopGroup2;
        this.identityDefaultStartStopGroup3 = $.identityDefaultStartStopGroup3;
        this.identityDefaultStartStopGroup4 = $.identityDefaultStartStopGroup4;
        this.networks = $.networks;
        this.systemGuaranteeFirst = $.systemGuaranteeFirst;
        this.updateNewinfoPeriodic = $.updateNewinfoPeriodic;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AaaAccountingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AaaAccountingArgs $;

        public Builder() {
            $ = new AaaAccountingArgs();
        }

        public Builder(AaaAccountingArgs defaults) {
            $ = new AaaAccountingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deleteMode Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
         * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
         * Default value is `all`. - Choices: `all`, `attributes`
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(@Nullable Output<String> deleteMode) {
            $.deleteMode = deleteMode;
            return this;
        }

        /**
         * @param deleteMode Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
         * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
         * Default value is `all`. - Choices: `all`, `attributes`
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(String deleteMode) {
            return deleteMode(Output.of(deleteMode));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param execs For starting an exec (shell).
         * 
         * @return builder
         * 
         */
        public Builder execs(@Nullable Output<List<AaaAccountingExecArgs>> execs) {
            $.execs = execs;
            return this;
        }

        /**
         * @param execs For starting an exec (shell).
         * 
         * @return builder
         * 
         */
        public Builder execs(List<AaaAccountingExecArgs> execs) {
            return execs(Output.of(execs));
        }

        /**
         * @param execs For starting an exec (shell).
         * 
         * @return builder
         * 
         */
        public Builder execs(AaaAccountingExecArgs... execs) {
            return execs(List.of(execs));
        }

        /**
         * @param identityDefaultStartStopGroup1 Use Server-group
         * 
         * @return builder
         * 
         */
        public Builder identityDefaultStartStopGroup1(@Nullable Output<String> identityDefaultStartStopGroup1) {
            $.identityDefaultStartStopGroup1 = identityDefaultStartStopGroup1;
            return this;
        }

        /**
         * @param identityDefaultStartStopGroup1 Use Server-group
         * 
         * @return builder
         * 
         */
        public Builder identityDefaultStartStopGroup1(String identityDefaultStartStopGroup1) {
            return identityDefaultStartStopGroup1(Output.of(identityDefaultStartStopGroup1));
        }

        /**
         * @param identityDefaultStartStopGroup2 Use Server-group
         * 
         * @return builder
         * 
         */
        public Builder identityDefaultStartStopGroup2(@Nullable Output<String> identityDefaultStartStopGroup2) {
            $.identityDefaultStartStopGroup2 = identityDefaultStartStopGroup2;
            return this;
        }

        /**
         * @param identityDefaultStartStopGroup2 Use Server-group
         * 
         * @return builder
         * 
         */
        public Builder identityDefaultStartStopGroup2(String identityDefaultStartStopGroup2) {
            return identityDefaultStartStopGroup2(Output.of(identityDefaultStartStopGroup2));
        }

        /**
         * @param identityDefaultStartStopGroup3 Use Server-group
         * 
         * @return builder
         * 
         */
        public Builder identityDefaultStartStopGroup3(@Nullable Output<String> identityDefaultStartStopGroup3) {
            $.identityDefaultStartStopGroup3 = identityDefaultStartStopGroup3;
            return this;
        }

        /**
         * @param identityDefaultStartStopGroup3 Use Server-group
         * 
         * @return builder
         * 
         */
        public Builder identityDefaultStartStopGroup3(String identityDefaultStartStopGroup3) {
            return identityDefaultStartStopGroup3(Output.of(identityDefaultStartStopGroup3));
        }

        /**
         * @param identityDefaultStartStopGroup4 Use Server-group
         * 
         * @return builder
         * 
         */
        public Builder identityDefaultStartStopGroup4(@Nullable Output<String> identityDefaultStartStopGroup4) {
            $.identityDefaultStartStopGroup4 = identityDefaultStartStopGroup4;
            return this;
        }

        /**
         * @param identityDefaultStartStopGroup4 Use Server-group
         * 
         * @return builder
         * 
         */
        public Builder identityDefaultStartStopGroup4(String identityDefaultStartStopGroup4) {
            return identityDefaultStartStopGroup4(Output.of(identityDefaultStartStopGroup4));
        }

        /**
         * @param networks For network services. (PPP, SLIP, ARAP)
         * 
         * @return builder
         * 
         */
        public Builder networks(@Nullable Output<List<AaaAccountingNetworkArgs>> networks) {
            $.networks = networks;
            return this;
        }

        /**
         * @param networks For network services. (PPP, SLIP, ARAP)
         * 
         * @return builder
         * 
         */
        public Builder networks(List<AaaAccountingNetworkArgs> networks) {
            return networks(Output.of(networks));
        }

        /**
         * @param networks For network services. (PPP, SLIP, ARAP)
         * 
         * @return builder
         * 
         */
        public Builder networks(AaaAccountingNetworkArgs... networks) {
            return networks(List.of(networks));
        }

        /**
         * @param systemGuaranteeFirst Guarantee system accounting as first record.
         * 
         * @return builder
         * 
         */
        public Builder systemGuaranteeFirst(@Nullable Output<Boolean> systemGuaranteeFirst) {
            $.systemGuaranteeFirst = systemGuaranteeFirst;
            return this;
        }

        /**
         * @param systemGuaranteeFirst Guarantee system accounting as first record.
         * 
         * @return builder
         * 
         */
        public Builder systemGuaranteeFirst(Boolean systemGuaranteeFirst) {
            return systemGuaranteeFirst(Output.of(systemGuaranteeFirst));
        }

        /**
         * @param updateNewinfoPeriodic Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
         * 
         * @return builder
         * 
         */
        public Builder updateNewinfoPeriodic(@Nullable Output<Integer> updateNewinfoPeriodic) {
            $.updateNewinfoPeriodic = updateNewinfoPeriodic;
            return this;
        }

        /**
         * @param updateNewinfoPeriodic Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
         * 
         * @return builder
         * 
         */
        public Builder updateNewinfoPeriodic(Integer updateNewinfoPeriodic) {
            return updateNewinfoPeriodic(Output.of(updateNewinfoPeriodic));
        }

        public AaaAccountingArgs build() {
            return $;
        }
    }

}
