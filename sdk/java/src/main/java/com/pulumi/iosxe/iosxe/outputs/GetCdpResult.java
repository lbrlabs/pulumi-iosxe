// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.iosxe.iosxe.outputs.GetCdpTlvList;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCdpResult {
    /**
     * @return A device name from the provider configuration.
     * 
     */
    private @Nullable String device;
    /**
     * @return Apply tlv-list globally
     * 
     */
    private String filterTlvList;
    /**
     * @return Specify the holdtime (in sec) to be sent in packets
     * 
     */
    private Integer holdtime;
    /**
     * @return The path of the retrieved object.
     * 
     */
    private String id;
    /**
     * @return Enable CDP
     * 
     */
    private Boolean run;
    /**
     * @return Specify the rate at which CDP packets are sent (in sec)
     * 
     */
    private Integer timer;
    /**
     * @return Configure tlv-list
     * 
     */
    private List<GetCdpTlvList> tlvLists;

    private GetCdpResult() {}
    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    /**
     * @return Apply tlv-list globally
     * 
     */
    public String filterTlvList() {
        return this.filterTlvList;
    }
    /**
     * @return Specify the holdtime (in sec) to be sent in packets
     * 
     */
    public Integer holdtime() {
        return this.holdtime;
    }
    /**
     * @return The path of the retrieved object.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Enable CDP
     * 
     */
    public Boolean run() {
        return this.run;
    }
    /**
     * @return Specify the rate at which CDP packets are sent (in sec)
     * 
     */
    public Integer timer() {
        return this.timer;
    }
    /**
     * @return Configure tlv-list
     * 
     */
    public List<GetCdpTlvList> tlvLists() {
        return this.tlvLists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCdpResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String device;
        private String filterTlvList;
        private Integer holdtime;
        private String id;
        private Boolean run;
        private Integer timer;
        private List<GetCdpTlvList> tlvLists;
        public Builder() {}
        public Builder(GetCdpResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.device = defaults.device;
    	      this.filterTlvList = defaults.filterTlvList;
    	      this.holdtime = defaults.holdtime;
    	      this.id = defaults.id;
    	      this.run = defaults.run;
    	      this.timer = defaults.timer;
    	      this.tlvLists = defaults.tlvLists;
        }

        @CustomType.Setter
        public Builder device(@Nullable String device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder filterTlvList(String filterTlvList) {
            this.filterTlvList = Objects.requireNonNull(filterTlvList);
            return this;
        }
        @CustomType.Setter
        public Builder holdtime(Integer holdtime) {
            this.holdtime = Objects.requireNonNull(holdtime);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder run(Boolean run) {
            this.run = Objects.requireNonNull(run);
            return this;
        }
        @CustomType.Setter
        public Builder timer(Integer timer) {
            this.timer = Objects.requireNonNull(timer);
            return this;
        }
        @CustomType.Setter
        public Builder tlvLists(List<GetCdpTlvList> tlvLists) {
            this.tlvLists = Objects.requireNonNull(tlvLists);
            return this;
        }
        public Builder tlvLists(GetCdpTlvList... tlvLists) {
            return tlvLists(List.of(tlvLists));
        }
        public GetCdpResult build() {
            final var o = new GetCdpResult();
            o.device = device;
            o.filterTlvList = filterTlvList;
            o.holdtime = holdtime;
            o.id = id;
            o.run = run;
            o.timer = timer;
            o.tlvLists = tlvLists;
            return o;
        }
    }
}
