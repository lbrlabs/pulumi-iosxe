// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEvpnInstanceResult {
    private @Nullable String device;
    private Integer evpnInstanceNum;
    private String id;
    private Boolean vlanBasedAutoRouteTarget;
    private String vlanBasedDefaultGatewayAdvertise;
    private String vlanBasedEncapsulation;
    private Boolean vlanBasedIpLocalLearningDisable;
    private Boolean vlanBasedIpLocalLearningEnable;
    private String vlanBasedRd;
    private Boolean vlanBasedReOriginateRouteType5;
    private Boolean vlanBasedReplicationTypeIngress;
    private Boolean vlanBasedReplicationTypeMp2mp;
    private Boolean vlanBasedReplicationTypeP2mp;
    private Boolean vlanBasedReplicationTypeStatic;
    private String vlanBasedRouteTarget;
    private String vlanBasedRouteTargetBoth;
    private String vlanBasedRouteTargetExport;
    private String vlanBasedRouteTargetImport;

    private GetEvpnInstanceResult() {}
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    public Integer evpnInstanceNum() {
        return this.evpnInstanceNum;
    }
    public String id() {
        return this.id;
    }
    public Boolean vlanBasedAutoRouteTarget() {
        return this.vlanBasedAutoRouteTarget;
    }
    public String vlanBasedDefaultGatewayAdvertise() {
        return this.vlanBasedDefaultGatewayAdvertise;
    }
    public String vlanBasedEncapsulation() {
        return this.vlanBasedEncapsulation;
    }
    public Boolean vlanBasedIpLocalLearningDisable() {
        return this.vlanBasedIpLocalLearningDisable;
    }
    public Boolean vlanBasedIpLocalLearningEnable() {
        return this.vlanBasedIpLocalLearningEnable;
    }
    public String vlanBasedRd() {
        return this.vlanBasedRd;
    }
    public Boolean vlanBasedReOriginateRouteType5() {
        return this.vlanBasedReOriginateRouteType5;
    }
    public Boolean vlanBasedReplicationTypeIngress() {
        return this.vlanBasedReplicationTypeIngress;
    }
    public Boolean vlanBasedReplicationTypeMp2mp() {
        return this.vlanBasedReplicationTypeMp2mp;
    }
    public Boolean vlanBasedReplicationTypeP2mp() {
        return this.vlanBasedReplicationTypeP2mp;
    }
    public Boolean vlanBasedReplicationTypeStatic() {
        return this.vlanBasedReplicationTypeStatic;
    }
    public String vlanBasedRouteTarget() {
        return this.vlanBasedRouteTarget;
    }
    public String vlanBasedRouteTargetBoth() {
        return this.vlanBasedRouteTargetBoth;
    }
    public String vlanBasedRouteTargetExport() {
        return this.vlanBasedRouteTargetExport;
    }
    public String vlanBasedRouteTargetImport() {
        return this.vlanBasedRouteTargetImport;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEvpnInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String device;
        private Integer evpnInstanceNum;
        private String id;
        private Boolean vlanBasedAutoRouteTarget;
        private String vlanBasedDefaultGatewayAdvertise;
        private String vlanBasedEncapsulation;
        private Boolean vlanBasedIpLocalLearningDisable;
        private Boolean vlanBasedIpLocalLearningEnable;
        private String vlanBasedRd;
        private Boolean vlanBasedReOriginateRouteType5;
        private Boolean vlanBasedReplicationTypeIngress;
        private Boolean vlanBasedReplicationTypeMp2mp;
        private Boolean vlanBasedReplicationTypeP2mp;
        private Boolean vlanBasedReplicationTypeStatic;
        private String vlanBasedRouteTarget;
        private String vlanBasedRouteTargetBoth;
        private String vlanBasedRouteTargetExport;
        private String vlanBasedRouteTargetImport;
        public Builder() {}
        public Builder(GetEvpnInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.device = defaults.device;
    	      this.evpnInstanceNum = defaults.evpnInstanceNum;
    	      this.id = defaults.id;
    	      this.vlanBasedAutoRouteTarget = defaults.vlanBasedAutoRouteTarget;
    	      this.vlanBasedDefaultGatewayAdvertise = defaults.vlanBasedDefaultGatewayAdvertise;
    	      this.vlanBasedEncapsulation = defaults.vlanBasedEncapsulation;
    	      this.vlanBasedIpLocalLearningDisable = defaults.vlanBasedIpLocalLearningDisable;
    	      this.vlanBasedIpLocalLearningEnable = defaults.vlanBasedIpLocalLearningEnable;
    	      this.vlanBasedRd = defaults.vlanBasedRd;
    	      this.vlanBasedReOriginateRouteType5 = defaults.vlanBasedReOriginateRouteType5;
    	      this.vlanBasedReplicationTypeIngress = defaults.vlanBasedReplicationTypeIngress;
    	      this.vlanBasedReplicationTypeMp2mp = defaults.vlanBasedReplicationTypeMp2mp;
    	      this.vlanBasedReplicationTypeP2mp = defaults.vlanBasedReplicationTypeP2mp;
    	      this.vlanBasedReplicationTypeStatic = defaults.vlanBasedReplicationTypeStatic;
    	      this.vlanBasedRouteTarget = defaults.vlanBasedRouteTarget;
    	      this.vlanBasedRouteTargetBoth = defaults.vlanBasedRouteTargetBoth;
    	      this.vlanBasedRouteTargetExport = defaults.vlanBasedRouteTargetExport;
    	      this.vlanBasedRouteTargetImport = defaults.vlanBasedRouteTargetImport;
        }

        @CustomType.Setter
        public Builder device(@Nullable String device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder evpnInstanceNum(Integer evpnInstanceNum) {
            this.evpnInstanceNum = Objects.requireNonNull(evpnInstanceNum);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder vlanBasedAutoRouteTarget(Boolean vlanBasedAutoRouteTarget) {
            this.vlanBasedAutoRouteTarget = Objects.requireNonNull(vlanBasedAutoRouteTarget);
            return this;
        }
        @CustomType.Setter
        public Builder vlanBasedDefaultGatewayAdvertise(String vlanBasedDefaultGatewayAdvertise) {
            this.vlanBasedDefaultGatewayAdvertise = Objects.requireNonNull(vlanBasedDefaultGatewayAdvertise);
            return this;
        }
        @CustomType.Setter
        public Builder vlanBasedEncapsulation(String vlanBasedEncapsulation) {
            this.vlanBasedEncapsulation = Objects.requireNonNull(vlanBasedEncapsulation);
            return this;
        }
        @CustomType.Setter
        public Builder vlanBasedIpLocalLearningDisable(Boolean vlanBasedIpLocalLearningDisable) {
            this.vlanBasedIpLocalLearningDisable = Objects.requireNonNull(vlanBasedIpLocalLearningDisable);
            return this;
        }
        @CustomType.Setter
        public Builder vlanBasedIpLocalLearningEnable(Boolean vlanBasedIpLocalLearningEnable) {
            this.vlanBasedIpLocalLearningEnable = Objects.requireNonNull(vlanBasedIpLocalLearningEnable);
            return this;
        }
        @CustomType.Setter
        public Builder vlanBasedRd(String vlanBasedRd) {
            this.vlanBasedRd = Objects.requireNonNull(vlanBasedRd);
            return this;
        }
        @CustomType.Setter
        public Builder vlanBasedReOriginateRouteType5(Boolean vlanBasedReOriginateRouteType5) {
            this.vlanBasedReOriginateRouteType5 = Objects.requireNonNull(vlanBasedReOriginateRouteType5);
            return this;
        }
        @CustomType.Setter
        public Builder vlanBasedReplicationTypeIngress(Boolean vlanBasedReplicationTypeIngress) {
            this.vlanBasedReplicationTypeIngress = Objects.requireNonNull(vlanBasedReplicationTypeIngress);
            return this;
        }
        @CustomType.Setter
        public Builder vlanBasedReplicationTypeMp2mp(Boolean vlanBasedReplicationTypeMp2mp) {
            this.vlanBasedReplicationTypeMp2mp = Objects.requireNonNull(vlanBasedReplicationTypeMp2mp);
            return this;
        }
        @CustomType.Setter
        public Builder vlanBasedReplicationTypeP2mp(Boolean vlanBasedReplicationTypeP2mp) {
            this.vlanBasedReplicationTypeP2mp = Objects.requireNonNull(vlanBasedReplicationTypeP2mp);
            return this;
        }
        @CustomType.Setter
        public Builder vlanBasedReplicationTypeStatic(Boolean vlanBasedReplicationTypeStatic) {
            this.vlanBasedReplicationTypeStatic = Objects.requireNonNull(vlanBasedReplicationTypeStatic);
            return this;
        }
        @CustomType.Setter
        public Builder vlanBasedRouteTarget(String vlanBasedRouteTarget) {
            this.vlanBasedRouteTarget = Objects.requireNonNull(vlanBasedRouteTarget);
            return this;
        }
        @CustomType.Setter
        public Builder vlanBasedRouteTargetBoth(String vlanBasedRouteTargetBoth) {
            this.vlanBasedRouteTargetBoth = Objects.requireNonNull(vlanBasedRouteTargetBoth);
            return this;
        }
        @CustomType.Setter
        public Builder vlanBasedRouteTargetExport(String vlanBasedRouteTargetExport) {
            this.vlanBasedRouteTargetExport = Objects.requireNonNull(vlanBasedRouteTargetExport);
            return this;
        }
        @CustomType.Setter
        public Builder vlanBasedRouteTargetImport(String vlanBasedRouteTargetImport) {
            this.vlanBasedRouteTargetImport = Objects.requireNonNull(vlanBasedRouteTargetImport);
            return this;
        }
        public GetEvpnInstanceResult build() {
            final var o = new GetEvpnInstanceResult();
            o.device = device;
            o.evpnInstanceNum = evpnInstanceNum;
            o.id = id;
            o.vlanBasedAutoRouteTarget = vlanBasedAutoRouteTarget;
            o.vlanBasedDefaultGatewayAdvertise = vlanBasedDefaultGatewayAdvertise;
            o.vlanBasedEncapsulation = vlanBasedEncapsulation;
            o.vlanBasedIpLocalLearningDisable = vlanBasedIpLocalLearningDisable;
            o.vlanBasedIpLocalLearningEnable = vlanBasedIpLocalLearningEnable;
            o.vlanBasedRd = vlanBasedRd;
            o.vlanBasedReOriginateRouteType5 = vlanBasedReOriginateRouteType5;
            o.vlanBasedReplicationTypeIngress = vlanBasedReplicationTypeIngress;
            o.vlanBasedReplicationTypeMp2mp = vlanBasedReplicationTypeMp2mp;
            o.vlanBasedReplicationTypeP2mp = vlanBasedReplicationTypeP2mp;
            o.vlanBasedReplicationTypeStatic = vlanBasedReplicationTypeStatic;
            o.vlanBasedRouteTarget = vlanBasedRouteTarget;
            o.vlanBasedRouteTargetBoth = vlanBasedRouteTargetBoth;
            o.vlanBasedRouteTargetExport = vlanBasedRouteTargetExport;
            o.vlanBasedRouteTargetImport = vlanBasedRouteTargetImport;
            return o;
        }
    }
}
