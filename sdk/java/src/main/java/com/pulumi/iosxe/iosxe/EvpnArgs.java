// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EvpnArgs extends com.pulumi.resources.ResourceArgs {

    public static final EvpnArgs Empty = new EvpnArgs();

    /**
     * Advertise Default Gateway MAC/IP routes
     * 
     */
    @Import(name="defaultGatewayAdvertise")
    private @Nullable Output<Boolean> defaultGatewayAdvertise;

    /**
     * @return Advertise Default Gateway MAC/IP routes
     * 
     */
    public Optional<Output<Boolean>> defaultGatewayAdvertise() {
        return Optional.ofNullable(this.defaultGatewayAdvertise);
    }

    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    @Import(name="deleteMode")
    private @Nullable Output<String> deleteMode;

    /**
     * @return Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    public Optional<Output<String>> deleteMode() {
        return Optional.ofNullable(this.deleteMode);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * Number of IP moves within specified time interval - Range: `2`-`1000`
     * 
     */
    @Import(name="ipDuplicationLimit")
    private @Nullable Output<Integer> ipDuplicationLimit;

    /**
     * @return Number of IP moves within specified time interval - Range: `2`-`1000`
     * 
     */
    public Optional<Output<Integer>> ipDuplicationLimit() {
        return Optional.ofNullable(this.ipDuplicationLimit);
    }

    /**
     * IP duplication timer - Range: `10`-`36000`
     * 
     */
    @Import(name="ipDuplicationTime")
    private @Nullable Output<Integer> ipDuplicationTime;

    /**
     * @return IP duplication timer - Range: `10`-`36000`
     * 
     */
    public Optional<Output<Integer>> ipDuplicationTime() {
        return Optional.ofNullable(this.ipDuplicationTime);
    }

    /**
     * Peer state transition logging
     * 
     */
    @Import(name="loggingPeerState")
    private @Nullable Output<Boolean> loggingPeerState;

    /**
     * @return Peer state transition logging
     * 
     */
    public Optional<Output<Boolean>> loggingPeerState() {
        return Optional.ofNullable(this.loggingPeerState);
    }

    /**
     * Number of MAC moves within specified time interval - Range: `2`-`1000`
     * 
     */
    @Import(name="macDuplicationLimit")
    private @Nullable Output<Integer> macDuplicationLimit;

    /**
     * @return Number of MAC moves within specified time interval - Range: `2`-`1000`
     * 
     */
    public Optional<Output<Integer>> macDuplicationLimit() {
        return Optional.ofNullable(this.macDuplicationLimit);
    }

    /**
     * MAC duplication timer - Range: `10`-`36000`
     * 
     */
    @Import(name="macDuplicationTime")
    private @Nullable Output<Integer> macDuplicationTime;

    /**
     * @return MAC duplication timer - Range: `10`-`36000`
     * 
     */
    public Optional<Output<Integer>> macDuplicationTime() {
        return Optional.ofNullable(this.macDuplicationTime);
    }

    /**
     * Ingress replication
     * 
     */
    @Import(name="replicationTypeIngress")
    private @Nullable Output<Boolean> replicationTypeIngress;

    /**
     * @return Ingress replication
     * 
     */
    public Optional<Output<Boolean>> replicationTypeIngress() {
        return Optional.ofNullable(this.replicationTypeIngress);
    }

    /**
     * mp2mp replication
     * 
     */
    @Import(name="replicationTypeMp2mp")
    private @Nullable Output<Boolean> replicationTypeMp2mp;

    /**
     * @return mp2mp replication
     * 
     */
    public Optional<Output<Boolean>> replicationTypeMp2mp() {
        return Optional.ofNullable(this.replicationTypeMp2mp);
    }

    /**
     * p2mp replication
     * 
     */
    @Import(name="replicationTypeP2mp")
    private @Nullable Output<Boolean> replicationTypeP2mp;

    /**
     * @return p2mp replication
     * 
     */
    public Optional<Output<Boolean>> replicationTypeP2mp() {
        return Optional.ofNullable(this.replicationTypeP2mp);
    }

    /**
     * Static replication
     * 
     */
    @Import(name="replicationTypeStatic")
    private @Nullable Output<Boolean> replicationTypeStatic;

    /**
     * @return Static replication
     * 
     */
    public Optional<Output<Boolean>> replicationTypeStatic() {
        return Optional.ofNullable(this.replicationTypeStatic);
    }

    /**
     * Set vni-based route-target
     * 
     */
    @Import(name="routeTargetAutoVni")
    private @Nullable Output<Boolean> routeTargetAutoVni;

    /**
     * @return Set vni-based route-target
     * 
     */
    public Optional<Output<Boolean>> routeTargetAutoVni() {
        return Optional.ofNullable(this.routeTargetAutoVni);
    }

    /**
     * Loopback interface - Range: `0`-`2147483647`
     * 
     */
    @Import(name="routerIdLoopback")
    private @Nullable Output<Integer> routerIdLoopback;

    /**
     * @return Loopback interface - Range: `0`-`2147483647`
     * 
     */
    public Optional<Output<Integer>> routerIdLoopback() {
        return Optional.ofNullable(this.routerIdLoopback);
    }

    private EvpnArgs() {}

    private EvpnArgs(EvpnArgs $) {
        this.defaultGatewayAdvertise = $.defaultGatewayAdvertise;
        this.deleteMode = $.deleteMode;
        this.device = $.device;
        this.ipDuplicationLimit = $.ipDuplicationLimit;
        this.ipDuplicationTime = $.ipDuplicationTime;
        this.loggingPeerState = $.loggingPeerState;
        this.macDuplicationLimit = $.macDuplicationLimit;
        this.macDuplicationTime = $.macDuplicationTime;
        this.replicationTypeIngress = $.replicationTypeIngress;
        this.replicationTypeMp2mp = $.replicationTypeMp2mp;
        this.replicationTypeP2mp = $.replicationTypeP2mp;
        this.replicationTypeStatic = $.replicationTypeStatic;
        this.routeTargetAutoVni = $.routeTargetAutoVni;
        this.routerIdLoopback = $.routerIdLoopback;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EvpnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EvpnArgs $;

        public Builder() {
            $ = new EvpnArgs();
        }

        public Builder(EvpnArgs defaults) {
            $ = new EvpnArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultGatewayAdvertise Advertise Default Gateway MAC/IP routes
         * 
         * @return builder
         * 
         */
        public Builder defaultGatewayAdvertise(@Nullable Output<Boolean> defaultGatewayAdvertise) {
            $.defaultGatewayAdvertise = defaultGatewayAdvertise;
            return this;
        }

        /**
         * @param defaultGatewayAdvertise Advertise Default Gateway MAC/IP routes
         * 
         * @return builder
         * 
         */
        public Builder defaultGatewayAdvertise(Boolean defaultGatewayAdvertise) {
            return defaultGatewayAdvertise(Output.of(defaultGatewayAdvertise));
        }

        /**
         * @param deleteMode Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
         * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
         * Default value is `all`. - Choices: `all`, `attributes`
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(@Nullable Output<String> deleteMode) {
            $.deleteMode = deleteMode;
            return this;
        }

        /**
         * @param deleteMode Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
         * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
         * Default value is `all`. - Choices: `all`, `attributes`
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(String deleteMode) {
            return deleteMode(Output.of(deleteMode));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param ipDuplicationLimit Number of IP moves within specified time interval - Range: `2`-`1000`
         * 
         * @return builder
         * 
         */
        public Builder ipDuplicationLimit(@Nullable Output<Integer> ipDuplicationLimit) {
            $.ipDuplicationLimit = ipDuplicationLimit;
            return this;
        }

        /**
         * @param ipDuplicationLimit Number of IP moves within specified time interval - Range: `2`-`1000`
         * 
         * @return builder
         * 
         */
        public Builder ipDuplicationLimit(Integer ipDuplicationLimit) {
            return ipDuplicationLimit(Output.of(ipDuplicationLimit));
        }

        /**
         * @param ipDuplicationTime IP duplication timer - Range: `10`-`36000`
         * 
         * @return builder
         * 
         */
        public Builder ipDuplicationTime(@Nullable Output<Integer> ipDuplicationTime) {
            $.ipDuplicationTime = ipDuplicationTime;
            return this;
        }

        /**
         * @param ipDuplicationTime IP duplication timer - Range: `10`-`36000`
         * 
         * @return builder
         * 
         */
        public Builder ipDuplicationTime(Integer ipDuplicationTime) {
            return ipDuplicationTime(Output.of(ipDuplicationTime));
        }

        /**
         * @param loggingPeerState Peer state transition logging
         * 
         * @return builder
         * 
         */
        public Builder loggingPeerState(@Nullable Output<Boolean> loggingPeerState) {
            $.loggingPeerState = loggingPeerState;
            return this;
        }

        /**
         * @param loggingPeerState Peer state transition logging
         * 
         * @return builder
         * 
         */
        public Builder loggingPeerState(Boolean loggingPeerState) {
            return loggingPeerState(Output.of(loggingPeerState));
        }

        /**
         * @param macDuplicationLimit Number of MAC moves within specified time interval - Range: `2`-`1000`
         * 
         * @return builder
         * 
         */
        public Builder macDuplicationLimit(@Nullable Output<Integer> macDuplicationLimit) {
            $.macDuplicationLimit = macDuplicationLimit;
            return this;
        }

        /**
         * @param macDuplicationLimit Number of MAC moves within specified time interval - Range: `2`-`1000`
         * 
         * @return builder
         * 
         */
        public Builder macDuplicationLimit(Integer macDuplicationLimit) {
            return macDuplicationLimit(Output.of(macDuplicationLimit));
        }

        /**
         * @param macDuplicationTime MAC duplication timer - Range: `10`-`36000`
         * 
         * @return builder
         * 
         */
        public Builder macDuplicationTime(@Nullable Output<Integer> macDuplicationTime) {
            $.macDuplicationTime = macDuplicationTime;
            return this;
        }

        /**
         * @param macDuplicationTime MAC duplication timer - Range: `10`-`36000`
         * 
         * @return builder
         * 
         */
        public Builder macDuplicationTime(Integer macDuplicationTime) {
            return macDuplicationTime(Output.of(macDuplicationTime));
        }

        /**
         * @param replicationTypeIngress Ingress replication
         * 
         * @return builder
         * 
         */
        public Builder replicationTypeIngress(@Nullable Output<Boolean> replicationTypeIngress) {
            $.replicationTypeIngress = replicationTypeIngress;
            return this;
        }

        /**
         * @param replicationTypeIngress Ingress replication
         * 
         * @return builder
         * 
         */
        public Builder replicationTypeIngress(Boolean replicationTypeIngress) {
            return replicationTypeIngress(Output.of(replicationTypeIngress));
        }

        /**
         * @param replicationTypeMp2mp mp2mp replication
         * 
         * @return builder
         * 
         */
        public Builder replicationTypeMp2mp(@Nullable Output<Boolean> replicationTypeMp2mp) {
            $.replicationTypeMp2mp = replicationTypeMp2mp;
            return this;
        }

        /**
         * @param replicationTypeMp2mp mp2mp replication
         * 
         * @return builder
         * 
         */
        public Builder replicationTypeMp2mp(Boolean replicationTypeMp2mp) {
            return replicationTypeMp2mp(Output.of(replicationTypeMp2mp));
        }

        /**
         * @param replicationTypeP2mp p2mp replication
         * 
         * @return builder
         * 
         */
        public Builder replicationTypeP2mp(@Nullable Output<Boolean> replicationTypeP2mp) {
            $.replicationTypeP2mp = replicationTypeP2mp;
            return this;
        }

        /**
         * @param replicationTypeP2mp p2mp replication
         * 
         * @return builder
         * 
         */
        public Builder replicationTypeP2mp(Boolean replicationTypeP2mp) {
            return replicationTypeP2mp(Output.of(replicationTypeP2mp));
        }

        /**
         * @param replicationTypeStatic Static replication
         * 
         * @return builder
         * 
         */
        public Builder replicationTypeStatic(@Nullable Output<Boolean> replicationTypeStatic) {
            $.replicationTypeStatic = replicationTypeStatic;
            return this;
        }

        /**
         * @param replicationTypeStatic Static replication
         * 
         * @return builder
         * 
         */
        public Builder replicationTypeStatic(Boolean replicationTypeStatic) {
            return replicationTypeStatic(Output.of(replicationTypeStatic));
        }

        /**
         * @param routeTargetAutoVni Set vni-based route-target
         * 
         * @return builder
         * 
         */
        public Builder routeTargetAutoVni(@Nullable Output<Boolean> routeTargetAutoVni) {
            $.routeTargetAutoVni = routeTargetAutoVni;
            return this;
        }

        /**
         * @param routeTargetAutoVni Set vni-based route-target
         * 
         * @return builder
         * 
         */
        public Builder routeTargetAutoVni(Boolean routeTargetAutoVni) {
            return routeTargetAutoVni(Output.of(routeTargetAutoVni));
        }

        /**
         * @param routerIdLoopback Loopback interface - Range: `0`-`2147483647`
         * 
         * @return builder
         * 
         */
        public Builder routerIdLoopback(@Nullable Output<Integer> routerIdLoopback) {
            $.routerIdLoopback = routerIdLoopback;
            return this;
        }

        /**
         * @param routerIdLoopback Loopback interface - Range: `0`-`2147483647`
         * 
         * @return builder
         * 
         */
        public Builder routerIdLoopback(Integer routerIdLoopback) {
            return routerIdLoopback(Output.of(routerIdLoopback));
        }

        public EvpnArgs build() {
            return $;
        }
    }

}
