// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.iosxe.iosxe.outputs.GetTemplateDeviceTrackingAttachPolicy;
import com.pulumi.iosxe.iosxe.outputs.GetTemplateIpAccessGroup;
import com.pulumi.iosxe.iosxe.outputs.GetTemplateSwitchportPortSecurityMaximumRange;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTemplateResult {
    private Boolean accessSessionClosed;
    private String accessSessionControlDirection;
    private String accessSessionHostMode;
    private Boolean accessSessionInterfaceTemplateSticky;
    private Integer accessSessionInterfaceTemplateStickyTimer;
    private Boolean accessSessionMonitor;
    private String accessSessionPortControl;
    private Boolean authenticationPeriodic;
    private Integer authenticationTimerReauthenticateRange;
    private Boolean authenticationTimerReauthenticateServer;
    private Boolean ctsManual;
    private Integer ctsManualPolicyStaticSgt;
    private Boolean ctsManualPolicyStaticTrusted;
    private Boolean ctsManualPropagateSgt;
    private Boolean ctsRoleBasedEnforcement;
    private @Nullable String device;
    private Boolean deviceTracking;
    private List<GetTemplateDeviceTrackingAttachPolicy> deviceTrackingAttachPolicies;
    private String deviceTrackingVlanRange;
    private Integer dot1xMaxReauthReq;
    private Integer dot1xMaxReq;
    private String dot1xPae;
    private Integer dot1xTimeoutTxPeriod;
    private String id;
    private List<GetTemplateIpAccessGroup> ipAccessGroups;
    private Integer ipDhcpSnoopingLimitRate;
    private Boolean ipDhcpSnoopingTrust;
    private Integer loadInterval;
    private Boolean mab;
    private Boolean mabEap;
    private String servicePolicyInput;
    private String servicePolicyOutput;
    private String servicePolicyTypeControlSubscriber;
    private String sourceTemplate;
    private Boolean spanningTreeBpduguardEnable;
    private Boolean spanningTreePortfast;
    private Boolean spanningTreePortfastDisable;
    private Boolean spanningTreePortfastEdge;
    private Boolean spanningTreePortfastNetwork;
    private Boolean spanningTreeServicePolicy;
    private Boolean stormControlActionShutdown;
    private Boolean stormControlActionTrap;
    private Double stormControlBroadcastLevelBpsThreshold;
    private String stormControlBroadcastLevelPpsThreshold;
    private Double stormControlBroadcastLevelThreshold;
    private Double stormControlMulticastLevelBpsThreshold;
    private String stormControlMulticastLevelPpsThreshold;
    private Double stormControlMulticastLevelThreshold;
    private Boolean subscriberAgingInactivityTimerProbe;
    private Integer subscriberAgingInactivityTimerValue;
    private Boolean subscriberAgingProbe;
    private Integer switchportAccessVlan;
    private Boolean switchportBlockUnicast;
    private Boolean switchportModeAccess;
    private Boolean switchportModeTrunk;
    private Boolean switchportNonegotiate;
    private Boolean switchportPortSecurity;
    private Boolean switchportPortSecurityAgingStatic;
    private Integer switchportPortSecurityAgingTime;
    private Boolean switchportPortSecurityAgingType;
    private Boolean switchportPortSecurityAgingTypeInactivity;
    private List<GetTemplateSwitchportPortSecurityMaximumRange> switchportPortSecurityMaximumRanges;
    private Boolean switchportPortSecurityViolationProtect;
    private Boolean switchportPortSecurityViolationRestrict;
    private Boolean switchportPortSecurityViolationShutdown;
    private Integer switchportPrivateVlanHostAssociationPrimaryRange;
    private Integer switchportPrivateVlanHostAssociationSecondaryRange;
    private String switchportTrunkAllowedVlans;
    private Boolean switchportTrunkAllowedVlansAll;
    private Boolean switchportTrunkAllowedVlansNone;
    private Boolean switchportTrunkNativeVlanTag;
    private Integer switchportTrunkNativeVlanVlanId;
    private Integer switchportVoiceVlan;
    private String templateName;

    private GetTemplateResult() {}
    public Boolean accessSessionClosed() {
        return this.accessSessionClosed;
    }
    public String accessSessionControlDirection() {
        return this.accessSessionControlDirection;
    }
    public String accessSessionHostMode() {
        return this.accessSessionHostMode;
    }
    public Boolean accessSessionInterfaceTemplateSticky() {
        return this.accessSessionInterfaceTemplateSticky;
    }
    public Integer accessSessionInterfaceTemplateStickyTimer() {
        return this.accessSessionInterfaceTemplateStickyTimer;
    }
    public Boolean accessSessionMonitor() {
        return this.accessSessionMonitor;
    }
    public String accessSessionPortControl() {
        return this.accessSessionPortControl;
    }
    public Boolean authenticationPeriodic() {
        return this.authenticationPeriodic;
    }
    public Integer authenticationTimerReauthenticateRange() {
        return this.authenticationTimerReauthenticateRange;
    }
    public Boolean authenticationTimerReauthenticateServer() {
        return this.authenticationTimerReauthenticateServer;
    }
    public Boolean ctsManual() {
        return this.ctsManual;
    }
    public Integer ctsManualPolicyStaticSgt() {
        return this.ctsManualPolicyStaticSgt;
    }
    public Boolean ctsManualPolicyStaticTrusted() {
        return this.ctsManualPolicyStaticTrusted;
    }
    public Boolean ctsManualPropagateSgt() {
        return this.ctsManualPropagateSgt;
    }
    public Boolean ctsRoleBasedEnforcement() {
        return this.ctsRoleBasedEnforcement;
    }
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    public Boolean deviceTracking() {
        return this.deviceTracking;
    }
    public List<GetTemplateDeviceTrackingAttachPolicy> deviceTrackingAttachPolicies() {
        return this.deviceTrackingAttachPolicies;
    }
    public String deviceTrackingVlanRange() {
        return this.deviceTrackingVlanRange;
    }
    public Integer dot1xMaxReauthReq() {
        return this.dot1xMaxReauthReq;
    }
    public Integer dot1xMaxReq() {
        return this.dot1xMaxReq;
    }
    public String dot1xPae() {
        return this.dot1xPae;
    }
    public Integer dot1xTimeoutTxPeriod() {
        return this.dot1xTimeoutTxPeriod;
    }
    public String id() {
        return this.id;
    }
    public List<GetTemplateIpAccessGroup> ipAccessGroups() {
        return this.ipAccessGroups;
    }
    public Integer ipDhcpSnoopingLimitRate() {
        return this.ipDhcpSnoopingLimitRate;
    }
    public Boolean ipDhcpSnoopingTrust() {
        return this.ipDhcpSnoopingTrust;
    }
    public Integer loadInterval() {
        return this.loadInterval;
    }
    public Boolean mab() {
        return this.mab;
    }
    public Boolean mabEap() {
        return this.mabEap;
    }
    public String servicePolicyInput() {
        return this.servicePolicyInput;
    }
    public String servicePolicyOutput() {
        return this.servicePolicyOutput;
    }
    public String servicePolicyTypeControlSubscriber() {
        return this.servicePolicyTypeControlSubscriber;
    }
    public String sourceTemplate() {
        return this.sourceTemplate;
    }
    public Boolean spanningTreeBpduguardEnable() {
        return this.spanningTreeBpduguardEnable;
    }
    public Boolean spanningTreePortfast() {
        return this.spanningTreePortfast;
    }
    public Boolean spanningTreePortfastDisable() {
        return this.spanningTreePortfastDisable;
    }
    public Boolean spanningTreePortfastEdge() {
        return this.spanningTreePortfastEdge;
    }
    public Boolean spanningTreePortfastNetwork() {
        return this.spanningTreePortfastNetwork;
    }
    public Boolean spanningTreeServicePolicy() {
        return this.spanningTreeServicePolicy;
    }
    public Boolean stormControlActionShutdown() {
        return this.stormControlActionShutdown;
    }
    public Boolean stormControlActionTrap() {
        return this.stormControlActionTrap;
    }
    public Double stormControlBroadcastLevelBpsThreshold() {
        return this.stormControlBroadcastLevelBpsThreshold;
    }
    public String stormControlBroadcastLevelPpsThreshold() {
        return this.stormControlBroadcastLevelPpsThreshold;
    }
    public Double stormControlBroadcastLevelThreshold() {
        return this.stormControlBroadcastLevelThreshold;
    }
    public Double stormControlMulticastLevelBpsThreshold() {
        return this.stormControlMulticastLevelBpsThreshold;
    }
    public String stormControlMulticastLevelPpsThreshold() {
        return this.stormControlMulticastLevelPpsThreshold;
    }
    public Double stormControlMulticastLevelThreshold() {
        return this.stormControlMulticastLevelThreshold;
    }
    public Boolean subscriberAgingInactivityTimerProbe() {
        return this.subscriberAgingInactivityTimerProbe;
    }
    public Integer subscriberAgingInactivityTimerValue() {
        return this.subscriberAgingInactivityTimerValue;
    }
    public Boolean subscriberAgingProbe() {
        return this.subscriberAgingProbe;
    }
    public Integer switchportAccessVlan() {
        return this.switchportAccessVlan;
    }
    public Boolean switchportBlockUnicast() {
        return this.switchportBlockUnicast;
    }
    public Boolean switchportModeAccess() {
        return this.switchportModeAccess;
    }
    public Boolean switchportModeTrunk() {
        return this.switchportModeTrunk;
    }
    public Boolean switchportNonegotiate() {
        return this.switchportNonegotiate;
    }
    public Boolean switchportPortSecurity() {
        return this.switchportPortSecurity;
    }
    public Boolean switchportPortSecurityAgingStatic() {
        return this.switchportPortSecurityAgingStatic;
    }
    public Integer switchportPortSecurityAgingTime() {
        return this.switchportPortSecurityAgingTime;
    }
    public Boolean switchportPortSecurityAgingType() {
        return this.switchportPortSecurityAgingType;
    }
    public Boolean switchportPortSecurityAgingTypeInactivity() {
        return this.switchportPortSecurityAgingTypeInactivity;
    }
    public List<GetTemplateSwitchportPortSecurityMaximumRange> switchportPortSecurityMaximumRanges() {
        return this.switchportPortSecurityMaximumRanges;
    }
    public Boolean switchportPortSecurityViolationProtect() {
        return this.switchportPortSecurityViolationProtect;
    }
    public Boolean switchportPortSecurityViolationRestrict() {
        return this.switchportPortSecurityViolationRestrict;
    }
    public Boolean switchportPortSecurityViolationShutdown() {
        return this.switchportPortSecurityViolationShutdown;
    }
    public Integer switchportPrivateVlanHostAssociationPrimaryRange() {
        return this.switchportPrivateVlanHostAssociationPrimaryRange;
    }
    public Integer switchportPrivateVlanHostAssociationSecondaryRange() {
        return this.switchportPrivateVlanHostAssociationSecondaryRange;
    }
    public String switchportTrunkAllowedVlans() {
        return this.switchportTrunkAllowedVlans;
    }
    public Boolean switchportTrunkAllowedVlansAll() {
        return this.switchportTrunkAllowedVlansAll;
    }
    public Boolean switchportTrunkAllowedVlansNone() {
        return this.switchportTrunkAllowedVlansNone;
    }
    public Boolean switchportTrunkNativeVlanTag() {
        return this.switchportTrunkNativeVlanTag;
    }
    public Integer switchportTrunkNativeVlanVlanId() {
        return this.switchportTrunkNativeVlanVlanId;
    }
    public Integer switchportVoiceVlan() {
        return this.switchportVoiceVlan;
    }
    public String templateName() {
        return this.templateName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTemplateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean accessSessionClosed;
        private String accessSessionControlDirection;
        private String accessSessionHostMode;
        private Boolean accessSessionInterfaceTemplateSticky;
        private Integer accessSessionInterfaceTemplateStickyTimer;
        private Boolean accessSessionMonitor;
        private String accessSessionPortControl;
        private Boolean authenticationPeriodic;
        private Integer authenticationTimerReauthenticateRange;
        private Boolean authenticationTimerReauthenticateServer;
        private Boolean ctsManual;
        private Integer ctsManualPolicyStaticSgt;
        private Boolean ctsManualPolicyStaticTrusted;
        private Boolean ctsManualPropagateSgt;
        private Boolean ctsRoleBasedEnforcement;
        private @Nullable String device;
        private Boolean deviceTracking;
        private List<GetTemplateDeviceTrackingAttachPolicy> deviceTrackingAttachPolicies;
        private String deviceTrackingVlanRange;
        private Integer dot1xMaxReauthReq;
        private Integer dot1xMaxReq;
        private String dot1xPae;
        private Integer dot1xTimeoutTxPeriod;
        private String id;
        private List<GetTemplateIpAccessGroup> ipAccessGroups;
        private Integer ipDhcpSnoopingLimitRate;
        private Boolean ipDhcpSnoopingTrust;
        private Integer loadInterval;
        private Boolean mab;
        private Boolean mabEap;
        private String servicePolicyInput;
        private String servicePolicyOutput;
        private String servicePolicyTypeControlSubscriber;
        private String sourceTemplate;
        private Boolean spanningTreeBpduguardEnable;
        private Boolean spanningTreePortfast;
        private Boolean spanningTreePortfastDisable;
        private Boolean spanningTreePortfastEdge;
        private Boolean spanningTreePortfastNetwork;
        private Boolean spanningTreeServicePolicy;
        private Boolean stormControlActionShutdown;
        private Boolean stormControlActionTrap;
        private Double stormControlBroadcastLevelBpsThreshold;
        private String stormControlBroadcastLevelPpsThreshold;
        private Double stormControlBroadcastLevelThreshold;
        private Double stormControlMulticastLevelBpsThreshold;
        private String stormControlMulticastLevelPpsThreshold;
        private Double stormControlMulticastLevelThreshold;
        private Boolean subscriberAgingInactivityTimerProbe;
        private Integer subscriberAgingInactivityTimerValue;
        private Boolean subscriberAgingProbe;
        private Integer switchportAccessVlan;
        private Boolean switchportBlockUnicast;
        private Boolean switchportModeAccess;
        private Boolean switchportModeTrunk;
        private Boolean switchportNonegotiate;
        private Boolean switchportPortSecurity;
        private Boolean switchportPortSecurityAgingStatic;
        private Integer switchportPortSecurityAgingTime;
        private Boolean switchportPortSecurityAgingType;
        private Boolean switchportPortSecurityAgingTypeInactivity;
        private List<GetTemplateSwitchportPortSecurityMaximumRange> switchportPortSecurityMaximumRanges;
        private Boolean switchportPortSecurityViolationProtect;
        private Boolean switchportPortSecurityViolationRestrict;
        private Boolean switchportPortSecurityViolationShutdown;
        private Integer switchportPrivateVlanHostAssociationPrimaryRange;
        private Integer switchportPrivateVlanHostAssociationSecondaryRange;
        private String switchportTrunkAllowedVlans;
        private Boolean switchportTrunkAllowedVlansAll;
        private Boolean switchportTrunkAllowedVlansNone;
        private Boolean switchportTrunkNativeVlanTag;
        private Integer switchportTrunkNativeVlanVlanId;
        private Integer switchportVoiceVlan;
        private String templateName;
        public Builder() {}
        public Builder(GetTemplateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessSessionClosed = defaults.accessSessionClosed;
    	      this.accessSessionControlDirection = defaults.accessSessionControlDirection;
    	      this.accessSessionHostMode = defaults.accessSessionHostMode;
    	      this.accessSessionInterfaceTemplateSticky = defaults.accessSessionInterfaceTemplateSticky;
    	      this.accessSessionInterfaceTemplateStickyTimer = defaults.accessSessionInterfaceTemplateStickyTimer;
    	      this.accessSessionMonitor = defaults.accessSessionMonitor;
    	      this.accessSessionPortControl = defaults.accessSessionPortControl;
    	      this.authenticationPeriodic = defaults.authenticationPeriodic;
    	      this.authenticationTimerReauthenticateRange = defaults.authenticationTimerReauthenticateRange;
    	      this.authenticationTimerReauthenticateServer = defaults.authenticationTimerReauthenticateServer;
    	      this.ctsManual = defaults.ctsManual;
    	      this.ctsManualPolicyStaticSgt = defaults.ctsManualPolicyStaticSgt;
    	      this.ctsManualPolicyStaticTrusted = defaults.ctsManualPolicyStaticTrusted;
    	      this.ctsManualPropagateSgt = defaults.ctsManualPropagateSgt;
    	      this.ctsRoleBasedEnforcement = defaults.ctsRoleBasedEnforcement;
    	      this.device = defaults.device;
    	      this.deviceTracking = defaults.deviceTracking;
    	      this.deviceTrackingAttachPolicies = defaults.deviceTrackingAttachPolicies;
    	      this.deviceTrackingVlanRange = defaults.deviceTrackingVlanRange;
    	      this.dot1xMaxReauthReq = defaults.dot1xMaxReauthReq;
    	      this.dot1xMaxReq = defaults.dot1xMaxReq;
    	      this.dot1xPae = defaults.dot1xPae;
    	      this.dot1xTimeoutTxPeriod = defaults.dot1xTimeoutTxPeriod;
    	      this.id = defaults.id;
    	      this.ipAccessGroups = defaults.ipAccessGroups;
    	      this.ipDhcpSnoopingLimitRate = defaults.ipDhcpSnoopingLimitRate;
    	      this.ipDhcpSnoopingTrust = defaults.ipDhcpSnoopingTrust;
    	      this.loadInterval = defaults.loadInterval;
    	      this.mab = defaults.mab;
    	      this.mabEap = defaults.mabEap;
    	      this.servicePolicyInput = defaults.servicePolicyInput;
    	      this.servicePolicyOutput = defaults.servicePolicyOutput;
    	      this.servicePolicyTypeControlSubscriber = defaults.servicePolicyTypeControlSubscriber;
    	      this.sourceTemplate = defaults.sourceTemplate;
    	      this.spanningTreeBpduguardEnable = defaults.spanningTreeBpduguardEnable;
    	      this.spanningTreePortfast = defaults.spanningTreePortfast;
    	      this.spanningTreePortfastDisable = defaults.spanningTreePortfastDisable;
    	      this.spanningTreePortfastEdge = defaults.spanningTreePortfastEdge;
    	      this.spanningTreePortfastNetwork = defaults.spanningTreePortfastNetwork;
    	      this.spanningTreeServicePolicy = defaults.spanningTreeServicePolicy;
    	      this.stormControlActionShutdown = defaults.stormControlActionShutdown;
    	      this.stormControlActionTrap = defaults.stormControlActionTrap;
    	      this.stormControlBroadcastLevelBpsThreshold = defaults.stormControlBroadcastLevelBpsThreshold;
    	      this.stormControlBroadcastLevelPpsThreshold = defaults.stormControlBroadcastLevelPpsThreshold;
    	      this.stormControlBroadcastLevelThreshold = defaults.stormControlBroadcastLevelThreshold;
    	      this.stormControlMulticastLevelBpsThreshold = defaults.stormControlMulticastLevelBpsThreshold;
    	      this.stormControlMulticastLevelPpsThreshold = defaults.stormControlMulticastLevelPpsThreshold;
    	      this.stormControlMulticastLevelThreshold = defaults.stormControlMulticastLevelThreshold;
    	      this.subscriberAgingInactivityTimerProbe = defaults.subscriberAgingInactivityTimerProbe;
    	      this.subscriberAgingInactivityTimerValue = defaults.subscriberAgingInactivityTimerValue;
    	      this.subscriberAgingProbe = defaults.subscriberAgingProbe;
    	      this.switchportAccessVlan = defaults.switchportAccessVlan;
    	      this.switchportBlockUnicast = defaults.switchportBlockUnicast;
    	      this.switchportModeAccess = defaults.switchportModeAccess;
    	      this.switchportModeTrunk = defaults.switchportModeTrunk;
    	      this.switchportNonegotiate = defaults.switchportNonegotiate;
    	      this.switchportPortSecurity = defaults.switchportPortSecurity;
    	      this.switchportPortSecurityAgingStatic = defaults.switchportPortSecurityAgingStatic;
    	      this.switchportPortSecurityAgingTime = defaults.switchportPortSecurityAgingTime;
    	      this.switchportPortSecurityAgingType = defaults.switchportPortSecurityAgingType;
    	      this.switchportPortSecurityAgingTypeInactivity = defaults.switchportPortSecurityAgingTypeInactivity;
    	      this.switchportPortSecurityMaximumRanges = defaults.switchportPortSecurityMaximumRanges;
    	      this.switchportPortSecurityViolationProtect = defaults.switchportPortSecurityViolationProtect;
    	      this.switchportPortSecurityViolationRestrict = defaults.switchportPortSecurityViolationRestrict;
    	      this.switchportPortSecurityViolationShutdown = defaults.switchportPortSecurityViolationShutdown;
    	      this.switchportPrivateVlanHostAssociationPrimaryRange = defaults.switchportPrivateVlanHostAssociationPrimaryRange;
    	      this.switchportPrivateVlanHostAssociationSecondaryRange = defaults.switchportPrivateVlanHostAssociationSecondaryRange;
    	      this.switchportTrunkAllowedVlans = defaults.switchportTrunkAllowedVlans;
    	      this.switchportTrunkAllowedVlansAll = defaults.switchportTrunkAllowedVlansAll;
    	      this.switchportTrunkAllowedVlansNone = defaults.switchportTrunkAllowedVlansNone;
    	      this.switchportTrunkNativeVlanTag = defaults.switchportTrunkNativeVlanTag;
    	      this.switchportTrunkNativeVlanVlanId = defaults.switchportTrunkNativeVlanVlanId;
    	      this.switchportVoiceVlan = defaults.switchportVoiceVlan;
    	      this.templateName = defaults.templateName;
        }

        @CustomType.Setter
        public Builder accessSessionClosed(Boolean accessSessionClosed) {
            this.accessSessionClosed = Objects.requireNonNull(accessSessionClosed);
            return this;
        }
        @CustomType.Setter
        public Builder accessSessionControlDirection(String accessSessionControlDirection) {
            this.accessSessionControlDirection = Objects.requireNonNull(accessSessionControlDirection);
            return this;
        }
        @CustomType.Setter
        public Builder accessSessionHostMode(String accessSessionHostMode) {
            this.accessSessionHostMode = Objects.requireNonNull(accessSessionHostMode);
            return this;
        }
        @CustomType.Setter
        public Builder accessSessionInterfaceTemplateSticky(Boolean accessSessionInterfaceTemplateSticky) {
            this.accessSessionInterfaceTemplateSticky = Objects.requireNonNull(accessSessionInterfaceTemplateSticky);
            return this;
        }
        @CustomType.Setter
        public Builder accessSessionInterfaceTemplateStickyTimer(Integer accessSessionInterfaceTemplateStickyTimer) {
            this.accessSessionInterfaceTemplateStickyTimer = Objects.requireNonNull(accessSessionInterfaceTemplateStickyTimer);
            return this;
        }
        @CustomType.Setter
        public Builder accessSessionMonitor(Boolean accessSessionMonitor) {
            this.accessSessionMonitor = Objects.requireNonNull(accessSessionMonitor);
            return this;
        }
        @CustomType.Setter
        public Builder accessSessionPortControl(String accessSessionPortControl) {
            this.accessSessionPortControl = Objects.requireNonNull(accessSessionPortControl);
            return this;
        }
        @CustomType.Setter
        public Builder authenticationPeriodic(Boolean authenticationPeriodic) {
            this.authenticationPeriodic = Objects.requireNonNull(authenticationPeriodic);
            return this;
        }
        @CustomType.Setter
        public Builder authenticationTimerReauthenticateRange(Integer authenticationTimerReauthenticateRange) {
            this.authenticationTimerReauthenticateRange = Objects.requireNonNull(authenticationTimerReauthenticateRange);
            return this;
        }
        @CustomType.Setter
        public Builder authenticationTimerReauthenticateServer(Boolean authenticationTimerReauthenticateServer) {
            this.authenticationTimerReauthenticateServer = Objects.requireNonNull(authenticationTimerReauthenticateServer);
            return this;
        }
        @CustomType.Setter
        public Builder ctsManual(Boolean ctsManual) {
            this.ctsManual = Objects.requireNonNull(ctsManual);
            return this;
        }
        @CustomType.Setter
        public Builder ctsManualPolicyStaticSgt(Integer ctsManualPolicyStaticSgt) {
            this.ctsManualPolicyStaticSgt = Objects.requireNonNull(ctsManualPolicyStaticSgt);
            return this;
        }
        @CustomType.Setter
        public Builder ctsManualPolicyStaticTrusted(Boolean ctsManualPolicyStaticTrusted) {
            this.ctsManualPolicyStaticTrusted = Objects.requireNonNull(ctsManualPolicyStaticTrusted);
            return this;
        }
        @CustomType.Setter
        public Builder ctsManualPropagateSgt(Boolean ctsManualPropagateSgt) {
            this.ctsManualPropagateSgt = Objects.requireNonNull(ctsManualPropagateSgt);
            return this;
        }
        @CustomType.Setter
        public Builder ctsRoleBasedEnforcement(Boolean ctsRoleBasedEnforcement) {
            this.ctsRoleBasedEnforcement = Objects.requireNonNull(ctsRoleBasedEnforcement);
            return this;
        }
        @CustomType.Setter
        public Builder device(@Nullable String device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder deviceTracking(Boolean deviceTracking) {
            this.deviceTracking = Objects.requireNonNull(deviceTracking);
            return this;
        }
        @CustomType.Setter
        public Builder deviceTrackingAttachPolicies(List<GetTemplateDeviceTrackingAttachPolicy> deviceTrackingAttachPolicies) {
            this.deviceTrackingAttachPolicies = Objects.requireNonNull(deviceTrackingAttachPolicies);
            return this;
        }
        public Builder deviceTrackingAttachPolicies(GetTemplateDeviceTrackingAttachPolicy... deviceTrackingAttachPolicies) {
            return deviceTrackingAttachPolicies(List.of(deviceTrackingAttachPolicies));
        }
        @CustomType.Setter
        public Builder deviceTrackingVlanRange(String deviceTrackingVlanRange) {
            this.deviceTrackingVlanRange = Objects.requireNonNull(deviceTrackingVlanRange);
            return this;
        }
        @CustomType.Setter
        public Builder dot1xMaxReauthReq(Integer dot1xMaxReauthReq) {
            this.dot1xMaxReauthReq = Objects.requireNonNull(dot1xMaxReauthReq);
            return this;
        }
        @CustomType.Setter
        public Builder dot1xMaxReq(Integer dot1xMaxReq) {
            this.dot1xMaxReq = Objects.requireNonNull(dot1xMaxReq);
            return this;
        }
        @CustomType.Setter
        public Builder dot1xPae(String dot1xPae) {
            this.dot1xPae = Objects.requireNonNull(dot1xPae);
            return this;
        }
        @CustomType.Setter
        public Builder dot1xTimeoutTxPeriod(Integer dot1xTimeoutTxPeriod) {
            this.dot1xTimeoutTxPeriod = Objects.requireNonNull(dot1xTimeoutTxPeriod);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipAccessGroups(List<GetTemplateIpAccessGroup> ipAccessGroups) {
            this.ipAccessGroups = Objects.requireNonNull(ipAccessGroups);
            return this;
        }
        public Builder ipAccessGroups(GetTemplateIpAccessGroup... ipAccessGroups) {
            return ipAccessGroups(List.of(ipAccessGroups));
        }
        @CustomType.Setter
        public Builder ipDhcpSnoopingLimitRate(Integer ipDhcpSnoopingLimitRate) {
            this.ipDhcpSnoopingLimitRate = Objects.requireNonNull(ipDhcpSnoopingLimitRate);
            return this;
        }
        @CustomType.Setter
        public Builder ipDhcpSnoopingTrust(Boolean ipDhcpSnoopingTrust) {
            this.ipDhcpSnoopingTrust = Objects.requireNonNull(ipDhcpSnoopingTrust);
            return this;
        }
        @CustomType.Setter
        public Builder loadInterval(Integer loadInterval) {
            this.loadInterval = Objects.requireNonNull(loadInterval);
            return this;
        }
        @CustomType.Setter
        public Builder mab(Boolean mab) {
            this.mab = Objects.requireNonNull(mab);
            return this;
        }
        @CustomType.Setter
        public Builder mabEap(Boolean mabEap) {
            this.mabEap = Objects.requireNonNull(mabEap);
            return this;
        }
        @CustomType.Setter
        public Builder servicePolicyInput(String servicePolicyInput) {
            this.servicePolicyInput = Objects.requireNonNull(servicePolicyInput);
            return this;
        }
        @CustomType.Setter
        public Builder servicePolicyOutput(String servicePolicyOutput) {
            this.servicePolicyOutput = Objects.requireNonNull(servicePolicyOutput);
            return this;
        }
        @CustomType.Setter
        public Builder servicePolicyTypeControlSubscriber(String servicePolicyTypeControlSubscriber) {
            this.servicePolicyTypeControlSubscriber = Objects.requireNonNull(servicePolicyTypeControlSubscriber);
            return this;
        }
        @CustomType.Setter
        public Builder sourceTemplate(String sourceTemplate) {
            this.sourceTemplate = Objects.requireNonNull(sourceTemplate);
            return this;
        }
        @CustomType.Setter
        public Builder spanningTreeBpduguardEnable(Boolean spanningTreeBpduguardEnable) {
            this.spanningTreeBpduguardEnable = Objects.requireNonNull(spanningTreeBpduguardEnable);
            return this;
        }
        @CustomType.Setter
        public Builder spanningTreePortfast(Boolean spanningTreePortfast) {
            this.spanningTreePortfast = Objects.requireNonNull(spanningTreePortfast);
            return this;
        }
        @CustomType.Setter
        public Builder spanningTreePortfastDisable(Boolean spanningTreePortfastDisable) {
            this.spanningTreePortfastDisable = Objects.requireNonNull(spanningTreePortfastDisable);
            return this;
        }
        @CustomType.Setter
        public Builder spanningTreePortfastEdge(Boolean spanningTreePortfastEdge) {
            this.spanningTreePortfastEdge = Objects.requireNonNull(spanningTreePortfastEdge);
            return this;
        }
        @CustomType.Setter
        public Builder spanningTreePortfastNetwork(Boolean spanningTreePortfastNetwork) {
            this.spanningTreePortfastNetwork = Objects.requireNonNull(spanningTreePortfastNetwork);
            return this;
        }
        @CustomType.Setter
        public Builder spanningTreeServicePolicy(Boolean spanningTreeServicePolicy) {
            this.spanningTreeServicePolicy = Objects.requireNonNull(spanningTreeServicePolicy);
            return this;
        }
        @CustomType.Setter
        public Builder stormControlActionShutdown(Boolean stormControlActionShutdown) {
            this.stormControlActionShutdown = Objects.requireNonNull(stormControlActionShutdown);
            return this;
        }
        @CustomType.Setter
        public Builder stormControlActionTrap(Boolean stormControlActionTrap) {
            this.stormControlActionTrap = Objects.requireNonNull(stormControlActionTrap);
            return this;
        }
        @CustomType.Setter
        public Builder stormControlBroadcastLevelBpsThreshold(Double stormControlBroadcastLevelBpsThreshold) {
            this.stormControlBroadcastLevelBpsThreshold = Objects.requireNonNull(stormControlBroadcastLevelBpsThreshold);
            return this;
        }
        @CustomType.Setter
        public Builder stormControlBroadcastLevelPpsThreshold(String stormControlBroadcastLevelPpsThreshold) {
            this.stormControlBroadcastLevelPpsThreshold = Objects.requireNonNull(stormControlBroadcastLevelPpsThreshold);
            return this;
        }
        @CustomType.Setter
        public Builder stormControlBroadcastLevelThreshold(Double stormControlBroadcastLevelThreshold) {
            this.stormControlBroadcastLevelThreshold = Objects.requireNonNull(stormControlBroadcastLevelThreshold);
            return this;
        }
        @CustomType.Setter
        public Builder stormControlMulticastLevelBpsThreshold(Double stormControlMulticastLevelBpsThreshold) {
            this.stormControlMulticastLevelBpsThreshold = Objects.requireNonNull(stormControlMulticastLevelBpsThreshold);
            return this;
        }
        @CustomType.Setter
        public Builder stormControlMulticastLevelPpsThreshold(String stormControlMulticastLevelPpsThreshold) {
            this.stormControlMulticastLevelPpsThreshold = Objects.requireNonNull(stormControlMulticastLevelPpsThreshold);
            return this;
        }
        @CustomType.Setter
        public Builder stormControlMulticastLevelThreshold(Double stormControlMulticastLevelThreshold) {
            this.stormControlMulticastLevelThreshold = Objects.requireNonNull(stormControlMulticastLevelThreshold);
            return this;
        }
        @CustomType.Setter
        public Builder subscriberAgingInactivityTimerProbe(Boolean subscriberAgingInactivityTimerProbe) {
            this.subscriberAgingInactivityTimerProbe = Objects.requireNonNull(subscriberAgingInactivityTimerProbe);
            return this;
        }
        @CustomType.Setter
        public Builder subscriberAgingInactivityTimerValue(Integer subscriberAgingInactivityTimerValue) {
            this.subscriberAgingInactivityTimerValue = Objects.requireNonNull(subscriberAgingInactivityTimerValue);
            return this;
        }
        @CustomType.Setter
        public Builder subscriberAgingProbe(Boolean subscriberAgingProbe) {
            this.subscriberAgingProbe = Objects.requireNonNull(subscriberAgingProbe);
            return this;
        }
        @CustomType.Setter
        public Builder switchportAccessVlan(Integer switchportAccessVlan) {
            this.switchportAccessVlan = Objects.requireNonNull(switchportAccessVlan);
            return this;
        }
        @CustomType.Setter
        public Builder switchportBlockUnicast(Boolean switchportBlockUnicast) {
            this.switchportBlockUnicast = Objects.requireNonNull(switchportBlockUnicast);
            return this;
        }
        @CustomType.Setter
        public Builder switchportModeAccess(Boolean switchportModeAccess) {
            this.switchportModeAccess = Objects.requireNonNull(switchportModeAccess);
            return this;
        }
        @CustomType.Setter
        public Builder switchportModeTrunk(Boolean switchportModeTrunk) {
            this.switchportModeTrunk = Objects.requireNonNull(switchportModeTrunk);
            return this;
        }
        @CustomType.Setter
        public Builder switchportNonegotiate(Boolean switchportNonegotiate) {
            this.switchportNonegotiate = Objects.requireNonNull(switchportNonegotiate);
            return this;
        }
        @CustomType.Setter
        public Builder switchportPortSecurity(Boolean switchportPortSecurity) {
            this.switchportPortSecurity = Objects.requireNonNull(switchportPortSecurity);
            return this;
        }
        @CustomType.Setter
        public Builder switchportPortSecurityAgingStatic(Boolean switchportPortSecurityAgingStatic) {
            this.switchportPortSecurityAgingStatic = Objects.requireNonNull(switchportPortSecurityAgingStatic);
            return this;
        }
        @CustomType.Setter
        public Builder switchportPortSecurityAgingTime(Integer switchportPortSecurityAgingTime) {
            this.switchportPortSecurityAgingTime = Objects.requireNonNull(switchportPortSecurityAgingTime);
            return this;
        }
        @CustomType.Setter
        public Builder switchportPortSecurityAgingType(Boolean switchportPortSecurityAgingType) {
            this.switchportPortSecurityAgingType = Objects.requireNonNull(switchportPortSecurityAgingType);
            return this;
        }
        @CustomType.Setter
        public Builder switchportPortSecurityAgingTypeInactivity(Boolean switchportPortSecurityAgingTypeInactivity) {
            this.switchportPortSecurityAgingTypeInactivity = Objects.requireNonNull(switchportPortSecurityAgingTypeInactivity);
            return this;
        }
        @CustomType.Setter
        public Builder switchportPortSecurityMaximumRanges(List<GetTemplateSwitchportPortSecurityMaximumRange> switchportPortSecurityMaximumRanges) {
            this.switchportPortSecurityMaximumRanges = Objects.requireNonNull(switchportPortSecurityMaximumRanges);
            return this;
        }
        public Builder switchportPortSecurityMaximumRanges(GetTemplateSwitchportPortSecurityMaximumRange... switchportPortSecurityMaximumRanges) {
            return switchportPortSecurityMaximumRanges(List.of(switchportPortSecurityMaximumRanges));
        }
        @CustomType.Setter
        public Builder switchportPortSecurityViolationProtect(Boolean switchportPortSecurityViolationProtect) {
            this.switchportPortSecurityViolationProtect = Objects.requireNonNull(switchportPortSecurityViolationProtect);
            return this;
        }
        @CustomType.Setter
        public Builder switchportPortSecurityViolationRestrict(Boolean switchportPortSecurityViolationRestrict) {
            this.switchportPortSecurityViolationRestrict = Objects.requireNonNull(switchportPortSecurityViolationRestrict);
            return this;
        }
        @CustomType.Setter
        public Builder switchportPortSecurityViolationShutdown(Boolean switchportPortSecurityViolationShutdown) {
            this.switchportPortSecurityViolationShutdown = Objects.requireNonNull(switchportPortSecurityViolationShutdown);
            return this;
        }
        @CustomType.Setter
        public Builder switchportPrivateVlanHostAssociationPrimaryRange(Integer switchportPrivateVlanHostAssociationPrimaryRange) {
            this.switchportPrivateVlanHostAssociationPrimaryRange = Objects.requireNonNull(switchportPrivateVlanHostAssociationPrimaryRange);
            return this;
        }
        @CustomType.Setter
        public Builder switchportPrivateVlanHostAssociationSecondaryRange(Integer switchportPrivateVlanHostAssociationSecondaryRange) {
            this.switchportPrivateVlanHostAssociationSecondaryRange = Objects.requireNonNull(switchportPrivateVlanHostAssociationSecondaryRange);
            return this;
        }
        @CustomType.Setter
        public Builder switchportTrunkAllowedVlans(String switchportTrunkAllowedVlans) {
            this.switchportTrunkAllowedVlans = Objects.requireNonNull(switchportTrunkAllowedVlans);
            return this;
        }
        @CustomType.Setter
        public Builder switchportTrunkAllowedVlansAll(Boolean switchportTrunkAllowedVlansAll) {
            this.switchportTrunkAllowedVlansAll = Objects.requireNonNull(switchportTrunkAllowedVlansAll);
            return this;
        }
        @CustomType.Setter
        public Builder switchportTrunkAllowedVlansNone(Boolean switchportTrunkAllowedVlansNone) {
            this.switchportTrunkAllowedVlansNone = Objects.requireNonNull(switchportTrunkAllowedVlansNone);
            return this;
        }
        @CustomType.Setter
        public Builder switchportTrunkNativeVlanTag(Boolean switchportTrunkNativeVlanTag) {
            this.switchportTrunkNativeVlanTag = Objects.requireNonNull(switchportTrunkNativeVlanTag);
            return this;
        }
        @CustomType.Setter
        public Builder switchportTrunkNativeVlanVlanId(Integer switchportTrunkNativeVlanVlanId) {
            this.switchportTrunkNativeVlanVlanId = Objects.requireNonNull(switchportTrunkNativeVlanVlanId);
            return this;
        }
        @CustomType.Setter
        public Builder switchportVoiceVlan(Integer switchportVoiceVlan) {
            this.switchportVoiceVlan = Objects.requireNonNull(switchportVoiceVlan);
            return this;
        }
        @CustomType.Setter
        public Builder templateName(String templateName) {
            this.templateName = Objects.requireNonNull(templateName);
            return this;
        }
        public GetTemplateResult build() {
            final var o = new GetTemplateResult();
            o.accessSessionClosed = accessSessionClosed;
            o.accessSessionControlDirection = accessSessionControlDirection;
            o.accessSessionHostMode = accessSessionHostMode;
            o.accessSessionInterfaceTemplateSticky = accessSessionInterfaceTemplateSticky;
            o.accessSessionInterfaceTemplateStickyTimer = accessSessionInterfaceTemplateStickyTimer;
            o.accessSessionMonitor = accessSessionMonitor;
            o.accessSessionPortControl = accessSessionPortControl;
            o.authenticationPeriodic = authenticationPeriodic;
            o.authenticationTimerReauthenticateRange = authenticationTimerReauthenticateRange;
            o.authenticationTimerReauthenticateServer = authenticationTimerReauthenticateServer;
            o.ctsManual = ctsManual;
            o.ctsManualPolicyStaticSgt = ctsManualPolicyStaticSgt;
            o.ctsManualPolicyStaticTrusted = ctsManualPolicyStaticTrusted;
            o.ctsManualPropagateSgt = ctsManualPropagateSgt;
            o.ctsRoleBasedEnforcement = ctsRoleBasedEnforcement;
            o.device = device;
            o.deviceTracking = deviceTracking;
            o.deviceTrackingAttachPolicies = deviceTrackingAttachPolicies;
            o.deviceTrackingVlanRange = deviceTrackingVlanRange;
            o.dot1xMaxReauthReq = dot1xMaxReauthReq;
            o.dot1xMaxReq = dot1xMaxReq;
            o.dot1xPae = dot1xPae;
            o.dot1xTimeoutTxPeriod = dot1xTimeoutTxPeriod;
            o.id = id;
            o.ipAccessGroups = ipAccessGroups;
            o.ipDhcpSnoopingLimitRate = ipDhcpSnoopingLimitRate;
            o.ipDhcpSnoopingTrust = ipDhcpSnoopingTrust;
            o.loadInterval = loadInterval;
            o.mab = mab;
            o.mabEap = mabEap;
            o.servicePolicyInput = servicePolicyInput;
            o.servicePolicyOutput = servicePolicyOutput;
            o.servicePolicyTypeControlSubscriber = servicePolicyTypeControlSubscriber;
            o.sourceTemplate = sourceTemplate;
            o.spanningTreeBpduguardEnable = spanningTreeBpduguardEnable;
            o.spanningTreePortfast = spanningTreePortfast;
            o.spanningTreePortfastDisable = spanningTreePortfastDisable;
            o.spanningTreePortfastEdge = spanningTreePortfastEdge;
            o.spanningTreePortfastNetwork = spanningTreePortfastNetwork;
            o.spanningTreeServicePolicy = spanningTreeServicePolicy;
            o.stormControlActionShutdown = stormControlActionShutdown;
            o.stormControlActionTrap = stormControlActionTrap;
            o.stormControlBroadcastLevelBpsThreshold = stormControlBroadcastLevelBpsThreshold;
            o.stormControlBroadcastLevelPpsThreshold = stormControlBroadcastLevelPpsThreshold;
            o.stormControlBroadcastLevelThreshold = stormControlBroadcastLevelThreshold;
            o.stormControlMulticastLevelBpsThreshold = stormControlMulticastLevelBpsThreshold;
            o.stormControlMulticastLevelPpsThreshold = stormControlMulticastLevelPpsThreshold;
            o.stormControlMulticastLevelThreshold = stormControlMulticastLevelThreshold;
            o.subscriberAgingInactivityTimerProbe = subscriberAgingInactivityTimerProbe;
            o.subscriberAgingInactivityTimerValue = subscriberAgingInactivityTimerValue;
            o.subscriberAgingProbe = subscriberAgingProbe;
            o.switchportAccessVlan = switchportAccessVlan;
            o.switchportBlockUnicast = switchportBlockUnicast;
            o.switchportModeAccess = switchportModeAccess;
            o.switchportModeTrunk = switchportModeTrunk;
            o.switchportNonegotiate = switchportNonegotiate;
            o.switchportPortSecurity = switchportPortSecurity;
            o.switchportPortSecurityAgingStatic = switchportPortSecurityAgingStatic;
            o.switchportPortSecurityAgingTime = switchportPortSecurityAgingTime;
            o.switchportPortSecurityAgingType = switchportPortSecurityAgingType;
            o.switchportPortSecurityAgingTypeInactivity = switchportPortSecurityAgingTypeInactivity;
            o.switchportPortSecurityMaximumRanges = switchportPortSecurityMaximumRanges;
            o.switchportPortSecurityViolationProtect = switchportPortSecurityViolationProtect;
            o.switchportPortSecurityViolationRestrict = switchportPortSecurityViolationRestrict;
            o.switchportPortSecurityViolationShutdown = switchportPortSecurityViolationShutdown;
            o.switchportPrivateVlanHostAssociationPrimaryRange = switchportPrivateVlanHostAssociationPrimaryRange;
            o.switchportPrivateVlanHostAssociationSecondaryRange = switchportPrivateVlanHostAssociationSecondaryRange;
            o.switchportTrunkAllowedVlans = switchportTrunkAllowedVlans;
            o.switchportTrunkAllowedVlansAll = switchportTrunkAllowedVlansAll;
            o.switchportTrunkAllowedVlansNone = switchportTrunkAllowedVlansNone;
            o.switchportTrunkNativeVlanTag = switchportTrunkNativeVlanTag;
            o.switchportTrunkNativeVlanVlanId = switchportTrunkNativeVlanVlanId;
            o.switchportVoiceVlan = switchportVoiceVlan;
            o.templateName = templateName;
            return o;
        }
    }
}
