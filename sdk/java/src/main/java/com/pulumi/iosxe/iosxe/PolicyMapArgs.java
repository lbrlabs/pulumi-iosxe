// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyMapArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyMapArgs Empty = new PolicyMapArgs();

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * Name of the policy map
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the policy map
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Domain name of the policy map
     * 
     */
    @Import(name="subscriber")
    private @Nullable Output<Boolean> subscriber;

    /**
     * @return Domain name of the policy map
     * 
     */
    public Optional<Output<Boolean>> subscriber() {
        return Optional.ofNullable(this.subscriber);
    }

    /**
     * type of the policy-map - Choices: `access-control`, `appnav`, `control`, `epbr`, `inspect`, `packet-service`,
     * `performance-monitor`, `queueing`, `service`, `service-chain`, `umbrella`
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return type of the policy-map - Choices: `access-control`, `appnav`, `control`, `epbr`, `inspect`, `packet-service`,
     * `performance-monitor`, `queueing`, `service`, `service-chain`, `umbrella`
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private PolicyMapArgs() {}

    private PolicyMapArgs(PolicyMapArgs $) {
        this.device = $.device;
        this.name = $.name;
        this.subscriber = $.subscriber;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyMapArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyMapArgs $;

        public Builder() {
            $ = new PolicyMapArgs();
        }

        public Builder(PolicyMapArgs defaults) {
            $ = new PolicyMapArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param name Name of the policy map
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the policy map
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param subscriber Domain name of the policy map
         * 
         * @return builder
         * 
         */
        public Builder subscriber(@Nullable Output<Boolean> subscriber) {
            $.subscriber = subscriber;
            return this;
        }

        /**
         * @param subscriber Domain name of the policy map
         * 
         * @return builder
         * 
         */
        public Builder subscriber(Boolean subscriber) {
            return subscriber(Output.of(subscriber));
        }

        /**
         * @param type type of the policy-map - Choices: `access-control`, `appnav`, `control`, `epbr`, `inspect`, `packet-service`,
         * `performance-monitor`, `queueing`, `service`, `service-chain`, `umbrella`
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type type of the policy-map - Choices: `access-control`, `appnav`, `control`, `epbr`, `inspect`, `packet-service`,
         * `performance-monitor`, `queueing`, `service`, `service-chain`, `umbrella`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public PolicyMapArgs build() {
            return $;
        }
    }

}
