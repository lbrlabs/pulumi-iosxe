// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class CryptoIkev2PolicyProposalArgs extends com.pulumi.resources.ResourceArgs {

    public static final CryptoIkev2PolicyProposalArgs Empty = new CryptoIkev2PolicyProposalArgs();

    /**
     * Specify Proposal
     * 
     */
    @Import(name="proposals", required=true)
    private Output<String> proposals;

    /**
     * @return Specify Proposal
     * 
     */
    public Output<String> proposals() {
        return this.proposals;
    }

    private CryptoIkev2PolicyProposalArgs() {}

    private CryptoIkev2PolicyProposalArgs(CryptoIkev2PolicyProposalArgs $) {
        this.proposals = $.proposals;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CryptoIkev2PolicyProposalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CryptoIkev2PolicyProposalArgs $;

        public Builder() {
            $ = new CryptoIkev2PolicyProposalArgs();
        }

        public Builder(CryptoIkev2PolicyProposalArgs defaults) {
            $ = new CryptoIkev2PolicyProposalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param proposals Specify Proposal
         * 
         * @return builder
         * 
         */
        public Builder proposals(Output<String> proposals) {
            $.proposals = proposals;
            return this;
        }

        /**
         * @param proposals Specify Proposal
         * 
         * @return builder
         * 
         */
        public Builder proposals(String proposals) {
            return proposals(Output.of(proposals));
        }

        public CryptoIkev2PolicyProposalArgs build() {
            $.proposals = Objects.requireNonNull($.proposals, "expected parameter 'proposals' to be non-null");
            return $;
        }
    }

}
