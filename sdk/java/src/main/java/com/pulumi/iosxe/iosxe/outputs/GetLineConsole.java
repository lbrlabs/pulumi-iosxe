// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLineConsole {
    private Integer execTimeoutMinutes;
    private Integer execTimeoutSeconds;
    private String first;
    private String loginAuthentication;
    private Boolean loginLocal;
    private String password;
    private Integer passwordLevel;
    private String passwordType;
    private Integer privilegeLevel;
    private String stopbits;

    private GetLineConsole() {}
    public Integer execTimeoutMinutes() {
        return this.execTimeoutMinutes;
    }
    public Integer execTimeoutSeconds() {
        return this.execTimeoutSeconds;
    }
    public String first() {
        return this.first;
    }
    public String loginAuthentication() {
        return this.loginAuthentication;
    }
    public Boolean loginLocal() {
        return this.loginLocal;
    }
    public String password() {
        return this.password;
    }
    public Integer passwordLevel() {
        return this.passwordLevel;
    }
    public String passwordType() {
        return this.passwordType;
    }
    public Integer privilegeLevel() {
        return this.privilegeLevel;
    }
    public String stopbits() {
        return this.stopbits;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLineConsole defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer execTimeoutMinutes;
        private Integer execTimeoutSeconds;
        private String first;
        private String loginAuthentication;
        private Boolean loginLocal;
        private String password;
        private Integer passwordLevel;
        private String passwordType;
        private Integer privilegeLevel;
        private String stopbits;
        public Builder() {}
        public Builder(GetLineConsole defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.execTimeoutMinutes = defaults.execTimeoutMinutes;
    	      this.execTimeoutSeconds = defaults.execTimeoutSeconds;
    	      this.first = defaults.first;
    	      this.loginAuthentication = defaults.loginAuthentication;
    	      this.loginLocal = defaults.loginLocal;
    	      this.password = defaults.password;
    	      this.passwordLevel = defaults.passwordLevel;
    	      this.passwordType = defaults.passwordType;
    	      this.privilegeLevel = defaults.privilegeLevel;
    	      this.stopbits = defaults.stopbits;
        }

        @CustomType.Setter
        public Builder execTimeoutMinutes(Integer execTimeoutMinutes) {
            this.execTimeoutMinutes = Objects.requireNonNull(execTimeoutMinutes);
            return this;
        }
        @CustomType.Setter
        public Builder execTimeoutSeconds(Integer execTimeoutSeconds) {
            this.execTimeoutSeconds = Objects.requireNonNull(execTimeoutSeconds);
            return this;
        }
        @CustomType.Setter
        public Builder first(String first) {
            this.first = Objects.requireNonNull(first);
            return this;
        }
        @CustomType.Setter
        public Builder loginAuthentication(String loginAuthentication) {
            this.loginAuthentication = Objects.requireNonNull(loginAuthentication);
            return this;
        }
        @CustomType.Setter
        public Builder loginLocal(Boolean loginLocal) {
            this.loginLocal = Objects.requireNonNull(loginLocal);
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        @CustomType.Setter
        public Builder passwordLevel(Integer passwordLevel) {
            this.passwordLevel = Objects.requireNonNull(passwordLevel);
            return this;
        }
        @CustomType.Setter
        public Builder passwordType(String passwordType) {
            this.passwordType = Objects.requireNonNull(passwordType);
            return this;
        }
        @CustomType.Setter
        public Builder privilegeLevel(Integer privilegeLevel) {
            this.privilegeLevel = Objects.requireNonNull(privilegeLevel);
            return this;
        }
        @CustomType.Setter
        public Builder stopbits(String stopbits) {
            this.stopbits = Objects.requireNonNull(stopbits);
            return this;
        }
        public GetLineConsole build() {
            final var o = new GetLineConsole();
            o.execTimeoutMinutes = execTimeoutMinutes;
            o.execTimeoutSeconds = execTimeoutSeconds;
            o.first = first;
            o.loginAuthentication = loginAuthentication;
            o.loginLocal = loginLocal;
            o.password = password;
            o.passwordLevel = passwordLevel;
            o.passwordType = passwordType;
            o.privilegeLevel = privilegeLevel;
            o.stopbits = stopbits;
            return o;
        }
    }
}
