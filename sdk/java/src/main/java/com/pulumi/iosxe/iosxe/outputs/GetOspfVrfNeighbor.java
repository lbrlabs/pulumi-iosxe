// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetOspfVrfNeighbor {
    /**
     * @return OSPF cost for point-to-multipoint neighbor
     * 
     */
    private Integer cost;
    /**
     * @return Neighbor address
     * 
     */
    private String ip;
    /**
     * @return OSPF priority of non-broadcast neighbor
     * 
     */
    private Integer priority;

    private GetOspfVrfNeighbor() {}
    /**
     * @return OSPF cost for point-to-multipoint neighbor
     * 
     */
    public Integer cost() {
        return this.cost;
    }
    /**
     * @return Neighbor address
     * 
     */
    public String ip() {
        return this.ip;
    }
    /**
     * @return OSPF priority of non-broadcast neighbor
     * 
     */
    public Integer priority() {
        return this.priority;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOspfVrfNeighbor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer cost;
        private String ip;
        private Integer priority;
        public Builder() {}
        public Builder(GetOspfVrfNeighbor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cost = defaults.cost;
    	      this.ip = defaults.ip;
    	      this.priority = defaults.priority;
        }

        @CustomType.Setter
        public Builder cost(Integer cost) {
            this.cost = Objects.requireNonNull(cost);
            return this;
        }
        @CustomType.Setter
        public Builder ip(String ip) {
            this.ip = Objects.requireNonNull(ip);
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            this.priority = Objects.requireNonNull(priority);
            return this;
        }
        public GetOspfVrfNeighbor build() {
            final var o = new GetOspfVrfNeighbor();
            o.cost = cost;
            o.ip = ip;
            o.priority = priority;
            return o;
        }
    }
}
