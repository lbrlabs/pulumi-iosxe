// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEvpnResult {
    /**
     * @return Advertise Default Gateway MAC/IP routes
     * 
     */
    private Boolean defaultGatewayAdvertise;
    /**
     * @return A device name from the provider configuration.
     * 
     */
    private @Nullable String device;
    /**
     * @return The path of the retrieved object.
     * 
     */
    private String id;
    /**
     * @return Number of IP moves within specified time interval
     * 
     */
    private Integer ipDuplicationLimit;
    /**
     * @return IP duplication timer
     * 
     */
    private Integer ipDuplicationTime;
    /**
     * @return Peer state transition logging
     * 
     */
    private Boolean loggingPeerState;
    /**
     * @return Number of MAC moves within specified time interval
     * 
     */
    private Integer macDuplicationLimit;
    /**
     * @return MAC duplication timer
     * 
     */
    private Integer macDuplicationTime;
    /**
     * @return Ingress replication
     * 
     */
    private Boolean replicationTypeIngress;
    /**
     * @return mp2mp replication
     * 
     */
    private Boolean replicationTypeMp2mp;
    /**
     * @return p2mp replication
     * 
     */
    private Boolean replicationTypeP2mp;
    /**
     * @return Static replication
     * 
     */
    private Boolean replicationTypeStatic;
    /**
     * @return Set vni-based route-target
     * 
     */
    private Boolean routeTargetAutoVni;
    /**
     * @return Loopback interface
     * 
     */
    private Integer routerIdLoopback;

    private GetEvpnResult() {}
    /**
     * @return Advertise Default Gateway MAC/IP routes
     * 
     */
    public Boolean defaultGatewayAdvertise() {
        return this.defaultGatewayAdvertise;
    }
    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    /**
     * @return The path of the retrieved object.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Number of IP moves within specified time interval
     * 
     */
    public Integer ipDuplicationLimit() {
        return this.ipDuplicationLimit;
    }
    /**
     * @return IP duplication timer
     * 
     */
    public Integer ipDuplicationTime() {
        return this.ipDuplicationTime;
    }
    /**
     * @return Peer state transition logging
     * 
     */
    public Boolean loggingPeerState() {
        return this.loggingPeerState;
    }
    /**
     * @return Number of MAC moves within specified time interval
     * 
     */
    public Integer macDuplicationLimit() {
        return this.macDuplicationLimit;
    }
    /**
     * @return MAC duplication timer
     * 
     */
    public Integer macDuplicationTime() {
        return this.macDuplicationTime;
    }
    /**
     * @return Ingress replication
     * 
     */
    public Boolean replicationTypeIngress() {
        return this.replicationTypeIngress;
    }
    /**
     * @return mp2mp replication
     * 
     */
    public Boolean replicationTypeMp2mp() {
        return this.replicationTypeMp2mp;
    }
    /**
     * @return p2mp replication
     * 
     */
    public Boolean replicationTypeP2mp() {
        return this.replicationTypeP2mp;
    }
    /**
     * @return Static replication
     * 
     */
    public Boolean replicationTypeStatic() {
        return this.replicationTypeStatic;
    }
    /**
     * @return Set vni-based route-target
     * 
     */
    public Boolean routeTargetAutoVni() {
        return this.routeTargetAutoVni;
    }
    /**
     * @return Loopback interface
     * 
     */
    public Integer routerIdLoopback() {
        return this.routerIdLoopback;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEvpnResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean defaultGatewayAdvertise;
        private @Nullable String device;
        private String id;
        private Integer ipDuplicationLimit;
        private Integer ipDuplicationTime;
        private Boolean loggingPeerState;
        private Integer macDuplicationLimit;
        private Integer macDuplicationTime;
        private Boolean replicationTypeIngress;
        private Boolean replicationTypeMp2mp;
        private Boolean replicationTypeP2mp;
        private Boolean replicationTypeStatic;
        private Boolean routeTargetAutoVni;
        private Integer routerIdLoopback;
        public Builder() {}
        public Builder(GetEvpnResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultGatewayAdvertise = defaults.defaultGatewayAdvertise;
    	      this.device = defaults.device;
    	      this.id = defaults.id;
    	      this.ipDuplicationLimit = defaults.ipDuplicationLimit;
    	      this.ipDuplicationTime = defaults.ipDuplicationTime;
    	      this.loggingPeerState = defaults.loggingPeerState;
    	      this.macDuplicationLimit = defaults.macDuplicationLimit;
    	      this.macDuplicationTime = defaults.macDuplicationTime;
    	      this.replicationTypeIngress = defaults.replicationTypeIngress;
    	      this.replicationTypeMp2mp = defaults.replicationTypeMp2mp;
    	      this.replicationTypeP2mp = defaults.replicationTypeP2mp;
    	      this.replicationTypeStatic = defaults.replicationTypeStatic;
    	      this.routeTargetAutoVni = defaults.routeTargetAutoVni;
    	      this.routerIdLoopback = defaults.routerIdLoopback;
        }

        @CustomType.Setter
        public Builder defaultGatewayAdvertise(Boolean defaultGatewayAdvertise) {
            this.defaultGatewayAdvertise = Objects.requireNonNull(defaultGatewayAdvertise);
            return this;
        }
        @CustomType.Setter
        public Builder device(@Nullable String device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipDuplicationLimit(Integer ipDuplicationLimit) {
            this.ipDuplicationLimit = Objects.requireNonNull(ipDuplicationLimit);
            return this;
        }
        @CustomType.Setter
        public Builder ipDuplicationTime(Integer ipDuplicationTime) {
            this.ipDuplicationTime = Objects.requireNonNull(ipDuplicationTime);
            return this;
        }
        @CustomType.Setter
        public Builder loggingPeerState(Boolean loggingPeerState) {
            this.loggingPeerState = Objects.requireNonNull(loggingPeerState);
            return this;
        }
        @CustomType.Setter
        public Builder macDuplicationLimit(Integer macDuplicationLimit) {
            this.macDuplicationLimit = Objects.requireNonNull(macDuplicationLimit);
            return this;
        }
        @CustomType.Setter
        public Builder macDuplicationTime(Integer macDuplicationTime) {
            this.macDuplicationTime = Objects.requireNonNull(macDuplicationTime);
            return this;
        }
        @CustomType.Setter
        public Builder replicationTypeIngress(Boolean replicationTypeIngress) {
            this.replicationTypeIngress = Objects.requireNonNull(replicationTypeIngress);
            return this;
        }
        @CustomType.Setter
        public Builder replicationTypeMp2mp(Boolean replicationTypeMp2mp) {
            this.replicationTypeMp2mp = Objects.requireNonNull(replicationTypeMp2mp);
            return this;
        }
        @CustomType.Setter
        public Builder replicationTypeP2mp(Boolean replicationTypeP2mp) {
            this.replicationTypeP2mp = Objects.requireNonNull(replicationTypeP2mp);
            return this;
        }
        @CustomType.Setter
        public Builder replicationTypeStatic(Boolean replicationTypeStatic) {
            this.replicationTypeStatic = Objects.requireNonNull(replicationTypeStatic);
            return this;
        }
        @CustomType.Setter
        public Builder routeTargetAutoVni(Boolean routeTargetAutoVni) {
            this.routeTargetAutoVni = Objects.requireNonNull(routeTargetAutoVni);
            return this;
        }
        @CustomType.Setter
        public Builder routerIdLoopback(Integer routerIdLoopback) {
            this.routerIdLoopback = Objects.requireNonNull(routerIdLoopback);
            return this;
        }
        public GetEvpnResult build() {
            final var o = new GetEvpnResult();
            o.defaultGatewayAdvertise = defaultGatewayAdvertise;
            o.device = device;
            o.id = id;
            o.ipDuplicationLimit = ipDuplicationLimit;
            o.ipDuplicationTime = ipDuplicationTime;
            o.loggingPeerState = loggingPeerState;
            o.macDuplicationLimit = macDuplicationLimit;
            o.macDuplicationTime = macDuplicationTime;
            o.replicationTypeIngress = replicationTypeIngress;
            o.replicationTypeMp2mp = replicationTypeMp2mp;
            o.replicationTypeP2mp = replicationTypeP2mp;
            o.replicationTypeStatic = replicationTypeStatic;
            o.routeTargetAutoVni = routeTargetAutoVni;
            o.routerIdLoopback = routerIdLoopback;
            return o;
        }
    }
}
