// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LineConsoleArgs extends com.pulumi.resources.ResourceArgs {

    public static final LineConsoleArgs Empty = new LineConsoleArgs();

    @Import(name="execTimeoutMinutes")
    private @Nullable Output<Integer> execTimeoutMinutes;

    public Optional<Output<Integer>> execTimeoutMinutes() {
        return Optional.ofNullable(this.execTimeoutMinutes);
    }

    @Import(name="execTimeoutSeconds")
    private @Nullable Output<Integer> execTimeoutSeconds;

    public Optional<Output<Integer>> execTimeoutSeconds() {
        return Optional.ofNullable(this.execTimeoutSeconds);
    }

    @Import(name="first", required=true)
    private Output<String> first;

    public Output<String> first() {
        return this.first;
    }

    @Import(name="loginAuthentication")
    private @Nullable Output<String> loginAuthentication;

    public Optional<Output<String>> loginAuthentication() {
        return Optional.ofNullable(this.loginAuthentication);
    }

    @Import(name="loginLocal")
    private @Nullable Output<Boolean> loginLocal;

    public Optional<Output<Boolean>> loginLocal() {
        return Optional.ofNullable(this.loginLocal);
    }

    @Import(name="password")
    private @Nullable Output<String> password;

    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    @Import(name="passwordLevel")
    private @Nullable Output<Integer> passwordLevel;

    public Optional<Output<Integer>> passwordLevel() {
        return Optional.ofNullable(this.passwordLevel);
    }

    @Import(name="passwordType")
    private @Nullable Output<String> passwordType;

    public Optional<Output<String>> passwordType() {
        return Optional.ofNullable(this.passwordType);
    }

    @Import(name="privilegeLevel")
    private @Nullable Output<Integer> privilegeLevel;

    public Optional<Output<Integer>> privilegeLevel() {
        return Optional.ofNullable(this.privilegeLevel);
    }

    @Import(name="stopbits")
    private @Nullable Output<String> stopbits;

    public Optional<Output<String>> stopbits() {
        return Optional.ofNullable(this.stopbits);
    }

    private LineConsoleArgs() {}

    private LineConsoleArgs(LineConsoleArgs $) {
        this.execTimeoutMinutes = $.execTimeoutMinutes;
        this.execTimeoutSeconds = $.execTimeoutSeconds;
        this.first = $.first;
        this.loginAuthentication = $.loginAuthentication;
        this.loginLocal = $.loginLocal;
        this.password = $.password;
        this.passwordLevel = $.passwordLevel;
        this.passwordType = $.passwordType;
        this.privilegeLevel = $.privilegeLevel;
        this.stopbits = $.stopbits;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LineConsoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LineConsoleArgs $;

        public Builder() {
            $ = new LineConsoleArgs();
        }

        public Builder(LineConsoleArgs defaults) {
            $ = new LineConsoleArgs(Objects.requireNonNull(defaults));
        }

        public Builder execTimeoutMinutes(@Nullable Output<Integer> execTimeoutMinutes) {
            $.execTimeoutMinutes = execTimeoutMinutes;
            return this;
        }

        public Builder execTimeoutMinutes(Integer execTimeoutMinutes) {
            return execTimeoutMinutes(Output.of(execTimeoutMinutes));
        }

        public Builder execTimeoutSeconds(@Nullable Output<Integer> execTimeoutSeconds) {
            $.execTimeoutSeconds = execTimeoutSeconds;
            return this;
        }

        public Builder execTimeoutSeconds(Integer execTimeoutSeconds) {
            return execTimeoutSeconds(Output.of(execTimeoutSeconds));
        }

        public Builder first(Output<String> first) {
            $.first = first;
            return this;
        }

        public Builder first(String first) {
            return first(Output.of(first));
        }

        public Builder loginAuthentication(@Nullable Output<String> loginAuthentication) {
            $.loginAuthentication = loginAuthentication;
            return this;
        }

        public Builder loginAuthentication(String loginAuthentication) {
            return loginAuthentication(Output.of(loginAuthentication));
        }

        public Builder loginLocal(@Nullable Output<Boolean> loginLocal) {
            $.loginLocal = loginLocal;
            return this;
        }

        public Builder loginLocal(Boolean loginLocal) {
            return loginLocal(Output.of(loginLocal));
        }

        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder passwordLevel(@Nullable Output<Integer> passwordLevel) {
            $.passwordLevel = passwordLevel;
            return this;
        }

        public Builder passwordLevel(Integer passwordLevel) {
            return passwordLevel(Output.of(passwordLevel));
        }

        public Builder passwordType(@Nullable Output<String> passwordType) {
            $.passwordType = passwordType;
            return this;
        }

        public Builder passwordType(String passwordType) {
            return passwordType(Output.of(passwordType));
        }

        public Builder privilegeLevel(@Nullable Output<Integer> privilegeLevel) {
            $.privilegeLevel = privilegeLevel;
            return this;
        }

        public Builder privilegeLevel(Integer privilegeLevel) {
            return privilegeLevel(Output.of(privilegeLevel));
        }

        public Builder stopbits(@Nullable Output<String> stopbits) {
            $.stopbits = stopbits;
            return this;
        }

        public Builder stopbits(String stopbits) {
            return stopbits(Output.of(stopbits));
        }

        public LineConsoleArgs build() {
            $.first = Objects.requireNonNull($.first, "expected parameter 'first' to be non-null");
            return $;
        }
    }

}
