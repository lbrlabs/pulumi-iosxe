// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.iosxe.iosxe.outputs.GetRadiusServerAttribute;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRadiusServerResult {
    /**
     * @return Customize selected radius attributes
     * 
     */
    private List<GetRadiusServerAttribute> attributes;
    /**
     * @return The time during which no properly formed response must be received from the RADIUS server
     * 
     */
    private Integer deadCriteriaTime;
    /**
     * @return The number of times the router must fail to receive a response from the radius server to mark it as dead
     * 
     */
    private Integer deadCriteriaTries;
    /**
     * @return Time to stop using a server that does not respond
     * 
     */
    private Integer deadtime;
    /**
     * @return A device name from the provider configuration.
     * 
     */
    private @Nullable String device;
    /**
     * @return The path of the retrieved object.
     * 
     */
    private String id;

    private GetRadiusServerResult() {}
    /**
     * @return Customize selected radius attributes
     * 
     */
    public List<GetRadiusServerAttribute> attributes() {
        return this.attributes;
    }
    /**
     * @return The time during which no properly formed response must be received from the RADIUS server
     * 
     */
    public Integer deadCriteriaTime() {
        return this.deadCriteriaTime;
    }
    /**
     * @return The number of times the router must fail to receive a response from the radius server to mark it as dead
     * 
     */
    public Integer deadCriteriaTries() {
        return this.deadCriteriaTries;
    }
    /**
     * @return Time to stop using a server that does not respond
     * 
     */
    public Integer deadtime() {
        return this.deadtime;
    }
    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    /**
     * @return The path of the retrieved object.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRadiusServerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetRadiusServerAttribute> attributes;
        private Integer deadCriteriaTime;
        private Integer deadCriteriaTries;
        private Integer deadtime;
        private @Nullable String device;
        private String id;
        public Builder() {}
        public Builder(GetRadiusServerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributes = defaults.attributes;
    	      this.deadCriteriaTime = defaults.deadCriteriaTime;
    	      this.deadCriteriaTries = defaults.deadCriteriaTries;
    	      this.deadtime = defaults.deadtime;
    	      this.device = defaults.device;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder attributes(List<GetRadiusServerAttribute> attributes) {
            this.attributes = Objects.requireNonNull(attributes);
            return this;
        }
        public Builder attributes(GetRadiusServerAttribute... attributes) {
            return attributes(List.of(attributes));
        }
        @CustomType.Setter
        public Builder deadCriteriaTime(Integer deadCriteriaTime) {
            this.deadCriteriaTime = Objects.requireNonNull(deadCriteriaTime);
            return this;
        }
        @CustomType.Setter
        public Builder deadCriteriaTries(Integer deadCriteriaTries) {
            this.deadCriteriaTries = Objects.requireNonNull(deadCriteriaTries);
            return this;
        }
        @CustomType.Setter
        public Builder deadtime(Integer deadtime) {
            this.deadtime = Objects.requireNonNull(deadtime);
            return this;
        }
        @CustomType.Setter
        public Builder device(@Nullable String device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public GetRadiusServerResult build() {
            final var o = new GetRadiusServerResult();
            o.attributes = attributes;
            o.deadCriteriaTime = deadCriteriaTime;
            o.deadCriteriaTries = deadCriteriaTries;
            o.deadtime = deadtime;
            o.device = device;
            o.id = id;
            return o;
        }
    }
}
