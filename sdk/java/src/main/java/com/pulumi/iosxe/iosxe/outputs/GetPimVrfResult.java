// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.iosxe.iosxe.outputs.GetPimVrfRpAddress;
import com.pulumi.iosxe.iosxe.outputs.GetPimVrfRpCandidate;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPimVrfResult {
    private Boolean autorp;
    private Boolean autorpListener;
    private String bsrCandidateAcceptRpCandidate;
    private Integer bsrCandidateLoopback;
    private Integer bsrCandidateMask;
    private Integer bsrCandidatePriority;
    private Boolean cacheRpfOif;
    private @Nullable String device;
    private String id;
    private String rpAddress;
    private Boolean rpAddressBidir;
    private Boolean rpAddressOverride;
    private List<GetPimVrfRpAddress> rpAddresses;
    private List<GetPimVrfRpCandidate> rpCandidates;
    private Boolean ssmDefault;
    private String ssmRange;
    private String vrf;

    private GetPimVrfResult() {}
    public Boolean autorp() {
        return this.autorp;
    }
    public Boolean autorpListener() {
        return this.autorpListener;
    }
    public String bsrCandidateAcceptRpCandidate() {
        return this.bsrCandidateAcceptRpCandidate;
    }
    public Integer bsrCandidateLoopback() {
        return this.bsrCandidateLoopback;
    }
    public Integer bsrCandidateMask() {
        return this.bsrCandidateMask;
    }
    public Integer bsrCandidatePriority() {
        return this.bsrCandidatePriority;
    }
    public Boolean cacheRpfOif() {
        return this.cacheRpfOif;
    }
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    public String id() {
        return this.id;
    }
    public String rpAddress() {
        return this.rpAddress;
    }
    public Boolean rpAddressBidir() {
        return this.rpAddressBidir;
    }
    public Boolean rpAddressOverride() {
        return this.rpAddressOverride;
    }
    public List<GetPimVrfRpAddress> rpAddresses() {
        return this.rpAddresses;
    }
    public List<GetPimVrfRpCandidate> rpCandidates() {
        return this.rpCandidates;
    }
    public Boolean ssmDefault() {
        return this.ssmDefault;
    }
    public String ssmRange() {
        return this.ssmRange;
    }
    public String vrf() {
        return this.vrf;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPimVrfResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean autorp;
        private Boolean autorpListener;
        private String bsrCandidateAcceptRpCandidate;
        private Integer bsrCandidateLoopback;
        private Integer bsrCandidateMask;
        private Integer bsrCandidatePriority;
        private Boolean cacheRpfOif;
        private @Nullable String device;
        private String id;
        private String rpAddress;
        private Boolean rpAddressBidir;
        private Boolean rpAddressOverride;
        private List<GetPimVrfRpAddress> rpAddresses;
        private List<GetPimVrfRpCandidate> rpCandidates;
        private Boolean ssmDefault;
        private String ssmRange;
        private String vrf;
        public Builder() {}
        public Builder(GetPimVrfResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autorp = defaults.autorp;
    	      this.autorpListener = defaults.autorpListener;
    	      this.bsrCandidateAcceptRpCandidate = defaults.bsrCandidateAcceptRpCandidate;
    	      this.bsrCandidateLoopback = defaults.bsrCandidateLoopback;
    	      this.bsrCandidateMask = defaults.bsrCandidateMask;
    	      this.bsrCandidatePriority = defaults.bsrCandidatePriority;
    	      this.cacheRpfOif = defaults.cacheRpfOif;
    	      this.device = defaults.device;
    	      this.id = defaults.id;
    	      this.rpAddress = defaults.rpAddress;
    	      this.rpAddressBidir = defaults.rpAddressBidir;
    	      this.rpAddressOverride = defaults.rpAddressOverride;
    	      this.rpAddresses = defaults.rpAddresses;
    	      this.rpCandidates = defaults.rpCandidates;
    	      this.ssmDefault = defaults.ssmDefault;
    	      this.ssmRange = defaults.ssmRange;
    	      this.vrf = defaults.vrf;
        }

        @CustomType.Setter
        public Builder autorp(Boolean autorp) {
            this.autorp = Objects.requireNonNull(autorp);
            return this;
        }
        @CustomType.Setter
        public Builder autorpListener(Boolean autorpListener) {
            this.autorpListener = Objects.requireNonNull(autorpListener);
            return this;
        }
        @CustomType.Setter
        public Builder bsrCandidateAcceptRpCandidate(String bsrCandidateAcceptRpCandidate) {
            this.bsrCandidateAcceptRpCandidate = Objects.requireNonNull(bsrCandidateAcceptRpCandidate);
            return this;
        }
        @CustomType.Setter
        public Builder bsrCandidateLoopback(Integer bsrCandidateLoopback) {
            this.bsrCandidateLoopback = Objects.requireNonNull(bsrCandidateLoopback);
            return this;
        }
        @CustomType.Setter
        public Builder bsrCandidateMask(Integer bsrCandidateMask) {
            this.bsrCandidateMask = Objects.requireNonNull(bsrCandidateMask);
            return this;
        }
        @CustomType.Setter
        public Builder bsrCandidatePriority(Integer bsrCandidatePriority) {
            this.bsrCandidatePriority = Objects.requireNonNull(bsrCandidatePriority);
            return this;
        }
        @CustomType.Setter
        public Builder cacheRpfOif(Boolean cacheRpfOif) {
            this.cacheRpfOif = Objects.requireNonNull(cacheRpfOif);
            return this;
        }
        @CustomType.Setter
        public Builder device(@Nullable String device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder rpAddress(String rpAddress) {
            this.rpAddress = Objects.requireNonNull(rpAddress);
            return this;
        }
        @CustomType.Setter
        public Builder rpAddressBidir(Boolean rpAddressBidir) {
            this.rpAddressBidir = Objects.requireNonNull(rpAddressBidir);
            return this;
        }
        @CustomType.Setter
        public Builder rpAddressOverride(Boolean rpAddressOverride) {
            this.rpAddressOverride = Objects.requireNonNull(rpAddressOverride);
            return this;
        }
        @CustomType.Setter
        public Builder rpAddresses(List<GetPimVrfRpAddress> rpAddresses) {
            this.rpAddresses = Objects.requireNonNull(rpAddresses);
            return this;
        }
        public Builder rpAddresses(GetPimVrfRpAddress... rpAddresses) {
            return rpAddresses(List.of(rpAddresses));
        }
        @CustomType.Setter
        public Builder rpCandidates(List<GetPimVrfRpCandidate> rpCandidates) {
            this.rpCandidates = Objects.requireNonNull(rpCandidates);
            return this;
        }
        public Builder rpCandidates(GetPimVrfRpCandidate... rpCandidates) {
            return rpCandidates(List.of(rpCandidates));
        }
        @CustomType.Setter
        public Builder ssmDefault(Boolean ssmDefault) {
            this.ssmDefault = Objects.requireNonNull(ssmDefault);
            return this;
        }
        @CustomType.Setter
        public Builder ssmRange(String ssmRange) {
            this.ssmRange = Objects.requireNonNull(ssmRange);
            return this;
        }
        @CustomType.Setter
        public Builder vrf(String vrf) {
            this.vrf = Objects.requireNonNull(vrf);
            return this;
        }
        public GetPimVrfResult build() {
            final var o = new GetPimVrfResult();
            o.autorp = autorp;
            o.autorpListener = autorpListener;
            o.bsrCandidateAcceptRpCandidate = bsrCandidateAcceptRpCandidate;
            o.bsrCandidateLoopback = bsrCandidateLoopback;
            o.bsrCandidateMask = bsrCandidateMask;
            o.bsrCandidatePriority = bsrCandidatePriority;
            o.cacheRpfOif = cacheRpfOif;
            o.device = device;
            o.id = id;
            o.rpAddress = rpAddress;
            o.rpAddressBidir = rpAddressBidir;
            o.rpAddressOverride = rpAddressOverride;
            o.rpAddresses = rpAddresses;
            o.rpCandidates = rpCandidates;
            o.ssmDefault = ssmDefault;
            o.ssmRange = ssmRange;
            o.vrf = vrf;
            return o;
        }
    }
}
