// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBannerResult {
    private @Nullable String device;
    private String execBanner;
    private String id;
    private String loginBanner;
    private String motdBanner;
    private String promptTimeoutBanner;

    private GetBannerResult() {}
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    public String execBanner() {
        return this.execBanner;
    }
    public String id() {
        return this.id;
    }
    public String loginBanner() {
        return this.loginBanner;
    }
    public String motdBanner() {
        return this.motdBanner;
    }
    public String promptTimeoutBanner() {
        return this.promptTimeoutBanner;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBannerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String device;
        private String execBanner;
        private String id;
        private String loginBanner;
        private String motdBanner;
        private String promptTimeoutBanner;
        public Builder() {}
        public Builder(GetBannerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.device = defaults.device;
    	      this.execBanner = defaults.execBanner;
    	      this.id = defaults.id;
    	      this.loginBanner = defaults.loginBanner;
    	      this.motdBanner = defaults.motdBanner;
    	      this.promptTimeoutBanner = defaults.promptTimeoutBanner;
        }

        @CustomType.Setter
        public Builder device(@Nullable String device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder execBanner(String execBanner) {
            this.execBanner = Objects.requireNonNull(execBanner);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder loginBanner(String loginBanner) {
            this.loginBanner = Objects.requireNonNull(loginBanner);
            return this;
        }
        @CustomType.Setter
        public Builder motdBanner(String motdBanner) {
            this.motdBanner = Objects.requireNonNull(motdBanner);
            return this;
        }
        @CustomType.Setter
        public Builder promptTimeoutBanner(String promptTimeoutBanner) {
            this.promptTimeoutBanner = Objects.requireNonNull(promptTimeoutBanner);
            return this;
        }
        public GetBannerResult build() {
            final var o = new GetBannerResult();
            o.device = device;
            o.execBanner = execBanner;
            o.id = id;
            o.loginBanner = loginBanner;
            o.motdBanner = motdBanner;
            o.promptTimeoutBanner = promptTimeoutBanner;
            return o;
        }
    }
}
