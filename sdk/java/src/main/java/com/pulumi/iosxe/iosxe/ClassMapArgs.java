// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.iosxe.iosxe.inputs.ClassMapMatchActivatedServiceTemplateArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClassMapArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClassMapArgs Empty = new ClassMapArgs();

    /**
     * Class-Map description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Class-Map description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * match name of service template activated on session
     * 
     */
    @Import(name="matchActivatedServiceTemplates")
    private @Nullable Output<List<ClassMapMatchActivatedServiceTemplateArgs>> matchActivatedServiceTemplates;

    /**
     * @return match name of service template activated on session
     * 
     */
    public Optional<Output<List<ClassMapMatchActivatedServiceTemplateArgs>>> matchActivatedServiceTemplates() {
        return Optional.ofNullable(this.matchActivatedServiceTemplates);
    }

    /**
     * authorized
     * 
     */
    @Import(name="matchAuthorizationStatusAuthorized")
    private @Nullable Output<Boolean> matchAuthorizationStatusAuthorized;

    /**
     * @return authorized
     * 
     */
    public Optional<Output<Boolean>> matchAuthorizationStatusAuthorized() {
        return Optional.ofNullable(this.matchAuthorizationStatusAuthorized);
    }

    /**
     * unauthorized
     * 
     */
    @Import(name="matchAuthorizationStatusUnauthorized")
    private @Nullable Output<Boolean> matchAuthorizationStatusUnauthorized;

    /**
     * @return unauthorized
     * 
     */
    public Optional<Output<Boolean>> matchAuthorizationStatusUnauthorized() {
        return Optional.ofNullable(this.matchAuthorizationStatusUnauthorized);
    }

    /**
     * greater than
     * 
     */
    @Import(name="matchAuthorizingMethodPriorityGreaterThans")
    private @Nullable Output<List<Integer>> matchAuthorizingMethodPriorityGreaterThans;

    /**
     * @return greater than
     * 
     */
    public Optional<Output<List<Integer>>> matchAuthorizingMethodPriorityGreaterThans() {
        return Optional.ofNullable(this.matchAuthorizingMethodPriorityGreaterThans);
    }

    /**
     * dot1x
     * 
     */
    @Import(name="matchMethodDot1x")
    private @Nullable Output<Boolean> matchMethodDot1x;

    /**
     * @return dot1x
     * 
     */
    public Optional<Output<Boolean>> matchMethodDot1x() {
        return Optional.ofNullable(this.matchMethodDot1x);
    }

    /**
     * mab
     * 
     */
    @Import(name="matchMethodMab")
    private @Nullable Output<Boolean> matchMethodMab;

    /**
     * @return mab
     * 
     */
    public Optional<Output<Boolean>> matchMethodMab() {
        return Optional.ofNullable(this.matchMethodMab);
    }

    /**
     * aaa timeout type
     * 
     */
    @Import(name="matchResultTypeAaaTimeout")
    private @Nullable Output<Boolean> matchResultTypeAaaTimeout;

    /**
     * @return aaa timeout type
     * 
     */
    public Optional<Output<Boolean>> matchResultTypeAaaTimeout() {
        return Optional.ofNullable(this.matchResultTypeAaaTimeout);
    }

    /**
     * agent not found type
     * 
     */
    @Import(name="matchResultTypeMethodDot1xAgentNotFound")
    private @Nullable Output<Boolean> matchResultTypeMethodDot1xAgentNotFound;

    /**
     * @return agent not found type
     * 
     */
    public Optional<Output<Boolean>> matchResultTypeMethodDot1xAgentNotFound() {
        return Optional.ofNullable(this.matchResultTypeMethodDot1xAgentNotFound);
    }

    /**
     * failure type
     * 
     */
    @Import(name="matchResultTypeMethodDot1xAuthoritative")
    private @Nullable Output<Boolean> matchResultTypeMethodDot1xAuthoritative;

    /**
     * @return failure type
     * 
     */
    public Optional<Output<Boolean>> matchResultTypeMethodDot1xAuthoritative() {
        return Optional.ofNullable(this.matchResultTypeMethodDot1xAuthoritative);
    }

    /**
     * method_timeout type
     * 
     */
    @Import(name="matchResultTypeMethodDot1xMethodTimeout")
    private @Nullable Output<Boolean> matchResultTypeMethodDot1xMethodTimeout;

    /**
     * @return method_timeout type
     * 
     */
    public Optional<Output<Boolean>> matchResultTypeMethodDot1xMethodTimeout() {
        return Optional.ofNullable(this.matchResultTypeMethodDot1xMethodTimeout);
    }

    /**
     * failure type
     * 
     */
    @Import(name="matchResultTypeMethodMabAuthoritative")
    private @Nullable Output<Boolean> matchResultTypeMethodMabAuthoritative;

    /**
     * @return failure type
     * 
     */
    public Optional<Output<Boolean>> matchResultTypeMethodMabAuthoritative() {
        return Optional.ofNullable(this.matchResultTypeMethodMabAuthoritative);
    }

    /**
     * name of the class map
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return name of the class map
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
     * 
     */
    @Import(name="prematch", required=true)
    private Output<String> prematch;

    /**
     * @return Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
     * 
     */
    public Output<String> prematch() {
        return this.prematch;
    }

    /**
     * Domain name of the class map
     * 
     */
    @Import(name="subscriber")
    private @Nullable Output<Boolean> subscriber;

    /**
     * @return Domain name of the class map
     * 
     */
    public Optional<Output<Boolean>> subscriber() {
        return Optional.ofNullable(this.subscriber);
    }

    /**
     * type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
     * `stack`, `traffic`
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
     * `stack`, `traffic`
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ClassMapArgs() {}

    private ClassMapArgs(ClassMapArgs $) {
        this.description = $.description;
        this.device = $.device;
        this.matchActivatedServiceTemplates = $.matchActivatedServiceTemplates;
        this.matchAuthorizationStatusAuthorized = $.matchAuthorizationStatusAuthorized;
        this.matchAuthorizationStatusUnauthorized = $.matchAuthorizationStatusUnauthorized;
        this.matchAuthorizingMethodPriorityGreaterThans = $.matchAuthorizingMethodPriorityGreaterThans;
        this.matchMethodDot1x = $.matchMethodDot1x;
        this.matchMethodMab = $.matchMethodMab;
        this.matchResultTypeAaaTimeout = $.matchResultTypeAaaTimeout;
        this.matchResultTypeMethodDot1xAgentNotFound = $.matchResultTypeMethodDot1xAgentNotFound;
        this.matchResultTypeMethodDot1xAuthoritative = $.matchResultTypeMethodDot1xAuthoritative;
        this.matchResultTypeMethodDot1xMethodTimeout = $.matchResultTypeMethodDot1xMethodTimeout;
        this.matchResultTypeMethodMabAuthoritative = $.matchResultTypeMethodMabAuthoritative;
        this.name = $.name;
        this.prematch = $.prematch;
        this.subscriber = $.subscriber;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClassMapArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClassMapArgs $;

        public Builder() {
            $ = new ClassMapArgs();
        }

        public Builder(ClassMapArgs defaults) {
            $ = new ClassMapArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Class-Map description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Class-Map description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param matchActivatedServiceTemplates match name of service template activated on session
         * 
         * @return builder
         * 
         */
        public Builder matchActivatedServiceTemplates(@Nullable Output<List<ClassMapMatchActivatedServiceTemplateArgs>> matchActivatedServiceTemplates) {
            $.matchActivatedServiceTemplates = matchActivatedServiceTemplates;
            return this;
        }

        /**
         * @param matchActivatedServiceTemplates match name of service template activated on session
         * 
         * @return builder
         * 
         */
        public Builder matchActivatedServiceTemplates(List<ClassMapMatchActivatedServiceTemplateArgs> matchActivatedServiceTemplates) {
            return matchActivatedServiceTemplates(Output.of(matchActivatedServiceTemplates));
        }

        /**
         * @param matchActivatedServiceTemplates match name of service template activated on session
         * 
         * @return builder
         * 
         */
        public Builder matchActivatedServiceTemplates(ClassMapMatchActivatedServiceTemplateArgs... matchActivatedServiceTemplates) {
            return matchActivatedServiceTemplates(List.of(matchActivatedServiceTemplates));
        }

        /**
         * @param matchAuthorizationStatusAuthorized authorized
         * 
         * @return builder
         * 
         */
        public Builder matchAuthorizationStatusAuthorized(@Nullable Output<Boolean> matchAuthorizationStatusAuthorized) {
            $.matchAuthorizationStatusAuthorized = matchAuthorizationStatusAuthorized;
            return this;
        }

        /**
         * @param matchAuthorizationStatusAuthorized authorized
         * 
         * @return builder
         * 
         */
        public Builder matchAuthorizationStatusAuthorized(Boolean matchAuthorizationStatusAuthorized) {
            return matchAuthorizationStatusAuthorized(Output.of(matchAuthorizationStatusAuthorized));
        }

        /**
         * @param matchAuthorizationStatusUnauthorized unauthorized
         * 
         * @return builder
         * 
         */
        public Builder matchAuthorizationStatusUnauthorized(@Nullable Output<Boolean> matchAuthorizationStatusUnauthorized) {
            $.matchAuthorizationStatusUnauthorized = matchAuthorizationStatusUnauthorized;
            return this;
        }

        /**
         * @param matchAuthorizationStatusUnauthorized unauthorized
         * 
         * @return builder
         * 
         */
        public Builder matchAuthorizationStatusUnauthorized(Boolean matchAuthorizationStatusUnauthorized) {
            return matchAuthorizationStatusUnauthorized(Output.of(matchAuthorizationStatusUnauthorized));
        }

        /**
         * @param matchAuthorizingMethodPriorityGreaterThans greater than
         * 
         * @return builder
         * 
         */
        public Builder matchAuthorizingMethodPriorityGreaterThans(@Nullable Output<List<Integer>> matchAuthorizingMethodPriorityGreaterThans) {
            $.matchAuthorizingMethodPriorityGreaterThans = matchAuthorizingMethodPriorityGreaterThans;
            return this;
        }

        /**
         * @param matchAuthorizingMethodPriorityGreaterThans greater than
         * 
         * @return builder
         * 
         */
        public Builder matchAuthorizingMethodPriorityGreaterThans(List<Integer> matchAuthorizingMethodPriorityGreaterThans) {
            return matchAuthorizingMethodPriorityGreaterThans(Output.of(matchAuthorizingMethodPriorityGreaterThans));
        }

        /**
         * @param matchAuthorizingMethodPriorityGreaterThans greater than
         * 
         * @return builder
         * 
         */
        public Builder matchAuthorizingMethodPriorityGreaterThans(Integer... matchAuthorizingMethodPriorityGreaterThans) {
            return matchAuthorizingMethodPriorityGreaterThans(List.of(matchAuthorizingMethodPriorityGreaterThans));
        }

        /**
         * @param matchMethodDot1x dot1x
         * 
         * @return builder
         * 
         */
        public Builder matchMethodDot1x(@Nullable Output<Boolean> matchMethodDot1x) {
            $.matchMethodDot1x = matchMethodDot1x;
            return this;
        }

        /**
         * @param matchMethodDot1x dot1x
         * 
         * @return builder
         * 
         */
        public Builder matchMethodDot1x(Boolean matchMethodDot1x) {
            return matchMethodDot1x(Output.of(matchMethodDot1x));
        }

        /**
         * @param matchMethodMab mab
         * 
         * @return builder
         * 
         */
        public Builder matchMethodMab(@Nullable Output<Boolean> matchMethodMab) {
            $.matchMethodMab = matchMethodMab;
            return this;
        }

        /**
         * @param matchMethodMab mab
         * 
         * @return builder
         * 
         */
        public Builder matchMethodMab(Boolean matchMethodMab) {
            return matchMethodMab(Output.of(matchMethodMab));
        }

        /**
         * @param matchResultTypeAaaTimeout aaa timeout type
         * 
         * @return builder
         * 
         */
        public Builder matchResultTypeAaaTimeout(@Nullable Output<Boolean> matchResultTypeAaaTimeout) {
            $.matchResultTypeAaaTimeout = matchResultTypeAaaTimeout;
            return this;
        }

        /**
         * @param matchResultTypeAaaTimeout aaa timeout type
         * 
         * @return builder
         * 
         */
        public Builder matchResultTypeAaaTimeout(Boolean matchResultTypeAaaTimeout) {
            return matchResultTypeAaaTimeout(Output.of(matchResultTypeAaaTimeout));
        }

        /**
         * @param matchResultTypeMethodDot1xAgentNotFound agent not found type
         * 
         * @return builder
         * 
         */
        public Builder matchResultTypeMethodDot1xAgentNotFound(@Nullable Output<Boolean> matchResultTypeMethodDot1xAgentNotFound) {
            $.matchResultTypeMethodDot1xAgentNotFound = matchResultTypeMethodDot1xAgentNotFound;
            return this;
        }

        /**
         * @param matchResultTypeMethodDot1xAgentNotFound agent not found type
         * 
         * @return builder
         * 
         */
        public Builder matchResultTypeMethodDot1xAgentNotFound(Boolean matchResultTypeMethodDot1xAgentNotFound) {
            return matchResultTypeMethodDot1xAgentNotFound(Output.of(matchResultTypeMethodDot1xAgentNotFound));
        }

        /**
         * @param matchResultTypeMethodDot1xAuthoritative failure type
         * 
         * @return builder
         * 
         */
        public Builder matchResultTypeMethodDot1xAuthoritative(@Nullable Output<Boolean> matchResultTypeMethodDot1xAuthoritative) {
            $.matchResultTypeMethodDot1xAuthoritative = matchResultTypeMethodDot1xAuthoritative;
            return this;
        }

        /**
         * @param matchResultTypeMethodDot1xAuthoritative failure type
         * 
         * @return builder
         * 
         */
        public Builder matchResultTypeMethodDot1xAuthoritative(Boolean matchResultTypeMethodDot1xAuthoritative) {
            return matchResultTypeMethodDot1xAuthoritative(Output.of(matchResultTypeMethodDot1xAuthoritative));
        }

        /**
         * @param matchResultTypeMethodDot1xMethodTimeout method_timeout type
         * 
         * @return builder
         * 
         */
        public Builder matchResultTypeMethodDot1xMethodTimeout(@Nullable Output<Boolean> matchResultTypeMethodDot1xMethodTimeout) {
            $.matchResultTypeMethodDot1xMethodTimeout = matchResultTypeMethodDot1xMethodTimeout;
            return this;
        }

        /**
         * @param matchResultTypeMethodDot1xMethodTimeout method_timeout type
         * 
         * @return builder
         * 
         */
        public Builder matchResultTypeMethodDot1xMethodTimeout(Boolean matchResultTypeMethodDot1xMethodTimeout) {
            return matchResultTypeMethodDot1xMethodTimeout(Output.of(matchResultTypeMethodDot1xMethodTimeout));
        }

        /**
         * @param matchResultTypeMethodMabAuthoritative failure type
         * 
         * @return builder
         * 
         */
        public Builder matchResultTypeMethodMabAuthoritative(@Nullable Output<Boolean> matchResultTypeMethodMabAuthoritative) {
            $.matchResultTypeMethodMabAuthoritative = matchResultTypeMethodMabAuthoritative;
            return this;
        }

        /**
         * @param matchResultTypeMethodMabAuthoritative failure type
         * 
         * @return builder
         * 
         */
        public Builder matchResultTypeMethodMabAuthoritative(Boolean matchResultTypeMethodMabAuthoritative) {
            return matchResultTypeMethodMabAuthoritative(Output.of(matchResultTypeMethodMabAuthoritative));
        }

        /**
         * @param name name of the class map
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name name of the class map
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param prematch Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
         * 
         * @return builder
         * 
         */
        public Builder prematch(Output<String> prematch) {
            $.prematch = prematch;
            return this;
        }

        /**
         * @param prematch Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
         * 
         * @return builder
         * 
         */
        public Builder prematch(String prematch) {
            return prematch(Output.of(prematch));
        }

        /**
         * @param subscriber Domain name of the class map
         * 
         * @return builder
         * 
         */
        public Builder subscriber(@Nullable Output<Boolean> subscriber) {
            $.subscriber = subscriber;
            return this;
        }

        /**
         * @param subscriber Domain name of the class map
         * 
         * @return builder
         * 
         */
        public Builder subscriber(Boolean subscriber) {
            return subscriber(Output.of(subscriber));
        }

        /**
         * @param type type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
         * `stack`, `traffic`
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
         * `stack`, `traffic`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ClassMapArgs build() {
            $.prematch = Objects.requireNonNull($.prematch, "expected parameter 'prematch' to be non-null");
            return $;
        }
    }

}
