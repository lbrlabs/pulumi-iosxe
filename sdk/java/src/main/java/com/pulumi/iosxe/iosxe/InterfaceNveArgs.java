// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.iosxe.iosxe.inputs.InterfaceNveVniArgs;
import com.pulumi.iosxe.iosxe.inputs.InterfaceNveVniVrfArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InterfaceNveArgs extends com.pulumi.resources.ResourceArgs {

    public static final InterfaceNveArgs Empty = new InterfaceNveArgs();

    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    @Import(name="deleteMode")
    private @Nullable Output<String> deleteMode;

    /**
     * @return Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    public Optional<Output<String>> deleteMode() {
        return Optional.ofNullable(this.deleteMode);
    }

    /**
     * Interface specific description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Interface specific description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    @Import(name="hostReachabilityProtocolBgp")
    private @Nullable Output<Boolean> hostReachabilityProtocolBgp;

    public Optional<Output<Boolean>> hostReachabilityProtocolBgp() {
        return Optional.ofNullable(this.hostReachabilityProtocolBgp);
    }

    /**
     * - Range: `1`-`4096`
     * 
     */
    @Import(name="name")
    private @Nullable Output<Integer> name;

    /**
     * @return - Range: `1`-`4096`
     * 
     */
    public Optional<Output<Integer>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Shutdown the selected interface
     * 
     */
    @Import(name="shutdown")
    private @Nullable Output<Boolean> shutdown;

    /**
     * @return Shutdown the selected interface
     * 
     */
    public Optional<Output<Boolean>> shutdown() {
        return Optional.ofNullable(this.shutdown);
    }

    /**
     * Loopback interface - Range: `0`-`2147483647`
     * 
     */
    @Import(name="sourceInterfaceLoopback")
    private @Nullable Output<Integer> sourceInterfaceLoopback;

    /**
     * @return Loopback interface - Range: `0`-`2147483647`
     * 
     */
    public Optional<Output<Integer>> sourceInterfaceLoopback() {
        return Optional.ofNullable(this.sourceInterfaceLoopback);
    }

    /**
     * Configure VNI information
     * 
     */
    @Import(name="vniVrfs")
    private @Nullable Output<List<InterfaceNveVniVrfArgs>> vniVrfs;

    /**
     * @return Configure VNI information
     * 
     */
    public Optional<Output<List<InterfaceNveVniVrfArgs>>> vniVrfs() {
        return Optional.ofNullable(this.vniVrfs);
    }

    /**
     * Configure VNI information
     * 
     */
    @Import(name="vnis")
    private @Nullable Output<List<InterfaceNveVniArgs>> vnis;

    /**
     * @return Configure VNI information
     * 
     */
    public Optional<Output<List<InterfaceNveVniArgs>>> vnis() {
        return Optional.ofNullable(this.vnis);
    }

    private InterfaceNveArgs() {}

    private InterfaceNveArgs(InterfaceNveArgs $) {
        this.deleteMode = $.deleteMode;
        this.description = $.description;
        this.device = $.device;
        this.hostReachabilityProtocolBgp = $.hostReachabilityProtocolBgp;
        this.name = $.name;
        this.shutdown = $.shutdown;
        this.sourceInterfaceLoopback = $.sourceInterfaceLoopback;
        this.vniVrfs = $.vniVrfs;
        this.vnis = $.vnis;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InterfaceNveArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InterfaceNveArgs $;

        public Builder() {
            $ = new InterfaceNveArgs();
        }

        public Builder(InterfaceNveArgs defaults) {
            $ = new InterfaceNveArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deleteMode Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
         * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
         * Default value is `all`. - Choices: `all`, `attributes`
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(@Nullable Output<String> deleteMode) {
            $.deleteMode = deleteMode;
            return this;
        }

        /**
         * @param deleteMode Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
         * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
         * Default value is `all`. - Choices: `all`, `attributes`
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(String deleteMode) {
            return deleteMode(Output.of(deleteMode));
        }

        /**
         * @param description Interface specific description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Interface specific description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        public Builder hostReachabilityProtocolBgp(@Nullable Output<Boolean> hostReachabilityProtocolBgp) {
            $.hostReachabilityProtocolBgp = hostReachabilityProtocolBgp;
            return this;
        }

        public Builder hostReachabilityProtocolBgp(Boolean hostReachabilityProtocolBgp) {
            return hostReachabilityProtocolBgp(Output.of(hostReachabilityProtocolBgp));
        }

        /**
         * @param name - Range: `1`-`4096`
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<Integer> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name - Range: `1`-`4096`
         * 
         * @return builder
         * 
         */
        public Builder name(Integer name) {
            return name(Output.of(name));
        }

        /**
         * @param shutdown Shutdown the selected interface
         * 
         * @return builder
         * 
         */
        public Builder shutdown(@Nullable Output<Boolean> shutdown) {
            $.shutdown = shutdown;
            return this;
        }

        /**
         * @param shutdown Shutdown the selected interface
         * 
         * @return builder
         * 
         */
        public Builder shutdown(Boolean shutdown) {
            return shutdown(Output.of(shutdown));
        }

        /**
         * @param sourceInterfaceLoopback Loopback interface - Range: `0`-`2147483647`
         * 
         * @return builder
         * 
         */
        public Builder sourceInterfaceLoopback(@Nullable Output<Integer> sourceInterfaceLoopback) {
            $.sourceInterfaceLoopback = sourceInterfaceLoopback;
            return this;
        }

        /**
         * @param sourceInterfaceLoopback Loopback interface - Range: `0`-`2147483647`
         * 
         * @return builder
         * 
         */
        public Builder sourceInterfaceLoopback(Integer sourceInterfaceLoopback) {
            return sourceInterfaceLoopback(Output.of(sourceInterfaceLoopback));
        }

        /**
         * @param vniVrfs Configure VNI information
         * 
         * @return builder
         * 
         */
        public Builder vniVrfs(@Nullable Output<List<InterfaceNveVniVrfArgs>> vniVrfs) {
            $.vniVrfs = vniVrfs;
            return this;
        }

        /**
         * @param vniVrfs Configure VNI information
         * 
         * @return builder
         * 
         */
        public Builder vniVrfs(List<InterfaceNveVniVrfArgs> vniVrfs) {
            return vniVrfs(Output.of(vniVrfs));
        }

        /**
         * @param vniVrfs Configure VNI information
         * 
         * @return builder
         * 
         */
        public Builder vniVrfs(InterfaceNveVniVrfArgs... vniVrfs) {
            return vniVrfs(List.of(vniVrfs));
        }

        /**
         * @param vnis Configure VNI information
         * 
         * @return builder
         * 
         */
        public Builder vnis(@Nullable Output<List<InterfaceNveVniArgs>> vnis) {
            $.vnis = vnis;
            return this;
        }

        /**
         * @param vnis Configure VNI information
         * 
         * @return builder
         * 
         */
        public Builder vnis(List<InterfaceNveVniArgs> vnis) {
            return vnis(Output.of(vnis));
        }

        /**
         * @param vnis Configure VNI information
         * 
         * @return builder
         * 
         */
        public Builder vnis(InterfaceNveVniArgs... vnis) {
            return vnis(List.of(vnis));
        }

        public InterfaceNveArgs build() {
            return $;
        }
    }

}
