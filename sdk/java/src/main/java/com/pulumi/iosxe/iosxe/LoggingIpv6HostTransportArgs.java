// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.iosxe.iosxe.inputs.LoggingIpv6HostTransportTransportTcpPortArgs;
import com.pulumi.iosxe.iosxe.inputs.LoggingIpv6HostTransportTransportTlsPortArgs;
import com.pulumi.iosxe.iosxe.inputs.LoggingIpv6HostTransportTransportUdpPortArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoggingIpv6HostTransportArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoggingIpv6HostTransportArgs Empty = new LoggingIpv6HostTransportArgs();

    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    @Import(name="deleteMode")
    private @Nullable Output<String> deleteMode;

    /**
     * @return Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    public Optional<Output<String>> deleteMode() {
        return Optional.ofNullable(this.deleteMode);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    @Import(name="ipv6Host", required=true)
    private Output<String> ipv6Host;

    public Output<String> ipv6Host() {
        return this.ipv6Host;
    }

    /**
     * Port Number List
     * 
     */
    @Import(name="transportTcpPorts")
    private @Nullable Output<List<LoggingIpv6HostTransportTransportTcpPortArgs>> transportTcpPorts;

    /**
     * @return Port Number List
     * 
     */
    public Optional<Output<List<LoggingIpv6HostTransportTransportTcpPortArgs>>> transportTcpPorts() {
        return Optional.ofNullable(this.transportTcpPorts);
    }

    /**
     * Port Number List
     * 
     */
    @Import(name="transportTlsPorts")
    private @Nullable Output<List<LoggingIpv6HostTransportTransportTlsPortArgs>> transportTlsPorts;

    /**
     * @return Port Number List
     * 
     */
    public Optional<Output<List<LoggingIpv6HostTransportTransportTlsPortArgs>>> transportTlsPorts() {
        return Optional.ofNullable(this.transportTlsPorts);
    }

    /**
     * Port Number List
     * 
     */
    @Import(name="transportUdpPorts")
    private @Nullable Output<List<LoggingIpv6HostTransportTransportUdpPortArgs>> transportUdpPorts;

    /**
     * @return Port Number List
     * 
     */
    public Optional<Output<List<LoggingIpv6HostTransportTransportUdpPortArgs>>> transportUdpPorts() {
        return Optional.ofNullable(this.transportUdpPorts);
    }

    private LoggingIpv6HostTransportArgs() {}

    private LoggingIpv6HostTransportArgs(LoggingIpv6HostTransportArgs $) {
        this.deleteMode = $.deleteMode;
        this.device = $.device;
        this.ipv6Host = $.ipv6Host;
        this.transportTcpPorts = $.transportTcpPorts;
        this.transportTlsPorts = $.transportTlsPorts;
        this.transportUdpPorts = $.transportUdpPorts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoggingIpv6HostTransportArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggingIpv6HostTransportArgs $;

        public Builder() {
            $ = new LoggingIpv6HostTransportArgs();
        }

        public Builder(LoggingIpv6HostTransportArgs defaults) {
            $ = new LoggingIpv6HostTransportArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deleteMode Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
         * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
         * Default value is `all`. - Choices: `all`, `attributes`
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(@Nullable Output<String> deleteMode) {
            $.deleteMode = deleteMode;
            return this;
        }

        /**
         * @param deleteMode Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
         * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
         * Default value is `all`. - Choices: `all`, `attributes`
         * 
         * @return builder
         * 
         */
        public Builder deleteMode(String deleteMode) {
            return deleteMode(Output.of(deleteMode));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        public Builder ipv6Host(Output<String> ipv6Host) {
            $.ipv6Host = ipv6Host;
            return this;
        }

        public Builder ipv6Host(String ipv6Host) {
            return ipv6Host(Output.of(ipv6Host));
        }

        /**
         * @param transportTcpPorts Port Number List
         * 
         * @return builder
         * 
         */
        public Builder transportTcpPorts(@Nullable Output<List<LoggingIpv6HostTransportTransportTcpPortArgs>> transportTcpPorts) {
            $.transportTcpPorts = transportTcpPorts;
            return this;
        }

        /**
         * @param transportTcpPorts Port Number List
         * 
         * @return builder
         * 
         */
        public Builder transportTcpPorts(List<LoggingIpv6HostTransportTransportTcpPortArgs> transportTcpPorts) {
            return transportTcpPorts(Output.of(transportTcpPorts));
        }

        /**
         * @param transportTcpPorts Port Number List
         * 
         * @return builder
         * 
         */
        public Builder transportTcpPorts(LoggingIpv6HostTransportTransportTcpPortArgs... transportTcpPorts) {
            return transportTcpPorts(List.of(transportTcpPorts));
        }

        /**
         * @param transportTlsPorts Port Number List
         * 
         * @return builder
         * 
         */
        public Builder transportTlsPorts(@Nullable Output<List<LoggingIpv6HostTransportTransportTlsPortArgs>> transportTlsPorts) {
            $.transportTlsPorts = transportTlsPorts;
            return this;
        }

        /**
         * @param transportTlsPorts Port Number List
         * 
         * @return builder
         * 
         */
        public Builder transportTlsPorts(List<LoggingIpv6HostTransportTransportTlsPortArgs> transportTlsPorts) {
            return transportTlsPorts(Output.of(transportTlsPorts));
        }

        /**
         * @param transportTlsPorts Port Number List
         * 
         * @return builder
         * 
         */
        public Builder transportTlsPorts(LoggingIpv6HostTransportTransportTlsPortArgs... transportTlsPorts) {
            return transportTlsPorts(List.of(transportTlsPorts));
        }

        /**
         * @param transportUdpPorts Port Number List
         * 
         * @return builder
         * 
         */
        public Builder transportUdpPorts(@Nullable Output<List<LoggingIpv6HostTransportTransportUdpPortArgs>> transportUdpPorts) {
            $.transportUdpPorts = transportUdpPorts;
            return this;
        }

        /**
         * @param transportUdpPorts Port Number List
         * 
         * @return builder
         * 
         */
        public Builder transportUdpPorts(List<LoggingIpv6HostTransportTransportUdpPortArgs> transportUdpPorts) {
            return transportUdpPorts(Output.of(transportUdpPorts));
        }

        /**
         * @param transportUdpPorts Port Number List
         * 
         * @return builder
         * 
         */
        public Builder transportUdpPorts(LoggingIpv6HostTransportTransportUdpPortArgs... transportUdpPorts) {
            return transportUdpPorts(List.of(transportUdpPorts));
        }

        public LoggingIpv6HostTransportArgs build() {
            $.ipv6Host = Objects.requireNonNull($.ipv6Host, "expected parameter 'ipv6Host' to be non-null");
            return $;
        }
    }

}
