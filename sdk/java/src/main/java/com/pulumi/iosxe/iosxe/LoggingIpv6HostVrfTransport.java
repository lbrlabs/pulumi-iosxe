// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.iosxe.Utilities;
import com.pulumi.iosxe.iosxe.LoggingIpv6HostVrfTransportArgs;
import com.pulumi.iosxe.iosxe.inputs.LoggingIpv6HostVrfTransportState;
import com.pulumi.iosxe.iosxe.outputs.LoggingIpv6HostVrfTransportTransportTcpPort;
import com.pulumi.iosxe.iosxe.outputs.LoggingIpv6HostVrfTransportTransportTlsPort;
import com.pulumi.iosxe.iosxe.outputs.LoggingIpv6HostVrfTransportTransportUdpPort;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage the Logging IPv6 Host VRF Transport configuration.
 * 
 * ## Example Usage
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.iosxe.iosxe.LoggingIpv6HostVrfTransport;
 * import com.pulumi.iosxe.iosxe.LoggingIpv6HostVrfTransportArgs;
 * import com.pulumi.iosxe.iosxe.inputs.LoggingIpv6HostVrfTransportTransportTcpPortArgs;
 * import com.pulumi.iosxe.iosxe.inputs.LoggingIpv6HostVrfTransportTransportTlsPortArgs;
 * import com.pulumi.iosxe.iosxe.inputs.LoggingIpv6HostVrfTransportTransportUdpPortArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new LoggingIpv6HostVrfTransport(&#34;example&#34;, LoggingIpv6HostVrfTransportArgs.builder()        
 *             .ipv6Host(&#34;2001::1&#34;)
 *             .transportTcpPorts(LoggingIpv6HostVrfTransportTransportTcpPortArgs.builder()
 *                 .port_number(10001)
 *                 .build())
 *             .transportTlsPorts(LoggingIpv6HostVrfTransportTransportTlsPortArgs.builder()
 *                 .port_number(10002)
 *                 .build())
 *             .transportUdpPorts(LoggingIpv6HostVrfTransportTransportUdpPortArgs.builder()
 *                 .port_number(10000)
 *                 .build())
 *             .vrf(&#34;VRF1&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import iosxe:iosxe/loggingIpv6HostVrfTransport:LoggingIpv6HostVrfTransport example &#34;Cisco-IOS-XE-native:native/logging/host/ipv6/ipv6-host-vrf-transport-list=2001::1,VRF1&#34;
 * ```
 * 
 */
@ResourceType(type="iosxe:iosxe/loggingIpv6HostVrfTransport:LoggingIpv6HostVrfTransport")
public class LoggingIpv6HostVrfTransport extends com.pulumi.resources.CustomResource {
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    @Export(name="deleteMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deleteMode;

    /**
     * @return Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    public Output<Optional<String>> deleteMode() {
        return Codegen.optional(this.deleteMode);
    }
    /**
     * A device name from the provider configuration.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }
    @Export(name="ipv6Host", refs={String.class}, tree="[0]")
    private Output<String> ipv6Host;

    public Output<String> ipv6Host() {
        return this.ipv6Host;
    }
    /**
     * Port Number List
     * 
     */
    @Export(name="transportTcpPorts", refs={List.class,LoggingIpv6HostVrfTransportTransportTcpPort.class}, tree="[0,1]")
    private Output</* @Nullable */ List<LoggingIpv6HostVrfTransportTransportTcpPort>> transportTcpPorts;

    /**
     * @return Port Number List
     * 
     */
    public Output<Optional<List<LoggingIpv6HostVrfTransportTransportTcpPort>>> transportTcpPorts() {
        return Codegen.optional(this.transportTcpPorts);
    }
    /**
     * Port Number List
     * 
     */
    @Export(name="transportTlsPorts", refs={List.class,LoggingIpv6HostVrfTransportTransportTlsPort.class}, tree="[0,1]")
    private Output</* @Nullable */ List<LoggingIpv6HostVrfTransportTransportTlsPort>> transportTlsPorts;

    /**
     * @return Port Number List
     * 
     */
    public Output<Optional<List<LoggingIpv6HostVrfTransportTransportTlsPort>>> transportTlsPorts() {
        return Codegen.optional(this.transportTlsPorts);
    }
    /**
     * Port Number List
     * 
     */
    @Export(name="transportUdpPorts", refs={List.class,LoggingIpv6HostVrfTransportTransportUdpPort.class}, tree="[0,1]")
    private Output</* @Nullable */ List<LoggingIpv6HostVrfTransportTransportUdpPort>> transportUdpPorts;

    /**
     * @return Port Number List
     * 
     */
    public Output<Optional<List<LoggingIpv6HostVrfTransportTransportUdpPort>>> transportUdpPorts() {
        return Codegen.optional(this.transportUdpPorts);
    }
    /**
     * Set VRF option
     * 
     */
    @Export(name="vrf", refs={String.class}, tree="[0]")
    private Output<String> vrf;

    /**
     * @return Set VRF option
     * 
     */
    public Output<String> vrf() {
        return this.vrf;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LoggingIpv6HostVrfTransport(String name) {
        this(name, LoggingIpv6HostVrfTransportArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LoggingIpv6HostVrfTransport(String name, LoggingIpv6HostVrfTransportArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LoggingIpv6HostVrfTransport(String name, LoggingIpv6HostVrfTransportArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/loggingIpv6HostVrfTransport:LoggingIpv6HostVrfTransport", name, args == null ? LoggingIpv6HostVrfTransportArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LoggingIpv6HostVrfTransport(String name, Output<String> id, @Nullable LoggingIpv6HostVrfTransportState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/loggingIpv6HostVrfTransport:LoggingIpv6HostVrfTransport", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LoggingIpv6HostVrfTransport get(String name, Output<String> id, @Nullable LoggingIpv6HostVrfTransportState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LoggingIpv6HostVrfTransport(name, id, state, options);
    }
}
