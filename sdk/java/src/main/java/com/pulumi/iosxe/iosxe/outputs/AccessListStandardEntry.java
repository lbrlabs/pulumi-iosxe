// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccessListStandardEntry {
    private @Nullable Boolean denyAny;
    private @Nullable String denyHost;
    private @Nullable Boolean denyLog;
    private @Nullable String denyPrefix;
    private @Nullable String denyPrefixMask;
    private @Nullable Boolean permitAny;
    private @Nullable String permitHost;
    private @Nullable Boolean permitLog;
    private @Nullable String permitPrefix;
    private @Nullable String permitPrefixMask;
    private @Nullable String remark;
    private Integer sequence;

    private AccessListStandardEntry() {}
    public Optional<Boolean> denyAny() {
        return Optional.ofNullable(this.denyAny);
    }
    public Optional<String> denyHost() {
        return Optional.ofNullable(this.denyHost);
    }
    public Optional<Boolean> denyLog() {
        return Optional.ofNullable(this.denyLog);
    }
    public Optional<String> denyPrefix() {
        return Optional.ofNullable(this.denyPrefix);
    }
    public Optional<String> denyPrefixMask() {
        return Optional.ofNullable(this.denyPrefixMask);
    }
    public Optional<Boolean> permitAny() {
        return Optional.ofNullable(this.permitAny);
    }
    public Optional<String> permitHost() {
        return Optional.ofNullable(this.permitHost);
    }
    public Optional<Boolean> permitLog() {
        return Optional.ofNullable(this.permitLog);
    }
    public Optional<String> permitPrefix() {
        return Optional.ofNullable(this.permitPrefix);
    }
    public Optional<String> permitPrefixMask() {
        return Optional.ofNullable(this.permitPrefixMask);
    }
    public Optional<String> remark() {
        return Optional.ofNullable(this.remark);
    }
    public Integer sequence() {
        return this.sequence;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessListStandardEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean denyAny;
        private @Nullable String denyHost;
        private @Nullable Boolean denyLog;
        private @Nullable String denyPrefix;
        private @Nullable String denyPrefixMask;
        private @Nullable Boolean permitAny;
        private @Nullable String permitHost;
        private @Nullable Boolean permitLog;
        private @Nullable String permitPrefix;
        private @Nullable String permitPrefixMask;
        private @Nullable String remark;
        private Integer sequence;
        public Builder() {}
        public Builder(AccessListStandardEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.denyAny = defaults.denyAny;
    	      this.denyHost = defaults.denyHost;
    	      this.denyLog = defaults.denyLog;
    	      this.denyPrefix = defaults.denyPrefix;
    	      this.denyPrefixMask = defaults.denyPrefixMask;
    	      this.permitAny = defaults.permitAny;
    	      this.permitHost = defaults.permitHost;
    	      this.permitLog = defaults.permitLog;
    	      this.permitPrefix = defaults.permitPrefix;
    	      this.permitPrefixMask = defaults.permitPrefixMask;
    	      this.remark = defaults.remark;
    	      this.sequence = defaults.sequence;
        }

        @CustomType.Setter
        public Builder denyAny(@Nullable Boolean denyAny) {
            this.denyAny = denyAny;
            return this;
        }
        @CustomType.Setter
        public Builder denyHost(@Nullable String denyHost) {
            this.denyHost = denyHost;
            return this;
        }
        @CustomType.Setter
        public Builder denyLog(@Nullable Boolean denyLog) {
            this.denyLog = denyLog;
            return this;
        }
        @CustomType.Setter
        public Builder denyPrefix(@Nullable String denyPrefix) {
            this.denyPrefix = denyPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder denyPrefixMask(@Nullable String denyPrefixMask) {
            this.denyPrefixMask = denyPrefixMask;
            return this;
        }
        @CustomType.Setter
        public Builder permitAny(@Nullable Boolean permitAny) {
            this.permitAny = permitAny;
            return this;
        }
        @CustomType.Setter
        public Builder permitHost(@Nullable String permitHost) {
            this.permitHost = permitHost;
            return this;
        }
        @CustomType.Setter
        public Builder permitLog(@Nullable Boolean permitLog) {
            this.permitLog = permitLog;
            return this;
        }
        @CustomType.Setter
        public Builder permitPrefix(@Nullable String permitPrefix) {
            this.permitPrefix = permitPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder permitPrefixMask(@Nullable String permitPrefixMask) {
            this.permitPrefixMask = permitPrefixMask;
            return this;
        }
        @CustomType.Setter
        public Builder remark(@Nullable String remark) {
            this.remark = remark;
            return this;
        }
        @CustomType.Setter
        public Builder sequence(Integer sequence) {
            this.sequence = Objects.requireNonNull(sequence);
            return this;
        }
        public AccessListStandardEntry build() {
            final var o = new AccessListStandardEntry();
            o.denyAny = denyAny;
            o.denyHost = denyHost;
            o.denyLog = denyLog;
            o.denyPrefix = denyPrefix;
            o.denyPrefixMask = denyPrefixMask;
            o.permitAny = permitAny;
            o.permitHost = permitHost;
            o.permitLog = permitLog;
            o.permitPrefix = permitPrefix;
            o.permitPrefixMask = permitPrefixMask;
            o.remark = remark;
            o.sequence = sequence;
            return o;
        }
    }
}
