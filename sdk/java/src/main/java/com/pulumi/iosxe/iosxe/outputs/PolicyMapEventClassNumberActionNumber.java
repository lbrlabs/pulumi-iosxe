// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PolicyMapEventClassNumberActionNumber {
    private @Nullable String activateServiceTemplateConfigServiceTemplate;
    private @Nullable String authenticateUsingMethod;
    private @Nullable Integer authenticateUsingPriority;
    private @Nullable Integer authenticateUsingRetries;
    private @Nullable Integer authenticateUsingRetryTime;
    private @Nullable Boolean authorize;
    private Integer number;
    private @Nullable Boolean pauseReauthentication;
    private @Nullable String terminateConfig;

    private PolicyMapEventClassNumberActionNumber() {}
    public Optional<String> activateServiceTemplateConfigServiceTemplate() {
        return Optional.ofNullable(this.activateServiceTemplateConfigServiceTemplate);
    }
    public Optional<String> authenticateUsingMethod() {
        return Optional.ofNullable(this.authenticateUsingMethod);
    }
    public Optional<Integer> authenticateUsingPriority() {
        return Optional.ofNullable(this.authenticateUsingPriority);
    }
    public Optional<Integer> authenticateUsingRetries() {
        return Optional.ofNullable(this.authenticateUsingRetries);
    }
    public Optional<Integer> authenticateUsingRetryTime() {
        return Optional.ofNullable(this.authenticateUsingRetryTime);
    }
    public Optional<Boolean> authorize() {
        return Optional.ofNullable(this.authorize);
    }
    public Integer number() {
        return this.number;
    }
    public Optional<Boolean> pauseReauthentication() {
        return Optional.ofNullable(this.pauseReauthentication);
    }
    public Optional<String> terminateConfig() {
        return Optional.ofNullable(this.terminateConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyMapEventClassNumberActionNumber defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String activateServiceTemplateConfigServiceTemplate;
        private @Nullable String authenticateUsingMethod;
        private @Nullable Integer authenticateUsingPriority;
        private @Nullable Integer authenticateUsingRetries;
        private @Nullable Integer authenticateUsingRetryTime;
        private @Nullable Boolean authorize;
        private Integer number;
        private @Nullable Boolean pauseReauthentication;
        private @Nullable String terminateConfig;
        public Builder() {}
        public Builder(PolicyMapEventClassNumberActionNumber defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activateServiceTemplateConfigServiceTemplate = defaults.activateServiceTemplateConfigServiceTemplate;
    	      this.authenticateUsingMethod = defaults.authenticateUsingMethod;
    	      this.authenticateUsingPriority = defaults.authenticateUsingPriority;
    	      this.authenticateUsingRetries = defaults.authenticateUsingRetries;
    	      this.authenticateUsingRetryTime = defaults.authenticateUsingRetryTime;
    	      this.authorize = defaults.authorize;
    	      this.number = defaults.number;
    	      this.pauseReauthentication = defaults.pauseReauthentication;
    	      this.terminateConfig = defaults.terminateConfig;
        }

        @CustomType.Setter
        public Builder activateServiceTemplateConfigServiceTemplate(@Nullable String activateServiceTemplateConfigServiceTemplate) {
            this.activateServiceTemplateConfigServiceTemplate = activateServiceTemplateConfigServiceTemplate;
            return this;
        }
        @CustomType.Setter
        public Builder authenticateUsingMethod(@Nullable String authenticateUsingMethod) {
            this.authenticateUsingMethod = authenticateUsingMethod;
            return this;
        }
        @CustomType.Setter
        public Builder authenticateUsingPriority(@Nullable Integer authenticateUsingPriority) {
            this.authenticateUsingPriority = authenticateUsingPriority;
            return this;
        }
        @CustomType.Setter
        public Builder authenticateUsingRetries(@Nullable Integer authenticateUsingRetries) {
            this.authenticateUsingRetries = authenticateUsingRetries;
            return this;
        }
        @CustomType.Setter
        public Builder authenticateUsingRetryTime(@Nullable Integer authenticateUsingRetryTime) {
            this.authenticateUsingRetryTime = authenticateUsingRetryTime;
            return this;
        }
        @CustomType.Setter
        public Builder authorize(@Nullable Boolean authorize) {
            this.authorize = authorize;
            return this;
        }
        @CustomType.Setter
        public Builder number(Integer number) {
            this.number = Objects.requireNonNull(number);
            return this;
        }
        @CustomType.Setter
        public Builder pauseReauthentication(@Nullable Boolean pauseReauthentication) {
            this.pauseReauthentication = pauseReauthentication;
            return this;
        }
        @CustomType.Setter
        public Builder terminateConfig(@Nullable String terminateConfig) {
            this.terminateConfig = terminateConfig;
            return this;
        }
        public PolicyMapEventClassNumberActionNumber build() {
            final var o = new PolicyMapEventClassNumberActionNumber();
            o.activateServiceTemplateConfigServiceTemplate = activateServiceTemplateConfigServiceTemplate;
            o.authenticateUsingMethod = authenticateUsingMethod;
            o.authenticateUsingPriority = authenticateUsingPriority;
            o.authenticateUsingRetries = authenticateUsingRetries;
            o.authenticateUsingRetryTime = authenticateUsingRetryTime;
            o.authorize = authorize;
            o.number = number;
            o.pauseReauthentication = pauseReauthentication;
            o.terminateConfig = terminateConfig;
            return o;
        }
    }
}
