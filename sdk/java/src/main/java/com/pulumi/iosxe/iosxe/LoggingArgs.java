// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.iosxe.iosxe.inputs.LoggingIpv4HostArgs;
import com.pulumi.iosxe.iosxe.inputs.LoggingIpv4VrfHostArgs;
import com.pulumi.iosxe.iosxe.inputs.LoggingIpv6HostArgs;
import com.pulumi.iosxe.iosxe.inputs.LoggingIpv6VrfHostArgs;
import com.pulumi.iosxe.iosxe.inputs.LoggingSourceInterfacesVrfArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoggingArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoggingArgs Empty = new LoggingArgs();

    /**
     * Logging severity level
     * 
     */
    @Import(name="bufferedSeverity")
    private @Nullable Output<String> bufferedSeverity;

    /**
     * @return Logging severity level
     * 
     */
    public Optional<Output<String>> bufferedSeverity() {
        return Optional.ofNullable(this.bufferedSeverity);
    }

    /**
     * Logging buffer size - Range: `4096`-`2147483647`
     * 
     */
    @Import(name="bufferedSize")
    private @Nullable Output<Integer> bufferedSize;

    /**
     * @return Logging buffer size - Range: `4096`-`2147483647`
     * 
     */
    public Optional<Output<Integer>> bufferedSize() {
        return Optional.ofNullable(this.bufferedSize);
    }

    @Import(name="consoleSeverity")
    private @Nullable Output<String> consoleSeverity;

    public Optional<Output<String>> consoleSeverity() {
        return Optional.ofNullable(this.consoleSeverity);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * Facility parameter for syslog messages - Choices: `auth`, `cron`, `daemon`, `kern`, `local0`, `local1`, `local2`,
     * `local3`, `local4`, `local5`, `local6`, `local7`, `lpr`, `mail`, `news`, `sys10`, `sys11`, `sys12`, `sys13`, `sys14`,
     * `sys9`, `syslog`, `user`, `uucp`
     * 
     */
    @Import(name="facility")
    private @Nullable Output<String> facility;

    /**
     * @return Facility parameter for syslog messages - Choices: `auth`, `cron`, `daemon`, `kern`, `local0`, `local1`, `local2`,
     * `local3`, `local4`, `local5`, `local6`, `local7`, `lpr`, `mail`, `news`, `sys10`, `sys11`, `sys12`, `sys13`, `sys14`,
     * `sys9`, `syslog`, `user`, `uucp`
     * 
     */
    public Optional<Output<String>> facility() {
        return Optional.ofNullable(this.facility);
    }

    /**
     * - Range: `0`-`4294967295`
     * 
     */
    @Import(name="fileMaxSize")
    private @Nullable Output<Integer> fileMaxSize;

    /**
     * @return - Range: `0`-`4294967295`
     * 
     */
    public Optional<Output<Integer>> fileMaxSize() {
        return Optional.ofNullable(this.fileMaxSize);
    }

    /**
     * - Range: `0`-`4294967295`
     * 
     */
    @Import(name="fileMinSize")
    private @Nullable Output<Integer> fileMinSize;

    /**
     * @return - Range: `0`-`4294967295`
     * 
     */
    public Optional<Output<Integer>> fileMinSize() {
        return Optional.ofNullable(this.fileMinSize);
    }

    @Import(name="fileName")
    private @Nullable Output<String> fileName;

    public Optional<Output<String>> fileName() {
        return Optional.ofNullable(this.fileName);
    }

    @Import(name="fileSeverity")
    private @Nullable Output<String> fileSeverity;

    public Optional<Output<String>> fileSeverity() {
        return Optional.ofNullable(this.fileSeverity);
    }

    @Import(name="historySeverity")
    private @Nullable Output<String> historySeverity;

    public Optional<Output<String>> historySeverity() {
        return Optional.ofNullable(this.historySeverity);
    }

    /**
     * Set history table size - Range: `0`-`65535`
     * 
     */
    @Import(name="historySize")
    private @Nullable Output<Integer> historySize;

    /**
     * @return Set history table size - Range: `0`-`65535`
     * 
     */
    public Optional<Output<Integer>> historySize() {
        return Optional.ofNullable(this.historySize);
    }

    @Import(name="ipv4Hosts")
    private @Nullable Output<List<LoggingIpv4HostArgs>> ipv4Hosts;

    public Optional<Output<List<LoggingIpv4HostArgs>>> ipv4Hosts() {
        return Optional.ofNullable(this.ipv4Hosts);
    }

    @Import(name="ipv4VrfHosts")
    private @Nullable Output<List<LoggingIpv4VrfHostArgs>> ipv4VrfHosts;

    public Optional<Output<List<LoggingIpv4VrfHostArgs>>> ipv4VrfHosts() {
        return Optional.ofNullable(this.ipv4VrfHosts);
    }

    @Import(name="ipv6Hosts")
    private @Nullable Output<List<LoggingIpv6HostArgs>> ipv6Hosts;

    public Optional<Output<List<LoggingIpv6HostArgs>>> ipv6Hosts() {
        return Optional.ofNullable(this.ipv6Hosts);
    }

    @Import(name="ipv6VrfHosts")
    private @Nullable Output<List<LoggingIpv6VrfHostArgs>> ipv6VrfHosts;

    public Optional<Output<List<LoggingIpv6VrfHostArgs>>> ipv6VrfHosts() {
        return Optional.ofNullable(this.ipv6VrfHosts);
    }

    @Import(name="monitorSeverity")
    private @Nullable Output<String> monitorSeverity;

    public Optional<Output<String>> monitorSeverity() {
        return Optional.ofNullable(this.monitorSeverity);
    }

    /**
     * Define a unique text string as ID
     * 
     */
    @Import(name="originIdName")
    private @Nullable Output<String> originIdName;

    /**
     * @return Define a unique text string as ID
     * 
     */
    public Optional<Output<String>> originIdName() {
        return Optional.ofNullable(this.originIdName);
    }

    /**
     * Use origin hostname/ip/ipv6 as ID - Choices: `hostname`, `ip`, `ipv6`
     * 
     */
    @Import(name="originIdType")
    private @Nullable Output<String> originIdType;

    /**
     * @return Use origin hostname/ip/ipv6 as ID - Choices: `hostname`, `ip`, `ipv6`
     * 
     */
    public Optional<Output<String>> originIdType() {
        return Optional.ofNullable(this.originIdType);
    }

    @Import(name="sourceInterface")
    private @Nullable Output<String> sourceInterface;

    public Optional<Output<String>> sourceInterface() {
        return Optional.ofNullable(this.sourceInterface);
    }

    /**
     * Specify interface and vrf for source address in logging transactions
     * 
     */
    @Import(name="sourceInterfacesVrves")
    private @Nullable Output<List<LoggingSourceInterfacesVrfArgs>> sourceInterfacesVrves;

    /**
     * @return Specify interface and vrf for source address in logging transactions
     * 
     */
    public Optional<Output<List<LoggingSourceInterfacesVrfArgs>>> sourceInterfacesVrves() {
        return Optional.ofNullable(this.sourceInterfacesVrves);
    }

    /**
     * Set trap server logging level
     * 
     */
    @Import(name="trap")
    private @Nullable Output<Boolean> trap;

    /**
     * @return Set trap server logging level
     * 
     */
    public Optional<Output<Boolean>> trap() {
        return Optional.ofNullable(this.trap);
    }

    @Import(name="trapSeverity")
    private @Nullable Output<String> trapSeverity;

    public Optional<Output<String>> trapSeverity() {
        return Optional.ofNullable(this.trapSeverity);
    }

    private LoggingArgs() {}

    private LoggingArgs(LoggingArgs $) {
        this.bufferedSeverity = $.bufferedSeverity;
        this.bufferedSize = $.bufferedSize;
        this.consoleSeverity = $.consoleSeverity;
        this.device = $.device;
        this.facility = $.facility;
        this.fileMaxSize = $.fileMaxSize;
        this.fileMinSize = $.fileMinSize;
        this.fileName = $.fileName;
        this.fileSeverity = $.fileSeverity;
        this.historySeverity = $.historySeverity;
        this.historySize = $.historySize;
        this.ipv4Hosts = $.ipv4Hosts;
        this.ipv4VrfHosts = $.ipv4VrfHosts;
        this.ipv6Hosts = $.ipv6Hosts;
        this.ipv6VrfHosts = $.ipv6VrfHosts;
        this.monitorSeverity = $.monitorSeverity;
        this.originIdName = $.originIdName;
        this.originIdType = $.originIdType;
        this.sourceInterface = $.sourceInterface;
        this.sourceInterfacesVrves = $.sourceInterfacesVrves;
        this.trap = $.trap;
        this.trapSeverity = $.trapSeverity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoggingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggingArgs $;

        public Builder() {
            $ = new LoggingArgs();
        }

        public Builder(LoggingArgs defaults) {
            $ = new LoggingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bufferedSeverity Logging severity level
         * 
         * @return builder
         * 
         */
        public Builder bufferedSeverity(@Nullable Output<String> bufferedSeverity) {
            $.bufferedSeverity = bufferedSeverity;
            return this;
        }

        /**
         * @param bufferedSeverity Logging severity level
         * 
         * @return builder
         * 
         */
        public Builder bufferedSeverity(String bufferedSeverity) {
            return bufferedSeverity(Output.of(bufferedSeverity));
        }

        /**
         * @param bufferedSize Logging buffer size - Range: `4096`-`2147483647`
         * 
         * @return builder
         * 
         */
        public Builder bufferedSize(@Nullable Output<Integer> bufferedSize) {
            $.bufferedSize = bufferedSize;
            return this;
        }

        /**
         * @param bufferedSize Logging buffer size - Range: `4096`-`2147483647`
         * 
         * @return builder
         * 
         */
        public Builder bufferedSize(Integer bufferedSize) {
            return bufferedSize(Output.of(bufferedSize));
        }

        public Builder consoleSeverity(@Nullable Output<String> consoleSeverity) {
            $.consoleSeverity = consoleSeverity;
            return this;
        }

        public Builder consoleSeverity(String consoleSeverity) {
            return consoleSeverity(Output.of(consoleSeverity));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param facility Facility parameter for syslog messages - Choices: `auth`, `cron`, `daemon`, `kern`, `local0`, `local1`, `local2`,
         * `local3`, `local4`, `local5`, `local6`, `local7`, `lpr`, `mail`, `news`, `sys10`, `sys11`, `sys12`, `sys13`, `sys14`,
         * `sys9`, `syslog`, `user`, `uucp`
         * 
         * @return builder
         * 
         */
        public Builder facility(@Nullable Output<String> facility) {
            $.facility = facility;
            return this;
        }

        /**
         * @param facility Facility parameter for syslog messages - Choices: `auth`, `cron`, `daemon`, `kern`, `local0`, `local1`, `local2`,
         * `local3`, `local4`, `local5`, `local6`, `local7`, `lpr`, `mail`, `news`, `sys10`, `sys11`, `sys12`, `sys13`, `sys14`,
         * `sys9`, `syslog`, `user`, `uucp`
         * 
         * @return builder
         * 
         */
        public Builder facility(String facility) {
            return facility(Output.of(facility));
        }

        /**
         * @param fileMaxSize - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder fileMaxSize(@Nullable Output<Integer> fileMaxSize) {
            $.fileMaxSize = fileMaxSize;
            return this;
        }

        /**
         * @param fileMaxSize - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder fileMaxSize(Integer fileMaxSize) {
            return fileMaxSize(Output.of(fileMaxSize));
        }

        /**
         * @param fileMinSize - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder fileMinSize(@Nullable Output<Integer> fileMinSize) {
            $.fileMinSize = fileMinSize;
            return this;
        }

        /**
         * @param fileMinSize - Range: `0`-`4294967295`
         * 
         * @return builder
         * 
         */
        public Builder fileMinSize(Integer fileMinSize) {
            return fileMinSize(Output.of(fileMinSize));
        }

        public Builder fileName(@Nullable Output<String> fileName) {
            $.fileName = fileName;
            return this;
        }

        public Builder fileName(String fileName) {
            return fileName(Output.of(fileName));
        }

        public Builder fileSeverity(@Nullable Output<String> fileSeverity) {
            $.fileSeverity = fileSeverity;
            return this;
        }

        public Builder fileSeverity(String fileSeverity) {
            return fileSeverity(Output.of(fileSeverity));
        }

        public Builder historySeverity(@Nullable Output<String> historySeverity) {
            $.historySeverity = historySeverity;
            return this;
        }

        public Builder historySeverity(String historySeverity) {
            return historySeverity(Output.of(historySeverity));
        }

        /**
         * @param historySize Set history table size - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder historySize(@Nullable Output<Integer> historySize) {
            $.historySize = historySize;
            return this;
        }

        /**
         * @param historySize Set history table size - Range: `0`-`65535`
         * 
         * @return builder
         * 
         */
        public Builder historySize(Integer historySize) {
            return historySize(Output.of(historySize));
        }

        public Builder ipv4Hosts(@Nullable Output<List<LoggingIpv4HostArgs>> ipv4Hosts) {
            $.ipv4Hosts = ipv4Hosts;
            return this;
        }

        public Builder ipv4Hosts(List<LoggingIpv4HostArgs> ipv4Hosts) {
            return ipv4Hosts(Output.of(ipv4Hosts));
        }

        public Builder ipv4Hosts(LoggingIpv4HostArgs... ipv4Hosts) {
            return ipv4Hosts(List.of(ipv4Hosts));
        }

        public Builder ipv4VrfHosts(@Nullable Output<List<LoggingIpv4VrfHostArgs>> ipv4VrfHosts) {
            $.ipv4VrfHosts = ipv4VrfHosts;
            return this;
        }

        public Builder ipv4VrfHosts(List<LoggingIpv4VrfHostArgs> ipv4VrfHosts) {
            return ipv4VrfHosts(Output.of(ipv4VrfHosts));
        }

        public Builder ipv4VrfHosts(LoggingIpv4VrfHostArgs... ipv4VrfHosts) {
            return ipv4VrfHosts(List.of(ipv4VrfHosts));
        }

        public Builder ipv6Hosts(@Nullable Output<List<LoggingIpv6HostArgs>> ipv6Hosts) {
            $.ipv6Hosts = ipv6Hosts;
            return this;
        }

        public Builder ipv6Hosts(List<LoggingIpv6HostArgs> ipv6Hosts) {
            return ipv6Hosts(Output.of(ipv6Hosts));
        }

        public Builder ipv6Hosts(LoggingIpv6HostArgs... ipv6Hosts) {
            return ipv6Hosts(List.of(ipv6Hosts));
        }

        public Builder ipv6VrfHosts(@Nullable Output<List<LoggingIpv6VrfHostArgs>> ipv6VrfHosts) {
            $.ipv6VrfHosts = ipv6VrfHosts;
            return this;
        }

        public Builder ipv6VrfHosts(List<LoggingIpv6VrfHostArgs> ipv6VrfHosts) {
            return ipv6VrfHosts(Output.of(ipv6VrfHosts));
        }

        public Builder ipv6VrfHosts(LoggingIpv6VrfHostArgs... ipv6VrfHosts) {
            return ipv6VrfHosts(List.of(ipv6VrfHosts));
        }

        public Builder monitorSeverity(@Nullable Output<String> monitorSeverity) {
            $.monitorSeverity = monitorSeverity;
            return this;
        }

        public Builder monitorSeverity(String monitorSeverity) {
            return monitorSeverity(Output.of(monitorSeverity));
        }

        /**
         * @param originIdName Define a unique text string as ID
         * 
         * @return builder
         * 
         */
        public Builder originIdName(@Nullable Output<String> originIdName) {
            $.originIdName = originIdName;
            return this;
        }

        /**
         * @param originIdName Define a unique text string as ID
         * 
         * @return builder
         * 
         */
        public Builder originIdName(String originIdName) {
            return originIdName(Output.of(originIdName));
        }

        /**
         * @param originIdType Use origin hostname/ip/ipv6 as ID - Choices: `hostname`, `ip`, `ipv6`
         * 
         * @return builder
         * 
         */
        public Builder originIdType(@Nullable Output<String> originIdType) {
            $.originIdType = originIdType;
            return this;
        }

        /**
         * @param originIdType Use origin hostname/ip/ipv6 as ID - Choices: `hostname`, `ip`, `ipv6`
         * 
         * @return builder
         * 
         */
        public Builder originIdType(String originIdType) {
            return originIdType(Output.of(originIdType));
        }

        public Builder sourceInterface(@Nullable Output<String> sourceInterface) {
            $.sourceInterface = sourceInterface;
            return this;
        }

        public Builder sourceInterface(String sourceInterface) {
            return sourceInterface(Output.of(sourceInterface));
        }

        /**
         * @param sourceInterfacesVrves Specify interface and vrf for source address in logging transactions
         * 
         * @return builder
         * 
         */
        public Builder sourceInterfacesVrves(@Nullable Output<List<LoggingSourceInterfacesVrfArgs>> sourceInterfacesVrves) {
            $.sourceInterfacesVrves = sourceInterfacesVrves;
            return this;
        }

        /**
         * @param sourceInterfacesVrves Specify interface and vrf for source address in logging transactions
         * 
         * @return builder
         * 
         */
        public Builder sourceInterfacesVrves(List<LoggingSourceInterfacesVrfArgs> sourceInterfacesVrves) {
            return sourceInterfacesVrves(Output.of(sourceInterfacesVrves));
        }

        /**
         * @param sourceInterfacesVrves Specify interface and vrf for source address in logging transactions
         * 
         * @return builder
         * 
         */
        public Builder sourceInterfacesVrves(LoggingSourceInterfacesVrfArgs... sourceInterfacesVrves) {
            return sourceInterfacesVrves(List.of(sourceInterfacesVrves));
        }

        /**
         * @param trap Set trap server logging level
         * 
         * @return builder
         * 
         */
        public Builder trap(@Nullable Output<Boolean> trap) {
            $.trap = trap;
            return this;
        }

        /**
         * @param trap Set trap server logging level
         * 
         * @return builder
         * 
         */
        public Builder trap(Boolean trap) {
            return trap(Output.of(trap));
        }

        public Builder trapSeverity(@Nullable Output<String> trapSeverity) {
            $.trapSeverity = trapSeverity;
            return this;
        }

        public Builder trapSeverity(String trapSeverity) {
            return trapSeverity(Output.of(trapSeverity));
        }

        public LoggingArgs build() {
            return $;
        }
    }

}
