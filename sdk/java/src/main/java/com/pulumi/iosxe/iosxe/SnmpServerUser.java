// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.iosxe.Utilities;
import com.pulumi.iosxe.iosxe.SnmpServerUserArgs;
import com.pulumi.iosxe.iosxe.inputs.SnmpServerUserState;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage the SNMP Server User configuration.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.iosxe.iosxe.SnmpServerUser;
 * import com.pulumi.iosxe.iosxe.SnmpServerUserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new SnmpServerUser(&#34;example&#34;, SnmpServerUserArgs.builder()        
 *             .grpname(&#34;GROUP1&#34;)
 *             .username(&#34;USER1&#34;)
 *             .v3AuthAlgorithm(&#34;sha&#34;)
 *             .v3AuthPassword(&#34;Cisco123&#34;)
 *             .v3AuthPrivAesAccessAclName(&#34;ACL123&#34;)
 *             .v3AuthPrivAesAccessIpv6Acl(&#34;V6ACL1&#34;)
 *             .v3AuthPrivAesAlgorithm(&#34;128&#34;)
 *             .v3AuthPrivAesPassword(&#34;Cisco123&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import iosxe:iosxe/snmpServerUser:SnmpServerUser example &#34;Cisco-IOS-XE-native:native/snmp-server/Cisco-IOS-XE-snmp:user/names=USER1,GROUP1&#34;
 * ```
 * 
 */
@ResourceType(type="iosxe:iosxe/snmpServerUser:SnmpServerUser")
public class SnmpServerUser extends com.pulumi.resources.CustomResource {
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    @Export(name="deleteMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deleteMode;

    /**
     * @return Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    public Output<Optional<String>> deleteMode() {
        return Codegen.optional(this.deleteMode);
    }
    /**
     * A device name from the provider configuration.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }
    /**
     * Group to which the user belongs
     * 
     */
    @Export(name="grpname", refs={String.class}, tree="[0]")
    private Output<String> grpname;

    /**
     * @return Group to which the user belongs
     * 
     */
    public Output<String> grpname() {
        return this.grpname;
    }
    /**
     * Name of the user
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output<String> username;

    /**
     * @return Name of the user
     * 
     */
    public Output<String> username() {
        return this.username;
    }
    /**
     * Access-list name
     * 
     */
    @Export(name="v3AuthAccessAclName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> v3AuthAccessAclName;

    /**
     * @return Access-list name
     * 
     */
    public Output<Optional<String>> v3AuthAccessAclName() {
        return Codegen.optional(this.v3AuthAccessAclName);
    }
    /**
     * Specify IPv6 Named Access-List
     * 
     */
    @Export(name="v3AuthAccessIpv6Acl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> v3AuthAccessIpv6Acl;

    /**
     * @return Specify IPv6 Named Access-List
     * 
     */
    public Output<Optional<String>> v3AuthAccessIpv6Acl() {
        return Codegen.optional(this.v3AuthAccessIpv6Acl);
    }
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     * 
     */
    @Export(name="v3AuthAccessStandardAcl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> v3AuthAccessStandardAcl;

    /**
     * @return Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     * 
     */
    public Output<Optional<Integer>> v3AuthAccessStandardAcl() {
        return Codegen.optional(this.v3AuthAccessStandardAcl);
    }
    /**
     * Use HMAC SHA/MD5 algorithm for authentication - Choices: `md5`, `sha`
     * 
     */
    @Export(name="v3AuthAlgorithm", refs={String.class}, tree="[0]")
    private Output<String> v3AuthAlgorithm;

    /**
     * @return Use HMAC SHA/MD5 algorithm for authentication - Choices: `md5`, `sha`
     * 
     */
    public Output<String> v3AuthAlgorithm() {
        return this.v3AuthAlgorithm;
    }
    /**
     * Authentication password for user
     * 
     */
    @Export(name="v3AuthPassword", refs={String.class}, tree="[0]")
    private Output<String> v3AuthPassword;

    /**
     * @return Authentication password for user
     * 
     */
    public Output<String> v3AuthPassword() {
        return this.v3AuthPassword;
    }
    /**
     * Access-list name
     * 
     */
    @Export(name="v3AuthPrivAesAccessAclName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> v3AuthPrivAesAccessAclName;

    /**
     * @return Access-list name
     * 
     */
    public Output<Optional<String>> v3AuthPrivAesAccessAclName() {
        return Codegen.optional(this.v3AuthPrivAesAccessAclName);
    }
    /**
     * Specify IPv6 Named Access-List
     * 
     */
    @Export(name="v3AuthPrivAesAccessIpv6Acl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> v3AuthPrivAesAccessIpv6Acl;

    /**
     * @return Specify IPv6 Named Access-List
     * 
     */
    public Output<Optional<String>> v3AuthPrivAesAccessIpv6Acl() {
        return Codegen.optional(this.v3AuthPrivAesAccessIpv6Acl);
    }
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     * 
     */
    @Export(name="v3AuthPrivAesAccessStandardAcl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> v3AuthPrivAesAccessStandardAcl;

    /**
     * @return Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     * 
     */
    public Output<Optional<Integer>> v3AuthPrivAesAccessStandardAcl() {
        return Codegen.optional(this.v3AuthPrivAesAccessStandardAcl);
    }
    /**
     * - Choices: `128`, `192`, `256`
     * 
     */
    @Export(name="v3AuthPrivAesAlgorithm", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> v3AuthPrivAesAlgorithm;

    /**
     * @return - Choices: `128`, `192`, `256`
     * 
     */
    public Output<Optional<String>> v3AuthPrivAesAlgorithm() {
        return Codegen.optional(this.v3AuthPrivAesAlgorithm);
    }
    /**
     * Authentication password for user
     * 
     */
    @Export(name="v3AuthPrivAesPassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> v3AuthPrivAesPassword;

    /**
     * @return Authentication password for user
     * 
     */
    public Output<Optional<String>> v3AuthPrivAesPassword() {
        return Codegen.optional(this.v3AuthPrivAesPassword);
    }
    /**
     * Access-list name
     * 
     */
    @Export(name="v3AuthPrivDes3AccessAclName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> v3AuthPrivDes3AccessAclName;

    /**
     * @return Access-list name
     * 
     */
    public Output<Optional<String>> v3AuthPrivDes3AccessAclName() {
        return Codegen.optional(this.v3AuthPrivDes3AccessAclName);
    }
    /**
     * Specify IPv6 Named Access-List
     * 
     */
    @Export(name="v3AuthPrivDes3AccessIpv6Acl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> v3AuthPrivDes3AccessIpv6Acl;

    /**
     * @return Specify IPv6 Named Access-List
     * 
     */
    public Output<Optional<String>> v3AuthPrivDes3AccessIpv6Acl() {
        return Codegen.optional(this.v3AuthPrivDes3AccessIpv6Acl);
    }
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     * 
     */
    @Export(name="v3AuthPrivDes3AccessStandardAcl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> v3AuthPrivDes3AccessStandardAcl;

    /**
     * @return Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     * 
     */
    public Output<Optional<Integer>> v3AuthPrivDes3AccessStandardAcl() {
        return Codegen.optional(this.v3AuthPrivDes3AccessStandardAcl);
    }
    /**
     * Authentication password for user
     * 
     */
    @Export(name="v3AuthPrivDes3Password", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> v3AuthPrivDes3Password;

    /**
     * @return Authentication password for user
     * 
     */
    public Output<Optional<String>> v3AuthPrivDes3Password() {
        return Codegen.optional(this.v3AuthPrivDes3Password);
    }
    /**
     * Access-list name
     * 
     */
    @Export(name="v3AuthPrivDesAccessAclName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> v3AuthPrivDesAccessAclName;

    /**
     * @return Access-list name
     * 
     */
    public Output<Optional<String>> v3AuthPrivDesAccessAclName() {
        return Codegen.optional(this.v3AuthPrivDesAccessAclName);
    }
    /**
     * Specify IPv6 Named Access-List
     * 
     */
    @Export(name="v3AuthPrivDesAccessIpv6Acl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> v3AuthPrivDesAccessIpv6Acl;

    /**
     * @return Specify IPv6 Named Access-List
     * 
     */
    public Output<Optional<String>> v3AuthPrivDesAccessIpv6Acl() {
        return Codegen.optional(this.v3AuthPrivDesAccessIpv6Acl);
    }
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     * 
     */
    @Export(name="v3AuthPrivDesAccessStandardAcl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> v3AuthPrivDesAccessStandardAcl;

    /**
     * @return Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     * 
     */
    public Output<Optional<Integer>> v3AuthPrivDesAccessStandardAcl() {
        return Codegen.optional(this.v3AuthPrivDesAccessStandardAcl);
    }
    /**
     * Authentication password for user
     * 
     */
    @Export(name="v3AuthPrivDesPassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> v3AuthPrivDesPassword;

    /**
     * @return Authentication password for user
     * 
     */
    public Output<Optional<String>> v3AuthPrivDesPassword() {
        return Codegen.optional(this.v3AuthPrivDesPassword);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SnmpServerUser(String name) {
        this(name, SnmpServerUserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SnmpServerUser(String name, SnmpServerUserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SnmpServerUser(String name, SnmpServerUserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/snmpServerUser:SnmpServerUser", name, args == null ? SnmpServerUserArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SnmpServerUser(String name, Output<String> id, @Nullable SnmpServerUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/snmpServerUser:SnmpServerUser", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SnmpServerUser get(String name, Output<String> id, @Nullable SnmpServerUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SnmpServerUser(name, id, state, options);
    }
}
