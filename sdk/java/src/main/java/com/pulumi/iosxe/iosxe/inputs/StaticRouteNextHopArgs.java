// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StaticRouteNextHopArgs extends com.pulumi.resources.ResourceArgs {

    public static final StaticRouteNextHopArgs Empty = new StaticRouteNextHopArgs();

    @Import(name="global")
    private @Nullable Output<Boolean> global;

    public Optional<Output<Boolean>> global() {
        return Optional.ofNullable(this.global);
    }

    @Import(name="metric")
    private @Nullable Output<Integer> metric;

    public Optional<Output<Integer>> metric() {
        return Optional.ofNullable(this.metric);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="nextHop", required=true)
    private Output<String> nextHop;

    public Output<String> nextHop() {
        return this.nextHop;
    }

    @Import(name="permanent")
    private @Nullable Output<Boolean> permanent;

    public Optional<Output<Boolean>> permanent() {
        return Optional.ofNullable(this.permanent);
    }

    @Import(name="tag")
    private @Nullable Output<Integer> tag;

    public Optional<Output<Integer>> tag() {
        return Optional.ofNullable(this.tag);
    }

    private StaticRouteNextHopArgs() {}

    private StaticRouteNextHopArgs(StaticRouteNextHopArgs $) {
        this.global = $.global;
        this.metric = $.metric;
        this.name = $.name;
        this.nextHop = $.nextHop;
        this.permanent = $.permanent;
        this.tag = $.tag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StaticRouteNextHopArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StaticRouteNextHopArgs $;

        public Builder() {
            $ = new StaticRouteNextHopArgs();
        }

        public Builder(StaticRouteNextHopArgs defaults) {
            $ = new StaticRouteNextHopArgs(Objects.requireNonNull(defaults));
        }

        public Builder global(@Nullable Output<Boolean> global) {
            $.global = global;
            return this;
        }

        public Builder global(Boolean global) {
            return global(Output.of(global));
        }

        public Builder metric(@Nullable Output<Integer> metric) {
            $.metric = metric;
            return this;
        }

        public Builder metric(Integer metric) {
            return metric(Output.of(metric));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder nextHop(Output<String> nextHop) {
            $.nextHop = nextHop;
            return this;
        }

        public Builder nextHop(String nextHop) {
            return nextHop(Output.of(nextHop));
        }

        public Builder permanent(@Nullable Output<Boolean> permanent) {
            $.permanent = permanent;
            return this;
        }

        public Builder permanent(Boolean permanent) {
            return permanent(Output.of(permanent));
        }

        public Builder tag(@Nullable Output<Integer> tag) {
            $.tag = tag;
            return this;
        }

        public Builder tag(Integer tag) {
            return tag(Output.of(tag));
        }

        public StaticRouteNextHopArgs build() {
            $.nextHop = Objects.requireNonNull($.nextHop, "expected parameter 'nextHop' to be non-null");
            return $;
        }
    }

}
