// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.iosxe.Utilities;
import com.pulumi.iosxe.iosxe.PimVrfArgs;
import com.pulumi.iosxe.iosxe.inputs.PimVrfState;
import com.pulumi.iosxe.iosxe.outputs.PimVrfRpAddress;
import com.pulumi.iosxe.iosxe.outputs.PimVrfRpCandidate;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource can manage the PIM VRF configuration.
 * 
 * ## Example Usage
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.iosxe.iosxe.PimVrf;
 * import com.pulumi.iosxe.iosxe.PimVrfArgs;
 * import com.pulumi.iosxe.iosxe.inputs.PimVrfRpAddressArgs;
 * import com.pulumi.iosxe.iosxe.inputs.PimVrfRpCandidateArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new PimVrf(&#34;example&#34;, PimVrfArgs.builder()        
 *             .autorp(false)
 *             .autorpListener(false)
 *             .bsrCandidateLoopback(100)
 *             .bsrCandidateMask(30)
 *             .bsrCandidatePriority(10)
 *             .rpAddress(&#34;19.19.19.19&#34;)
 *             .rpAddressBidir(false)
 *             .rpAddressOverride(false)
 *             .rpAddresses(PimVrfRpAddressArgs.builder()
 *                 .access_list(&#34;10&#34;)
 *                 .bidir(false)
 *                 .override(false)
 *                 .rp_address(&#34;10.10.10.10&#34;)
 *                 .build())
 *             .rpCandidates(PimVrfRpCandidateArgs.builder()
 *                 .bidir(false)
 *                 .interface_(&#34;Loopback100&#34;)
 *                 .interval(100)
 *                 .priority(10)
 *                 .build())
 *             .ssmDefault(false)
 *             .ssmRange(&#34;10&#34;)
 *             .vrf(&#34;VRF1&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import iosxe:iosxe/pimVrf:PimVrf example &#34;Cisco-IOS-XE-native:native/ip/pim/Cisco-IOS-XE-multicast:vrf=VRF1&#34;
 * ```
 * 
 */
@ResourceType(type="iosxe:iosxe/pimVrf:PimVrf")
public class PimVrf extends com.pulumi.resources.CustomResource {
    /**
     * Configure AutoRP global operations
     * 
     */
    @Export(name="autorp", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autorp;

    /**
     * @return Configure AutoRP global operations
     * 
     */
    public Output<Optional<Boolean>> autorp() {
        return Codegen.optional(this.autorp);
    }
    /**
     * Allow AutoRP packets across sparse mode interface
     * 
     */
    @Export(name="autorpListener", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autorpListener;

    /**
     * @return Allow AutoRP packets across sparse mode interface
     * 
     */
    public Output<Optional<Boolean>> autorpListener() {
        return Codegen.optional(this.autorpListener);
    }
    /**
     * BSR RP candidate filter
     * 
     */
    @Export(name="bsrCandidateAcceptRpCandidate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> bsrCandidateAcceptRpCandidate;

    /**
     * @return BSR RP candidate filter
     * 
     */
    public Output<Optional<String>> bsrCandidateAcceptRpCandidate() {
        return Codegen.optional(this.bsrCandidateAcceptRpCandidate);
    }
    /**
     * Loopback interface - Range: `0`-`2147483647`
     * 
     */
    @Export(name="bsrCandidateLoopback", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> bsrCandidateLoopback;

    /**
     * @return Loopback interface - Range: `0`-`2147483647`
     * 
     */
    public Output<Optional<Integer>> bsrCandidateLoopback() {
        return Codegen.optional(this.bsrCandidateLoopback);
    }
    /**
     * Hash Mask length for RP selection - Range: `0`-`32`
     * 
     */
    @Export(name="bsrCandidateMask", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> bsrCandidateMask;

    /**
     * @return Hash Mask length for RP selection - Range: `0`-`32`
     * 
     */
    public Output<Optional<Integer>> bsrCandidateMask() {
        return Codegen.optional(this.bsrCandidateMask);
    }
    /**
     * Priority value for candidate bootstrap router - Range: `0`-`255`
     * 
     */
    @Export(name="bsrCandidatePriority", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> bsrCandidatePriority;

    /**
     * @return Priority value for candidate bootstrap router - Range: `0`-`255`
     * 
     */
    public Output<Optional<Integer>> bsrCandidatePriority() {
        return Codegen.optional(this.bsrCandidatePriority);
    }
    /**
     * Cache outgoing interface RPF info
     * 
     */
    @Export(name="cacheRpfOif", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> cacheRpfOif;

    /**
     * @return Cache outgoing interface RPF info
     * 
     */
    public Output<Optional<Boolean>> cacheRpfOif() {
        return Codegen.optional(this.cacheRpfOif);
    }
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    @Export(name="deleteMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deleteMode;

    /**
     * @return Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     * 
     */
    public Output<Optional<String>> deleteMode() {
        return Codegen.optional(this.deleteMode);
    }
    /**
     * A device name from the provider configuration.
     * 
     */
    @Export(name="device", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Output<Optional<String>> device() {
        return Codegen.optional(this.device);
    }
    /**
     * IP address of Rendezvous-point for group
     * 
     */
    @Export(name="rpAddress", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> rpAddress;

    /**
     * @return IP address of Rendezvous-point for group
     * 
     */
    public Output<Optional<String>> rpAddress() {
        return Codegen.optional(this.rpAddress);
    }
    /**
     * Group range treated in bidirectional shared-tree mode
     * 
     */
    @Export(name="rpAddressBidir", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> rpAddressBidir;

    /**
     * @return Group range treated in bidirectional shared-tree mode
     * 
     */
    public Output<Optional<Boolean>> rpAddressBidir() {
        return Codegen.optional(this.rpAddressBidir);
    }
    /**
     * Overrides dynamically learnt RP mappings
     * 
     */
    @Export(name="rpAddressOverride", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> rpAddressOverride;

    /**
     * @return Overrides dynamically learnt RP mappings
     * 
     */
    public Output<Optional<Boolean>> rpAddressOverride() {
        return Codegen.optional(this.rpAddressOverride);
    }
    /**
     * PIM RP-address (Rendezvous Point)
     * 
     */
    @Export(name="rpAddresses", refs={List.class,PimVrfRpAddress.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PimVrfRpAddress>> rpAddresses;

    /**
     * @return PIM RP-address (Rendezvous Point)
     * 
     */
    public Output<Optional<List<PimVrfRpAddress>>> rpAddresses() {
        return Codegen.optional(this.rpAddresses);
    }
    /**
     * To be a PIM version 2 RP candidate
     * 
     */
    @Export(name="rpCandidates", refs={List.class,PimVrfRpCandidate.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PimVrfRpCandidate>> rpCandidates;

    /**
     * @return To be a PIM version 2 RP candidate
     * 
     */
    public Output<Optional<List<PimVrfRpCandidate>>> rpCandidates() {
        return Codegen.optional(this.rpCandidates);
    }
    /**
     * Use 232/8 group range for SSM
     * 
     */
    @Export(name="ssmDefault", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ssmDefault;

    /**
     * @return Use 232/8 group range for SSM
     * 
     */
    public Output<Optional<Boolean>> ssmDefault() {
        return Codegen.optional(this.ssmDefault);
    }
    /**
     * ACL for group range to be used for SSM
     * 
     */
    @Export(name="ssmRange", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ssmRange;

    /**
     * @return ACL for group range to be used for SSM
     * 
     */
    public Output<Optional<String>> ssmRange() {
        return Codegen.optional(this.ssmRange);
    }
    @Export(name="vrf", refs={String.class}, tree="[0]")
    private Output<String> vrf;

    public Output<String> vrf() {
        return this.vrf;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PimVrf(String name) {
        this(name, PimVrfArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PimVrf(String name, PimVrfArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PimVrf(String name, PimVrfArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/pimVrf:PimVrf", name, args == null ? PimVrfArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PimVrf(String name, Output<String> id, @Nullable PimVrfState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("iosxe:iosxe/pimVrf:PimVrf", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PimVrf get(String name, Output<String> id, @Nullable PimVrfState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PimVrf(name, id, state, options);
    }
}
