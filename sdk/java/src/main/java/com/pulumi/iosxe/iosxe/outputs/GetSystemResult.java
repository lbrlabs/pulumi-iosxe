// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.iosxe.iosxe.outputs.GetSystemMulticastRoutingVrf;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSystemResult {
    private @Nullable String device;
    private String hostname;
    private String id;
    private Boolean ipDomainLookup;
    private String ipDomainName;
    private Boolean ipMulticastRouting;
    private Boolean ipMulticastRoutingDistributed;
    private Boolean ipRouting;
    private Boolean ipSourceRoute;
    private Boolean ipv6UnicastRouting;
    private Integer loginDelay;
    private Boolean loginOnFailure;
    private Boolean loginOnFailureLog;
    private Boolean loginOnSuccess;
    private Boolean loginOnSuccessLog;
    private Integer mtu;
    private Boolean multicastRoutingSwitch;
    private List<GetSystemMulticastRoutingVrf> multicastRoutingVrfs;

    private GetSystemResult() {}
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    public String hostname() {
        return this.hostname;
    }
    public String id() {
        return this.id;
    }
    public Boolean ipDomainLookup() {
        return this.ipDomainLookup;
    }
    public String ipDomainName() {
        return this.ipDomainName;
    }
    public Boolean ipMulticastRouting() {
        return this.ipMulticastRouting;
    }
    public Boolean ipMulticastRoutingDistributed() {
        return this.ipMulticastRoutingDistributed;
    }
    public Boolean ipRouting() {
        return this.ipRouting;
    }
    public Boolean ipSourceRoute() {
        return this.ipSourceRoute;
    }
    public Boolean ipv6UnicastRouting() {
        return this.ipv6UnicastRouting;
    }
    public Integer loginDelay() {
        return this.loginDelay;
    }
    public Boolean loginOnFailure() {
        return this.loginOnFailure;
    }
    public Boolean loginOnFailureLog() {
        return this.loginOnFailureLog;
    }
    public Boolean loginOnSuccess() {
        return this.loginOnSuccess;
    }
    public Boolean loginOnSuccessLog() {
        return this.loginOnSuccessLog;
    }
    public Integer mtu() {
        return this.mtu;
    }
    public Boolean multicastRoutingSwitch() {
        return this.multicastRoutingSwitch;
    }
    public List<GetSystemMulticastRoutingVrf> multicastRoutingVrfs() {
        return this.multicastRoutingVrfs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSystemResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String device;
        private String hostname;
        private String id;
        private Boolean ipDomainLookup;
        private String ipDomainName;
        private Boolean ipMulticastRouting;
        private Boolean ipMulticastRoutingDistributed;
        private Boolean ipRouting;
        private Boolean ipSourceRoute;
        private Boolean ipv6UnicastRouting;
        private Integer loginDelay;
        private Boolean loginOnFailure;
        private Boolean loginOnFailureLog;
        private Boolean loginOnSuccess;
        private Boolean loginOnSuccessLog;
        private Integer mtu;
        private Boolean multicastRoutingSwitch;
        private List<GetSystemMulticastRoutingVrf> multicastRoutingVrfs;
        public Builder() {}
        public Builder(GetSystemResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.device = defaults.device;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.ipDomainLookup = defaults.ipDomainLookup;
    	      this.ipDomainName = defaults.ipDomainName;
    	      this.ipMulticastRouting = defaults.ipMulticastRouting;
    	      this.ipMulticastRoutingDistributed = defaults.ipMulticastRoutingDistributed;
    	      this.ipRouting = defaults.ipRouting;
    	      this.ipSourceRoute = defaults.ipSourceRoute;
    	      this.ipv6UnicastRouting = defaults.ipv6UnicastRouting;
    	      this.loginDelay = defaults.loginDelay;
    	      this.loginOnFailure = defaults.loginOnFailure;
    	      this.loginOnFailureLog = defaults.loginOnFailureLog;
    	      this.loginOnSuccess = defaults.loginOnSuccess;
    	      this.loginOnSuccessLog = defaults.loginOnSuccessLog;
    	      this.mtu = defaults.mtu;
    	      this.multicastRoutingSwitch = defaults.multicastRoutingSwitch;
    	      this.multicastRoutingVrfs = defaults.multicastRoutingVrfs;
        }

        @CustomType.Setter
        public Builder device(@Nullable String device) {
            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipDomainLookup(Boolean ipDomainLookup) {
            this.ipDomainLookup = Objects.requireNonNull(ipDomainLookup);
            return this;
        }
        @CustomType.Setter
        public Builder ipDomainName(String ipDomainName) {
            this.ipDomainName = Objects.requireNonNull(ipDomainName);
            return this;
        }
        @CustomType.Setter
        public Builder ipMulticastRouting(Boolean ipMulticastRouting) {
            this.ipMulticastRouting = Objects.requireNonNull(ipMulticastRouting);
            return this;
        }
        @CustomType.Setter
        public Builder ipMulticastRoutingDistributed(Boolean ipMulticastRoutingDistributed) {
            this.ipMulticastRoutingDistributed = Objects.requireNonNull(ipMulticastRoutingDistributed);
            return this;
        }
        @CustomType.Setter
        public Builder ipRouting(Boolean ipRouting) {
            this.ipRouting = Objects.requireNonNull(ipRouting);
            return this;
        }
        @CustomType.Setter
        public Builder ipSourceRoute(Boolean ipSourceRoute) {
            this.ipSourceRoute = Objects.requireNonNull(ipSourceRoute);
            return this;
        }
        @CustomType.Setter
        public Builder ipv6UnicastRouting(Boolean ipv6UnicastRouting) {
            this.ipv6UnicastRouting = Objects.requireNonNull(ipv6UnicastRouting);
            return this;
        }
        @CustomType.Setter
        public Builder loginDelay(Integer loginDelay) {
            this.loginDelay = Objects.requireNonNull(loginDelay);
            return this;
        }
        @CustomType.Setter
        public Builder loginOnFailure(Boolean loginOnFailure) {
            this.loginOnFailure = Objects.requireNonNull(loginOnFailure);
            return this;
        }
        @CustomType.Setter
        public Builder loginOnFailureLog(Boolean loginOnFailureLog) {
            this.loginOnFailureLog = Objects.requireNonNull(loginOnFailureLog);
            return this;
        }
        @CustomType.Setter
        public Builder loginOnSuccess(Boolean loginOnSuccess) {
            this.loginOnSuccess = Objects.requireNonNull(loginOnSuccess);
            return this;
        }
        @CustomType.Setter
        public Builder loginOnSuccessLog(Boolean loginOnSuccessLog) {
            this.loginOnSuccessLog = Objects.requireNonNull(loginOnSuccessLog);
            return this;
        }
        @CustomType.Setter
        public Builder mtu(Integer mtu) {
            this.mtu = Objects.requireNonNull(mtu);
            return this;
        }
        @CustomType.Setter
        public Builder multicastRoutingSwitch(Boolean multicastRoutingSwitch) {
            this.multicastRoutingSwitch = Objects.requireNonNull(multicastRoutingSwitch);
            return this;
        }
        @CustomType.Setter
        public Builder multicastRoutingVrfs(List<GetSystemMulticastRoutingVrf> multicastRoutingVrfs) {
            this.multicastRoutingVrfs = Objects.requireNonNull(multicastRoutingVrfs);
            return this;
        }
        public Builder multicastRoutingVrfs(GetSystemMulticastRoutingVrf... multicastRoutingVrfs) {
            return multicastRoutingVrfs(List.of(multicastRoutingVrfs));
        }
        public GetSystemResult build() {
            final var o = new GetSystemResult();
            o.device = device;
            o.hostname = hostname;
            o.id = id;
            o.ipDomainLookup = ipDomainLookup;
            o.ipDomainName = ipDomainName;
            o.ipMulticastRouting = ipMulticastRouting;
            o.ipMulticastRoutingDistributed = ipMulticastRoutingDistributed;
            o.ipRouting = ipRouting;
            o.ipSourceRoute = ipSourceRoute;
            o.ipv6UnicastRouting = ipv6UnicastRouting;
            o.loginDelay = loginDelay;
            o.loginOnFailure = loginOnFailure;
            o.loginOnFailureLog = loginOnFailureLog;
            o.loginOnSuccess = loginOnSuccess;
            o.loginOnSuccessLog = loginOnSuccessLog;
            o.mtu = mtu;
            o.multicastRoutingSwitch = multicastRoutingSwitch;
            o.multicastRoutingVrfs = multicastRoutingVrfs;
            return o;
        }
    }
}
