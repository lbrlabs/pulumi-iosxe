// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.iosxe.iosxe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.iosxe.iosxe.inputs.RadiusServerAttributeArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RadiusServerState extends com.pulumi.resources.ResourceArgs {

    public static final RadiusServerState Empty = new RadiusServerState();

    /**
     * Customize selected radius attributes
     * 
     */
    @Import(name="attributes")
    private @Nullable Output<List<RadiusServerAttributeArgs>> attributes;

    /**
     * @return Customize selected radius attributes
     * 
     */
    public Optional<Output<List<RadiusServerAttributeArgs>>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    /**
     * The time during which no properly formed response must be received from the RADIUS server - Range: `1`-`120`
     * 
     */
    @Import(name="deadCriteriaTime")
    private @Nullable Output<Integer> deadCriteriaTime;

    /**
     * @return The time during which no properly formed response must be received from the RADIUS server - Range: `1`-`120`
     * 
     */
    public Optional<Output<Integer>> deadCriteriaTime() {
        return Optional.ofNullable(this.deadCriteriaTime);
    }

    /**
     * The number of times the router must fail to receive a response from the radius server to mark it as dead - Range:
     * `1`-`100`
     * 
     */
    @Import(name="deadCriteriaTries")
    private @Nullable Output<Integer> deadCriteriaTries;

    /**
     * @return The number of times the router must fail to receive a response from the radius server to mark it as dead - Range:
     * `1`-`100`
     * 
     */
    public Optional<Output<Integer>> deadCriteriaTries() {
        return Optional.ofNullable(this.deadCriteriaTries);
    }

    /**
     * Time to stop using a server that does not respond - Range: `1`-`1440`
     * 
     */
    @Import(name="deadtime")
    private @Nullable Output<Integer> deadtime;

    /**
     * @return Time to stop using a server that does not respond - Range: `1`-`1440`
     * 
     */
    public Optional<Output<Integer>> deadtime() {
        return Optional.ofNullable(this.deadtime);
    }

    /**
     * A device name from the provider configuration.
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return A device name from the provider configuration.
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    private RadiusServerState() {}

    private RadiusServerState(RadiusServerState $) {
        this.attributes = $.attributes;
        this.deadCriteriaTime = $.deadCriteriaTime;
        this.deadCriteriaTries = $.deadCriteriaTries;
        this.deadtime = $.deadtime;
        this.device = $.device;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RadiusServerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RadiusServerState $;

        public Builder() {
            $ = new RadiusServerState();
        }

        public Builder(RadiusServerState defaults) {
            $ = new RadiusServerState(Objects.requireNonNull(defaults));
        }

        /**
         * @param attributes Customize selected radius attributes
         * 
         * @return builder
         * 
         */
        public Builder attributes(@Nullable Output<List<RadiusServerAttributeArgs>> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes Customize selected radius attributes
         * 
         * @return builder
         * 
         */
        public Builder attributes(List<RadiusServerAttributeArgs> attributes) {
            return attributes(Output.of(attributes));
        }

        /**
         * @param attributes Customize selected radius attributes
         * 
         * @return builder
         * 
         */
        public Builder attributes(RadiusServerAttributeArgs... attributes) {
            return attributes(List.of(attributes));
        }

        /**
         * @param deadCriteriaTime The time during which no properly formed response must be received from the RADIUS server - Range: `1`-`120`
         * 
         * @return builder
         * 
         */
        public Builder deadCriteriaTime(@Nullable Output<Integer> deadCriteriaTime) {
            $.deadCriteriaTime = deadCriteriaTime;
            return this;
        }

        /**
         * @param deadCriteriaTime The time during which no properly formed response must be received from the RADIUS server - Range: `1`-`120`
         * 
         * @return builder
         * 
         */
        public Builder deadCriteriaTime(Integer deadCriteriaTime) {
            return deadCriteriaTime(Output.of(deadCriteriaTime));
        }

        /**
         * @param deadCriteriaTries The number of times the router must fail to receive a response from the radius server to mark it as dead - Range:
         * `1`-`100`
         * 
         * @return builder
         * 
         */
        public Builder deadCriteriaTries(@Nullable Output<Integer> deadCriteriaTries) {
            $.deadCriteriaTries = deadCriteriaTries;
            return this;
        }

        /**
         * @param deadCriteriaTries The number of times the router must fail to receive a response from the radius server to mark it as dead - Range:
         * `1`-`100`
         * 
         * @return builder
         * 
         */
        public Builder deadCriteriaTries(Integer deadCriteriaTries) {
            return deadCriteriaTries(Output.of(deadCriteriaTries));
        }

        /**
         * @param deadtime Time to stop using a server that does not respond - Range: `1`-`1440`
         * 
         * @return builder
         * 
         */
        public Builder deadtime(@Nullable Output<Integer> deadtime) {
            $.deadtime = deadtime;
            return this;
        }

        /**
         * @param deadtime Time to stop using a server that does not respond - Range: `1`-`1440`
         * 
         * @return builder
         * 
         */
        public Builder deadtime(Integer deadtime) {
            return deadtime(Output.of(deadtime));
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device A device name from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        public RadiusServerState build() {
            return $;
        }
    }

}
