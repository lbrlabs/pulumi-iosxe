// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can read the Static Route configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iosxe.LookupStaticRoute(ctx, &iosxe.LookupStaticRouteArgs{
//				Mask:   "255.255.255.255",
//				Prefix: "5.5.5.5",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupStaticRoute(ctx *pulumi.Context, args *LookupStaticRouteArgs, opts ...pulumi.InvokeOption) (*LookupStaticRouteResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStaticRouteResult
	err := ctx.Invoke("iosxe:index/getStaticRoute:getStaticRoute", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStaticRoute.
type LookupStaticRouteArgs struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	Mask   string  `pulumi:"mask"`
	Prefix string  `pulumi:"prefix"`
}

// A collection of values returned by getStaticRoute.
type LookupStaticRouteResult struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// The path of the retrieved object.
	Id       string                  `pulumi:"id"`
	Mask     string                  `pulumi:"mask"`
	NextHops []GetStaticRouteNextHop `pulumi:"nextHops"`
	Prefix   string                  `pulumi:"prefix"`
}

func LookupStaticRouteOutput(ctx *pulumi.Context, args LookupStaticRouteOutputArgs, opts ...pulumi.InvokeOption) LookupStaticRouteResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStaticRouteResult, error) {
			args := v.(LookupStaticRouteArgs)
			r, err := LookupStaticRoute(ctx, &args, opts...)
			var s LookupStaticRouteResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStaticRouteResultOutput)
}

// A collection of arguments for invoking getStaticRoute.
type LookupStaticRouteOutputArgs struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput `pulumi:"device"`
	Mask   pulumi.StringInput    `pulumi:"mask"`
	Prefix pulumi.StringInput    `pulumi:"prefix"`
}

func (LookupStaticRouteOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStaticRouteArgs)(nil)).Elem()
}

// A collection of values returned by getStaticRoute.
type LookupStaticRouteResultOutput struct{ *pulumi.OutputState }

func (LookupStaticRouteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStaticRouteResult)(nil)).Elem()
}

func (o LookupStaticRouteResultOutput) ToLookupStaticRouteResultOutput() LookupStaticRouteResultOutput {
	return o
}

func (o LookupStaticRouteResultOutput) ToLookupStaticRouteResultOutputWithContext(ctx context.Context) LookupStaticRouteResultOutput {
	return o
}

func (o LookupStaticRouteResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupStaticRouteResult] {
	return pulumix.Output[LookupStaticRouteResult]{
		OutputState: o.OutputState,
	}
}

// A device name from the provider configuration.
func (o LookupStaticRouteResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStaticRouteResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// The path of the retrieved object.
func (o LookupStaticRouteResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStaticRouteResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupStaticRouteResultOutput) Mask() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStaticRouteResult) string { return v.Mask }).(pulumi.StringOutput)
}

func (o LookupStaticRouteResultOutput) NextHops() GetStaticRouteNextHopArrayOutput {
	return o.ApplyT(func(v LookupStaticRouteResult) []GetStaticRouteNextHop { return v.NextHops }).(GetStaticRouteNextHopArrayOutput)
}

func (o LookupStaticRouteResultOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStaticRouteResult) string { return v.Prefix }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStaticRouteResultOutput{})
}
