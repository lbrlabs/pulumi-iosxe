// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource can manage the BFD Template Single Hop configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iosxe.NewBfdTemplateSingleHop(ctx, "example", &iosxe.BfdTemplateSingleHopArgs{
//				AuthenticationMd5Keychain:   pulumi.String("KEYC1"),
//				DampeningHalfTime:           pulumi.Int(30),
//				DampeningMaxSuppressingTime: pulumi.Int(60),
//				DampeningSuppressTime:       pulumi.Int(100),
//				DampeningUnsuppressTime:     pulumi.Int(30),
//				Echo:                        pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import iosxe:index/bfdTemplateSingleHop:BfdTemplateSingleHop example "Cisco-IOS-XE-native:native/bfd-template/Cisco-IOS-XE-bfd:single-hop=SH-TEMPLATE-1"
//
// ```
type BfdTemplateSingleHop struct {
	pulumi.CustomResourceState

	// keychain name
	AuthenticationMd5Keychain pulumi.StringPtrOutput `pulumi:"authenticationMd5Keychain"`
	// keychain name
	AuthenticationMeticulousMd5Keychain pulumi.StringPtrOutput `pulumi:"authenticationMeticulousMd5Keychain"`
	// keychain name
	AuthenticationMeticulousSha1Keychain pulumi.StringPtrOutput `pulumi:"authenticationMeticulousSha1Keychain"`
	// keychain name
	AuthenticationSha1Keychain pulumi.StringPtrOutput `pulumi:"authenticationSha1Keychain"`
	// Half-life time for the penalty - Range: `1`-`30`
	DampeningHalfTime pulumi.IntPtrOutput `pulumi:"dampeningHalfTime"`
	// Maximum duration to suppress a session - Range: `1`-`420`
	DampeningMaxSuppressingTime pulumi.IntPtrOutput `pulumi:"dampeningMaxSuppressingTime"`
	// Value to start suppressing a session - Range: `1`-`18000`
	DampeningSuppressTime pulumi.IntPtrOutput `pulumi:"dampeningSuppressTime"`
	// Value to unsuppress a session - Range: `1`-`18000`
	DampeningUnsuppressTime pulumi.IntPtrOutput `pulumi:"dampeningUnsuppressTime"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// Use echo adjunct as bfd detection mechanism
	Echo pulumi.BoolPtrOutput `pulumi:"echo"`
	// Minimum receive interval capability - Range: `3300`-`9999000`
	IntervalMicrosecondsMinRx pulumi.IntPtrOutput `pulumi:"intervalMicrosecondsMinRx"`
	// Minimum transmit interval capability - Range: `3300`-`9999000`
	IntervalMicrosecondsMinTx pulumi.IntPtrOutput `pulumi:"intervalMicrosecondsMinTx"`
	// Minimum transmit and receive interval capability - Range: `4`-`9999`
	IntervalMillisecondsBoth pulumi.IntPtrOutput `pulumi:"intervalMillisecondsBoth"`
	// Minimum receive interval capability - Range: `4`-`9999`
	IntervalMillisecondsMinRx pulumi.IntPtrOutput `pulumi:"intervalMillisecondsMinRx"`
	// Minimum transmit interval capability - Range: `4`-`9999`
	IntervalMillisecondsMinTx pulumi.IntPtrOutput `pulumi:"intervalMillisecondsMinTx"`
	// Multiplier value used to compute holddown - Range: `3`-`50`
	IntervalMillisecondsMultiplier pulumi.IntPtrOutput `pulumi:"intervalMillisecondsMultiplier"`
	Name                           pulumi.StringOutput `pulumi:"name"`
}

// NewBfdTemplateSingleHop registers a new resource with the given unique name, arguments, and options.
func NewBfdTemplateSingleHop(ctx *pulumi.Context,
	name string, args *BfdTemplateSingleHopArgs, opts ...pulumi.ResourceOption) (*BfdTemplateSingleHop, error) {
	if args == nil {
		args = &BfdTemplateSingleHopArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BfdTemplateSingleHop
	err := ctx.RegisterResource("iosxe:index/bfdTemplateSingleHop:BfdTemplateSingleHop", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBfdTemplateSingleHop gets an existing BfdTemplateSingleHop resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBfdTemplateSingleHop(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BfdTemplateSingleHopState, opts ...pulumi.ResourceOption) (*BfdTemplateSingleHop, error) {
	var resource BfdTemplateSingleHop
	err := ctx.ReadResource("iosxe:index/bfdTemplateSingleHop:BfdTemplateSingleHop", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BfdTemplateSingleHop resources.
type bfdTemplateSingleHopState struct {
	// keychain name
	AuthenticationMd5Keychain *string `pulumi:"authenticationMd5Keychain"`
	// keychain name
	AuthenticationMeticulousMd5Keychain *string `pulumi:"authenticationMeticulousMd5Keychain"`
	// keychain name
	AuthenticationMeticulousSha1Keychain *string `pulumi:"authenticationMeticulousSha1Keychain"`
	// keychain name
	AuthenticationSha1Keychain *string `pulumi:"authenticationSha1Keychain"`
	// Half-life time for the penalty - Range: `1`-`30`
	DampeningHalfTime *int `pulumi:"dampeningHalfTime"`
	// Maximum duration to suppress a session - Range: `1`-`420`
	DampeningMaxSuppressingTime *int `pulumi:"dampeningMaxSuppressingTime"`
	// Value to start suppressing a session - Range: `1`-`18000`
	DampeningSuppressTime *int `pulumi:"dampeningSuppressTime"`
	// Value to unsuppress a session - Range: `1`-`18000`
	DampeningUnsuppressTime *int `pulumi:"dampeningUnsuppressTime"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Use echo adjunct as bfd detection mechanism
	Echo *bool `pulumi:"echo"`
	// Minimum receive interval capability - Range: `3300`-`9999000`
	IntervalMicrosecondsMinRx *int `pulumi:"intervalMicrosecondsMinRx"`
	// Minimum transmit interval capability - Range: `3300`-`9999000`
	IntervalMicrosecondsMinTx *int `pulumi:"intervalMicrosecondsMinTx"`
	// Minimum transmit and receive interval capability - Range: `4`-`9999`
	IntervalMillisecondsBoth *int `pulumi:"intervalMillisecondsBoth"`
	// Minimum receive interval capability - Range: `4`-`9999`
	IntervalMillisecondsMinRx *int `pulumi:"intervalMillisecondsMinRx"`
	// Minimum transmit interval capability - Range: `4`-`9999`
	IntervalMillisecondsMinTx *int `pulumi:"intervalMillisecondsMinTx"`
	// Multiplier value used to compute holddown - Range: `3`-`50`
	IntervalMillisecondsMultiplier *int    `pulumi:"intervalMillisecondsMultiplier"`
	Name                           *string `pulumi:"name"`
}

type BfdTemplateSingleHopState struct {
	// keychain name
	AuthenticationMd5Keychain pulumi.StringPtrInput
	// keychain name
	AuthenticationMeticulousMd5Keychain pulumi.StringPtrInput
	// keychain name
	AuthenticationMeticulousSha1Keychain pulumi.StringPtrInput
	// keychain name
	AuthenticationSha1Keychain pulumi.StringPtrInput
	// Half-life time for the penalty - Range: `1`-`30`
	DampeningHalfTime pulumi.IntPtrInput
	// Maximum duration to suppress a session - Range: `1`-`420`
	DampeningMaxSuppressingTime pulumi.IntPtrInput
	// Value to start suppressing a session - Range: `1`-`18000`
	DampeningSuppressTime pulumi.IntPtrInput
	// Value to unsuppress a session - Range: `1`-`18000`
	DampeningUnsuppressTime pulumi.IntPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Use echo adjunct as bfd detection mechanism
	Echo pulumi.BoolPtrInput
	// Minimum receive interval capability - Range: `3300`-`9999000`
	IntervalMicrosecondsMinRx pulumi.IntPtrInput
	// Minimum transmit interval capability - Range: `3300`-`9999000`
	IntervalMicrosecondsMinTx pulumi.IntPtrInput
	// Minimum transmit and receive interval capability - Range: `4`-`9999`
	IntervalMillisecondsBoth pulumi.IntPtrInput
	// Minimum receive interval capability - Range: `4`-`9999`
	IntervalMillisecondsMinRx pulumi.IntPtrInput
	// Minimum transmit interval capability - Range: `4`-`9999`
	IntervalMillisecondsMinTx pulumi.IntPtrInput
	// Multiplier value used to compute holddown - Range: `3`-`50`
	IntervalMillisecondsMultiplier pulumi.IntPtrInput
	Name                           pulumi.StringPtrInput
}

func (BfdTemplateSingleHopState) ElementType() reflect.Type {
	return reflect.TypeOf((*bfdTemplateSingleHopState)(nil)).Elem()
}

type bfdTemplateSingleHopArgs struct {
	// keychain name
	AuthenticationMd5Keychain *string `pulumi:"authenticationMd5Keychain"`
	// keychain name
	AuthenticationMeticulousMd5Keychain *string `pulumi:"authenticationMeticulousMd5Keychain"`
	// keychain name
	AuthenticationMeticulousSha1Keychain *string `pulumi:"authenticationMeticulousSha1Keychain"`
	// keychain name
	AuthenticationSha1Keychain *string `pulumi:"authenticationSha1Keychain"`
	// Half-life time for the penalty - Range: `1`-`30`
	DampeningHalfTime *int `pulumi:"dampeningHalfTime"`
	// Maximum duration to suppress a session - Range: `1`-`420`
	DampeningMaxSuppressingTime *int `pulumi:"dampeningMaxSuppressingTime"`
	// Value to start suppressing a session - Range: `1`-`18000`
	DampeningSuppressTime *int `pulumi:"dampeningSuppressTime"`
	// Value to unsuppress a session - Range: `1`-`18000`
	DampeningUnsuppressTime *int `pulumi:"dampeningUnsuppressTime"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Use echo adjunct as bfd detection mechanism
	Echo *bool `pulumi:"echo"`
	// Minimum receive interval capability - Range: `3300`-`9999000`
	IntervalMicrosecondsMinRx *int `pulumi:"intervalMicrosecondsMinRx"`
	// Minimum transmit interval capability - Range: `3300`-`9999000`
	IntervalMicrosecondsMinTx *int `pulumi:"intervalMicrosecondsMinTx"`
	// Minimum transmit and receive interval capability - Range: `4`-`9999`
	IntervalMillisecondsBoth *int `pulumi:"intervalMillisecondsBoth"`
	// Minimum receive interval capability - Range: `4`-`9999`
	IntervalMillisecondsMinRx *int `pulumi:"intervalMillisecondsMinRx"`
	// Minimum transmit interval capability - Range: `4`-`9999`
	IntervalMillisecondsMinTx *int `pulumi:"intervalMillisecondsMinTx"`
	// Multiplier value used to compute holddown - Range: `3`-`50`
	IntervalMillisecondsMultiplier *int    `pulumi:"intervalMillisecondsMultiplier"`
	Name                           *string `pulumi:"name"`
}

// The set of arguments for constructing a BfdTemplateSingleHop resource.
type BfdTemplateSingleHopArgs struct {
	// keychain name
	AuthenticationMd5Keychain pulumi.StringPtrInput
	// keychain name
	AuthenticationMeticulousMd5Keychain pulumi.StringPtrInput
	// keychain name
	AuthenticationMeticulousSha1Keychain pulumi.StringPtrInput
	// keychain name
	AuthenticationSha1Keychain pulumi.StringPtrInput
	// Half-life time for the penalty - Range: `1`-`30`
	DampeningHalfTime pulumi.IntPtrInput
	// Maximum duration to suppress a session - Range: `1`-`420`
	DampeningMaxSuppressingTime pulumi.IntPtrInput
	// Value to start suppressing a session - Range: `1`-`18000`
	DampeningSuppressTime pulumi.IntPtrInput
	// Value to unsuppress a session - Range: `1`-`18000`
	DampeningUnsuppressTime pulumi.IntPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Use echo adjunct as bfd detection mechanism
	Echo pulumi.BoolPtrInput
	// Minimum receive interval capability - Range: `3300`-`9999000`
	IntervalMicrosecondsMinRx pulumi.IntPtrInput
	// Minimum transmit interval capability - Range: `3300`-`9999000`
	IntervalMicrosecondsMinTx pulumi.IntPtrInput
	// Minimum transmit and receive interval capability - Range: `4`-`9999`
	IntervalMillisecondsBoth pulumi.IntPtrInput
	// Minimum receive interval capability - Range: `4`-`9999`
	IntervalMillisecondsMinRx pulumi.IntPtrInput
	// Minimum transmit interval capability - Range: `4`-`9999`
	IntervalMillisecondsMinTx pulumi.IntPtrInput
	// Multiplier value used to compute holddown - Range: `3`-`50`
	IntervalMillisecondsMultiplier pulumi.IntPtrInput
	Name                           pulumi.StringPtrInput
}

func (BfdTemplateSingleHopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bfdTemplateSingleHopArgs)(nil)).Elem()
}

type BfdTemplateSingleHopInput interface {
	pulumi.Input

	ToBfdTemplateSingleHopOutput() BfdTemplateSingleHopOutput
	ToBfdTemplateSingleHopOutputWithContext(ctx context.Context) BfdTemplateSingleHopOutput
}

func (*BfdTemplateSingleHop) ElementType() reflect.Type {
	return reflect.TypeOf((**BfdTemplateSingleHop)(nil)).Elem()
}

func (i *BfdTemplateSingleHop) ToBfdTemplateSingleHopOutput() BfdTemplateSingleHopOutput {
	return i.ToBfdTemplateSingleHopOutputWithContext(context.Background())
}

func (i *BfdTemplateSingleHop) ToBfdTemplateSingleHopOutputWithContext(ctx context.Context) BfdTemplateSingleHopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BfdTemplateSingleHopOutput)
}

func (i *BfdTemplateSingleHop) ToOutput(ctx context.Context) pulumix.Output[*BfdTemplateSingleHop] {
	return pulumix.Output[*BfdTemplateSingleHop]{
		OutputState: i.ToBfdTemplateSingleHopOutputWithContext(ctx).OutputState,
	}
}

// BfdTemplateSingleHopArrayInput is an input type that accepts BfdTemplateSingleHopArray and BfdTemplateSingleHopArrayOutput values.
// You can construct a concrete instance of `BfdTemplateSingleHopArrayInput` via:
//
//	BfdTemplateSingleHopArray{ BfdTemplateSingleHopArgs{...} }
type BfdTemplateSingleHopArrayInput interface {
	pulumi.Input

	ToBfdTemplateSingleHopArrayOutput() BfdTemplateSingleHopArrayOutput
	ToBfdTemplateSingleHopArrayOutputWithContext(context.Context) BfdTemplateSingleHopArrayOutput
}

type BfdTemplateSingleHopArray []BfdTemplateSingleHopInput

func (BfdTemplateSingleHopArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BfdTemplateSingleHop)(nil)).Elem()
}

func (i BfdTemplateSingleHopArray) ToBfdTemplateSingleHopArrayOutput() BfdTemplateSingleHopArrayOutput {
	return i.ToBfdTemplateSingleHopArrayOutputWithContext(context.Background())
}

func (i BfdTemplateSingleHopArray) ToBfdTemplateSingleHopArrayOutputWithContext(ctx context.Context) BfdTemplateSingleHopArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BfdTemplateSingleHopArrayOutput)
}

func (i BfdTemplateSingleHopArray) ToOutput(ctx context.Context) pulumix.Output[[]*BfdTemplateSingleHop] {
	return pulumix.Output[[]*BfdTemplateSingleHop]{
		OutputState: i.ToBfdTemplateSingleHopArrayOutputWithContext(ctx).OutputState,
	}
}

// BfdTemplateSingleHopMapInput is an input type that accepts BfdTemplateSingleHopMap and BfdTemplateSingleHopMapOutput values.
// You can construct a concrete instance of `BfdTemplateSingleHopMapInput` via:
//
//	BfdTemplateSingleHopMap{ "key": BfdTemplateSingleHopArgs{...} }
type BfdTemplateSingleHopMapInput interface {
	pulumi.Input

	ToBfdTemplateSingleHopMapOutput() BfdTemplateSingleHopMapOutput
	ToBfdTemplateSingleHopMapOutputWithContext(context.Context) BfdTemplateSingleHopMapOutput
}

type BfdTemplateSingleHopMap map[string]BfdTemplateSingleHopInput

func (BfdTemplateSingleHopMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BfdTemplateSingleHop)(nil)).Elem()
}

func (i BfdTemplateSingleHopMap) ToBfdTemplateSingleHopMapOutput() BfdTemplateSingleHopMapOutput {
	return i.ToBfdTemplateSingleHopMapOutputWithContext(context.Background())
}

func (i BfdTemplateSingleHopMap) ToBfdTemplateSingleHopMapOutputWithContext(ctx context.Context) BfdTemplateSingleHopMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BfdTemplateSingleHopMapOutput)
}

func (i BfdTemplateSingleHopMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*BfdTemplateSingleHop] {
	return pulumix.Output[map[string]*BfdTemplateSingleHop]{
		OutputState: i.ToBfdTemplateSingleHopMapOutputWithContext(ctx).OutputState,
	}
}

type BfdTemplateSingleHopOutput struct{ *pulumi.OutputState }

func (BfdTemplateSingleHopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BfdTemplateSingleHop)(nil)).Elem()
}

func (o BfdTemplateSingleHopOutput) ToBfdTemplateSingleHopOutput() BfdTemplateSingleHopOutput {
	return o
}

func (o BfdTemplateSingleHopOutput) ToBfdTemplateSingleHopOutputWithContext(ctx context.Context) BfdTemplateSingleHopOutput {
	return o
}

func (o BfdTemplateSingleHopOutput) ToOutput(ctx context.Context) pulumix.Output[*BfdTemplateSingleHop] {
	return pulumix.Output[*BfdTemplateSingleHop]{
		OutputState: o.OutputState,
	}
}

// keychain name
func (o BfdTemplateSingleHopOutput) AuthenticationMd5Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.StringPtrOutput { return v.AuthenticationMd5Keychain }).(pulumi.StringPtrOutput)
}

// keychain name
func (o BfdTemplateSingleHopOutput) AuthenticationMeticulousMd5Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.StringPtrOutput { return v.AuthenticationMeticulousMd5Keychain }).(pulumi.StringPtrOutput)
}

// keychain name
func (o BfdTemplateSingleHopOutput) AuthenticationMeticulousSha1Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.StringPtrOutput { return v.AuthenticationMeticulousSha1Keychain }).(pulumi.StringPtrOutput)
}

// keychain name
func (o BfdTemplateSingleHopOutput) AuthenticationSha1Keychain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.StringPtrOutput { return v.AuthenticationSha1Keychain }).(pulumi.StringPtrOutput)
}

// Half-life time for the penalty - Range: `1`-`30`
func (o BfdTemplateSingleHopOutput) DampeningHalfTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.IntPtrOutput { return v.DampeningHalfTime }).(pulumi.IntPtrOutput)
}

// Maximum duration to suppress a session - Range: `1`-`420`
func (o BfdTemplateSingleHopOutput) DampeningMaxSuppressingTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.IntPtrOutput { return v.DampeningMaxSuppressingTime }).(pulumi.IntPtrOutput)
}

// Value to start suppressing a session - Range: `1`-`18000`
func (o BfdTemplateSingleHopOutput) DampeningSuppressTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.IntPtrOutput { return v.DampeningSuppressTime }).(pulumi.IntPtrOutput)
}

// Value to unsuppress a session - Range: `1`-`18000`
func (o BfdTemplateSingleHopOutput) DampeningUnsuppressTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.IntPtrOutput { return v.DampeningUnsuppressTime }).(pulumi.IntPtrOutput)
}

// A device name from the provider configuration.
func (o BfdTemplateSingleHopOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// Use echo adjunct as bfd detection mechanism
func (o BfdTemplateSingleHopOutput) Echo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.BoolPtrOutput { return v.Echo }).(pulumi.BoolPtrOutput)
}

// Minimum receive interval capability - Range: `3300`-`9999000`
func (o BfdTemplateSingleHopOutput) IntervalMicrosecondsMinRx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.IntPtrOutput { return v.IntervalMicrosecondsMinRx }).(pulumi.IntPtrOutput)
}

// Minimum transmit interval capability - Range: `3300`-`9999000`
func (o BfdTemplateSingleHopOutput) IntervalMicrosecondsMinTx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.IntPtrOutput { return v.IntervalMicrosecondsMinTx }).(pulumi.IntPtrOutput)
}

// Minimum transmit and receive interval capability - Range: `4`-`9999`
func (o BfdTemplateSingleHopOutput) IntervalMillisecondsBoth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.IntPtrOutput { return v.IntervalMillisecondsBoth }).(pulumi.IntPtrOutput)
}

// Minimum receive interval capability - Range: `4`-`9999`
func (o BfdTemplateSingleHopOutput) IntervalMillisecondsMinRx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.IntPtrOutput { return v.IntervalMillisecondsMinRx }).(pulumi.IntPtrOutput)
}

// Minimum transmit interval capability - Range: `4`-`9999`
func (o BfdTemplateSingleHopOutput) IntervalMillisecondsMinTx() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.IntPtrOutput { return v.IntervalMillisecondsMinTx }).(pulumi.IntPtrOutput)
}

// Multiplier value used to compute holddown - Range: `3`-`50`
func (o BfdTemplateSingleHopOutput) IntervalMillisecondsMultiplier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.IntPtrOutput { return v.IntervalMillisecondsMultiplier }).(pulumi.IntPtrOutput)
}

func (o BfdTemplateSingleHopOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BfdTemplateSingleHop) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type BfdTemplateSingleHopArrayOutput struct{ *pulumi.OutputState }

func (BfdTemplateSingleHopArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BfdTemplateSingleHop)(nil)).Elem()
}

func (o BfdTemplateSingleHopArrayOutput) ToBfdTemplateSingleHopArrayOutput() BfdTemplateSingleHopArrayOutput {
	return o
}

func (o BfdTemplateSingleHopArrayOutput) ToBfdTemplateSingleHopArrayOutputWithContext(ctx context.Context) BfdTemplateSingleHopArrayOutput {
	return o
}

func (o BfdTemplateSingleHopArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*BfdTemplateSingleHop] {
	return pulumix.Output[[]*BfdTemplateSingleHop]{
		OutputState: o.OutputState,
	}
}

func (o BfdTemplateSingleHopArrayOutput) Index(i pulumi.IntInput) BfdTemplateSingleHopOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BfdTemplateSingleHop {
		return vs[0].([]*BfdTemplateSingleHop)[vs[1].(int)]
	}).(BfdTemplateSingleHopOutput)
}

type BfdTemplateSingleHopMapOutput struct{ *pulumi.OutputState }

func (BfdTemplateSingleHopMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BfdTemplateSingleHop)(nil)).Elem()
}

func (o BfdTemplateSingleHopMapOutput) ToBfdTemplateSingleHopMapOutput() BfdTemplateSingleHopMapOutput {
	return o
}

func (o BfdTemplateSingleHopMapOutput) ToBfdTemplateSingleHopMapOutputWithContext(ctx context.Context) BfdTemplateSingleHopMapOutput {
	return o
}

func (o BfdTemplateSingleHopMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*BfdTemplateSingleHop] {
	return pulumix.Output[map[string]*BfdTemplateSingleHop]{
		OutputState: o.OutputState,
	}
}

func (o BfdTemplateSingleHopMapOutput) MapIndex(k pulumi.StringInput) BfdTemplateSingleHopOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BfdTemplateSingleHop {
		return vs[0].(map[string]*BfdTemplateSingleHop)[vs[1].(string)]
	}).(BfdTemplateSingleHopOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BfdTemplateSingleHopInput)(nil)).Elem(), &BfdTemplateSingleHop{})
	pulumi.RegisterInputType(reflect.TypeOf((*BfdTemplateSingleHopArrayInput)(nil)).Elem(), BfdTemplateSingleHopArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BfdTemplateSingleHopMapInput)(nil)).Elem(), BfdTemplateSingleHopMap{})
	pulumi.RegisterOutputType(BfdTemplateSingleHopOutput{})
	pulumi.RegisterOutputType(BfdTemplateSingleHopArrayOutput{})
	pulumi.RegisterOutputType(BfdTemplateSingleHopMapOutput{})
}
