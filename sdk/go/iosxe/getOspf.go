// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can read the OSPF configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iosxe.LookupOspf(ctx, &iosxe.LookupOspfArgs{
//				ProcessId: 1,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupOspf(ctx *pulumi.Context, args *LookupOspfArgs, opts ...pulumi.InvokeOption) (*LookupOspfResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOspfResult
	err := ctx.Invoke("iosxe:index/getOspf:getOspf", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOspf.
type LookupOspfArgs struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Process ID
	ProcessId int `pulumi:"processId"`
}

// A collection of values returned by getOspf.
type LookupOspfResult struct {
	// OSPF area parameters
	Areas []GetOspfArea `pulumi:"areas"`
	// Enable BFD on all interfaces
	BfdAllInterfaces bool `pulumi:"bfdAllInterfaces"`
	// Distribute a default route
	DefaultInformationOriginate bool `pulumi:"defaultInformationOriginate"`
	// Always advertise default route
	DefaultInformationOriginateAlways bool `pulumi:"defaultInformationOriginateAlways"`
	// Set metric of redistributed routes
	DefaultMetric int `pulumi:"defaultMetric"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Administrative distance
	Distance int `pulumi:"distance"`
	// OSPF domain-tag
	DomainTag int `pulumi:"domainTag"`
	// The path of the retrieved object.
	Id string `pulumi:"id"`
	// Configure LDP automatic configuration
	MplsLdpAutoconfig bool `pulumi:"mplsLdpAutoconfig"`
	// Configure LDP-IGP Synchronization
	MplsLdpSync bool `pulumi:"mplsLdpSync"`
	// Specify a neighbor router
	Neighbors []GetOspfNeighbor `pulumi:"neighbors"`
	// Enable routing on an IP network
	Networks []GetOspfNetwork `pulumi:"networks"`
	// Suppress routing updates on all interfaces
	PassiveInterfaceDefault bool `pulumi:"passiveInterfaceDefault"`
	// OSPF topology priority
	Priority int `pulumi:"priority"`
	// Process ID
	ProcessId int `pulumi:"processId"`
	// Override configured router identifier (peers will reset)
	RouterId string `pulumi:"routerId"`
	// Shutdown the OSPF protocol under the current instance
	Shutdown bool `pulumi:"shutdown"`
	// Configure IP address summaries
	SummaryAddresses []GetOspfSummaryAddress `pulumi:"summaryAddresses"`
}

func LookupOspfOutput(ctx *pulumi.Context, args LookupOspfOutputArgs, opts ...pulumi.InvokeOption) LookupOspfResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOspfResult, error) {
			args := v.(LookupOspfArgs)
			r, err := LookupOspf(ctx, &args, opts...)
			var s LookupOspfResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOspfResultOutput)
}

// A collection of arguments for invoking getOspf.
type LookupOspfOutputArgs struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// Process ID
	ProcessId pulumi.IntInput `pulumi:"processId"`
}

func (LookupOspfOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOspfArgs)(nil)).Elem()
}

// A collection of values returned by getOspf.
type LookupOspfResultOutput struct{ *pulumi.OutputState }

func (LookupOspfResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOspfResult)(nil)).Elem()
}

func (o LookupOspfResultOutput) ToLookupOspfResultOutput() LookupOspfResultOutput {
	return o
}

func (o LookupOspfResultOutput) ToLookupOspfResultOutputWithContext(ctx context.Context) LookupOspfResultOutput {
	return o
}

func (o LookupOspfResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupOspfResult] {
	return pulumix.Output[LookupOspfResult]{
		OutputState: o.OutputState,
	}
}

// OSPF area parameters
func (o LookupOspfResultOutput) Areas() GetOspfAreaArrayOutput {
	return o.ApplyT(func(v LookupOspfResult) []GetOspfArea { return v.Areas }).(GetOspfAreaArrayOutput)
}

// Enable BFD on all interfaces
func (o LookupOspfResultOutput) BfdAllInterfaces() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOspfResult) bool { return v.BfdAllInterfaces }).(pulumi.BoolOutput)
}

// Distribute a default route
func (o LookupOspfResultOutput) DefaultInformationOriginate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOspfResult) bool { return v.DefaultInformationOriginate }).(pulumi.BoolOutput)
}

// Always advertise default route
func (o LookupOspfResultOutput) DefaultInformationOriginateAlways() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOspfResult) bool { return v.DefaultInformationOriginateAlways }).(pulumi.BoolOutput)
}

// Set metric of redistributed routes
func (o LookupOspfResultOutput) DefaultMetric() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOspfResult) int { return v.DefaultMetric }).(pulumi.IntOutput)
}

// A device name from the provider configuration.
func (o LookupOspfResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOspfResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// Administrative distance
func (o LookupOspfResultOutput) Distance() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOspfResult) int { return v.Distance }).(pulumi.IntOutput)
}

// OSPF domain-tag
func (o LookupOspfResultOutput) DomainTag() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOspfResult) int { return v.DomainTag }).(pulumi.IntOutput)
}

// The path of the retrieved object.
func (o LookupOspfResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOspfResult) string { return v.Id }).(pulumi.StringOutput)
}

// Configure LDP automatic configuration
func (o LookupOspfResultOutput) MplsLdpAutoconfig() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOspfResult) bool { return v.MplsLdpAutoconfig }).(pulumi.BoolOutput)
}

// Configure LDP-IGP Synchronization
func (o LookupOspfResultOutput) MplsLdpSync() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOspfResult) bool { return v.MplsLdpSync }).(pulumi.BoolOutput)
}

// Specify a neighbor router
func (o LookupOspfResultOutput) Neighbors() GetOspfNeighborArrayOutput {
	return o.ApplyT(func(v LookupOspfResult) []GetOspfNeighbor { return v.Neighbors }).(GetOspfNeighborArrayOutput)
}

// Enable routing on an IP network
func (o LookupOspfResultOutput) Networks() GetOspfNetworkArrayOutput {
	return o.ApplyT(func(v LookupOspfResult) []GetOspfNetwork { return v.Networks }).(GetOspfNetworkArrayOutput)
}

// Suppress routing updates on all interfaces
func (o LookupOspfResultOutput) PassiveInterfaceDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOspfResult) bool { return v.PassiveInterfaceDefault }).(pulumi.BoolOutput)
}

// OSPF topology priority
func (o LookupOspfResultOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOspfResult) int { return v.Priority }).(pulumi.IntOutput)
}

// Process ID
func (o LookupOspfResultOutput) ProcessId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOspfResult) int { return v.ProcessId }).(pulumi.IntOutput)
}

// Override configured router identifier (peers will reset)
func (o LookupOspfResultOutput) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOspfResult) string { return v.RouterId }).(pulumi.StringOutput)
}

// Shutdown the OSPF protocol under the current instance
func (o LookupOspfResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOspfResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Configure IP address summaries
func (o LookupOspfResultOutput) SummaryAddresses() GetOspfSummaryAddressArrayOutput {
	return o.ApplyT(func(v LookupOspfResult) []GetOspfSummaryAddress { return v.SummaryAddresses }).(GetOspfSummaryAddressArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOspfResultOutput{})
}
