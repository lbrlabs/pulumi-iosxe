// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can read the BFD Template Multi Hop configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iosxe.LookupBfdTemplateMultiHop(ctx, &iosxe.LookupBfdTemplateMultiHopArgs{
//				Name: "T11",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBfdTemplateMultiHop(ctx *pulumi.Context, args *LookupBfdTemplateMultiHopArgs, opts ...pulumi.InvokeOption) (*LookupBfdTemplateMultiHopResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBfdTemplateMultiHopResult
	err := ctx.Invoke("iosxe:index/getBfdTemplateMultiHop:getBfdTemplateMultiHop", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBfdTemplateMultiHop.
type LookupBfdTemplateMultiHopArgs struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	Name   string  `pulumi:"name"`
}

// A collection of values returned by getBfdTemplateMultiHop.
type LookupBfdTemplateMultiHopResult struct {
	// keychain name
	AuthenticationMd5Keychain string `pulumi:"authenticationMd5Keychain"`
	// keychain name
	AuthenticationMeticulousMd5Keychain string `pulumi:"authenticationMeticulousMd5Keychain"`
	// keychain name
	AuthenticationMeticulousSha1keychain string `pulumi:"authenticationMeticulousSha1keychain"`
	// keychain name
	AuthenticationSha1Keychain string `pulumi:"authenticationSha1Keychain"`
	// down monitoring
	DampeningDownMonitoring bool `pulumi:"dampeningDownMonitoring"`
	// Half-life time for the penalty
	DampeningHalfTime int `pulumi:"dampeningHalfTime"`
	// Maximum duration to suppress a session
	DampeningMaxSuppressingTime int `pulumi:"dampeningMaxSuppressingTime"`
	// Value to start suppressing a session
	DampeningSuppressTime int `pulumi:"dampeningSuppressTime"`
	// Stability threshold to enter dampening in down dampened state(seconds)
	DampeningThreshold int `pulumi:"dampeningThreshold"`
	// Value to unsuppress a session
	DampeningUnsuppressTime int `pulumi:"dampeningUnsuppressTime"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Use echo adjunct as bfd detection mechanism
	Echo bool `pulumi:"echo"`
	// The path of the retrieved object.
	Id string `pulumi:"id"`
	// Specify BFD timers in microseconds
	IntervalMicroseconds bool `pulumi:"intervalMicroseconds"`
	// Minimum transmit and receive interval capability
	IntervalMicrosecondsBoth int `pulumi:"intervalMicrosecondsBoth"`
	// Minimum receive interval capability
	IntervalMicrosecondsMinRx int `pulumi:"intervalMicrosecondsMinRx"`
	// Minimum transmit interval capability
	IntervalMicrosecondsMinTx int `pulumi:"intervalMicrosecondsMinTx"`
	// Multiplier value used to compute holddown
	IntervalMicrosecondsMultiplier int `pulumi:"intervalMicrosecondsMultiplier"`
	// Minimum transmit and receive interval capability
	IntervalMillisecondsBoth int `pulumi:"intervalMillisecondsBoth"`
	// Minimum receive interval capability
	IntervalMillisecondsMinRx int `pulumi:"intervalMillisecondsMinRx"`
	// Minimum transmit interval capability
	IntervalMillisecondsMinTx int `pulumi:"intervalMillisecondsMinTx"`
	// Multiplier value used to compute holddown
	IntervalMillisecondsMultiplier int    `pulumi:"intervalMillisecondsMultiplier"`
	Name                           string `pulumi:"name"`
}

func LookupBfdTemplateMultiHopOutput(ctx *pulumi.Context, args LookupBfdTemplateMultiHopOutputArgs, opts ...pulumi.InvokeOption) LookupBfdTemplateMultiHopResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBfdTemplateMultiHopResult, error) {
			args := v.(LookupBfdTemplateMultiHopArgs)
			r, err := LookupBfdTemplateMultiHop(ctx, &args, opts...)
			var s LookupBfdTemplateMultiHopResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBfdTemplateMultiHopResultOutput)
}

// A collection of arguments for invoking getBfdTemplateMultiHop.
type LookupBfdTemplateMultiHopOutputArgs struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput `pulumi:"device"`
	Name   pulumi.StringInput    `pulumi:"name"`
}

func (LookupBfdTemplateMultiHopOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBfdTemplateMultiHopArgs)(nil)).Elem()
}

// A collection of values returned by getBfdTemplateMultiHop.
type LookupBfdTemplateMultiHopResultOutput struct{ *pulumi.OutputState }

func (LookupBfdTemplateMultiHopResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBfdTemplateMultiHopResult)(nil)).Elem()
}

func (o LookupBfdTemplateMultiHopResultOutput) ToLookupBfdTemplateMultiHopResultOutput() LookupBfdTemplateMultiHopResultOutput {
	return o
}

func (o LookupBfdTemplateMultiHopResultOutput) ToLookupBfdTemplateMultiHopResultOutputWithContext(ctx context.Context) LookupBfdTemplateMultiHopResultOutput {
	return o
}

func (o LookupBfdTemplateMultiHopResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupBfdTemplateMultiHopResult] {
	return pulumix.Output[LookupBfdTemplateMultiHopResult]{
		OutputState: o.OutputState,
	}
}

// keychain name
func (o LookupBfdTemplateMultiHopResultOutput) AuthenticationMd5Keychain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) string { return v.AuthenticationMd5Keychain }).(pulumi.StringOutput)
}

// keychain name
func (o LookupBfdTemplateMultiHopResultOutput) AuthenticationMeticulousMd5Keychain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) string { return v.AuthenticationMeticulousMd5Keychain }).(pulumi.StringOutput)
}

// keychain name
func (o LookupBfdTemplateMultiHopResultOutput) AuthenticationMeticulousSha1keychain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) string { return v.AuthenticationMeticulousSha1keychain }).(pulumi.StringOutput)
}

// keychain name
func (o LookupBfdTemplateMultiHopResultOutput) AuthenticationSha1Keychain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) string { return v.AuthenticationSha1Keychain }).(pulumi.StringOutput)
}

// down monitoring
func (o LookupBfdTemplateMultiHopResultOutput) DampeningDownMonitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) bool { return v.DampeningDownMonitoring }).(pulumi.BoolOutput)
}

// Half-life time for the penalty
func (o LookupBfdTemplateMultiHopResultOutput) DampeningHalfTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) int { return v.DampeningHalfTime }).(pulumi.IntOutput)
}

// Maximum duration to suppress a session
func (o LookupBfdTemplateMultiHopResultOutput) DampeningMaxSuppressingTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) int { return v.DampeningMaxSuppressingTime }).(pulumi.IntOutput)
}

// Value to start suppressing a session
func (o LookupBfdTemplateMultiHopResultOutput) DampeningSuppressTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) int { return v.DampeningSuppressTime }).(pulumi.IntOutput)
}

// Stability threshold to enter dampening in down dampened state(seconds)
func (o LookupBfdTemplateMultiHopResultOutput) DampeningThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) int { return v.DampeningThreshold }).(pulumi.IntOutput)
}

// Value to unsuppress a session
func (o LookupBfdTemplateMultiHopResultOutput) DampeningUnsuppressTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) int { return v.DampeningUnsuppressTime }).(pulumi.IntOutput)
}

// A device name from the provider configuration.
func (o LookupBfdTemplateMultiHopResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// Use echo adjunct as bfd detection mechanism
func (o LookupBfdTemplateMultiHopResultOutput) Echo() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) bool { return v.Echo }).(pulumi.BoolOutput)
}

// The path of the retrieved object.
func (o LookupBfdTemplateMultiHopResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) string { return v.Id }).(pulumi.StringOutput)
}

// Specify BFD timers in microseconds
func (o LookupBfdTemplateMultiHopResultOutput) IntervalMicroseconds() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) bool { return v.IntervalMicroseconds }).(pulumi.BoolOutput)
}

// Minimum transmit and receive interval capability
func (o LookupBfdTemplateMultiHopResultOutput) IntervalMicrosecondsBoth() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) int { return v.IntervalMicrosecondsBoth }).(pulumi.IntOutput)
}

// Minimum receive interval capability
func (o LookupBfdTemplateMultiHopResultOutput) IntervalMicrosecondsMinRx() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) int { return v.IntervalMicrosecondsMinRx }).(pulumi.IntOutput)
}

// Minimum transmit interval capability
func (o LookupBfdTemplateMultiHopResultOutput) IntervalMicrosecondsMinTx() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) int { return v.IntervalMicrosecondsMinTx }).(pulumi.IntOutput)
}

// Multiplier value used to compute holddown
func (o LookupBfdTemplateMultiHopResultOutput) IntervalMicrosecondsMultiplier() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) int { return v.IntervalMicrosecondsMultiplier }).(pulumi.IntOutput)
}

// Minimum transmit and receive interval capability
func (o LookupBfdTemplateMultiHopResultOutput) IntervalMillisecondsBoth() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) int { return v.IntervalMillisecondsBoth }).(pulumi.IntOutput)
}

// Minimum receive interval capability
func (o LookupBfdTemplateMultiHopResultOutput) IntervalMillisecondsMinRx() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) int { return v.IntervalMillisecondsMinRx }).(pulumi.IntOutput)
}

// Minimum transmit interval capability
func (o LookupBfdTemplateMultiHopResultOutput) IntervalMillisecondsMinTx() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) int { return v.IntervalMillisecondsMinTx }).(pulumi.IntOutput)
}

// Multiplier value used to compute holddown
func (o LookupBfdTemplateMultiHopResultOutput) IntervalMillisecondsMultiplier() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) int { return v.IntervalMillisecondsMultiplier }).(pulumi.IntOutput)
}

func (o LookupBfdTemplateMultiHopResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBfdTemplateMultiHopResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBfdTemplateMultiHopResultOutput{})
}
