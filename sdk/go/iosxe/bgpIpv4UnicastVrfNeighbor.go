// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource can manage the BGP IPv4 Unicast VRF Neighbor configuration.
//
// ## Import
//
// ```sh
//
//	$ pulumi import iosxe:index/bgpIpv4UnicastVrfNeighbor:BgpIpv4UnicastVrfNeighbor example "Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000/address-family/with-vrf/ipv4=unicast/vrf=VRF1/ipv4-unicast/neighbor=3.3.3.3"
//
// ```
type BgpIpv4UnicastVrfNeighbor struct {
	pulumi.CustomResourceState

	// Enable the address family for this neighbor - Default value: `true`
	Activate  pulumi.BoolOutput      `pulumi:"activate"`
	Asn       pulumi.StringOutput    `pulumi:"asn"`
	ClusterId pulumi.StringPtrOutput `pulumi:"clusterId"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrOutput `pulumi:"deleteMode"`
	// Neighbor specific description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// one-hop away EBGP peer using loopback address
	DisableConnectedCheck pulumi.BoolPtrOutput `pulumi:"disableConnectedCheck"`
	// Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
	EbgpMultihop pulumi.BoolPtrOutput `pulumi:"ebgpMultihop"`
	// - Range: `2`-`255`
	EbgpMultihopMaxHop pulumi.IntPtrOutput `pulumi:"ebgpMultihopMaxHop"`
	// Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
	FallOverBfdCheckControlPlaneFailure pulumi.BoolPtrOutput `pulumi:"fallOverBfdCheckControlPlaneFailure"`
	// Force BFD multi-hop to detect failure
	FallOverBfdMultiHop pulumi.BoolPtrOutput `pulumi:"fallOverBfdMultiHop"`
	// Force BFD single-hop to detect failure
	FallOverBfdSingleHop pulumi.BoolPtrOutput `pulumi:"fallOverBfdSingleHop"`
	// Enable BFD strict-mode
	FallOverBfdStrictMode         pulumi.BoolPtrOutput   `pulumi:"fallOverBfdStrictMode"`
	FallOverDefaultRouteMap       pulumi.StringPtrOutput `pulumi:"fallOverDefaultRouteMap"`
	FallOverMaximumMetricRouteMap pulumi.StringPtrOutput `pulumi:"fallOverMaximumMetricRouteMap"`
	Ip                            pulumi.StringOutput    `pulumi:"ip"`
	LocalAs                       pulumi.StringPtrOutput `pulumi:"localAs"`
	// Accept either real AS or local AS from the ebgp peer
	LocalAsDualAs pulumi.BoolPtrOutput `pulumi:"localAsDualAs"`
	// Do not prepend local-as to updates from ebgp peers
	LocalAsNoPrepend pulumi.BoolPtrOutput `pulumi:"localAsNoPrepend"`
	// Replace real AS with local AS in the EBGP updates
	LocalAsReplaceAs pulumi.BoolPtrOutput `pulumi:"localAsReplaceAs"`
	// disable
	LogNeighborChangesDisable pulumi.BoolPtrOutput   `pulumi:"logNeighborChangesDisable"`
	Password                  pulumi.StringPtrOutput `pulumi:"password"`
	// Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
	PasswordType pulumi.IntPtrOutput `pulumi:"passwordType"`
	// Specify a BGP peer-group remote-as
	RemoteAs pulumi.StringPtrOutput `pulumi:"remoteAs"`
	// Apply route map to neighbor
	RouteMaps BgpIpv4UnicastVrfNeighborRouteMapArrayOutput `pulumi:"routeMaps"`
	// Configure a neighbor as Route Reflector client
	RouteReflectorClient pulumi.BoolPtrOutput `pulumi:"routeReflectorClient"`
	// - Choices: `both`, `extended`, `standard`
	SendCommunity pulumi.StringPtrOutput `pulumi:"sendCommunity"`
	// Administratively shut down this neighbor
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// - Range: `0`-`65535`
	TimersHoldtime pulumi.IntPtrOutput `pulumi:"timersHoldtime"`
	// - Range: `0`-`65535`
	TimersKeepaliveInterval pulumi.IntPtrOutput `pulumi:"timersKeepaliveInterval"`
	// - Range: `0`-`65535`
	TimersMinimumNeighborHold pulumi.IntPtrOutput `pulumi:"timersMinimumNeighborHold"`
	// IP hops - Range: `1`-`254`
	TtlSecurityHops pulumi.IntPtrOutput `pulumi:"ttlSecurityHops"`
	// Loopback interface
	UpdateSourceLoopback pulumi.StringPtrOutput `pulumi:"updateSourceLoopback"`
	// Set the BGP version to match a neighbor - Range: `4`-`4`
	Version pulumi.IntPtrOutput `pulumi:"version"`
	Vrf     pulumi.StringOutput `pulumi:"vrf"`
}

// NewBgpIpv4UnicastVrfNeighbor registers a new resource with the given unique name, arguments, and options.
func NewBgpIpv4UnicastVrfNeighbor(ctx *pulumi.Context,
	name string, args *BgpIpv4UnicastVrfNeighborArgs, opts ...pulumi.ResourceOption) (*BgpIpv4UnicastVrfNeighbor, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Asn == nil {
		return nil, errors.New("invalid value for required argument 'Asn'")
	}
	if args.Ip == nil {
		return nil, errors.New("invalid value for required argument 'Ip'")
	}
	if args.Vrf == nil {
		return nil, errors.New("invalid value for required argument 'Vrf'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BgpIpv4UnicastVrfNeighbor
	err := ctx.RegisterResource("iosxe:index/bgpIpv4UnicastVrfNeighbor:BgpIpv4UnicastVrfNeighbor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBgpIpv4UnicastVrfNeighbor gets an existing BgpIpv4UnicastVrfNeighbor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBgpIpv4UnicastVrfNeighbor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BgpIpv4UnicastVrfNeighborState, opts ...pulumi.ResourceOption) (*BgpIpv4UnicastVrfNeighbor, error) {
	var resource BgpIpv4UnicastVrfNeighbor
	err := ctx.ReadResource("iosxe:index/bgpIpv4UnicastVrfNeighbor:BgpIpv4UnicastVrfNeighbor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BgpIpv4UnicastVrfNeighbor resources.
type bgpIpv4UnicastVrfNeighborState struct {
	// Enable the address family for this neighbor - Default value: `true`
	Activate  *bool   `pulumi:"activate"`
	Asn       *string `pulumi:"asn"`
	ClusterId *string `pulumi:"clusterId"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// Neighbor specific description
	Description *string `pulumi:"description"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// one-hop away EBGP peer using loopback address
	DisableConnectedCheck *bool `pulumi:"disableConnectedCheck"`
	// Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
	EbgpMultihop *bool `pulumi:"ebgpMultihop"`
	// - Range: `2`-`255`
	EbgpMultihopMaxHop *int `pulumi:"ebgpMultihopMaxHop"`
	// Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
	FallOverBfdCheckControlPlaneFailure *bool `pulumi:"fallOverBfdCheckControlPlaneFailure"`
	// Force BFD multi-hop to detect failure
	FallOverBfdMultiHop *bool `pulumi:"fallOverBfdMultiHop"`
	// Force BFD single-hop to detect failure
	FallOverBfdSingleHop *bool `pulumi:"fallOverBfdSingleHop"`
	// Enable BFD strict-mode
	FallOverBfdStrictMode         *bool   `pulumi:"fallOverBfdStrictMode"`
	FallOverDefaultRouteMap       *string `pulumi:"fallOverDefaultRouteMap"`
	FallOverMaximumMetricRouteMap *string `pulumi:"fallOverMaximumMetricRouteMap"`
	Ip                            *string `pulumi:"ip"`
	LocalAs                       *string `pulumi:"localAs"`
	// Accept either real AS or local AS from the ebgp peer
	LocalAsDualAs *bool `pulumi:"localAsDualAs"`
	// Do not prepend local-as to updates from ebgp peers
	LocalAsNoPrepend *bool `pulumi:"localAsNoPrepend"`
	// Replace real AS with local AS in the EBGP updates
	LocalAsReplaceAs *bool `pulumi:"localAsReplaceAs"`
	// disable
	LogNeighborChangesDisable *bool   `pulumi:"logNeighborChangesDisable"`
	Password                  *string `pulumi:"password"`
	// Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
	PasswordType *int `pulumi:"passwordType"`
	// Specify a BGP peer-group remote-as
	RemoteAs *string `pulumi:"remoteAs"`
	// Apply route map to neighbor
	RouteMaps []BgpIpv4UnicastVrfNeighborRouteMap `pulumi:"routeMaps"`
	// Configure a neighbor as Route Reflector client
	RouteReflectorClient *bool `pulumi:"routeReflectorClient"`
	// - Choices: `both`, `extended`, `standard`
	SendCommunity *string `pulumi:"sendCommunity"`
	// Administratively shut down this neighbor
	Shutdown *bool `pulumi:"shutdown"`
	// - Range: `0`-`65535`
	TimersHoldtime *int `pulumi:"timersHoldtime"`
	// - Range: `0`-`65535`
	TimersKeepaliveInterval *int `pulumi:"timersKeepaliveInterval"`
	// - Range: `0`-`65535`
	TimersMinimumNeighborHold *int `pulumi:"timersMinimumNeighborHold"`
	// IP hops - Range: `1`-`254`
	TtlSecurityHops *int `pulumi:"ttlSecurityHops"`
	// Loopback interface
	UpdateSourceLoopback *string `pulumi:"updateSourceLoopback"`
	// Set the BGP version to match a neighbor - Range: `4`-`4`
	Version *int    `pulumi:"version"`
	Vrf     *string `pulumi:"vrf"`
}

type BgpIpv4UnicastVrfNeighborState struct {
	// Enable the address family for this neighbor - Default value: `true`
	Activate  pulumi.BoolPtrInput
	Asn       pulumi.StringPtrInput
	ClusterId pulumi.StringPtrInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// Neighbor specific description
	Description pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// one-hop away EBGP peer using loopback address
	DisableConnectedCheck pulumi.BoolPtrInput
	// Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
	EbgpMultihop pulumi.BoolPtrInput
	// - Range: `2`-`255`
	EbgpMultihopMaxHop pulumi.IntPtrInput
	// Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
	FallOverBfdCheckControlPlaneFailure pulumi.BoolPtrInput
	// Force BFD multi-hop to detect failure
	FallOverBfdMultiHop pulumi.BoolPtrInput
	// Force BFD single-hop to detect failure
	FallOverBfdSingleHop pulumi.BoolPtrInput
	// Enable BFD strict-mode
	FallOverBfdStrictMode         pulumi.BoolPtrInput
	FallOverDefaultRouteMap       pulumi.StringPtrInput
	FallOverMaximumMetricRouteMap pulumi.StringPtrInput
	Ip                            pulumi.StringPtrInput
	LocalAs                       pulumi.StringPtrInput
	// Accept either real AS or local AS from the ebgp peer
	LocalAsDualAs pulumi.BoolPtrInput
	// Do not prepend local-as to updates from ebgp peers
	LocalAsNoPrepend pulumi.BoolPtrInput
	// Replace real AS with local AS in the EBGP updates
	LocalAsReplaceAs pulumi.BoolPtrInput
	// disable
	LogNeighborChangesDisable pulumi.BoolPtrInput
	Password                  pulumi.StringPtrInput
	// Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
	PasswordType pulumi.IntPtrInput
	// Specify a BGP peer-group remote-as
	RemoteAs pulumi.StringPtrInput
	// Apply route map to neighbor
	RouteMaps BgpIpv4UnicastVrfNeighborRouteMapArrayInput
	// Configure a neighbor as Route Reflector client
	RouteReflectorClient pulumi.BoolPtrInput
	// - Choices: `both`, `extended`, `standard`
	SendCommunity pulumi.StringPtrInput
	// Administratively shut down this neighbor
	Shutdown pulumi.BoolPtrInput
	// - Range: `0`-`65535`
	TimersHoldtime pulumi.IntPtrInput
	// - Range: `0`-`65535`
	TimersKeepaliveInterval pulumi.IntPtrInput
	// - Range: `0`-`65535`
	TimersMinimumNeighborHold pulumi.IntPtrInput
	// IP hops - Range: `1`-`254`
	TtlSecurityHops pulumi.IntPtrInput
	// Loopback interface
	UpdateSourceLoopback pulumi.StringPtrInput
	// Set the BGP version to match a neighbor - Range: `4`-`4`
	Version pulumi.IntPtrInput
	Vrf     pulumi.StringPtrInput
}

func (BgpIpv4UnicastVrfNeighborState) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpIpv4UnicastVrfNeighborState)(nil)).Elem()
}

type bgpIpv4UnicastVrfNeighborArgs struct {
	// Enable the address family for this neighbor - Default value: `true`
	Activate  *bool   `pulumi:"activate"`
	Asn       string  `pulumi:"asn"`
	ClusterId *string `pulumi:"clusterId"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// Neighbor specific description
	Description *string `pulumi:"description"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// one-hop away EBGP peer using loopback address
	DisableConnectedCheck *bool `pulumi:"disableConnectedCheck"`
	// Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
	EbgpMultihop *bool `pulumi:"ebgpMultihop"`
	// - Range: `2`-`255`
	EbgpMultihopMaxHop *int `pulumi:"ebgpMultihopMaxHop"`
	// Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
	FallOverBfdCheckControlPlaneFailure *bool `pulumi:"fallOverBfdCheckControlPlaneFailure"`
	// Force BFD multi-hop to detect failure
	FallOverBfdMultiHop *bool `pulumi:"fallOverBfdMultiHop"`
	// Force BFD single-hop to detect failure
	FallOverBfdSingleHop *bool `pulumi:"fallOverBfdSingleHop"`
	// Enable BFD strict-mode
	FallOverBfdStrictMode         *bool   `pulumi:"fallOverBfdStrictMode"`
	FallOverDefaultRouteMap       *string `pulumi:"fallOverDefaultRouteMap"`
	FallOverMaximumMetricRouteMap *string `pulumi:"fallOverMaximumMetricRouteMap"`
	Ip                            string  `pulumi:"ip"`
	LocalAs                       *string `pulumi:"localAs"`
	// Accept either real AS or local AS from the ebgp peer
	LocalAsDualAs *bool `pulumi:"localAsDualAs"`
	// Do not prepend local-as to updates from ebgp peers
	LocalAsNoPrepend *bool `pulumi:"localAsNoPrepend"`
	// Replace real AS with local AS in the EBGP updates
	LocalAsReplaceAs *bool `pulumi:"localAsReplaceAs"`
	// disable
	LogNeighborChangesDisable *bool   `pulumi:"logNeighborChangesDisable"`
	Password                  *string `pulumi:"password"`
	// Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
	PasswordType *int `pulumi:"passwordType"`
	// Specify a BGP peer-group remote-as
	RemoteAs *string `pulumi:"remoteAs"`
	// Apply route map to neighbor
	RouteMaps []BgpIpv4UnicastVrfNeighborRouteMap `pulumi:"routeMaps"`
	// Configure a neighbor as Route Reflector client
	RouteReflectorClient *bool `pulumi:"routeReflectorClient"`
	// - Choices: `both`, `extended`, `standard`
	SendCommunity *string `pulumi:"sendCommunity"`
	// Administratively shut down this neighbor
	Shutdown *bool `pulumi:"shutdown"`
	// - Range: `0`-`65535`
	TimersHoldtime *int `pulumi:"timersHoldtime"`
	// - Range: `0`-`65535`
	TimersKeepaliveInterval *int `pulumi:"timersKeepaliveInterval"`
	// - Range: `0`-`65535`
	TimersMinimumNeighborHold *int `pulumi:"timersMinimumNeighborHold"`
	// IP hops - Range: `1`-`254`
	TtlSecurityHops *int `pulumi:"ttlSecurityHops"`
	// Loopback interface
	UpdateSourceLoopback *string `pulumi:"updateSourceLoopback"`
	// Set the BGP version to match a neighbor - Range: `4`-`4`
	Version *int   `pulumi:"version"`
	Vrf     string `pulumi:"vrf"`
}

// The set of arguments for constructing a BgpIpv4UnicastVrfNeighbor resource.
type BgpIpv4UnicastVrfNeighborArgs struct {
	// Enable the address family for this neighbor - Default value: `true`
	Activate  pulumi.BoolPtrInput
	Asn       pulumi.StringInput
	ClusterId pulumi.StringPtrInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// Neighbor specific description
	Description pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// one-hop away EBGP peer using loopback address
	DisableConnectedCheck pulumi.BoolPtrInput
	// Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
	EbgpMultihop pulumi.BoolPtrInput
	// - Range: `2`-`255`
	EbgpMultihopMaxHop pulumi.IntPtrInput
	// Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
	FallOverBfdCheckControlPlaneFailure pulumi.BoolPtrInput
	// Force BFD multi-hop to detect failure
	FallOverBfdMultiHop pulumi.BoolPtrInput
	// Force BFD single-hop to detect failure
	FallOverBfdSingleHop pulumi.BoolPtrInput
	// Enable BFD strict-mode
	FallOverBfdStrictMode         pulumi.BoolPtrInput
	FallOverDefaultRouteMap       pulumi.StringPtrInput
	FallOverMaximumMetricRouteMap pulumi.StringPtrInput
	Ip                            pulumi.StringInput
	LocalAs                       pulumi.StringPtrInput
	// Accept either real AS or local AS from the ebgp peer
	LocalAsDualAs pulumi.BoolPtrInput
	// Do not prepend local-as to updates from ebgp peers
	LocalAsNoPrepend pulumi.BoolPtrInput
	// Replace real AS with local AS in the EBGP updates
	LocalAsReplaceAs pulumi.BoolPtrInput
	// disable
	LogNeighborChangesDisable pulumi.BoolPtrInput
	Password                  pulumi.StringPtrInput
	// Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
	PasswordType pulumi.IntPtrInput
	// Specify a BGP peer-group remote-as
	RemoteAs pulumi.StringPtrInput
	// Apply route map to neighbor
	RouteMaps BgpIpv4UnicastVrfNeighborRouteMapArrayInput
	// Configure a neighbor as Route Reflector client
	RouteReflectorClient pulumi.BoolPtrInput
	// - Choices: `both`, `extended`, `standard`
	SendCommunity pulumi.StringPtrInput
	// Administratively shut down this neighbor
	Shutdown pulumi.BoolPtrInput
	// - Range: `0`-`65535`
	TimersHoldtime pulumi.IntPtrInput
	// - Range: `0`-`65535`
	TimersKeepaliveInterval pulumi.IntPtrInput
	// - Range: `0`-`65535`
	TimersMinimumNeighborHold pulumi.IntPtrInput
	// IP hops - Range: `1`-`254`
	TtlSecurityHops pulumi.IntPtrInput
	// Loopback interface
	UpdateSourceLoopback pulumi.StringPtrInput
	// Set the BGP version to match a neighbor - Range: `4`-`4`
	Version pulumi.IntPtrInput
	Vrf     pulumi.StringInput
}

func (BgpIpv4UnicastVrfNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpIpv4UnicastVrfNeighborArgs)(nil)).Elem()
}

type BgpIpv4UnicastVrfNeighborInput interface {
	pulumi.Input

	ToBgpIpv4UnicastVrfNeighborOutput() BgpIpv4UnicastVrfNeighborOutput
	ToBgpIpv4UnicastVrfNeighborOutputWithContext(ctx context.Context) BgpIpv4UnicastVrfNeighborOutput
}

func (*BgpIpv4UnicastVrfNeighbor) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpIpv4UnicastVrfNeighbor)(nil)).Elem()
}

func (i *BgpIpv4UnicastVrfNeighbor) ToBgpIpv4UnicastVrfNeighborOutput() BgpIpv4UnicastVrfNeighborOutput {
	return i.ToBgpIpv4UnicastVrfNeighborOutputWithContext(context.Background())
}

func (i *BgpIpv4UnicastVrfNeighbor) ToBgpIpv4UnicastVrfNeighborOutputWithContext(ctx context.Context) BgpIpv4UnicastVrfNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpIpv4UnicastVrfNeighborOutput)
}

func (i *BgpIpv4UnicastVrfNeighbor) ToOutput(ctx context.Context) pulumix.Output[*BgpIpv4UnicastVrfNeighbor] {
	return pulumix.Output[*BgpIpv4UnicastVrfNeighbor]{
		OutputState: i.ToBgpIpv4UnicastVrfNeighborOutputWithContext(ctx).OutputState,
	}
}

// BgpIpv4UnicastVrfNeighborArrayInput is an input type that accepts BgpIpv4UnicastVrfNeighborArray and BgpIpv4UnicastVrfNeighborArrayOutput values.
// You can construct a concrete instance of `BgpIpv4UnicastVrfNeighborArrayInput` via:
//
//	BgpIpv4UnicastVrfNeighborArray{ BgpIpv4UnicastVrfNeighborArgs{...} }
type BgpIpv4UnicastVrfNeighborArrayInput interface {
	pulumi.Input

	ToBgpIpv4UnicastVrfNeighborArrayOutput() BgpIpv4UnicastVrfNeighborArrayOutput
	ToBgpIpv4UnicastVrfNeighborArrayOutputWithContext(context.Context) BgpIpv4UnicastVrfNeighborArrayOutput
}

type BgpIpv4UnicastVrfNeighborArray []BgpIpv4UnicastVrfNeighborInput

func (BgpIpv4UnicastVrfNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpIpv4UnicastVrfNeighbor)(nil)).Elem()
}

func (i BgpIpv4UnicastVrfNeighborArray) ToBgpIpv4UnicastVrfNeighborArrayOutput() BgpIpv4UnicastVrfNeighborArrayOutput {
	return i.ToBgpIpv4UnicastVrfNeighborArrayOutputWithContext(context.Background())
}

func (i BgpIpv4UnicastVrfNeighborArray) ToBgpIpv4UnicastVrfNeighborArrayOutputWithContext(ctx context.Context) BgpIpv4UnicastVrfNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpIpv4UnicastVrfNeighborArrayOutput)
}

func (i BgpIpv4UnicastVrfNeighborArray) ToOutput(ctx context.Context) pulumix.Output[[]*BgpIpv4UnicastVrfNeighbor] {
	return pulumix.Output[[]*BgpIpv4UnicastVrfNeighbor]{
		OutputState: i.ToBgpIpv4UnicastVrfNeighborArrayOutputWithContext(ctx).OutputState,
	}
}

// BgpIpv4UnicastVrfNeighborMapInput is an input type that accepts BgpIpv4UnicastVrfNeighborMap and BgpIpv4UnicastVrfNeighborMapOutput values.
// You can construct a concrete instance of `BgpIpv4UnicastVrfNeighborMapInput` via:
//
//	BgpIpv4UnicastVrfNeighborMap{ "key": BgpIpv4UnicastVrfNeighborArgs{...} }
type BgpIpv4UnicastVrfNeighborMapInput interface {
	pulumi.Input

	ToBgpIpv4UnicastVrfNeighborMapOutput() BgpIpv4UnicastVrfNeighborMapOutput
	ToBgpIpv4UnicastVrfNeighborMapOutputWithContext(context.Context) BgpIpv4UnicastVrfNeighborMapOutput
}

type BgpIpv4UnicastVrfNeighborMap map[string]BgpIpv4UnicastVrfNeighborInput

func (BgpIpv4UnicastVrfNeighborMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpIpv4UnicastVrfNeighbor)(nil)).Elem()
}

func (i BgpIpv4UnicastVrfNeighborMap) ToBgpIpv4UnicastVrfNeighborMapOutput() BgpIpv4UnicastVrfNeighborMapOutput {
	return i.ToBgpIpv4UnicastVrfNeighborMapOutputWithContext(context.Background())
}

func (i BgpIpv4UnicastVrfNeighborMap) ToBgpIpv4UnicastVrfNeighborMapOutputWithContext(ctx context.Context) BgpIpv4UnicastVrfNeighborMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpIpv4UnicastVrfNeighborMapOutput)
}

func (i BgpIpv4UnicastVrfNeighborMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpIpv4UnicastVrfNeighbor] {
	return pulumix.Output[map[string]*BgpIpv4UnicastVrfNeighbor]{
		OutputState: i.ToBgpIpv4UnicastVrfNeighborMapOutputWithContext(ctx).OutputState,
	}
}

type BgpIpv4UnicastVrfNeighborOutput struct{ *pulumi.OutputState }

func (BgpIpv4UnicastVrfNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpIpv4UnicastVrfNeighbor)(nil)).Elem()
}

func (o BgpIpv4UnicastVrfNeighborOutput) ToBgpIpv4UnicastVrfNeighborOutput() BgpIpv4UnicastVrfNeighborOutput {
	return o
}

func (o BgpIpv4UnicastVrfNeighborOutput) ToBgpIpv4UnicastVrfNeighborOutputWithContext(ctx context.Context) BgpIpv4UnicastVrfNeighborOutput {
	return o
}

func (o BgpIpv4UnicastVrfNeighborOutput) ToOutput(ctx context.Context) pulumix.Output[*BgpIpv4UnicastVrfNeighbor] {
	return pulumix.Output[*BgpIpv4UnicastVrfNeighbor]{
		OutputState: o.OutputState,
	}
}

// Enable the address family for this neighbor - Default value: `true`
func (o BgpIpv4UnicastVrfNeighborOutput) Activate() pulumi.BoolOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.BoolOutput { return v.Activate }).(pulumi.BoolOutput)
}

func (o BgpIpv4UnicastVrfNeighborOutput) Asn() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.StringOutput { return v.Asn }).(pulumi.StringOutput)
}

func (o BgpIpv4UnicastVrfNeighborOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.StringPtrOutput { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
// Default value is `all`. - Choices: `all`, `attributes`
func (o BgpIpv4UnicastVrfNeighborOutput) DeleteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.StringPtrOutput { return v.DeleteMode }).(pulumi.StringPtrOutput)
}

// Neighbor specific description
func (o BgpIpv4UnicastVrfNeighborOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A device name from the provider configuration.
func (o BgpIpv4UnicastVrfNeighborOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// one-hop away EBGP peer using loopback address
func (o BgpIpv4UnicastVrfNeighborOutput) DisableConnectedCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.BoolPtrOutput { return v.DisableConnectedCheck }).(pulumi.BoolPtrOutput)
}

// Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
func (o BgpIpv4UnicastVrfNeighborOutput) EbgpMultihop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.BoolPtrOutput { return v.EbgpMultihop }).(pulumi.BoolPtrOutput)
}

// - Range: `2`-`255`
func (o BgpIpv4UnicastVrfNeighborOutput) EbgpMultihopMaxHop() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.IntPtrOutput { return v.EbgpMultihopMaxHop }).(pulumi.IntPtrOutput)
}

// Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
func (o BgpIpv4UnicastVrfNeighborOutput) FallOverBfdCheckControlPlaneFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.BoolPtrOutput { return v.FallOverBfdCheckControlPlaneFailure }).(pulumi.BoolPtrOutput)
}

// Force BFD multi-hop to detect failure
func (o BgpIpv4UnicastVrfNeighborOutput) FallOverBfdMultiHop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.BoolPtrOutput { return v.FallOverBfdMultiHop }).(pulumi.BoolPtrOutput)
}

// Force BFD single-hop to detect failure
func (o BgpIpv4UnicastVrfNeighborOutput) FallOverBfdSingleHop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.BoolPtrOutput { return v.FallOverBfdSingleHop }).(pulumi.BoolPtrOutput)
}

// Enable BFD strict-mode
func (o BgpIpv4UnicastVrfNeighborOutput) FallOverBfdStrictMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.BoolPtrOutput { return v.FallOverBfdStrictMode }).(pulumi.BoolPtrOutput)
}

func (o BgpIpv4UnicastVrfNeighborOutput) FallOverDefaultRouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.StringPtrOutput { return v.FallOverDefaultRouteMap }).(pulumi.StringPtrOutput)
}

func (o BgpIpv4UnicastVrfNeighborOutput) FallOverMaximumMetricRouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.StringPtrOutput { return v.FallOverMaximumMetricRouteMap }).(pulumi.StringPtrOutput)
}

func (o BgpIpv4UnicastVrfNeighborOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

func (o BgpIpv4UnicastVrfNeighborOutput) LocalAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.StringPtrOutput { return v.LocalAs }).(pulumi.StringPtrOutput)
}

// Accept either real AS or local AS from the ebgp peer
func (o BgpIpv4UnicastVrfNeighborOutput) LocalAsDualAs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.BoolPtrOutput { return v.LocalAsDualAs }).(pulumi.BoolPtrOutput)
}

// Do not prepend local-as to updates from ebgp peers
func (o BgpIpv4UnicastVrfNeighborOutput) LocalAsNoPrepend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.BoolPtrOutput { return v.LocalAsNoPrepend }).(pulumi.BoolPtrOutput)
}

// Replace real AS with local AS in the EBGP updates
func (o BgpIpv4UnicastVrfNeighborOutput) LocalAsReplaceAs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.BoolPtrOutput { return v.LocalAsReplaceAs }).(pulumi.BoolPtrOutput)
}

// disable
func (o BgpIpv4UnicastVrfNeighborOutput) LogNeighborChangesDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.BoolPtrOutput { return v.LogNeighborChangesDisable }).(pulumi.BoolPtrOutput)
}

func (o BgpIpv4UnicastVrfNeighborOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
func (o BgpIpv4UnicastVrfNeighborOutput) PasswordType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.IntPtrOutput { return v.PasswordType }).(pulumi.IntPtrOutput)
}

// Specify a BGP peer-group remote-as
func (o BgpIpv4UnicastVrfNeighborOutput) RemoteAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.StringPtrOutput { return v.RemoteAs }).(pulumi.StringPtrOutput)
}

// Apply route map to neighbor
func (o BgpIpv4UnicastVrfNeighborOutput) RouteMaps() BgpIpv4UnicastVrfNeighborRouteMapArrayOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) BgpIpv4UnicastVrfNeighborRouteMapArrayOutput { return v.RouteMaps }).(BgpIpv4UnicastVrfNeighborRouteMapArrayOutput)
}

// Configure a neighbor as Route Reflector client
func (o BgpIpv4UnicastVrfNeighborOutput) RouteReflectorClient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.BoolPtrOutput { return v.RouteReflectorClient }).(pulumi.BoolPtrOutput)
}

// - Choices: `both`, `extended`, `standard`
func (o BgpIpv4UnicastVrfNeighborOutput) SendCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.StringPtrOutput { return v.SendCommunity }).(pulumi.StringPtrOutput)
}

// Administratively shut down this neighbor
func (o BgpIpv4UnicastVrfNeighborOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// - Range: `0`-`65535`
func (o BgpIpv4UnicastVrfNeighborOutput) TimersHoldtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.IntPtrOutput { return v.TimersHoldtime }).(pulumi.IntPtrOutput)
}

// - Range: `0`-`65535`
func (o BgpIpv4UnicastVrfNeighborOutput) TimersKeepaliveInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.IntPtrOutput { return v.TimersKeepaliveInterval }).(pulumi.IntPtrOutput)
}

// - Range: `0`-`65535`
func (o BgpIpv4UnicastVrfNeighborOutput) TimersMinimumNeighborHold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.IntPtrOutput { return v.TimersMinimumNeighborHold }).(pulumi.IntPtrOutput)
}

// IP hops - Range: `1`-`254`
func (o BgpIpv4UnicastVrfNeighborOutput) TtlSecurityHops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.IntPtrOutput { return v.TtlSecurityHops }).(pulumi.IntPtrOutput)
}

// Loopback interface
func (o BgpIpv4UnicastVrfNeighborOutput) UpdateSourceLoopback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.StringPtrOutput { return v.UpdateSourceLoopback }).(pulumi.StringPtrOutput)
}

// Set the BGP version to match a neighbor - Range: `4`-`4`
func (o BgpIpv4UnicastVrfNeighborOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.IntPtrOutput { return v.Version }).(pulumi.IntPtrOutput)
}

func (o BgpIpv4UnicastVrfNeighborOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpIpv4UnicastVrfNeighbor) pulumi.StringOutput { return v.Vrf }).(pulumi.StringOutput)
}

type BgpIpv4UnicastVrfNeighborArrayOutput struct{ *pulumi.OutputState }

func (BgpIpv4UnicastVrfNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpIpv4UnicastVrfNeighbor)(nil)).Elem()
}

func (o BgpIpv4UnicastVrfNeighborArrayOutput) ToBgpIpv4UnicastVrfNeighborArrayOutput() BgpIpv4UnicastVrfNeighborArrayOutput {
	return o
}

func (o BgpIpv4UnicastVrfNeighborArrayOutput) ToBgpIpv4UnicastVrfNeighborArrayOutputWithContext(ctx context.Context) BgpIpv4UnicastVrfNeighborArrayOutput {
	return o
}

func (o BgpIpv4UnicastVrfNeighborArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*BgpIpv4UnicastVrfNeighbor] {
	return pulumix.Output[[]*BgpIpv4UnicastVrfNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o BgpIpv4UnicastVrfNeighborArrayOutput) Index(i pulumi.IntInput) BgpIpv4UnicastVrfNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BgpIpv4UnicastVrfNeighbor {
		return vs[0].([]*BgpIpv4UnicastVrfNeighbor)[vs[1].(int)]
	}).(BgpIpv4UnicastVrfNeighborOutput)
}

type BgpIpv4UnicastVrfNeighborMapOutput struct{ *pulumi.OutputState }

func (BgpIpv4UnicastVrfNeighborMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpIpv4UnicastVrfNeighbor)(nil)).Elem()
}

func (o BgpIpv4UnicastVrfNeighborMapOutput) ToBgpIpv4UnicastVrfNeighborMapOutput() BgpIpv4UnicastVrfNeighborMapOutput {
	return o
}

func (o BgpIpv4UnicastVrfNeighborMapOutput) ToBgpIpv4UnicastVrfNeighborMapOutputWithContext(ctx context.Context) BgpIpv4UnicastVrfNeighborMapOutput {
	return o
}

func (o BgpIpv4UnicastVrfNeighborMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpIpv4UnicastVrfNeighbor] {
	return pulumix.Output[map[string]*BgpIpv4UnicastVrfNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o BgpIpv4UnicastVrfNeighborMapOutput) MapIndex(k pulumi.StringInput) BgpIpv4UnicastVrfNeighborOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BgpIpv4UnicastVrfNeighbor {
		return vs[0].(map[string]*BgpIpv4UnicastVrfNeighbor)[vs[1].(string)]
	}).(BgpIpv4UnicastVrfNeighborOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BgpIpv4UnicastVrfNeighborInput)(nil)).Elem(), &BgpIpv4UnicastVrfNeighbor{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpIpv4UnicastVrfNeighborArrayInput)(nil)).Elem(), BgpIpv4UnicastVrfNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpIpv4UnicastVrfNeighborMapInput)(nil)).Elem(), BgpIpv4UnicastVrfNeighborMap{})
	pulumi.RegisterOutputType(BgpIpv4UnicastVrfNeighborOutput{})
	pulumi.RegisterOutputType(BgpIpv4UnicastVrfNeighborArrayOutput{})
	pulumi.RegisterOutputType(BgpIpv4UnicastVrfNeighborMapOutput{})
}
