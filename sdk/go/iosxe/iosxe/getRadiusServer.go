// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupRadiusServer(ctx *pulumi.Context, args *LookupRadiusServerArgs, opts ...pulumi.InvokeOption) (*LookupRadiusServerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRadiusServerResult
	err := ctx.Invoke("iosxe:iosxe/getRadiusServer:getRadiusServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRadiusServer.
type LookupRadiusServerArgs struct {
	Device *string `pulumi:"device"`
}

// A collection of values returned by getRadiusServer.
type LookupRadiusServerResult struct {
	Attributes        []GetRadiusServerAttribute `pulumi:"attributes"`
	DeadCriteriaTime  int                        `pulumi:"deadCriteriaTime"`
	DeadCriteriaTries int                        `pulumi:"deadCriteriaTries"`
	Deadtime          int                        `pulumi:"deadtime"`
	Device            *string                    `pulumi:"device"`
	Id                string                     `pulumi:"id"`
}

func LookupRadiusServerOutput(ctx *pulumi.Context, args LookupRadiusServerOutputArgs, opts ...pulumi.InvokeOption) LookupRadiusServerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRadiusServerResult, error) {
			args := v.(LookupRadiusServerArgs)
			r, err := LookupRadiusServer(ctx, &args, opts...)
			var s LookupRadiusServerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRadiusServerResultOutput)
}

// A collection of arguments for invoking getRadiusServer.
type LookupRadiusServerOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
}

func (LookupRadiusServerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRadiusServerArgs)(nil)).Elem()
}

// A collection of values returned by getRadiusServer.
type LookupRadiusServerResultOutput struct{ *pulumi.OutputState }

func (LookupRadiusServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRadiusServerResult)(nil)).Elem()
}

func (o LookupRadiusServerResultOutput) ToLookupRadiusServerResultOutput() LookupRadiusServerResultOutput {
	return o
}

func (o LookupRadiusServerResultOutput) ToLookupRadiusServerResultOutputWithContext(ctx context.Context) LookupRadiusServerResultOutput {
	return o
}

func (o LookupRadiusServerResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupRadiusServerResult] {
	return pulumix.Output[LookupRadiusServerResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupRadiusServerResultOutput) Attributes() GetRadiusServerAttributeArrayOutput {
	return o.ApplyT(func(v LookupRadiusServerResult) []GetRadiusServerAttribute { return v.Attributes }).(GetRadiusServerAttributeArrayOutput)
}

func (o LookupRadiusServerResultOutput) DeadCriteriaTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRadiusServerResult) int { return v.DeadCriteriaTime }).(pulumi.IntOutput)
}

func (o LookupRadiusServerResultOutput) DeadCriteriaTries() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRadiusServerResult) int { return v.DeadCriteriaTries }).(pulumi.IntOutput)
}

func (o LookupRadiusServerResultOutput) Deadtime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRadiusServerResult) int { return v.Deadtime }).(pulumi.IntOutput)
}

func (o LookupRadiusServerResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRadiusServerResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupRadiusServerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRadiusServerResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRadiusServerResultOutput{})
}
