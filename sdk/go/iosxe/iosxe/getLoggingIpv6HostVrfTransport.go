// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupLoggingIpv6HostVrfTransport(ctx *pulumi.Context, args *LookupLoggingIpv6HostVrfTransportArgs, opts ...pulumi.InvokeOption) (*LookupLoggingIpv6HostVrfTransportResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLoggingIpv6HostVrfTransportResult
	err := ctx.Invoke("iosxe:iosxe/getLoggingIpv6HostVrfTransport:getLoggingIpv6HostVrfTransport", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLoggingIpv6HostVrfTransport.
type LookupLoggingIpv6HostVrfTransportArgs struct {
	Device   *string `pulumi:"device"`
	Ipv6Host string  `pulumi:"ipv6Host"`
	Vrf      string  `pulumi:"vrf"`
}

// A collection of values returned by getLoggingIpv6HostVrfTransport.
type LookupLoggingIpv6HostVrfTransportResult struct {
	Device            *string                                          `pulumi:"device"`
	Id                string                                           `pulumi:"id"`
	Ipv6Host          string                                           `pulumi:"ipv6Host"`
	TransportTcpPorts []GetLoggingIpv6HostVrfTransportTransportTcpPort `pulumi:"transportTcpPorts"`
	TransportTlsPorts []GetLoggingIpv6HostVrfTransportTransportTlsPort `pulumi:"transportTlsPorts"`
	TransportUdpPorts []GetLoggingIpv6HostVrfTransportTransportUdpPort `pulumi:"transportUdpPorts"`
	Vrf               string                                           `pulumi:"vrf"`
}

func LookupLoggingIpv6HostVrfTransportOutput(ctx *pulumi.Context, args LookupLoggingIpv6HostVrfTransportOutputArgs, opts ...pulumi.InvokeOption) LookupLoggingIpv6HostVrfTransportResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLoggingIpv6HostVrfTransportResult, error) {
			args := v.(LookupLoggingIpv6HostVrfTransportArgs)
			r, err := LookupLoggingIpv6HostVrfTransport(ctx, &args, opts...)
			var s LookupLoggingIpv6HostVrfTransportResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLoggingIpv6HostVrfTransportResultOutput)
}

// A collection of arguments for invoking getLoggingIpv6HostVrfTransport.
type LookupLoggingIpv6HostVrfTransportOutputArgs struct {
	Device   pulumi.StringPtrInput `pulumi:"device"`
	Ipv6Host pulumi.StringInput    `pulumi:"ipv6Host"`
	Vrf      pulumi.StringInput    `pulumi:"vrf"`
}

func (LookupLoggingIpv6HostVrfTransportOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoggingIpv6HostVrfTransportArgs)(nil)).Elem()
}

// A collection of values returned by getLoggingIpv6HostVrfTransport.
type LookupLoggingIpv6HostVrfTransportResultOutput struct{ *pulumi.OutputState }

func (LookupLoggingIpv6HostVrfTransportResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoggingIpv6HostVrfTransportResult)(nil)).Elem()
}

func (o LookupLoggingIpv6HostVrfTransportResultOutput) ToLookupLoggingIpv6HostVrfTransportResultOutput() LookupLoggingIpv6HostVrfTransportResultOutput {
	return o
}

func (o LookupLoggingIpv6HostVrfTransportResultOutput) ToLookupLoggingIpv6HostVrfTransportResultOutputWithContext(ctx context.Context) LookupLoggingIpv6HostVrfTransportResultOutput {
	return o
}

func (o LookupLoggingIpv6HostVrfTransportResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupLoggingIpv6HostVrfTransportResult] {
	return pulumix.Output[LookupLoggingIpv6HostVrfTransportResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupLoggingIpv6HostVrfTransportResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoggingIpv6HostVrfTransportResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupLoggingIpv6HostVrfTransportResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoggingIpv6HostVrfTransportResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLoggingIpv6HostVrfTransportResultOutput) Ipv6Host() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoggingIpv6HostVrfTransportResult) string { return v.Ipv6Host }).(pulumi.StringOutput)
}

func (o LookupLoggingIpv6HostVrfTransportResultOutput) TransportTcpPorts() GetLoggingIpv6HostVrfTransportTransportTcpPortArrayOutput {
	return o.ApplyT(func(v LookupLoggingIpv6HostVrfTransportResult) []GetLoggingIpv6HostVrfTransportTransportTcpPort {
		return v.TransportTcpPorts
	}).(GetLoggingIpv6HostVrfTransportTransportTcpPortArrayOutput)
}

func (o LookupLoggingIpv6HostVrfTransportResultOutput) TransportTlsPorts() GetLoggingIpv6HostVrfTransportTransportTlsPortArrayOutput {
	return o.ApplyT(func(v LookupLoggingIpv6HostVrfTransportResult) []GetLoggingIpv6HostVrfTransportTransportTlsPort {
		return v.TransportTlsPorts
	}).(GetLoggingIpv6HostVrfTransportTransportTlsPortArrayOutput)
}

func (o LookupLoggingIpv6HostVrfTransportResultOutput) TransportUdpPorts() GetLoggingIpv6HostVrfTransportTransportUdpPortArrayOutput {
	return o.ApplyT(func(v LookupLoggingIpv6HostVrfTransportResult) []GetLoggingIpv6HostVrfTransportTransportUdpPort {
		return v.TransportUdpPorts
	}).(GetLoggingIpv6HostVrfTransportTransportUdpPortArrayOutput)
}

func (o LookupLoggingIpv6HostVrfTransportResultOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoggingIpv6HostVrfTransportResult) string { return v.Vrf }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLoggingIpv6HostVrfTransportResultOutput{})
}
