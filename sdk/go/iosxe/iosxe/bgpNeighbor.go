// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type BgpNeighbor struct {
	pulumi.CustomResourceState

	Asn       pulumi.StringOutput    `pulumi:"asn"`
	ClusterId pulumi.StringPtrOutput `pulumi:"clusterId"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrOutput `pulumi:"deleteMode"`
	// Neighbor specific description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// one-hop away EBGP peer using loopback address
	DisableConnectedCheck pulumi.BoolPtrOutput `pulumi:"disableConnectedCheck"`
	// Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
	EbgpMultihop pulumi.BoolPtrOutput `pulumi:"ebgpMultihop"`
	// - Range: `2`-`255`
	EbgpMultihopMaxHop pulumi.IntPtrOutput `pulumi:"ebgpMultihopMaxHop"`
	// Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
	FallOverBfdCheckControlPlaneFailure pulumi.BoolPtrOutput `pulumi:"fallOverBfdCheckControlPlaneFailure"`
	// Force BFD multi-hop to detect failure
	FallOverBfdMultiHop pulumi.BoolPtrOutput `pulumi:"fallOverBfdMultiHop"`
	// Force BFD single-hop to detect failure
	FallOverBfdSingleHop pulumi.BoolPtrOutput `pulumi:"fallOverBfdSingleHop"`
	// Enable BFD strict-mode
	FallOverBfdStrictMode         pulumi.BoolPtrOutput   `pulumi:"fallOverBfdStrictMode"`
	FallOverDefaultEnable         pulumi.BoolPtrOutput   `pulumi:"fallOverDefaultEnable"`
	FallOverDefaultRouteMap       pulumi.StringPtrOutput `pulumi:"fallOverDefaultRouteMap"`
	FallOverMaximumMetricRouteMap pulumi.StringPtrOutput `pulumi:"fallOverMaximumMetricRouteMap"`
	Ip                            pulumi.StringOutput    `pulumi:"ip"`
	LocalAs                       pulumi.StringPtrOutput `pulumi:"localAs"`
	// Accept either real AS or local AS from the ebgp peer
	LocalAsDualAs pulumi.BoolPtrOutput `pulumi:"localAsDualAs"`
	// Do not prepend local-as to updates from ebgp peers
	LocalAsNoPrepend pulumi.BoolPtrOutput `pulumi:"localAsNoPrepend"`
	// Replace real AS with local AS in the EBGP updates
	LocalAsReplaceAs pulumi.BoolPtrOutput `pulumi:"localAsReplaceAs"`
	// Log neighbor up/down and reset reason
	LogNeighborChanges pulumi.BoolPtrOutput   `pulumi:"logNeighborChanges"`
	Password           pulumi.StringPtrOutput `pulumi:"password"`
	// Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
	PasswordType pulumi.IntPtrOutput `pulumi:"passwordType"`
	// Specify a BGP peer-group remote-as
	RemoteAs pulumi.StringPtrOutput `pulumi:"remoteAs"`
	// Administratively shut down this neighbor
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// - Range: `0`-`65535`
	TimersHoldtime pulumi.IntPtrOutput `pulumi:"timersHoldtime"`
	// - Range: `0`-`65535`
	TimersKeepaliveInterval pulumi.IntPtrOutput `pulumi:"timersKeepaliveInterval"`
	// - Range: `0`-`65535`
	TimersMinimumNeighborHold pulumi.IntPtrOutput `pulumi:"timersMinimumNeighborHold"`
	// IP hops - Range: `1`-`254`
	TtlSecurityHops pulumi.IntPtrOutput `pulumi:"ttlSecurityHops"`
	// Loopback interface
	UpdateSourceLoopback pulumi.StringPtrOutput `pulumi:"updateSourceLoopback"`
	// Set the BGP version to match a neighbor - Range: `4`-`4`
	Version pulumi.IntPtrOutput `pulumi:"version"`
}

// NewBgpNeighbor registers a new resource with the given unique name, arguments, and options.
func NewBgpNeighbor(ctx *pulumi.Context,
	name string, args *BgpNeighborArgs, opts ...pulumi.ResourceOption) (*BgpNeighbor, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Asn == nil {
		return nil, errors.New("invalid value for required argument 'Asn'")
	}
	if args.Ip == nil {
		return nil, errors.New("invalid value for required argument 'Ip'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BgpNeighbor
	err := ctx.RegisterResource("iosxe:iosxe/bgpNeighbor:BgpNeighbor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBgpNeighbor gets an existing BgpNeighbor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBgpNeighbor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BgpNeighborState, opts ...pulumi.ResourceOption) (*BgpNeighbor, error) {
	var resource BgpNeighbor
	err := ctx.ReadResource("iosxe:iosxe/bgpNeighbor:BgpNeighbor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BgpNeighbor resources.
type bgpNeighborState struct {
	Asn       *string `pulumi:"asn"`
	ClusterId *string `pulumi:"clusterId"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// Neighbor specific description
	Description *string `pulumi:"description"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// one-hop away EBGP peer using loopback address
	DisableConnectedCheck *bool `pulumi:"disableConnectedCheck"`
	// Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
	EbgpMultihop *bool `pulumi:"ebgpMultihop"`
	// - Range: `2`-`255`
	EbgpMultihopMaxHop *int `pulumi:"ebgpMultihopMaxHop"`
	// Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
	FallOverBfdCheckControlPlaneFailure *bool `pulumi:"fallOverBfdCheckControlPlaneFailure"`
	// Force BFD multi-hop to detect failure
	FallOverBfdMultiHop *bool `pulumi:"fallOverBfdMultiHop"`
	// Force BFD single-hop to detect failure
	FallOverBfdSingleHop *bool `pulumi:"fallOverBfdSingleHop"`
	// Enable BFD strict-mode
	FallOverBfdStrictMode         *bool   `pulumi:"fallOverBfdStrictMode"`
	FallOverDefaultEnable         *bool   `pulumi:"fallOverDefaultEnable"`
	FallOverDefaultRouteMap       *string `pulumi:"fallOverDefaultRouteMap"`
	FallOverMaximumMetricRouteMap *string `pulumi:"fallOverMaximumMetricRouteMap"`
	Ip                            *string `pulumi:"ip"`
	LocalAs                       *string `pulumi:"localAs"`
	// Accept either real AS or local AS from the ebgp peer
	LocalAsDualAs *bool `pulumi:"localAsDualAs"`
	// Do not prepend local-as to updates from ebgp peers
	LocalAsNoPrepend *bool `pulumi:"localAsNoPrepend"`
	// Replace real AS with local AS in the EBGP updates
	LocalAsReplaceAs *bool `pulumi:"localAsReplaceAs"`
	// Log neighbor up/down and reset reason
	LogNeighborChanges *bool   `pulumi:"logNeighborChanges"`
	Password           *string `pulumi:"password"`
	// Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
	PasswordType *int `pulumi:"passwordType"`
	// Specify a BGP peer-group remote-as
	RemoteAs *string `pulumi:"remoteAs"`
	// Administratively shut down this neighbor
	Shutdown *bool `pulumi:"shutdown"`
	// - Range: `0`-`65535`
	TimersHoldtime *int `pulumi:"timersHoldtime"`
	// - Range: `0`-`65535`
	TimersKeepaliveInterval *int `pulumi:"timersKeepaliveInterval"`
	// - Range: `0`-`65535`
	TimersMinimumNeighborHold *int `pulumi:"timersMinimumNeighborHold"`
	// IP hops - Range: `1`-`254`
	TtlSecurityHops *int `pulumi:"ttlSecurityHops"`
	// Loopback interface
	UpdateSourceLoopback *string `pulumi:"updateSourceLoopback"`
	// Set the BGP version to match a neighbor - Range: `4`-`4`
	Version *int `pulumi:"version"`
}

type BgpNeighborState struct {
	Asn       pulumi.StringPtrInput
	ClusterId pulumi.StringPtrInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// Neighbor specific description
	Description pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// one-hop away EBGP peer using loopback address
	DisableConnectedCheck pulumi.BoolPtrInput
	// Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
	EbgpMultihop pulumi.BoolPtrInput
	// - Range: `2`-`255`
	EbgpMultihopMaxHop pulumi.IntPtrInput
	// Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
	FallOverBfdCheckControlPlaneFailure pulumi.BoolPtrInput
	// Force BFD multi-hop to detect failure
	FallOverBfdMultiHop pulumi.BoolPtrInput
	// Force BFD single-hop to detect failure
	FallOverBfdSingleHop pulumi.BoolPtrInput
	// Enable BFD strict-mode
	FallOverBfdStrictMode         pulumi.BoolPtrInput
	FallOverDefaultEnable         pulumi.BoolPtrInput
	FallOverDefaultRouteMap       pulumi.StringPtrInput
	FallOverMaximumMetricRouteMap pulumi.StringPtrInput
	Ip                            pulumi.StringPtrInput
	LocalAs                       pulumi.StringPtrInput
	// Accept either real AS or local AS from the ebgp peer
	LocalAsDualAs pulumi.BoolPtrInput
	// Do not prepend local-as to updates from ebgp peers
	LocalAsNoPrepend pulumi.BoolPtrInput
	// Replace real AS with local AS in the EBGP updates
	LocalAsReplaceAs pulumi.BoolPtrInput
	// Log neighbor up/down and reset reason
	LogNeighborChanges pulumi.BoolPtrInput
	Password           pulumi.StringPtrInput
	// Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
	PasswordType pulumi.IntPtrInput
	// Specify a BGP peer-group remote-as
	RemoteAs pulumi.StringPtrInput
	// Administratively shut down this neighbor
	Shutdown pulumi.BoolPtrInput
	// - Range: `0`-`65535`
	TimersHoldtime pulumi.IntPtrInput
	// - Range: `0`-`65535`
	TimersKeepaliveInterval pulumi.IntPtrInput
	// - Range: `0`-`65535`
	TimersMinimumNeighborHold pulumi.IntPtrInput
	// IP hops - Range: `1`-`254`
	TtlSecurityHops pulumi.IntPtrInput
	// Loopback interface
	UpdateSourceLoopback pulumi.StringPtrInput
	// Set the BGP version to match a neighbor - Range: `4`-`4`
	Version pulumi.IntPtrInput
}

func (BgpNeighborState) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpNeighborState)(nil)).Elem()
}

type bgpNeighborArgs struct {
	Asn       string  `pulumi:"asn"`
	ClusterId *string `pulumi:"clusterId"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// Neighbor specific description
	Description *string `pulumi:"description"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// one-hop away EBGP peer using loopback address
	DisableConnectedCheck *bool `pulumi:"disableConnectedCheck"`
	// Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
	EbgpMultihop *bool `pulumi:"ebgpMultihop"`
	// - Range: `2`-`255`
	EbgpMultihopMaxHop *int `pulumi:"ebgpMultihopMaxHop"`
	// Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
	FallOverBfdCheckControlPlaneFailure *bool `pulumi:"fallOverBfdCheckControlPlaneFailure"`
	// Force BFD multi-hop to detect failure
	FallOverBfdMultiHop *bool `pulumi:"fallOverBfdMultiHop"`
	// Force BFD single-hop to detect failure
	FallOverBfdSingleHop *bool `pulumi:"fallOverBfdSingleHop"`
	// Enable BFD strict-mode
	FallOverBfdStrictMode         *bool   `pulumi:"fallOverBfdStrictMode"`
	FallOverDefaultEnable         *bool   `pulumi:"fallOverDefaultEnable"`
	FallOverDefaultRouteMap       *string `pulumi:"fallOverDefaultRouteMap"`
	FallOverMaximumMetricRouteMap *string `pulumi:"fallOverMaximumMetricRouteMap"`
	Ip                            string  `pulumi:"ip"`
	LocalAs                       *string `pulumi:"localAs"`
	// Accept either real AS or local AS from the ebgp peer
	LocalAsDualAs *bool `pulumi:"localAsDualAs"`
	// Do not prepend local-as to updates from ebgp peers
	LocalAsNoPrepend *bool `pulumi:"localAsNoPrepend"`
	// Replace real AS with local AS in the EBGP updates
	LocalAsReplaceAs *bool `pulumi:"localAsReplaceAs"`
	// Log neighbor up/down and reset reason
	LogNeighborChanges *bool   `pulumi:"logNeighborChanges"`
	Password           *string `pulumi:"password"`
	// Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
	PasswordType *int `pulumi:"passwordType"`
	// Specify a BGP peer-group remote-as
	RemoteAs *string `pulumi:"remoteAs"`
	// Administratively shut down this neighbor
	Shutdown *bool `pulumi:"shutdown"`
	// - Range: `0`-`65535`
	TimersHoldtime *int `pulumi:"timersHoldtime"`
	// - Range: `0`-`65535`
	TimersKeepaliveInterval *int `pulumi:"timersKeepaliveInterval"`
	// - Range: `0`-`65535`
	TimersMinimumNeighborHold *int `pulumi:"timersMinimumNeighborHold"`
	// IP hops - Range: `1`-`254`
	TtlSecurityHops *int `pulumi:"ttlSecurityHops"`
	// Loopback interface
	UpdateSourceLoopback *string `pulumi:"updateSourceLoopback"`
	// Set the BGP version to match a neighbor - Range: `4`-`4`
	Version *int `pulumi:"version"`
}

// The set of arguments for constructing a BgpNeighbor resource.
type BgpNeighborArgs struct {
	Asn       pulumi.StringInput
	ClusterId pulumi.StringPtrInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// Neighbor specific description
	Description pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// one-hop away EBGP peer using loopback address
	DisableConnectedCheck pulumi.BoolPtrInput
	// Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
	EbgpMultihop pulumi.BoolPtrInput
	// - Range: `2`-`255`
	EbgpMultihopMaxHop pulumi.IntPtrInput
	// Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
	FallOverBfdCheckControlPlaneFailure pulumi.BoolPtrInput
	// Force BFD multi-hop to detect failure
	FallOverBfdMultiHop pulumi.BoolPtrInput
	// Force BFD single-hop to detect failure
	FallOverBfdSingleHop pulumi.BoolPtrInput
	// Enable BFD strict-mode
	FallOverBfdStrictMode         pulumi.BoolPtrInput
	FallOverDefaultEnable         pulumi.BoolPtrInput
	FallOverDefaultRouteMap       pulumi.StringPtrInput
	FallOverMaximumMetricRouteMap pulumi.StringPtrInput
	Ip                            pulumi.StringInput
	LocalAs                       pulumi.StringPtrInput
	// Accept either real AS or local AS from the ebgp peer
	LocalAsDualAs pulumi.BoolPtrInput
	// Do not prepend local-as to updates from ebgp peers
	LocalAsNoPrepend pulumi.BoolPtrInput
	// Replace real AS with local AS in the EBGP updates
	LocalAsReplaceAs pulumi.BoolPtrInput
	// Log neighbor up/down and reset reason
	LogNeighborChanges pulumi.BoolPtrInput
	Password           pulumi.StringPtrInput
	// Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
	PasswordType pulumi.IntPtrInput
	// Specify a BGP peer-group remote-as
	RemoteAs pulumi.StringPtrInput
	// Administratively shut down this neighbor
	Shutdown pulumi.BoolPtrInput
	// - Range: `0`-`65535`
	TimersHoldtime pulumi.IntPtrInput
	// - Range: `0`-`65535`
	TimersKeepaliveInterval pulumi.IntPtrInput
	// - Range: `0`-`65535`
	TimersMinimumNeighborHold pulumi.IntPtrInput
	// IP hops - Range: `1`-`254`
	TtlSecurityHops pulumi.IntPtrInput
	// Loopback interface
	UpdateSourceLoopback pulumi.StringPtrInput
	// Set the BGP version to match a neighbor - Range: `4`-`4`
	Version pulumi.IntPtrInput
}

func (BgpNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpNeighborArgs)(nil)).Elem()
}

type BgpNeighborInput interface {
	pulumi.Input

	ToBgpNeighborOutput() BgpNeighborOutput
	ToBgpNeighborOutputWithContext(ctx context.Context) BgpNeighborOutput
}

func (*BgpNeighbor) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpNeighbor)(nil)).Elem()
}

func (i *BgpNeighbor) ToBgpNeighborOutput() BgpNeighborOutput {
	return i.ToBgpNeighborOutputWithContext(context.Background())
}

func (i *BgpNeighbor) ToBgpNeighborOutputWithContext(ctx context.Context) BgpNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNeighborOutput)
}

func (i *BgpNeighbor) ToOutput(ctx context.Context) pulumix.Output[*BgpNeighbor] {
	return pulumix.Output[*BgpNeighbor]{
		OutputState: i.ToBgpNeighborOutputWithContext(ctx).OutputState,
	}
}

// BgpNeighborArrayInput is an input type that accepts BgpNeighborArray and BgpNeighborArrayOutput values.
// You can construct a concrete instance of `BgpNeighborArrayInput` via:
//
//	BgpNeighborArray{ BgpNeighborArgs{...} }
type BgpNeighborArrayInput interface {
	pulumi.Input

	ToBgpNeighborArrayOutput() BgpNeighborArrayOutput
	ToBgpNeighborArrayOutputWithContext(context.Context) BgpNeighborArrayOutput
}

type BgpNeighborArray []BgpNeighborInput

func (BgpNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpNeighbor)(nil)).Elem()
}

func (i BgpNeighborArray) ToBgpNeighborArrayOutput() BgpNeighborArrayOutput {
	return i.ToBgpNeighborArrayOutputWithContext(context.Background())
}

func (i BgpNeighborArray) ToBgpNeighborArrayOutputWithContext(ctx context.Context) BgpNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNeighborArrayOutput)
}

func (i BgpNeighborArray) ToOutput(ctx context.Context) pulumix.Output[[]*BgpNeighbor] {
	return pulumix.Output[[]*BgpNeighbor]{
		OutputState: i.ToBgpNeighborArrayOutputWithContext(ctx).OutputState,
	}
}

// BgpNeighborMapInput is an input type that accepts BgpNeighborMap and BgpNeighborMapOutput values.
// You can construct a concrete instance of `BgpNeighborMapInput` via:
//
//	BgpNeighborMap{ "key": BgpNeighborArgs{...} }
type BgpNeighborMapInput interface {
	pulumi.Input

	ToBgpNeighborMapOutput() BgpNeighborMapOutput
	ToBgpNeighborMapOutputWithContext(context.Context) BgpNeighborMapOutput
}

type BgpNeighborMap map[string]BgpNeighborInput

func (BgpNeighborMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpNeighbor)(nil)).Elem()
}

func (i BgpNeighborMap) ToBgpNeighborMapOutput() BgpNeighborMapOutput {
	return i.ToBgpNeighborMapOutputWithContext(context.Background())
}

func (i BgpNeighborMap) ToBgpNeighborMapOutputWithContext(ctx context.Context) BgpNeighborMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpNeighborMapOutput)
}

func (i BgpNeighborMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpNeighbor] {
	return pulumix.Output[map[string]*BgpNeighbor]{
		OutputState: i.ToBgpNeighborMapOutputWithContext(ctx).OutputState,
	}
}

type BgpNeighborOutput struct{ *pulumi.OutputState }

func (BgpNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpNeighbor)(nil)).Elem()
}

func (o BgpNeighborOutput) ToBgpNeighborOutput() BgpNeighborOutput {
	return o
}

func (o BgpNeighborOutput) ToBgpNeighborOutputWithContext(ctx context.Context) BgpNeighborOutput {
	return o
}

func (o BgpNeighborOutput) ToOutput(ctx context.Context) pulumix.Output[*BgpNeighbor] {
	return pulumix.Output[*BgpNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o BgpNeighborOutput) Asn() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.StringOutput { return v.Asn }).(pulumi.StringOutput)
}

func (o BgpNeighborOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.StringPtrOutput { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
// Default value is `all`. - Choices: `all`, `attributes`
func (o BgpNeighborOutput) DeleteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.StringPtrOutput { return v.DeleteMode }).(pulumi.StringPtrOutput)
}

// Neighbor specific description
func (o BgpNeighborOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A device name from the provider configuration.
func (o BgpNeighborOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// one-hop away EBGP peer using loopback address
func (o BgpNeighborOutput) DisableConnectedCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.BoolPtrOutput { return v.DisableConnectedCheck }).(pulumi.BoolPtrOutput)
}

// Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
func (o BgpNeighborOutput) EbgpMultihop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.BoolPtrOutput { return v.EbgpMultihop }).(pulumi.BoolPtrOutput)
}

// - Range: `2`-`255`
func (o BgpNeighborOutput) EbgpMultihopMaxHop() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.IntPtrOutput { return v.EbgpMultihopMaxHop }).(pulumi.IntPtrOutput)
}

// Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
func (o BgpNeighborOutput) FallOverBfdCheckControlPlaneFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.BoolPtrOutput { return v.FallOverBfdCheckControlPlaneFailure }).(pulumi.BoolPtrOutput)
}

// Force BFD multi-hop to detect failure
func (o BgpNeighborOutput) FallOverBfdMultiHop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.BoolPtrOutput { return v.FallOverBfdMultiHop }).(pulumi.BoolPtrOutput)
}

// Force BFD single-hop to detect failure
func (o BgpNeighborOutput) FallOverBfdSingleHop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.BoolPtrOutput { return v.FallOverBfdSingleHop }).(pulumi.BoolPtrOutput)
}

// Enable BFD strict-mode
func (o BgpNeighborOutput) FallOverBfdStrictMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.BoolPtrOutput { return v.FallOverBfdStrictMode }).(pulumi.BoolPtrOutput)
}

func (o BgpNeighborOutput) FallOverDefaultEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.BoolPtrOutput { return v.FallOverDefaultEnable }).(pulumi.BoolPtrOutput)
}

func (o BgpNeighborOutput) FallOverDefaultRouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.StringPtrOutput { return v.FallOverDefaultRouteMap }).(pulumi.StringPtrOutput)
}

func (o BgpNeighborOutput) FallOverMaximumMetricRouteMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.StringPtrOutput { return v.FallOverMaximumMetricRouteMap }).(pulumi.StringPtrOutput)
}

func (o BgpNeighborOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

func (o BgpNeighborOutput) LocalAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.StringPtrOutput { return v.LocalAs }).(pulumi.StringPtrOutput)
}

// Accept either real AS or local AS from the ebgp peer
func (o BgpNeighborOutput) LocalAsDualAs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.BoolPtrOutput { return v.LocalAsDualAs }).(pulumi.BoolPtrOutput)
}

// Do not prepend local-as to updates from ebgp peers
func (o BgpNeighborOutput) LocalAsNoPrepend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.BoolPtrOutput { return v.LocalAsNoPrepend }).(pulumi.BoolPtrOutput)
}

// Replace real AS with local AS in the EBGP updates
func (o BgpNeighborOutput) LocalAsReplaceAs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.BoolPtrOutput { return v.LocalAsReplaceAs }).(pulumi.BoolPtrOutput)
}

// Log neighbor up/down and reset reason
func (o BgpNeighborOutput) LogNeighborChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.BoolPtrOutput { return v.LogNeighborChanges }).(pulumi.BoolPtrOutput)
}

func (o BgpNeighborOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`
func (o BgpNeighborOutput) PasswordType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.IntPtrOutput { return v.PasswordType }).(pulumi.IntPtrOutput)
}

// Specify a BGP peer-group remote-as
func (o BgpNeighborOutput) RemoteAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.StringPtrOutput { return v.RemoteAs }).(pulumi.StringPtrOutput)
}

// Administratively shut down this neighbor
func (o BgpNeighborOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// - Range: `0`-`65535`
func (o BgpNeighborOutput) TimersHoldtime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.IntPtrOutput { return v.TimersHoldtime }).(pulumi.IntPtrOutput)
}

// - Range: `0`-`65535`
func (o BgpNeighborOutput) TimersKeepaliveInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.IntPtrOutput { return v.TimersKeepaliveInterval }).(pulumi.IntPtrOutput)
}

// - Range: `0`-`65535`
func (o BgpNeighborOutput) TimersMinimumNeighborHold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.IntPtrOutput { return v.TimersMinimumNeighborHold }).(pulumi.IntPtrOutput)
}

// IP hops - Range: `1`-`254`
func (o BgpNeighborOutput) TtlSecurityHops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.IntPtrOutput { return v.TtlSecurityHops }).(pulumi.IntPtrOutput)
}

// Loopback interface
func (o BgpNeighborOutput) UpdateSourceLoopback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.StringPtrOutput { return v.UpdateSourceLoopback }).(pulumi.StringPtrOutput)
}

// Set the BGP version to match a neighbor - Range: `4`-`4`
func (o BgpNeighborOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpNeighbor) pulumi.IntPtrOutput { return v.Version }).(pulumi.IntPtrOutput)
}

type BgpNeighborArrayOutput struct{ *pulumi.OutputState }

func (BgpNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpNeighbor)(nil)).Elem()
}

func (o BgpNeighborArrayOutput) ToBgpNeighborArrayOutput() BgpNeighborArrayOutput {
	return o
}

func (o BgpNeighborArrayOutput) ToBgpNeighborArrayOutputWithContext(ctx context.Context) BgpNeighborArrayOutput {
	return o
}

func (o BgpNeighborArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*BgpNeighbor] {
	return pulumix.Output[[]*BgpNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o BgpNeighborArrayOutput) Index(i pulumi.IntInput) BgpNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BgpNeighbor {
		return vs[0].([]*BgpNeighbor)[vs[1].(int)]
	}).(BgpNeighborOutput)
}

type BgpNeighborMapOutput struct{ *pulumi.OutputState }

func (BgpNeighborMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpNeighbor)(nil)).Elem()
}

func (o BgpNeighborMapOutput) ToBgpNeighborMapOutput() BgpNeighborMapOutput {
	return o
}

func (o BgpNeighborMapOutput) ToBgpNeighborMapOutputWithContext(ctx context.Context) BgpNeighborMapOutput {
	return o
}

func (o BgpNeighborMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpNeighbor] {
	return pulumix.Output[map[string]*BgpNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o BgpNeighborMapOutput) MapIndex(k pulumi.StringInput) BgpNeighborOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BgpNeighbor {
		return vs[0].(map[string]*BgpNeighbor)[vs[1].(string)]
	}).(BgpNeighborOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNeighborInput)(nil)).Elem(), &BgpNeighbor{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNeighborArrayInput)(nil)).Elem(), BgpNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpNeighborMapInput)(nil)).Elem(), BgpNeighborMap{})
	pulumi.RegisterOutputType(BgpNeighborOutput{})
	pulumi.RegisterOutputType(BgpNeighborArrayOutput{})
	pulumi.RegisterOutputType(BgpNeighborMapOutput{})
}
