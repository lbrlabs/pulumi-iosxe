// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type Evpn struct {
	pulumi.CustomResourceState

	// Advertise Default Gateway MAC/IP routes
	DefaultGatewayAdvertise pulumi.BoolPtrOutput `pulumi:"defaultGatewayAdvertise"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrOutput `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// Number of IP moves within specified time interval - Range: `2`-`1000`
	IpDuplicationLimit pulumi.IntPtrOutput `pulumi:"ipDuplicationLimit"`
	// IP duplication timer - Range: `10`-`36000`
	IpDuplicationTime pulumi.IntPtrOutput `pulumi:"ipDuplicationTime"`
	// Peer state transition logging
	LoggingPeerState pulumi.BoolPtrOutput `pulumi:"loggingPeerState"`
	// Number of MAC moves within specified time interval - Range: `2`-`1000`
	MacDuplicationLimit pulumi.IntPtrOutput `pulumi:"macDuplicationLimit"`
	// MAC duplication timer - Range: `10`-`36000`
	MacDuplicationTime pulumi.IntPtrOutput `pulumi:"macDuplicationTime"`
	// Ingress replication
	ReplicationTypeIngress pulumi.BoolPtrOutput `pulumi:"replicationTypeIngress"`
	// mp2mp replication
	ReplicationTypeMp2mp pulumi.BoolPtrOutput `pulumi:"replicationTypeMp2mp"`
	// p2mp replication
	ReplicationTypeP2mp pulumi.BoolPtrOutput `pulumi:"replicationTypeP2mp"`
	// Static replication
	ReplicationTypeStatic pulumi.BoolPtrOutput `pulumi:"replicationTypeStatic"`
	// Set vni-based route-target
	RouteTargetAutoVni pulumi.BoolPtrOutput `pulumi:"routeTargetAutoVni"`
	// Loopback interface - Range: `0`-`2147483647`
	RouterIdLoopback pulumi.IntPtrOutput `pulumi:"routerIdLoopback"`
}

// NewEvpn registers a new resource with the given unique name, arguments, and options.
func NewEvpn(ctx *pulumi.Context,
	name string, args *EvpnArgs, opts ...pulumi.ResourceOption) (*Evpn, error) {
	if args == nil {
		args = &EvpnArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Evpn
	err := ctx.RegisterResource("iosxe:iosxe/evpn:Evpn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEvpn gets an existing Evpn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEvpn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EvpnState, opts ...pulumi.ResourceOption) (*Evpn, error) {
	var resource Evpn
	err := ctx.ReadResource("iosxe:iosxe/evpn:Evpn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Evpn resources.
type evpnState struct {
	// Advertise Default Gateway MAC/IP routes
	DefaultGatewayAdvertise *bool `pulumi:"defaultGatewayAdvertise"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Number of IP moves within specified time interval - Range: `2`-`1000`
	IpDuplicationLimit *int `pulumi:"ipDuplicationLimit"`
	// IP duplication timer - Range: `10`-`36000`
	IpDuplicationTime *int `pulumi:"ipDuplicationTime"`
	// Peer state transition logging
	LoggingPeerState *bool `pulumi:"loggingPeerState"`
	// Number of MAC moves within specified time interval - Range: `2`-`1000`
	MacDuplicationLimit *int `pulumi:"macDuplicationLimit"`
	// MAC duplication timer - Range: `10`-`36000`
	MacDuplicationTime *int `pulumi:"macDuplicationTime"`
	// Ingress replication
	ReplicationTypeIngress *bool `pulumi:"replicationTypeIngress"`
	// mp2mp replication
	ReplicationTypeMp2mp *bool `pulumi:"replicationTypeMp2mp"`
	// p2mp replication
	ReplicationTypeP2mp *bool `pulumi:"replicationTypeP2mp"`
	// Static replication
	ReplicationTypeStatic *bool `pulumi:"replicationTypeStatic"`
	// Set vni-based route-target
	RouteTargetAutoVni *bool `pulumi:"routeTargetAutoVni"`
	// Loopback interface - Range: `0`-`2147483647`
	RouterIdLoopback *int `pulumi:"routerIdLoopback"`
}

type EvpnState struct {
	// Advertise Default Gateway MAC/IP routes
	DefaultGatewayAdvertise pulumi.BoolPtrInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Number of IP moves within specified time interval - Range: `2`-`1000`
	IpDuplicationLimit pulumi.IntPtrInput
	// IP duplication timer - Range: `10`-`36000`
	IpDuplicationTime pulumi.IntPtrInput
	// Peer state transition logging
	LoggingPeerState pulumi.BoolPtrInput
	// Number of MAC moves within specified time interval - Range: `2`-`1000`
	MacDuplicationLimit pulumi.IntPtrInput
	// MAC duplication timer - Range: `10`-`36000`
	MacDuplicationTime pulumi.IntPtrInput
	// Ingress replication
	ReplicationTypeIngress pulumi.BoolPtrInput
	// mp2mp replication
	ReplicationTypeMp2mp pulumi.BoolPtrInput
	// p2mp replication
	ReplicationTypeP2mp pulumi.BoolPtrInput
	// Static replication
	ReplicationTypeStatic pulumi.BoolPtrInput
	// Set vni-based route-target
	RouteTargetAutoVni pulumi.BoolPtrInput
	// Loopback interface - Range: `0`-`2147483647`
	RouterIdLoopback pulumi.IntPtrInput
}

func (EvpnState) ElementType() reflect.Type {
	return reflect.TypeOf((*evpnState)(nil)).Elem()
}

type evpnArgs struct {
	// Advertise Default Gateway MAC/IP routes
	DefaultGatewayAdvertise *bool `pulumi:"defaultGatewayAdvertise"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Number of IP moves within specified time interval - Range: `2`-`1000`
	IpDuplicationLimit *int `pulumi:"ipDuplicationLimit"`
	// IP duplication timer - Range: `10`-`36000`
	IpDuplicationTime *int `pulumi:"ipDuplicationTime"`
	// Peer state transition logging
	LoggingPeerState *bool `pulumi:"loggingPeerState"`
	// Number of MAC moves within specified time interval - Range: `2`-`1000`
	MacDuplicationLimit *int `pulumi:"macDuplicationLimit"`
	// MAC duplication timer - Range: `10`-`36000`
	MacDuplicationTime *int `pulumi:"macDuplicationTime"`
	// Ingress replication
	ReplicationTypeIngress *bool `pulumi:"replicationTypeIngress"`
	// mp2mp replication
	ReplicationTypeMp2mp *bool `pulumi:"replicationTypeMp2mp"`
	// p2mp replication
	ReplicationTypeP2mp *bool `pulumi:"replicationTypeP2mp"`
	// Static replication
	ReplicationTypeStatic *bool `pulumi:"replicationTypeStatic"`
	// Set vni-based route-target
	RouteTargetAutoVni *bool `pulumi:"routeTargetAutoVni"`
	// Loopback interface - Range: `0`-`2147483647`
	RouterIdLoopback *int `pulumi:"routerIdLoopback"`
}

// The set of arguments for constructing a Evpn resource.
type EvpnArgs struct {
	// Advertise Default Gateway MAC/IP routes
	DefaultGatewayAdvertise pulumi.BoolPtrInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Number of IP moves within specified time interval - Range: `2`-`1000`
	IpDuplicationLimit pulumi.IntPtrInput
	// IP duplication timer - Range: `10`-`36000`
	IpDuplicationTime pulumi.IntPtrInput
	// Peer state transition logging
	LoggingPeerState pulumi.BoolPtrInput
	// Number of MAC moves within specified time interval - Range: `2`-`1000`
	MacDuplicationLimit pulumi.IntPtrInput
	// MAC duplication timer - Range: `10`-`36000`
	MacDuplicationTime pulumi.IntPtrInput
	// Ingress replication
	ReplicationTypeIngress pulumi.BoolPtrInput
	// mp2mp replication
	ReplicationTypeMp2mp pulumi.BoolPtrInput
	// p2mp replication
	ReplicationTypeP2mp pulumi.BoolPtrInput
	// Static replication
	ReplicationTypeStatic pulumi.BoolPtrInput
	// Set vni-based route-target
	RouteTargetAutoVni pulumi.BoolPtrInput
	// Loopback interface - Range: `0`-`2147483647`
	RouterIdLoopback pulumi.IntPtrInput
}

func (EvpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*evpnArgs)(nil)).Elem()
}

type EvpnInput interface {
	pulumi.Input

	ToEvpnOutput() EvpnOutput
	ToEvpnOutputWithContext(ctx context.Context) EvpnOutput
}

func (*Evpn) ElementType() reflect.Type {
	return reflect.TypeOf((**Evpn)(nil)).Elem()
}

func (i *Evpn) ToEvpnOutput() EvpnOutput {
	return i.ToEvpnOutputWithContext(context.Background())
}

func (i *Evpn) ToEvpnOutputWithContext(ctx context.Context) EvpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvpnOutput)
}

func (i *Evpn) ToOutput(ctx context.Context) pulumix.Output[*Evpn] {
	return pulumix.Output[*Evpn]{
		OutputState: i.ToEvpnOutputWithContext(ctx).OutputState,
	}
}

// EvpnArrayInput is an input type that accepts EvpnArray and EvpnArrayOutput values.
// You can construct a concrete instance of `EvpnArrayInput` via:
//
//	EvpnArray{ EvpnArgs{...} }
type EvpnArrayInput interface {
	pulumi.Input

	ToEvpnArrayOutput() EvpnArrayOutput
	ToEvpnArrayOutputWithContext(context.Context) EvpnArrayOutput
}

type EvpnArray []EvpnInput

func (EvpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Evpn)(nil)).Elem()
}

func (i EvpnArray) ToEvpnArrayOutput() EvpnArrayOutput {
	return i.ToEvpnArrayOutputWithContext(context.Background())
}

func (i EvpnArray) ToEvpnArrayOutputWithContext(ctx context.Context) EvpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvpnArrayOutput)
}

func (i EvpnArray) ToOutput(ctx context.Context) pulumix.Output[[]*Evpn] {
	return pulumix.Output[[]*Evpn]{
		OutputState: i.ToEvpnArrayOutputWithContext(ctx).OutputState,
	}
}

// EvpnMapInput is an input type that accepts EvpnMap and EvpnMapOutput values.
// You can construct a concrete instance of `EvpnMapInput` via:
//
//	EvpnMap{ "key": EvpnArgs{...} }
type EvpnMapInput interface {
	pulumi.Input

	ToEvpnMapOutput() EvpnMapOutput
	ToEvpnMapOutputWithContext(context.Context) EvpnMapOutput
}

type EvpnMap map[string]EvpnInput

func (EvpnMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Evpn)(nil)).Elem()
}

func (i EvpnMap) ToEvpnMapOutput() EvpnMapOutput {
	return i.ToEvpnMapOutputWithContext(context.Background())
}

func (i EvpnMap) ToEvpnMapOutputWithContext(ctx context.Context) EvpnMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvpnMapOutput)
}

func (i EvpnMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*Evpn] {
	return pulumix.Output[map[string]*Evpn]{
		OutputState: i.ToEvpnMapOutputWithContext(ctx).OutputState,
	}
}

type EvpnOutput struct{ *pulumi.OutputState }

func (EvpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Evpn)(nil)).Elem()
}

func (o EvpnOutput) ToEvpnOutput() EvpnOutput {
	return o
}

func (o EvpnOutput) ToEvpnOutputWithContext(ctx context.Context) EvpnOutput {
	return o
}

func (o EvpnOutput) ToOutput(ctx context.Context) pulumix.Output[*Evpn] {
	return pulumix.Output[*Evpn]{
		OutputState: o.OutputState,
	}
}

// Advertise Default Gateway MAC/IP routes
func (o EvpnOutput) DefaultGatewayAdvertise() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.BoolPtrOutput { return v.DefaultGatewayAdvertise }).(pulumi.BoolPtrOutput)
}

// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
// Default value is `all`. - Choices: `all`, `attributes`
func (o EvpnOutput) DeleteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.StringPtrOutput { return v.DeleteMode }).(pulumi.StringPtrOutput)
}

// A device name from the provider configuration.
func (o EvpnOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// Number of IP moves within specified time interval - Range: `2`-`1000`
func (o EvpnOutput) IpDuplicationLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.IntPtrOutput { return v.IpDuplicationLimit }).(pulumi.IntPtrOutput)
}

// IP duplication timer - Range: `10`-`36000`
func (o EvpnOutput) IpDuplicationTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.IntPtrOutput { return v.IpDuplicationTime }).(pulumi.IntPtrOutput)
}

// Peer state transition logging
func (o EvpnOutput) LoggingPeerState() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.BoolPtrOutput { return v.LoggingPeerState }).(pulumi.BoolPtrOutput)
}

// Number of MAC moves within specified time interval - Range: `2`-`1000`
func (o EvpnOutput) MacDuplicationLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.IntPtrOutput { return v.MacDuplicationLimit }).(pulumi.IntPtrOutput)
}

// MAC duplication timer - Range: `10`-`36000`
func (o EvpnOutput) MacDuplicationTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.IntPtrOutput { return v.MacDuplicationTime }).(pulumi.IntPtrOutput)
}

// Ingress replication
func (o EvpnOutput) ReplicationTypeIngress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.BoolPtrOutput { return v.ReplicationTypeIngress }).(pulumi.BoolPtrOutput)
}

// mp2mp replication
func (o EvpnOutput) ReplicationTypeMp2mp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.BoolPtrOutput { return v.ReplicationTypeMp2mp }).(pulumi.BoolPtrOutput)
}

// p2mp replication
func (o EvpnOutput) ReplicationTypeP2mp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.BoolPtrOutput { return v.ReplicationTypeP2mp }).(pulumi.BoolPtrOutput)
}

// Static replication
func (o EvpnOutput) ReplicationTypeStatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.BoolPtrOutput { return v.ReplicationTypeStatic }).(pulumi.BoolPtrOutput)
}

// Set vni-based route-target
func (o EvpnOutput) RouteTargetAutoVni() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.BoolPtrOutput { return v.RouteTargetAutoVni }).(pulumi.BoolPtrOutput)
}

// Loopback interface - Range: `0`-`2147483647`
func (o EvpnOutput) RouterIdLoopback() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Evpn) pulumi.IntPtrOutput { return v.RouterIdLoopback }).(pulumi.IntPtrOutput)
}

type EvpnArrayOutput struct{ *pulumi.OutputState }

func (EvpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Evpn)(nil)).Elem()
}

func (o EvpnArrayOutput) ToEvpnArrayOutput() EvpnArrayOutput {
	return o
}

func (o EvpnArrayOutput) ToEvpnArrayOutputWithContext(ctx context.Context) EvpnArrayOutput {
	return o
}

func (o EvpnArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*Evpn] {
	return pulumix.Output[[]*Evpn]{
		OutputState: o.OutputState,
	}
}

func (o EvpnArrayOutput) Index(i pulumi.IntInput) EvpnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Evpn {
		return vs[0].([]*Evpn)[vs[1].(int)]
	}).(EvpnOutput)
}

type EvpnMapOutput struct{ *pulumi.OutputState }

func (EvpnMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Evpn)(nil)).Elem()
}

func (o EvpnMapOutput) ToEvpnMapOutput() EvpnMapOutput {
	return o
}

func (o EvpnMapOutput) ToEvpnMapOutputWithContext(ctx context.Context) EvpnMapOutput {
	return o
}

func (o EvpnMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*Evpn] {
	return pulumix.Output[map[string]*Evpn]{
		OutputState: o.OutputState,
	}
}

func (o EvpnMapOutput) MapIndex(k pulumi.StringInput) EvpnOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Evpn {
		return vs[0].(map[string]*Evpn)[vs[1].(string)]
	}).(EvpnOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EvpnInput)(nil)).Elem(), &Evpn{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvpnArrayInput)(nil)).Elem(), EvpnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvpnMapInput)(nil)).Elem(), EvpnMap{})
	pulumi.RegisterOutputType(EvpnOutput{})
	pulumi.RegisterOutputType(EvpnArrayOutput{})
	pulumi.RegisterOutputType(EvpnMapOutput{})
}
