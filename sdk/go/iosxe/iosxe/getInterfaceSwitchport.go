// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupInterfaceSwitchport(ctx *pulumi.Context, args *LookupInterfaceSwitchportArgs, opts ...pulumi.InvokeOption) (*LookupInterfaceSwitchportResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInterfaceSwitchportResult
	err := ctx.Invoke("iosxe:iosxe/getInterfaceSwitchport:getInterfaceSwitchport", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInterfaceSwitchport.
type LookupInterfaceSwitchportArgs struct {
	Device *string `pulumi:"device"`
	Name   string  `pulumi:"name"`
	Type   string  `pulumi:"type"`
}

// A collection of values returned by getInterfaceSwitchport.
type LookupInterfaceSwitchportResult struct {
	AccessVlan                 string  `pulumi:"accessVlan"`
	Device                     *string `pulumi:"device"`
	Host                       bool    `pulumi:"host"`
	Id                         string  `pulumi:"id"`
	ModeAccess                 bool    `pulumi:"modeAccess"`
	ModeDot1qTunnel            bool    `pulumi:"modeDot1qTunnel"`
	ModePrivateVlanHost        bool    `pulumi:"modePrivateVlanHost"`
	ModePrivateVlanPromiscuous bool    `pulumi:"modePrivateVlanPromiscuous"`
	ModePrivateVlanTrunk       bool    `pulumi:"modePrivateVlanTrunk"`
	ModeTrunk                  bool    `pulumi:"modeTrunk"`
	Name                       string  `pulumi:"name"`
	Nonegotiate                bool    `pulumi:"nonegotiate"`
	TrunkAllowedVlans          string  `pulumi:"trunkAllowedVlans"`
	TrunkAllowedVlansNone      bool    `pulumi:"trunkAllowedVlansNone"`
	TrunkNativeVlan            int     `pulumi:"trunkNativeVlan"`
	TrunkNativeVlanTag         bool    `pulumi:"trunkNativeVlanTag"`
	Type                       string  `pulumi:"type"`
}

func LookupInterfaceSwitchportOutput(ctx *pulumi.Context, args LookupInterfaceSwitchportOutputArgs, opts ...pulumi.InvokeOption) LookupInterfaceSwitchportResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInterfaceSwitchportResult, error) {
			args := v.(LookupInterfaceSwitchportArgs)
			r, err := LookupInterfaceSwitchport(ctx, &args, opts...)
			var s LookupInterfaceSwitchportResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInterfaceSwitchportResultOutput)
}

// A collection of arguments for invoking getInterfaceSwitchport.
type LookupInterfaceSwitchportOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
	Name   pulumi.StringInput    `pulumi:"name"`
	Type   pulumi.StringInput    `pulumi:"type"`
}

func (LookupInterfaceSwitchportOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInterfaceSwitchportArgs)(nil)).Elem()
}

// A collection of values returned by getInterfaceSwitchport.
type LookupInterfaceSwitchportResultOutput struct{ *pulumi.OutputState }

func (LookupInterfaceSwitchportResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInterfaceSwitchportResult)(nil)).Elem()
}

func (o LookupInterfaceSwitchportResultOutput) ToLookupInterfaceSwitchportResultOutput() LookupInterfaceSwitchportResultOutput {
	return o
}

func (o LookupInterfaceSwitchportResultOutput) ToLookupInterfaceSwitchportResultOutputWithContext(ctx context.Context) LookupInterfaceSwitchportResultOutput {
	return o
}

func (o LookupInterfaceSwitchportResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupInterfaceSwitchportResult] {
	return pulumix.Output[LookupInterfaceSwitchportResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupInterfaceSwitchportResultOutput) AccessVlan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) string { return v.AccessVlan }).(pulumi.StringOutput)
}

func (o LookupInterfaceSwitchportResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupInterfaceSwitchportResultOutput) Host() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) bool { return v.Host }).(pulumi.BoolOutput)
}

func (o LookupInterfaceSwitchportResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInterfaceSwitchportResultOutput) ModeAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) bool { return v.ModeAccess }).(pulumi.BoolOutput)
}

func (o LookupInterfaceSwitchportResultOutput) ModeDot1qTunnel() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) bool { return v.ModeDot1qTunnel }).(pulumi.BoolOutput)
}

func (o LookupInterfaceSwitchportResultOutput) ModePrivateVlanHost() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) bool { return v.ModePrivateVlanHost }).(pulumi.BoolOutput)
}

func (o LookupInterfaceSwitchportResultOutput) ModePrivateVlanPromiscuous() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) bool { return v.ModePrivateVlanPromiscuous }).(pulumi.BoolOutput)
}

func (o LookupInterfaceSwitchportResultOutput) ModePrivateVlanTrunk() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) bool { return v.ModePrivateVlanTrunk }).(pulumi.BoolOutput)
}

func (o LookupInterfaceSwitchportResultOutput) ModeTrunk() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) bool { return v.ModeTrunk }).(pulumi.BoolOutput)
}

func (o LookupInterfaceSwitchportResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupInterfaceSwitchportResultOutput) Nonegotiate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) bool { return v.Nonegotiate }).(pulumi.BoolOutput)
}

func (o LookupInterfaceSwitchportResultOutput) TrunkAllowedVlans() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) string { return v.TrunkAllowedVlans }).(pulumi.StringOutput)
}

func (o LookupInterfaceSwitchportResultOutput) TrunkAllowedVlansNone() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) bool { return v.TrunkAllowedVlansNone }).(pulumi.BoolOutput)
}

func (o LookupInterfaceSwitchportResultOutput) TrunkNativeVlan() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) int { return v.TrunkNativeVlan }).(pulumi.IntOutput)
}

func (o LookupInterfaceSwitchportResultOutput) TrunkNativeVlanTag() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) bool { return v.TrunkNativeVlanTag }).(pulumi.BoolOutput)
}

func (o LookupInterfaceSwitchportResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInterfaceSwitchportResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInterfaceSwitchportResultOutput{})
}
