// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupUsername(ctx *pulumi.Context, args *LookupUsernameArgs, opts ...pulumi.InvokeOption) (*LookupUsernameResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUsernameResult
	err := ctx.Invoke("iosxe:iosxe/getUsername:getUsername", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUsername.
type LookupUsernameArgs struct {
	Device *string `pulumi:"device"`
	Name   string  `pulumi:"name"`
}

// A collection of values returned by getUsername.
type LookupUsernameResult struct {
	Description        string  `pulumi:"description"`
	Device             *string `pulumi:"device"`
	Id                 string  `pulumi:"id"`
	Name               string  `pulumi:"name"`
	Password           string  `pulumi:"password"`
	PasswordEncryption string  `pulumi:"passwordEncryption"`
	Privilege          int     `pulumi:"privilege"`
	Secret             string  `pulumi:"secret"`
	SecretEncryption   string  `pulumi:"secretEncryption"`
}

func LookupUsernameOutput(ctx *pulumi.Context, args LookupUsernameOutputArgs, opts ...pulumi.InvokeOption) LookupUsernameResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUsernameResult, error) {
			args := v.(LookupUsernameArgs)
			r, err := LookupUsername(ctx, &args, opts...)
			var s LookupUsernameResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUsernameResultOutput)
}

// A collection of arguments for invoking getUsername.
type LookupUsernameOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
	Name   pulumi.StringInput    `pulumi:"name"`
}

func (LookupUsernameOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUsernameArgs)(nil)).Elem()
}

// A collection of values returned by getUsername.
type LookupUsernameResultOutput struct{ *pulumi.OutputState }

func (LookupUsernameResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUsernameResult)(nil)).Elem()
}

func (o LookupUsernameResultOutput) ToLookupUsernameResultOutput() LookupUsernameResultOutput {
	return o
}

func (o LookupUsernameResultOutput) ToLookupUsernameResultOutputWithContext(ctx context.Context) LookupUsernameResultOutput {
	return o
}

func (o LookupUsernameResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupUsernameResult] {
	return pulumix.Output[LookupUsernameResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupUsernameResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUsernameResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupUsernameResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUsernameResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupUsernameResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUsernameResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupUsernameResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUsernameResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupUsernameResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUsernameResult) string { return v.Password }).(pulumi.StringOutput)
}

func (o LookupUsernameResultOutput) PasswordEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUsernameResult) string { return v.PasswordEncryption }).(pulumi.StringOutput)
}

func (o LookupUsernameResultOutput) Privilege() pulumi.IntOutput {
	return o.ApplyT(func(v LookupUsernameResult) int { return v.Privilege }).(pulumi.IntOutput)
}

func (o LookupUsernameResultOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUsernameResult) string { return v.Secret }).(pulumi.StringOutput)
}

func (o LookupUsernameResultOutput) SecretEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUsernameResult) string { return v.SecretEncryption }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUsernameResultOutput{})
}
