// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupBanner(ctx *pulumi.Context, args *LookupBannerArgs, opts ...pulumi.InvokeOption) (*LookupBannerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBannerResult
	err := ctx.Invoke("iosxe:iosxe/getBanner:getBanner", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBanner.
type LookupBannerArgs struct {
	Device *string `pulumi:"device"`
}

// A collection of values returned by getBanner.
type LookupBannerResult struct {
	Device              *string `pulumi:"device"`
	ExecBanner          string  `pulumi:"execBanner"`
	Id                  string  `pulumi:"id"`
	LoginBanner         string  `pulumi:"loginBanner"`
	MotdBanner          string  `pulumi:"motdBanner"`
	PromptTimeoutBanner string  `pulumi:"promptTimeoutBanner"`
}

func LookupBannerOutput(ctx *pulumi.Context, args LookupBannerOutputArgs, opts ...pulumi.InvokeOption) LookupBannerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBannerResult, error) {
			args := v.(LookupBannerArgs)
			r, err := LookupBanner(ctx, &args, opts...)
			var s LookupBannerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBannerResultOutput)
}

// A collection of arguments for invoking getBanner.
type LookupBannerOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
}

func (LookupBannerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBannerArgs)(nil)).Elem()
}

// A collection of values returned by getBanner.
type LookupBannerResultOutput struct{ *pulumi.OutputState }

func (LookupBannerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBannerResult)(nil)).Elem()
}

func (o LookupBannerResultOutput) ToLookupBannerResultOutput() LookupBannerResultOutput {
	return o
}

func (o LookupBannerResultOutput) ToLookupBannerResultOutputWithContext(ctx context.Context) LookupBannerResultOutput {
	return o
}

func (o LookupBannerResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupBannerResult] {
	return pulumix.Output[LookupBannerResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupBannerResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBannerResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupBannerResultOutput) ExecBanner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBannerResult) string { return v.ExecBanner }).(pulumi.StringOutput)
}

func (o LookupBannerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBannerResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBannerResultOutput) LoginBanner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBannerResult) string { return v.LoginBanner }).(pulumi.StringOutput)
}

func (o LookupBannerResultOutput) MotdBanner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBannerResult) string { return v.MotdBanner }).(pulumi.StringOutput)
}

func (o LookupBannerResultOutput) PromptTimeoutBanner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBannerResult) string { return v.PromptTimeoutBanner }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBannerResultOutput{})
}
