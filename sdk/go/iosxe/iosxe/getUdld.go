// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupUdld(ctx *pulumi.Context, args *LookupUdldArgs, opts ...pulumi.InvokeOption) (*LookupUdldResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUdldResult
	err := ctx.Invoke("iosxe:iosxe/getUdld:getUdld", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUdld.
type LookupUdldArgs struct {
	Device *string `pulumi:"device"`
}

// A collection of values returned by getUdld.
type LookupUdldResult struct {
	Aggressive       bool    `pulumi:"aggressive"`
	Device           *string `pulumi:"device"`
	Enable           bool    `pulumi:"enable"`
	Id               string  `pulumi:"id"`
	MessageTime      int     `pulumi:"messageTime"`
	RecoveryInterval int     `pulumi:"recoveryInterval"`
}

func LookupUdldOutput(ctx *pulumi.Context, args LookupUdldOutputArgs, opts ...pulumi.InvokeOption) LookupUdldResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUdldResult, error) {
			args := v.(LookupUdldArgs)
			r, err := LookupUdld(ctx, &args, opts...)
			var s LookupUdldResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUdldResultOutput)
}

// A collection of arguments for invoking getUdld.
type LookupUdldOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
}

func (LookupUdldOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUdldArgs)(nil)).Elem()
}

// A collection of values returned by getUdld.
type LookupUdldResultOutput struct{ *pulumi.OutputState }

func (LookupUdldResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUdldResult)(nil)).Elem()
}

func (o LookupUdldResultOutput) ToLookupUdldResultOutput() LookupUdldResultOutput {
	return o
}

func (o LookupUdldResultOutput) ToLookupUdldResultOutputWithContext(ctx context.Context) LookupUdldResultOutput {
	return o
}

func (o LookupUdldResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupUdldResult] {
	return pulumix.Output[LookupUdldResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupUdldResultOutput) Aggressive() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUdldResult) bool { return v.Aggressive }).(pulumi.BoolOutput)
}

func (o LookupUdldResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUdldResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupUdldResultOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUdldResult) bool { return v.Enable }).(pulumi.BoolOutput)
}

func (o LookupUdldResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUdldResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupUdldResultOutput) MessageTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupUdldResult) int { return v.MessageTime }).(pulumi.IntOutput)
}

func (o LookupUdldResultOutput) RecoveryInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupUdldResult) int { return v.RecoveryInterval }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUdldResultOutput{})
}
