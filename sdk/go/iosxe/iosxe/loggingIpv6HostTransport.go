// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type LoggingIpv6HostTransport struct {
	pulumi.CustomResourceState

	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrOutput `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device   pulumi.StringPtrOutput `pulumi:"device"`
	Ipv6Host pulumi.StringOutput    `pulumi:"ipv6Host"`
	// Port Number List
	TransportTcpPorts LoggingIpv6HostTransportTransportTcpPortArrayOutput `pulumi:"transportTcpPorts"`
	// Port Number List
	TransportTlsPorts LoggingIpv6HostTransportTransportTlsPortArrayOutput `pulumi:"transportTlsPorts"`
	// Port Number List
	TransportUdpPorts LoggingIpv6HostTransportTransportUdpPortArrayOutput `pulumi:"transportUdpPorts"`
}

// NewLoggingIpv6HostTransport registers a new resource with the given unique name, arguments, and options.
func NewLoggingIpv6HostTransport(ctx *pulumi.Context,
	name string, args *LoggingIpv6HostTransportArgs, opts ...pulumi.ResourceOption) (*LoggingIpv6HostTransport, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Ipv6Host == nil {
		return nil, errors.New("invalid value for required argument 'Ipv6Host'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LoggingIpv6HostTransport
	err := ctx.RegisterResource("iosxe:iosxe/loggingIpv6HostTransport:LoggingIpv6HostTransport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoggingIpv6HostTransport gets an existing LoggingIpv6HostTransport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoggingIpv6HostTransport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoggingIpv6HostTransportState, opts ...pulumi.ResourceOption) (*LoggingIpv6HostTransport, error) {
	var resource LoggingIpv6HostTransport
	err := ctx.ReadResource("iosxe:iosxe/loggingIpv6HostTransport:LoggingIpv6HostTransport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoggingIpv6HostTransport resources.
type loggingIpv6HostTransportState struct {
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device   *string `pulumi:"device"`
	Ipv6Host *string `pulumi:"ipv6Host"`
	// Port Number List
	TransportTcpPorts []LoggingIpv6HostTransportTransportTcpPort `pulumi:"transportTcpPorts"`
	// Port Number List
	TransportTlsPorts []LoggingIpv6HostTransportTransportTlsPort `pulumi:"transportTlsPorts"`
	// Port Number List
	TransportUdpPorts []LoggingIpv6HostTransportTransportUdpPort `pulumi:"transportUdpPorts"`
}

type LoggingIpv6HostTransportState struct {
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device   pulumi.StringPtrInput
	Ipv6Host pulumi.StringPtrInput
	// Port Number List
	TransportTcpPorts LoggingIpv6HostTransportTransportTcpPortArrayInput
	// Port Number List
	TransportTlsPorts LoggingIpv6HostTransportTransportTlsPortArrayInput
	// Port Number List
	TransportUdpPorts LoggingIpv6HostTransportTransportUdpPortArrayInput
}

func (LoggingIpv6HostTransportState) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingIpv6HostTransportState)(nil)).Elem()
}

type loggingIpv6HostTransportArgs struct {
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device   *string `pulumi:"device"`
	Ipv6Host string  `pulumi:"ipv6Host"`
	// Port Number List
	TransportTcpPorts []LoggingIpv6HostTransportTransportTcpPort `pulumi:"transportTcpPorts"`
	// Port Number List
	TransportTlsPorts []LoggingIpv6HostTransportTransportTlsPort `pulumi:"transportTlsPorts"`
	// Port Number List
	TransportUdpPorts []LoggingIpv6HostTransportTransportUdpPort `pulumi:"transportUdpPorts"`
}

// The set of arguments for constructing a LoggingIpv6HostTransport resource.
type LoggingIpv6HostTransportArgs struct {
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device   pulumi.StringPtrInput
	Ipv6Host pulumi.StringInput
	// Port Number List
	TransportTcpPorts LoggingIpv6HostTransportTransportTcpPortArrayInput
	// Port Number List
	TransportTlsPorts LoggingIpv6HostTransportTransportTlsPortArrayInput
	// Port Number List
	TransportUdpPorts LoggingIpv6HostTransportTransportUdpPortArrayInput
}

func (LoggingIpv6HostTransportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingIpv6HostTransportArgs)(nil)).Elem()
}

type LoggingIpv6HostTransportInput interface {
	pulumi.Input

	ToLoggingIpv6HostTransportOutput() LoggingIpv6HostTransportOutput
	ToLoggingIpv6HostTransportOutputWithContext(ctx context.Context) LoggingIpv6HostTransportOutput
}

func (*LoggingIpv6HostTransport) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingIpv6HostTransport)(nil)).Elem()
}

func (i *LoggingIpv6HostTransport) ToLoggingIpv6HostTransportOutput() LoggingIpv6HostTransportOutput {
	return i.ToLoggingIpv6HostTransportOutputWithContext(context.Background())
}

func (i *LoggingIpv6HostTransport) ToLoggingIpv6HostTransportOutputWithContext(ctx context.Context) LoggingIpv6HostTransportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingIpv6HostTransportOutput)
}

func (i *LoggingIpv6HostTransport) ToOutput(ctx context.Context) pulumix.Output[*LoggingIpv6HostTransport] {
	return pulumix.Output[*LoggingIpv6HostTransport]{
		OutputState: i.ToLoggingIpv6HostTransportOutputWithContext(ctx).OutputState,
	}
}

// LoggingIpv6HostTransportArrayInput is an input type that accepts LoggingIpv6HostTransportArray and LoggingIpv6HostTransportArrayOutput values.
// You can construct a concrete instance of `LoggingIpv6HostTransportArrayInput` via:
//
//	LoggingIpv6HostTransportArray{ LoggingIpv6HostTransportArgs{...} }
type LoggingIpv6HostTransportArrayInput interface {
	pulumi.Input

	ToLoggingIpv6HostTransportArrayOutput() LoggingIpv6HostTransportArrayOutput
	ToLoggingIpv6HostTransportArrayOutputWithContext(context.Context) LoggingIpv6HostTransportArrayOutput
}

type LoggingIpv6HostTransportArray []LoggingIpv6HostTransportInput

func (LoggingIpv6HostTransportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoggingIpv6HostTransport)(nil)).Elem()
}

func (i LoggingIpv6HostTransportArray) ToLoggingIpv6HostTransportArrayOutput() LoggingIpv6HostTransportArrayOutput {
	return i.ToLoggingIpv6HostTransportArrayOutputWithContext(context.Background())
}

func (i LoggingIpv6HostTransportArray) ToLoggingIpv6HostTransportArrayOutputWithContext(ctx context.Context) LoggingIpv6HostTransportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingIpv6HostTransportArrayOutput)
}

func (i LoggingIpv6HostTransportArray) ToOutput(ctx context.Context) pulumix.Output[[]*LoggingIpv6HostTransport] {
	return pulumix.Output[[]*LoggingIpv6HostTransport]{
		OutputState: i.ToLoggingIpv6HostTransportArrayOutputWithContext(ctx).OutputState,
	}
}

// LoggingIpv6HostTransportMapInput is an input type that accepts LoggingIpv6HostTransportMap and LoggingIpv6HostTransportMapOutput values.
// You can construct a concrete instance of `LoggingIpv6HostTransportMapInput` via:
//
//	LoggingIpv6HostTransportMap{ "key": LoggingIpv6HostTransportArgs{...} }
type LoggingIpv6HostTransportMapInput interface {
	pulumi.Input

	ToLoggingIpv6HostTransportMapOutput() LoggingIpv6HostTransportMapOutput
	ToLoggingIpv6HostTransportMapOutputWithContext(context.Context) LoggingIpv6HostTransportMapOutput
}

type LoggingIpv6HostTransportMap map[string]LoggingIpv6HostTransportInput

func (LoggingIpv6HostTransportMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoggingIpv6HostTransport)(nil)).Elem()
}

func (i LoggingIpv6HostTransportMap) ToLoggingIpv6HostTransportMapOutput() LoggingIpv6HostTransportMapOutput {
	return i.ToLoggingIpv6HostTransportMapOutputWithContext(context.Background())
}

func (i LoggingIpv6HostTransportMap) ToLoggingIpv6HostTransportMapOutputWithContext(ctx context.Context) LoggingIpv6HostTransportMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingIpv6HostTransportMapOutput)
}

func (i LoggingIpv6HostTransportMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*LoggingIpv6HostTransport] {
	return pulumix.Output[map[string]*LoggingIpv6HostTransport]{
		OutputState: i.ToLoggingIpv6HostTransportMapOutputWithContext(ctx).OutputState,
	}
}

type LoggingIpv6HostTransportOutput struct{ *pulumi.OutputState }

func (LoggingIpv6HostTransportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingIpv6HostTransport)(nil)).Elem()
}

func (o LoggingIpv6HostTransportOutput) ToLoggingIpv6HostTransportOutput() LoggingIpv6HostTransportOutput {
	return o
}

func (o LoggingIpv6HostTransportOutput) ToLoggingIpv6HostTransportOutputWithContext(ctx context.Context) LoggingIpv6HostTransportOutput {
	return o
}

func (o LoggingIpv6HostTransportOutput) ToOutput(ctx context.Context) pulumix.Output[*LoggingIpv6HostTransport] {
	return pulumix.Output[*LoggingIpv6HostTransport]{
		OutputState: o.OutputState,
	}
}

// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
// Default value is `all`. - Choices: `all`, `attributes`
func (o LoggingIpv6HostTransportOutput) DeleteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingIpv6HostTransport) pulumi.StringPtrOutput { return v.DeleteMode }).(pulumi.StringPtrOutput)
}

// A device name from the provider configuration.
func (o LoggingIpv6HostTransportOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingIpv6HostTransport) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LoggingIpv6HostTransportOutput) Ipv6Host() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingIpv6HostTransport) pulumi.StringOutput { return v.Ipv6Host }).(pulumi.StringOutput)
}

// Port Number List
func (o LoggingIpv6HostTransportOutput) TransportTcpPorts() LoggingIpv6HostTransportTransportTcpPortArrayOutput {
	return o.ApplyT(func(v *LoggingIpv6HostTransport) LoggingIpv6HostTransportTransportTcpPortArrayOutput {
		return v.TransportTcpPorts
	}).(LoggingIpv6HostTransportTransportTcpPortArrayOutput)
}

// Port Number List
func (o LoggingIpv6HostTransportOutput) TransportTlsPorts() LoggingIpv6HostTransportTransportTlsPortArrayOutput {
	return o.ApplyT(func(v *LoggingIpv6HostTransport) LoggingIpv6HostTransportTransportTlsPortArrayOutput {
		return v.TransportTlsPorts
	}).(LoggingIpv6HostTransportTransportTlsPortArrayOutput)
}

// Port Number List
func (o LoggingIpv6HostTransportOutput) TransportUdpPorts() LoggingIpv6HostTransportTransportUdpPortArrayOutput {
	return o.ApplyT(func(v *LoggingIpv6HostTransport) LoggingIpv6HostTransportTransportUdpPortArrayOutput {
		return v.TransportUdpPorts
	}).(LoggingIpv6HostTransportTransportUdpPortArrayOutput)
}

type LoggingIpv6HostTransportArrayOutput struct{ *pulumi.OutputState }

func (LoggingIpv6HostTransportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoggingIpv6HostTransport)(nil)).Elem()
}

func (o LoggingIpv6HostTransportArrayOutput) ToLoggingIpv6HostTransportArrayOutput() LoggingIpv6HostTransportArrayOutput {
	return o
}

func (o LoggingIpv6HostTransportArrayOutput) ToLoggingIpv6HostTransportArrayOutputWithContext(ctx context.Context) LoggingIpv6HostTransportArrayOutput {
	return o
}

func (o LoggingIpv6HostTransportArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*LoggingIpv6HostTransport] {
	return pulumix.Output[[]*LoggingIpv6HostTransport]{
		OutputState: o.OutputState,
	}
}

func (o LoggingIpv6HostTransportArrayOutput) Index(i pulumi.IntInput) LoggingIpv6HostTransportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LoggingIpv6HostTransport {
		return vs[0].([]*LoggingIpv6HostTransport)[vs[1].(int)]
	}).(LoggingIpv6HostTransportOutput)
}

type LoggingIpv6HostTransportMapOutput struct{ *pulumi.OutputState }

func (LoggingIpv6HostTransportMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoggingIpv6HostTransport)(nil)).Elem()
}

func (o LoggingIpv6HostTransportMapOutput) ToLoggingIpv6HostTransportMapOutput() LoggingIpv6HostTransportMapOutput {
	return o
}

func (o LoggingIpv6HostTransportMapOutput) ToLoggingIpv6HostTransportMapOutputWithContext(ctx context.Context) LoggingIpv6HostTransportMapOutput {
	return o
}

func (o LoggingIpv6HostTransportMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*LoggingIpv6HostTransport] {
	return pulumix.Output[map[string]*LoggingIpv6HostTransport]{
		OutputState: o.OutputState,
	}
}

func (o LoggingIpv6HostTransportMapOutput) MapIndex(k pulumi.StringInput) LoggingIpv6HostTransportOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LoggingIpv6HostTransport {
		return vs[0].(map[string]*LoggingIpv6HostTransport)[vs[1].(string)]
	}).(LoggingIpv6HostTransportOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingIpv6HostTransportInput)(nil)).Elem(), &LoggingIpv6HostTransport{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingIpv6HostTransportArrayInput)(nil)).Elem(), LoggingIpv6HostTransportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingIpv6HostTransportMapInput)(nil)).Elem(), LoggingIpv6HostTransportMap{})
	pulumi.RegisterOutputType(LoggingIpv6HostTransportOutput{})
	pulumi.RegisterOutputType(LoggingIpv6HostTransportArrayOutput{})
	pulumi.RegisterOutputType(LoggingIpv6HostTransportMapOutput{})
}
