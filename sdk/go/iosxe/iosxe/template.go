// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type Template struct {
	pulumi.CustomResourceState

	// Enable closed access on port (disabled by default, i.e. open access)
	AccessSessionClosed pulumi.BoolPtrOutput `pulumi:"accessSessionClosed"`
	// Set the control-direction on the interface - Choices: `both`, `in`
	AccessSessionControlDirection pulumi.StringPtrOutput `pulumi:"accessSessionControlDirection"`
	// Set the Host mode for authentication on this interface - Choices: `multi-auth`, `multi-domain`, `multi-host`,
	// `single-host`
	AccessSessionHostMode pulumi.StringPtrOutput `pulumi:"accessSessionHostMode"`
	// Interface templates set to sticky
	AccessSessionInterfaceTemplateSticky pulumi.BoolPtrOutput `pulumi:"accessSessionInterfaceTemplateSticky"`
	// Sticky timer value - Range: `1`-`65535`
	AccessSessionInterfaceTemplateStickyTimer pulumi.IntPtrOutput `pulumi:"accessSessionInterfaceTemplateStickyTimer"`
	// Apply template to monitor access sessions on the port
	AccessSessionMonitor pulumi.BoolPtrOutput `pulumi:"accessSessionMonitor"`
	// Set the port-control value - Choices: `auto`, `force-authorized`, `force-unauthorized`
	AccessSessionPortControl pulumi.StringPtrOutput `pulumi:"accessSessionPortControl"`
	// Enable or Disable Reauthentication for this port
	AuthenticationPeriodic pulumi.BoolPtrOutput `pulumi:"authenticationPeriodic"`
	// Enter a value between 1 and 65535 - Range: `1`-`65535`
	AuthenticationTimerReauthenticateRange pulumi.IntPtrOutput `pulumi:"authenticationTimerReauthenticateRange"`
	// Obtain re-authentication timeout value from the server
	AuthenticationTimerReauthenticateServer pulumi.BoolPtrOutput `pulumi:"authenticationTimerReauthenticateServer"`
	// Supply local configuration for CTS parameters
	CtsManual pulumi.BoolPtrOutput `pulumi:"ctsManual"`
	// Source Security Group Tag to apply to untagged or non-trusted incoming traffic - Range: `2`-`65519`
	CtsManualPolicyStaticSgt pulumi.IntPtrOutput `pulumi:"ctsManualPolicyStaticSgt"`
	// Trust the Source Group Tags (SGT) that the peer uses for sending
	CtsManualPolicyStaticTrusted pulumi.BoolPtrOutput `pulumi:"ctsManualPolicyStaticTrusted"`
	// CTS SGT Propagation configuration
	CtsManualPropagateSgt pulumi.BoolPtrOutput `pulumi:"ctsManualPropagateSgt"`
	// Enable Role-based Access Control enforcement
	CtsRoleBasedEnforcement pulumi.BoolPtrOutput `pulumi:"ctsRoleBasedEnforcement"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrOutput `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// Configure device-tracking on the interface
	DeviceTracking pulumi.BoolPtrOutput `pulumi:"deviceTracking"`
	// policy name for device tracking
	DeviceTrackingAttachPolicies TemplateDeviceTrackingAttachPolicyArrayOutput `pulumi:"deviceTrackingAttachPolicies"`
	// VLAN IDs of the VLANs for which this policy applies
	DeviceTrackingVlanRange pulumi.StringPtrOutput `pulumi:"deviceTrackingVlanRange"`
	// Max No. of Reauthentication Attempts - Range: `1`-`10`
	Dot1xMaxReauthReq pulumi.IntPtrOutput `pulumi:"dot1xMaxReauthReq"`
	// Max No. of Retries - Range: `1`-`10`
	Dot1xMaxReq pulumi.IntPtrOutput `pulumi:"dot1xMaxReq"`
	// Set 802.1x interface pae type - Choices: `authenticator`, `both`, `supplicant`
	Dot1xPae pulumi.StringPtrOutput `pulumi:"dot1xPae"`
	// Timeout for supplicant retries - Range: `1`-`65535`
	Dot1xTimeoutTxPeriod pulumi.IntPtrOutput `pulumi:"dot1xTimeoutTxPeriod"`
	// Access control list for IP packets
	IpAccessGroups TemplateIpAccessGroupArrayOutput `pulumi:"ipAccessGroups"`
	// DHCP snooping rate limit - Range: `1`-`2048`
	IpDhcpSnoopingLimitRate pulumi.IntPtrOutput `pulumi:"ipDhcpSnoopingLimitRate"`
	// DHCP Snooping trust config
	IpDhcpSnoopingTrust pulumi.BoolPtrOutput `pulumi:"ipDhcpSnoopingTrust"`
	// Load interval delay in seconds - Range: `30`-`600`
	LoadInterval pulumi.IntPtrOutput `pulumi:"loadInterval"`
	// MAC Authentication Bypass Interface Config Commands
	Mab pulumi.BoolPtrOutput `pulumi:"mab"`
	// Use EAP authentication for MAC Auth Bypass
	MabEap pulumi.BoolPtrOutput `pulumi:"mabEap"`
	// policy-map name
	ServicePolicyInput pulumi.StringPtrOutput `pulumi:"servicePolicyInput"`
	// policy-map name
	ServicePolicyOutput pulumi.StringPtrOutput `pulumi:"servicePolicyOutput"`
	// Apply a subscriber control policy to the interface
	ServicePolicyTypeControlSubscriber pulumi.StringPtrOutput `pulumi:"servicePolicyTypeControlSubscriber"`
	// Get config from a template
	SourceTemplate pulumi.StringPtrOutput `pulumi:"sourceTemplate"`
	// Enable BPDU guard for this interface
	SpanningTreeBpduguardEnable pulumi.BoolPtrOutput `pulumi:"spanningTreeBpduguardEnable"`
	// Portfast options for the interface
	SpanningTreePortfast pulumi.BoolPtrOutput `pulumi:"spanningTreePortfast"`
	// Disable portfast for this interface
	SpanningTreePortfastDisable pulumi.BoolPtrOutput `pulumi:"spanningTreePortfastDisable"`
	// Enable portfast edge on the interface
	SpanningTreePortfastEdge pulumi.BoolPtrOutput `pulumi:"spanningTreePortfastEdge"`
	// Enable portfast network on the interface
	SpanningTreePortfastNetwork pulumi.BoolPtrOutput `pulumi:"spanningTreePortfastNetwork"`
	// help
	SpanningTreeServicePolicy pulumi.BoolPtrOutput `pulumi:"spanningTreeServicePolicy"`
	// Shutdown this interface if a storm occurs
	StormControlActionShutdown pulumi.BoolPtrOutput `pulumi:"stormControlActionShutdown"`
	// Send SNMP trap if a storm occurs
	StormControlActionTrap pulumi.BoolPtrOutput `pulumi:"stormControlActionTrap"`
	// Enter threshold
	StormControlBroadcastLevelBpsThreshold pulumi.Float64PtrOutput `pulumi:"stormControlBroadcastLevelBpsThreshold"`
	// Enter threshold
	StormControlBroadcastLevelPpsThreshold pulumi.StringPtrOutput `pulumi:"stormControlBroadcastLevelPpsThreshold"`
	// Enter threshold
	StormControlBroadcastLevelThreshold pulumi.Float64PtrOutput `pulumi:"stormControlBroadcastLevelThreshold"`
	// Enter threshold
	StormControlMulticastLevelBpsThreshold pulumi.Float64PtrOutput `pulumi:"stormControlMulticastLevelBpsThreshold"`
	// Enter threshold
	StormControlMulticastLevelPpsThreshold pulumi.StringPtrOutput `pulumi:"stormControlMulticastLevelPpsThreshold"`
	// Enter threshold
	StormControlMulticastLevelThreshold pulumi.Float64PtrOutput `pulumi:"stormControlMulticastLevelThreshold"`
	// ARP probe
	SubscriberAgingInactivityTimerProbe pulumi.BoolPtrOutput `pulumi:"subscriberAgingInactivityTimerProbe"`
	// Enter a value between 1 and 65535 in seconds - Range: `1`-`65535`
	SubscriberAgingInactivityTimerValue pulumi.IntPtrOutput `pulumi:"subscriberAgingInactivityTimerValue"`
	// ARP probe
	SubscriberAgingProbe pulumi.BoolPtrOutput `pulumi:"subscriberAgingProbe"`
	// VLAN ID of the VLAN when this port is in access mode - Range: `1`-`4094`
	SwitchportAccessVlan pulumi.IntPtrOutput `pulumi:"switchportAccessVlan"`
	// Block unknown unicast addresses
	SwitchportBlockUnicast pulumi.BoolPtrOutput `pulumi:"switchportBlockUnicast"`
	// Set trunking mode to ACCESS unconditionally
	SwitchportModeAccess pulumi.BoolPtrOutput `pulumi:"switchportModeAccess"`
	// Set trunking mode to TRUNK unconditionally
	SwitchportModeTrunk pulumi.BoolPtrOutput `pulumi:"switchportModeTrunk"`
	// Device will not engage in negotiation protocol on this interface
	SwitchportNonegotiate pulumi.BoolPtrOutput `pulumi:"switchportNonegotiate"`
	// Security related command
	SwitchportPortSecurity pulumi.BoolPtrOutput `pulumi:"switchportPortSecurity"`
	// Enable aging for configured secure addresses
	SwitchportPortSecurityAgingStatic pulumi.BoolPtrOutput `pulumi:"switchportPortSecurityAgingStatic"`
	// Port-security aging time - Range: `1`-`1440`
	SwitchportPortSecurityAgingTime pulumi.IntPtrOutput `pulumi:"switchportPortSecurityAgingTime"`
	// Port-security aging type
	SwitchportPortSecurityAgingType pulumi.BoolPtrOutput `pulumi:"switchportPortSecurityAgingType"`
	// Aging based on inactivity time period
	SwitchportPortSecurityAgingTypeInactivity pulumi.BoolPtrOutput                                  `pulumi:"switchportPortSecurityAgingTypeInactivity"`
	SwitchportPortSecurityMaximumRanges       TemplateSwitchportPortSecurityMaximumRangeArrayOutput `pulumi:"switchportPortSecurityMaximumRanges"`
	// Security violation protect mode
	SwitchportPortSecurityViolationProtect pulumi.BoolPtrOutput `pulumi:"switchportPortSecurityViolationProtect"`
	// Security violation restrict mode
	SwitchportPortSecurityViolationRestrict pulumi.BoolPtrOutput `pulumi:"switchportPortSecurityViolationRestrict"`
	// Security violation shutdown mode
	SwitchportPortSecurityViolationShutdown pulumi.BoolPtrOutput `pulumi:"switchportPortSecurityViolationShutdown"`
	// Primary normal range VLAN ID of the private VLAN port association - Range: `2`-`1001`
	SwitchportPrivateVlanHostAssociationPrimaryRange pulumi.IntPtrOutput `pulumi:"switchportPrivateVlanHostAssociationPrimaryRange"`
	// Secondary normal range VLAN ID of the private VLAN host port association - Range: `2`-`1001`
	SwitchportPrivateVlanHostAssociationSecondaryRange pulumi.IntPtrOutput `pulumi:"switchportPrivateVlanHostAssociationSecondaryRange"`
	// VLAN IDs of the allowed VLANs when this port is in trunking mode
	SwitchportTrunkAllowedVlans pulumi.StringPtrOutput `pulumi:"switchportTrunkAllowedVlans"`
	// all VLANs
	SwitchportTrunkAllowedVlansAll pulumi.BoolPtrOutput `pulumi:"switchportTrunkAllowedVlansAll"`
	// no VLANs
	SwitchportTrunkAllowedVlansNone pulumi.BoolPtrOutput `pulumi:"switchportTrunkAllowedVlansNone"`
	// Set native VLAN tagging state
	SwitchportTrunkNativeVlanTag pulumi.BoolPtrOutput `pulumi:"switchportTrunkNativeVlanTag"`
	// VLAN ID of the native VLAN when this port is in trunking mode - Range: `1`-`4094`
	SwitchportTrunkNativeVlanVlanId pulumi.IntPtrOutput `pulumi:"switchportTrunkNativeVlanVlanId"`
	// Vlan for voice traffic - Range: `1`-`4094`
	SwitchportVoiceVlan pulumi.IntPtrOutput `pulumi:"switchportVoiceVlan"`
	// Template name
	TemplateName pulumi.StringOutput `pulumi:"templateName"`
}

// NewTemplate registers a new resource with the given unique name, arguments, and options.
func NewTemplate(ctx *pulumi.Context,
	name string, args *TemplateArgs, opts ...pulumi.ResourceOption) (*Template, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TemplateName == nil {
		return nil, errors.New("invalid value for required argument 'TemplateName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Template
	err := ctx.RegisterResource("iosxe:iosxe/template:Template", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTemplate gets an existing Template resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TemplateState, opts ...pulumi.ResourceOption) (*Template, error) {
	var resource Template
	err := ctx.ReadResource("iosxe:iosxe/template:Template", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Template resources.
type templateState struct {
	// Enable closed access on port (disabled by default, i.e. open access)
	AccessSessionClosed *bool `pulumi:"accessSessionClosed"`
	// Set the control-direction on the interface - Choices: `both`, `in`
	AccessSessionControlDirection *string `pulumi:"accessSessionControlDirection"`
	// Set the Host mode for authentication on this interface - Choices: `multi-auth`, `multi-domain`, `multi-host`,
	// `single-host`
	AccessSessionHostMode *string `pulumi:"accessSessionHostMode"`
	// Interface templates set to sticky
	AccessSessionInterfaceTemplateSticky *bool `pulumi:"accessSessionInterfaceTemplateSticky"`
	// Sticky timer value - Range: `1`-`65535`
	AccessSessionInterfaceTemplateStickyTimer *int `pulumi:"accessSessionInterfaceTemplateStickyTimer"`
	// Apply template to monitor access sessions on the port
	AccessSessionMonitor *bool `pulumi:"accessSessionMonitor"`
	// Set the port-control value - Choices: `auto`, `force-authorized`, `force-unauthorized`
	AccessSessionPortControl *string `pulumi:"accessSessionPortControl"`
	// Enable or Disable Reauthentication for this port
	AuthenticationPeriodic *bool `pulumi:"authenticationPeriodic"`
	// Enter a value between 1 and 65535 - Range: `1`-`65535`
	AuthenticationTimerReauthenticateRange *int `pulumi:"authenticationTimerReauthenticateRange"`
	// Obtain re-authentication timeout value from the server
	AuthenticationTimerReauthenticateServer *bool `pulumi:"authenticationTimerReauthenticateServer"`
	// Supply local configuration for CTS parameters
	CtsManual *bool `pulumi:"ctsManual"`
	// Source Security Group Tag to apply to untagged or non-trusted incoming traffic - Range: `2`-`65519`
	CtsManualPolicyStaticSgt *int `pulumi:"ctsManualPolicyStaticSgt"`
	// Trust the Source Group Tags (SGT) that the peer uses for sending
	CtsManualPolicyStaticTrusted *bool `pulumi:"ctsManualPolicyStaticTrusted"`
	// CTS SGT Propagation configuration
	CtsManualPropagateSgt *bool `pulumi:"ctsManualPropagateSgt"`
	// Enable Role-based Access Control enforcement
	CtsRoleBasedEnforcement *bool `pulumi:"ctsRoleBasedEnforcement"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Configure device-tracking on the interface
	DeviceTracking *bool `pulumi:"deviceTracking"`
	// policy name for device tracking
	DeviceTrackingAttachPolicies []TemplateDeviceTrackingAttachPolicy `pulumi:"deviceTrackingAttachPolicies"`
	// VLAN IDs of the VLANs for which this policy applies
	DeviceTrackingVlanRange *string `pulumi:"deviceTrackingVlanRange"`
	// Max No. of Reauthentication Attempts - Range: `1`-`10`
	Dot1xMaxReauthReq *int `pulumi:"dot1xMaxReauthReq"`
	// Max No. of Retries - Range: `1`-`10`
	Dot1xMaxReq *int `pulumi:"dot1xMaxReq"`
	// Set 802.1x interface pae type - Choices: `authenticator`, `both`, `supplicant`
	Dot1xPae *string `pulumi:"dot1xPae"`
	// Timeout for supplicant retries - Range: `1`-`65535`
	Dot1xTimeoutTxPeriod *int `pulumi:"dot1xTimeoutTxPeriod"`
	// Access control list for IP packets
	IpAccessGroups []TemplateIpAccessGroup `pulumi:"ipAccessGroups"`
	// DHCP snooping rate limit - Range: `1`-`2048`
	IpDhcpSnoopingLimitRate *int `pulumi:"ipDhcpSnoopingLimitRate"`
	// DHCP Snooping trust config
	IpDhcpSnoopingTrust *bool `pulumi:"ipDhcpSnoopingTrust"`
	// Load interval delay in seconds - Range: `30`-`600`
	LoadInterval *int `pulumi:"loadInterval"`
	// MAC Authentication Bypass Interface Config Commands
	Mab *bool `pulumi:"mab"`
	// Use EAP authentication for MAC Auth Bypass
	MabEap *bool `pulumi:"mabEap"`
	// policy-map name
	ServicePolicyInput *string `pulumi:"servicePolicyInput"`
	// policy-map name
	ServicePolicyOutput *string `pulumi:"servicePolicyOutput"`
	// Apply a subscriber control policy to the interface
	ServicePolicyTypeControlSubscriber *string `pulumi:"servicePolicyTypeControlSubscriber"`
	// Get config from a template
	SourceTemplate *string `pulumi:"sourceTemplate"`
	// Enable BPDU guard for this interface
	SpanningTreeBpduguardEnable *bool `pulumi:"spanningTreeBpduguardEnable"`
	// Portfast options for the interface
	SpanningTreePortfast *bool `pulumi:"spanningTreePortfast"`
	// Disable portfast for this interface
	SpanningTreePortfastDisable *bool `pulumi:"spanningTreePortfastDisable"`
	// Enable portfast edge on the interface
	SpanningTreePortfastEdge *bool `pulumi:"spanningTreePortfastEdge"`
	// Enable portfast network on the interface
	SpanningTreePortfastNetwork *bool `pulumi:"spanningTreePortfastNetwork"`
	// help
	SpanningTreeServicePolicy *bool `pulumi:"spanningTreeServicePolicy"`
	// Shutdown this interface if a storm occurs
	StormControlActionShutdown *bool `pulumi:"stormControlActionShutdown"`
	// Send SNMP trap if a storm occurs
	StormControlActionTrap *bool `pulumi:"stormControlActionTrap"`
	// Enter threshold
	StormControlBroadcastLevelBpsThreshold *float64 `pulumi:"stormControlBroadcastLevelBpsThreshold"`
	// Enter threshold
	StormControlBroadcastLevelPpsThreshold *string `pulumi:"stormControlBroadcastLevelPpsThreshold"`
	// Enter threshold
	StormControlBroadcastLevelThreshold *float64 `pulumi:"stormControlBroadcastLevelThreshold"`
	// Enter threshold
	StormControlMulticastLevelBpsThreshold *float64 `pulumi:"stormControlMulticastLevelBpsThreshold"`
	// Enter threshold
	StormControlMulticastLevelPpsThreshold *string `pulumi:"stormControlMulticastLevelPpsThreshold"`
	// Enter threshold
	StormControlMulticastLevelThreshold *float64 `pulumi:"stormControlMulticastLevelThreshold"`
	// ARP probe
	SubscriberAgingInactivityTimerProbe *bool `pulumi:"subscriberAgingInactivityTimerProbe"`
	// Enter a value between 1 and 65535 in seconds - Range: `1`-`65535`
	SubscriberAgingInactivityTimerValue *int `pulumi:"subscriberAgingInactivityTimerValue"`
	// ARP probe
	SubscriberAgingProbe *bool `pulumi:"subscriberAgingProbe"`
	// VLAN ID of the VLAN when this port is in access mode - Range: `1`-`4094`
	SwitchportAccessVlan *int `pulumi:"switchportAccessVlan"`
	// Block unknown unicast addresses
	SwitchportBlockUnicast *bool `pulumi:"switchportBlockUnicast"`
	// Set trunking mode to ACCESS unconditionally
	SwitchportModeAccess *bool `pulumi:"switchportModeAccess"`
	// Set trunking mode to TRUNK unconditionally
	SwitchportModeTrunk *bool `pulumi:"switchportModeTrunk"`
	// Device will not engage in negotiation protocol on this interface
	SwitchportNonegotiate *bool `pulumi:"switchportNonegotiate"`
	// Security related command
	SwitchportPortSecurity *bool `pulumi:"switchportPortSecurity"`
	// Enable aging for configured secure addresses
	SwitchportPortSecurityAgingStatic *bool `pulumi:"switchportPortSecurityAgingStatic"`
	// Port-security aging time - Range: `1`-`1440`
	SwitchportPortSecurityAgingTime *int `pulumi:"switchportPortSecurityAgingTime"`
	// Port-security aging type
	SwitchportPortSecurityAgingType *bool `pulumi:"switchportPortSecurityAgingType"`
	// Aging based on inactivity time period
	SwitchportPortSecurityAgingTypeInactivity *bool                                        `pulumi:"switchportPortSecurityAgingTypeInactivity"`
	SwitchportPortSecurityMaximumRanges       []TemplateSwitchportPortSecurityMaximumRange `pulumi:"switchportPortSecurityMaximumRanges"`
	// Security violation protect mode
	SwitchportPortSecurityViolationProtect *bool `pulumi:"switchportPortSecurityViolationProtect"`
	// Security violation restrict mode
	SwitchportPortSecurityViolationRestrict *bool `pulumi:"switchportPortSecurityViolationRestrict"`
	// Security violation shutdown mode
	SwitchportPortSecurityViolationShutdown *bool `pulumi:"switchportPortSecurityViolationShutdown"`
	// Primary normal range VLAN ID of the private VLAN port association - Range: `2`-`1001`
	SwitchportPrivateVlanHostAssociationPrimaryRange *int `pulumi:"switchportPrivateVlanHostAssociationPrimaryRange"`
	// Secondary normal range VLAN ID of the private VLAN host port association - Range: `2`-`1001`
	SwitchportPrivateVlanHostAssociationSecondaryRange *int `pulumi:"switchportPrivateVlanHostAssociationSecondaryRange"`
	// VLAN IDs of the allowed VLANs when this port is in trunking mode
	SwitchportTrunkAllowedVlans *string `pulumi:"switchportTrunkAllowedVlans"`
	// all VLANs
	SwitchportTrunkAllowedVlansAll *bool `pulumi:"switchportTrunkAllowedVlansAll"`
	// no VLANs
	SwitchportTrunkAllowedVlansNone *bool `pulumi:"switchportTrunkAllowedVlansNone"`
	// Set native VLAN tagging state
	SwitchportTrunkNativeVlanTag *bool `pulumi:"switchportTrunkNativeVlanTag"`
	// VLAN ID of the native VLAN when this port is in trunking mode - Range: `1`-`4094`
	SwitchportTrunkNativeVlanVlanId *int `pulumi:"switchportTrunkNativeVlanVlanId"`
	// Vlan for voice traffic - Range: `1`-`4094`
	SwitchportVoiceVlan *int `pulumi:"switchportVoiceVlan"`
	// Template name
	TemplateName *string `pulumi:"templateName"`
}

type TemplateState struct {
	// Enable closed access on port (disabled by default, i.e. open access)
	AccessSessionClosed pulumi.BoolPtrInput
	// Set the control-direction on the interface - Choices: `both`, `in`
	AccessSessionControlDirection pulumi.StringPtrInput
	// Set the Host mode for authentication on this interface - Choices: `multi-auth`, `multi-domain`, `multi-host`,
	// `single-host`
	AccessSessionHostMode pulumi.StringPtrInput
	// Interface templates set to sticky
	AccessSessionInterfaceTemplateSticky pulumi.BoolPtrInput
	// Sticky timer value - Range: `1`-`65535`
	AccessSessionInterfaceTemplateStickyTimer pulumi.IntPtrInput
	// Apply template to monitor access sessions on the port
	AccessSessionMonitor pulumi.BoolPtrInput
	// Set the port-control value - Choices: `auto`, `force-authorized`, `force-unauthorized`
	AccessSessionPortControl pulumi.StringPtrInput
	// Enable or Disable Reauthentication for this port
	AuthenticationPeriodic pulumi.BoolPtrInput
	// Enter a value between 1 and 65535 - Range: `1`-`65535`
	AuthenticationTimerReauthenticateRange pulumi.IntPtrInput
	// Obtain re-authentication timeout value from the server
	AuthenticationTimerReauthenticateServer pulumi.BoolPtrInput
	// Supply local configuration for CTS parameters
	CtsManual pulumi.BoolPtrInput
	// Source Security Group Tag to apply to untagged or non-trusted incoming traffic - Range: `2`-`65519`
	CtsManualPolicyStaticSgt pulumi.IntPtrInput
	// Trust the Source Group Tags (SGT) that the peer uses for sending
	CtsManualPolicyStaticTrusted pulumi.BoolPtrInput
	// CTS SGT Propagation configuration
	CtsManualPropagateSgt pulumi.BoolPtrInput
	// Enable Role-based Access Control enforcement
	CtsRoleBasedEnforcement pulumi.BoolPtrInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Configure device-tracking on the interface
	DeviceTracking pulumi.BoolPtrInput
	// policy name for device tracking
	DeviceTrackingAttachPolicies TemplateDeviceTrackingAttachPolicyArrayInput
	// VLAN IDs of the VLANs for which this policy applies
	DeviceTrackingVlanRange pulumi.StringPtrInput
	// Max No. of Reauthentication Attempts - Range: `1`-`10`
	Dot1xMaxReauthReq pulumi.IntPtrInput
	// Max No. of Retries - Range: `1`-`10`
	Dot1xMaxReq pulumi.IntPtrInput
	// Set 802.1x interface pae type - Choices: `authenticator`, `both`, `supplicant`
	Dot1xPae pulumi.StringPtrInput
	// Timeout for supplicant retries - Range: `1`-`65535`
	Dot1xTimeoutTxPeriod pulumi.IntPtrInput
	// Access control list for IP packets
	IpAccessGroups TemplateIpAccessGroupArrayInput
	// DHCP snooping rate limit - Range: `1`-`2048`
	IpDhcpSnoopingLimitRate pulumi.IntPtrInput
	// DHCP Snooping trust config
	IpDhcpSnoopingTrust pulumi.BoolPtrInput
	// Load interval delay in seconds - Range: `30`-`600`
	LoadInterval pulumi.IntPtrInput
	// MAC Authentication Bypass Interface Config Commands
	Mab pulumi.BoolPtrInput
	// Use EAP authentication for MAC Auth Bypass
	MabEap pulumi.BoolPtrInput
	// policy-map name
	ServicePolicyInput pulumi.StringPtrInput
	// policy-map name
	ServicePolicyOutput pulumi.StringPtrInput
	// Apply a subscriber control policy to the interface
	ServicePolicyTypeControlSubscriber pulumi.StringPtrInput
	// Get config from a template
	SourceTemplate pulumi.StringPtrInput
	// Enable BPDU guard for this interface
	SpanningTreeBpduguardEnable pulumi.BoolPtrInput
	// Portfast options for the interface
	SpanningTreePortfast pulumi.BoolPtrInput
	// Disable portfast for this interface
	SpanningTreePortfastDisable pulumi.BoolPtrInput
	// Enable portfast edge on the interface
	SpanningTreePortfastEdge pulumi.BoolPtrInput
	// Enable portfast network on the interface
	SpanningTreePortfastNetwork pulumi.BoolPtrInput
	// help
	SpanningTreeServicePolicy pulumi.BoolPtrInput
	// Shutdown this interface if a storm occurs
	StormControlActionShutdown pulumi.BoolPtrInput
	// Send SNMP trap if a storm occurs
	StormControlActionTrap pulumi.BoolPtrInput
	// Enter threshold
	StormControlBroadcastLevelBpsThreshold pulumi.Float64PtrInput
	// Enter threshold
	StormControlBroadcastLevelPpsThreshold pulumi.StringPtrInput
	// Enter threshold
	StormControlBroadcastLevelThreshold pulumi.Float64PtrInput
	// Enter threshold
	StormControlMulticastLevelBpsThreshold pulumi.Float64PtrInput
	// Enter threshold
	StormControlMulticastLevelPpsThreshold pulumi.StringPtrInput
	// Enter threshold
	StormControlMulticastLevelThreshold pulumi.Float64PtrInput
	// ARP probe
	SubscriberAgingInactivityTimerProbe pulumi.BoolPtrInput
	// Enter a value between 1 and 65535 in seconds - Range: `1`-`65535`
	SubscriberAgingInactivityTimerValue pulumi.IntPtrInput
	// ARP probe
	SubscriberAgingProbe pulumi.BoolPtrInput
	// VLAN ID of the VLAN when this port is in access mode - Range: `1`-`4094`
	SwitchportAccessVlan pulumi.IntPtrInput
	// Block unknown unicast addresses
	SwitchportBlockUnicast pulumi.BoolPtrInput
	// Set trunking mode to ACCESS unconditionally
	SwitchportModeAccess pulumi.BoolPtrInput
	// Set trunking mode to TRUNK unconditionally
	SwitchportModeTrunk pulumi.BoolPtrInput
	// Device will not engage in negotiation protocol on this interface
	SwitchportNonegotiate pulumi.BoolPtrInput
	// Security related command
	SwitchportPortSecurity pulumi.BoolPtrInput
	// Enable aging for configured secure addresses
	SwitchportPortSecurityAgingStatic pulumi.BoolPtrInput
	// Port-security aging time - Range: `1`-`1440`
	SwitchportPortSecurityAgingTime pulumi.IntPtrInput
	// Port-security aging type
	SwitchportPortSecurityAgingType pulumi.BoolPtrInput
	// Aging based on inactivity time period
	SwitchportPortSecurityAgingTypeInactivity pulumi.BoolPtrInput
	SwitchportPortSecurityMaximumRanges       TemplateSwitchportPortSecurityMaximumRangeArrayInput
	// Security violation protect mode
	SwitchportPortSecurityViolationProtect pulumi.BoolPtrInput
	// Security violation restrict mode
	SwitchportPortSecurityViolationRestrict pulumi.BoolPtrInput
	// Security violation shutdown mode
	SwitchportPortSecurityViolationShutdown pulumi.BoolPtrInput
	// Primary normal range VLAN ID of the private VLAN port association - Range: `2`-`1001`
	SwitchportPrivateVlanHostAssociationPrimaryRange pulumi.IntPtrInput
	// Secondary normal range VLAN ID of the private VLAN host port association - Range: `2`-`1001`
	SwitchportPrivateVlanHostAssociationSecondaryRange pulumi.IntPtrInput
	// VLAN IDs of the allowed VLANs when this port is in trunking mode
	SwitchportTrunkAllowedVlans pulumi.StringPtrInput
	// all VLANs
	SwitchportTrunkAllowedVlansAll pulumi.BoolPtrInput
	// no VLANs
	SwitchportTrunkAllowedVlansNone pulumi.BoolPtrInput
	// Set native VLAN tagging state
	SwitchportTrunkNativeVlanTag pulumi.BoolPtrInput
	// VLAN ID of the native VLAN when this port is in trunking mode - Range: `1`-`4094`
	SwitchportTrunkNativeVlanVlanId pulumi.IntPtrInput
	// Vlan for voice traffic - Range: `1`-`4094`
	SwitchportVoiceVlan pulumi.IntPtrInput
	// Template name
	TemplateName pulumi.StringPtrInput
}

func (TemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*templateState)(nil)).Elem()
}

type templateArgs struct {
	// Enable closed access on port (disabled by default, i.e. open access)
	AccessSessionClosed *bool `pulumi:"accessSessionClosed"`
	// Set the control-direction on the interface - Choices: `both`, `in`
	AccessSessionControlDirection *string `pulumi:"accessSessionControlDirection"`
	// Set the Host mode for authentication on this interface - Choices: `multi-auth`, `multi-domain`, `multi-host`,
	// `single-host`
	AccessSessionHostMode *string `pulumi:"accessSessionHostMode"`
	// Interface templates set to sticky
	AccessSessionInterfaceTemplateSticky *bool `pulumi:"accessSessionInterfaceTemplateSticky"`
	// Sticky timer value - Range: `1`-`65535`
	AccessSessionInterfaceTemplateStickyTimer *int `pulumi:"accessSessionInterfaceTemplateStickyTimer"`
	// Apply template to monitor access sessions on the port
	AccessSessionMonitor *bool `pulumi:"accessSessionMonitor"`
	// Set the port-control value - Choices: `auto`, `force-authorized`, `force-unauthorized`
	AccessSessionPortControl *string `pulumi:"accessSessionPortControl"`
	// Enable or Disable Reauthentication for this port
	AuthenticationPeriodic *bool `pulumi:"authenticationPeriodic"`
	// Enter a value between 1 and 65535 - Range: `1`-`65535`
	AuthenticationTimerReauthenticateRange *int `pulumi:"authenticationTimerReauthenticateRange"`
	// Obtain re-authentication timeout value from the server
	AuthenticationTimerReauthenticateServer *bool `pulumi:"authenticationTimerReauthenticateServer"`
	// Supply local configuration for CTS parameters
	CtsManual *bool `pulumi:"ctsManual"`
	// Source Security Group Tag to apply to untagged or non-trusted incoming traffic - Range: `2`-`65519`
	CtsManualPolicyStaticSgt *int `pulumi:"ctsManualPolicyStaticSgt"`
	// Trust the Source Group Tags (SGT) that the peer uses for sending
	CtsManualPolicyStaticTrusted *bool `pulumi:"ctsManualPolicyStaticTrusted"`
	// CTS SGT Propagation configuration
	CtsManualPropagateSgt *bool `pulumi:"ctsManualPropagateSgt"`
	// Enable Role-based Access Control enforcement
	CtsRoleBasedEnforcement *bool `pulumi:"ctsRoleBasedEnforcement"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Configure device-tracking on the interface
	DeviceTracking *bool `pulumi:"deviceTracking"`
	// policy name for device tracking
	DeviceTrackingAttachPolicies []TemplateDeviceTrackingAttachPolicy `pulumi:"deviceTrackingAttachPolicies"`
	// VLAN IDs of the VLANs for which this policy applies
	DeviceTrackingVlanRange *string `pulumi:"deviceTrackingVlanRange"`
	// Max No. of Reauthentication Attempts - Range: `1`-`10`
	Dot1xMaxReauthReq *int `pulumi:"dot1xMaxReauthReq"`
	// Max No. of Retries - Range: `1`-`10`
	Dot1xMaxReq *int `pulumi:"dot1xMaxReq"`
	// Set 802.1x interface pae type - Choices: `authenticator`, `both`, `supplicant`
	Dot1xPae *string `pulumi:"dot1xPae"`
	// Timeout for supplicant retries - Range: `1`-`65535`
	Dot1xTimeoutTxPeriod *int `pulumi:"dot1xTimeoutTxPeriod"`
	// Access control list for IP packets
	IpAccessGroups []TemplateIpAccessGroup `pulumi:"ipAccessGroups"`
	// DHCP snooping rate limit - Range: `1`-`2048`
	IpDhcpSnoopingLimitRate *int `pulumi:"ipDhcpSnoopingLimitRate"`
	// DHCP Snooping trust config
	IpDhcpSnoopingTrust *bool `pulumi:"ipDhcpSnoopingTrust"`
	// Load interval delay in seconds - Range: `30`-`600`
	LoadInterval *int `pulumi:"loadInterval"`
	// MAC Authentication Bypass Interface Config Commands
	Mab *bool `pulumi:"mab"`
	// Use EAP authentication for MAC Auth Bypass
	MabEap *bool `pulumi:"mabEap"`
	// policy-map name
	ServicePolicyInput *string `pulumi:"servicePolicyInput"`
	// policy-map name
	ServicePolicyOutput *string `pulumi:"servicePolicyOutput"`
	// Apply a subscriber control policy to the interface
	ServicePolicyTypeControlSubscriber *string `pulumi:"servicePolicyTypeControlSubscriber"`
	// Get config from a template
	SourceTemplate *string `pulumi:"sourceTemplate"`
	// Enable BPDU guard for this interface
	SpanningTreeBpduguardEnable *bool `pulumi:"spanningTreeBpduguardEnable"`
	// Portfast options for the interface
	SpanningTreePortfast *bool `pulumi:"spanningTreePortfast"`
	// Disable portfast for this interface
	SpanningTreePortfastDisable *bool `pulumi:"spanningTreePortfastDisable"`
	// Enable portfast edge on the interface
	SpanningTreePortfastEdge *bool `pulumi:"spanningTreePortfastEdge"`
	// Enable portfast network on the interface
	SpanningTreePortfastNetwork *bool `pulumi:"spanningTreePortfastNetwork"`
	// help
	SpanningTreeServicePolicy *bool `pulumi:"spanningTreeServicePolicy"`
	// Shutdown this interface if a storm occurs
	StormControlActionShutdown *bool `pulumi:"stormControlActionShutdown"`
	// Send SNMP trap if a storm occurs
	StormControlActionTrap *bool `pulumi:"stormControlActionTrap"`
	// Enter threshold
	StormControlBroadcastLevelBpsThreshold *float64 `pulumi:"stormControlBroadcastLevelBpsThreshold"`
	// Enter threshold
	StormControlBroadcastLevelPpsThreshold *string `pulumi:"stormControlBroadcastLevelPpsThreshold"`
	// Enter threshold
	StormControlBroadcastLevelThreshold *float64 `pulumi:"stormControlBroadcastLevelThreshold"`
	// Enter threshold
	StormControlMulticastLevelBpsThreshold *float64 `pulumi:"stormControlMulticastLevelBpsThreshold"`
	// Enter threshold
	StormControlMulticastLevelPpsThreshold *string `pulumi:"stormControlMulticastLevelPpsThreshold"`
	// Enter threshold
	StormControlMulticastLevelThreshold *float64 `pulumi:"stormControlMulticastLevelThreshold"`
	// ARP probe
	SubscriberAgingInactivityTimerProbe *bool `pulumi:"subscriberAgingInactivityTimerProbe"`
	// Enter a value between 1 and 65535 in seconds - Range: `1`-`65535`
	SubscriberAgingInactivityTimerValue *int `pulumi:"subscriberAgingInactivityTimerValue"`
	// ARP probe
	SubscriberAgingProbe *bool `pulumi:"subscriberAgingProbe"`
	// VLAN ID of the VLAN when this port is in access mode - Range: `1`-`4094`
	SwitchportAccessVlan *int `pulumi:"switchportAccessVlan"`
	// Block unknown unicast addresses
	SwitchportBlockUnicast *bool `pulumi:"switchportBlockUnicast"`
	// Set trunking mode to ACCESS unconditionally
	SwitchportModeAccess *bool `pulumi:"switchportModeAccess"`
	// Set trunking mode to TRUNK unconditionally
	SwitchportModeTrunk *bool `pulumi:"switchportModeTrunk"`
	// Device will not engage in negotiation protocol on this interface
	SwitchportNonegotiate *bool `pulumi:"switchportNonegotiate"`
	// Security related command
	SwitchportPortSecurity *bool `pulumi:"switchportPortSecurity"`
	// Enable aging for configured secure addresses
	SwitchportPortSecurityAgingStatic *bool `pulumi:"switchportPortSecurityAgingStatic"`
	// Port-security aging time - Range: `1`-`1440`
	SwitchportPortSecurityAgingTime *int `pulumi:"switchportPortSecurityAgingTime"`
	// Port-security aging type
	SwitchportPortSecurityAgingType *bool `pulumi:"switchportPortSecurityAgingType"`
	// Aging based on inactivity time period
	SwitchportPortSecurityAgingTypeInactivity *bool                                        `pulumi:"switchportPortSecurityAgingTypeInactivity"`
	SwitchportPortSecurityMaximumRanges       []TemplateSwitchportPortSecurityMaximumRange `pulumi:"switchportPortSecurityMaximumRanges"`
	// Security violation protect mode
	SwitchportPortSecurityViolationProtect *bool `pulumi:"switchportPortSecurityViolationProtect"`
	// Security violation restrict mode
	SwitchportPortSecurityViolationRestrict *bool `pulumi:"switchportPortSecurityViolationRestrict"`
	// Security violation shutdown mode
	SwitchportPortSecurityViolationShutdown *bool `pulumi:"switchportPortSecurityViolationShutdown"`
	// Primary normal range VLAN ID of the private VLAN port association - Range: `2`-`1001`
	SwitchportPrivateVlanHostAssociationPrimaryRange *int `pulumi:"switchportPrivateVlanHostAssociationPrimaryRange"`
	// Secondary normal range VLAN ID of the private VLAN host port association - Range: `2`-`1001`
	SwitchportPrivateVlanHostAssociationSecondaryRange *int `pulumi:"switchportPrivateVlanHostAssociationSecondaryRange"`
	// VLAN IDs of the allowed VLANs when this port is in trunking mode
	SwitchportTrunkAllowedVlans *string `pulumi:"switchportTrunkAllowedVlans"`
	// all VLANs
	SwitchportTrunkAllowedVlansAll *bool `pulumi:"switchportTrunkAllowedVlansAll"`
	// no VLANs
	SwitchportTrunkAllowedVlansNone *bool `pulumi:"switchportTrunkAllowedVlansNone"`
	// Set native VLAN tagging state
	SwitchportTrunkNativeVlanTag *bool `pulumi:"switchportTrunkNativeVlanTag"`
	// VLAN ID of the native VLAN when this port is in trunking mode - Range: `1`-`4094`
	SwitchportTrunkNativeVlanVlanId *int `pulumi:"switchportTrunkNativeVlanVlanId"`
	// Vlan for voice traffic - Range: `1`-`4094`
	SwitchportVoiceVlan *int `pulumi:"switchportVoiceVlan"`
	// Template name
	TemplateName string `pulumi:"templateName"`
}

// The set of arguments for constructing a Template resource.
type TemplateArgs struct {
	// Enable closed access on port (disabled by default, i.e. open access)
	AccessSessionClosed pulumi.BoolPtrInput
	// Set the control-direction on the interface - Choices: `both`, `in`
	AccessSessionControlDirection pulumi.StringPtrInput
	// Set the Host mode for authentication on this interface - Choices: `multi-auth`, `multi-domain`, `multi-host`,
	// `single-host`
	AccessSessionHostMode pulumi.StringPtrInput
	// Interface templates set to sticky
	AccessSessionInterfaceTemplateSticky pulumi.BoolPtrInput
	// Sticky timer value - Range: `1`-`65535`
	AccessSessionInterfaceTemplateStickyTimer pulumi.IntPtrInput
	// Apply template to monitor access sessions on the port
	AccessSessionMonitor pulumi.BoolPtrInput
	// Set the port-control value - Choices: `auto`, `force-authorized`, `force-unauthorized`
	AccessSessionPortControl pulumi.StringPtrInput
	// Enable or Disable Reauthentication for this port
	AuthenticationPeriodic pulumi.BoolPtrInput
	// Enter a value between 1 and 65535 - Range: `1`-`65535`
	AuthenticationTimerReauthenticateRange pulumi.IntPtrInput
	// Obtain re-authentication timeout value from the server
	AuthenticationTimerReauthenticateServer pulumi.BoolPtrInput
	// Supply local configuration for CTS parameters
	CtsManual pulumi.BoolPtrInput
	// Source Security Group Tag to apply to untagged or non-trusted incoming traffic - Range: `2`-`65519`
	CtsManualPolicyStaticSgt pulumi.IntPtrInput
	// Trust the Source Group Tags (SGT) that the peer uses for sending
	CtsManualPolicyStaticTrusted pulumi.BoolPtrInput
	// CTS SGT Propagation configuration
	CtsManualPropagateSgt pulumi.BoolPtrInput
	// Enable Role-based Access Control enforcement
	CtsRoleBasedEnforcement pulumi.BoolPtrInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Configure device-tracking on the interface
	DeviceTracking pulumi.BoolPtrInput
	// policy name for device tracking
	DeviceTrackingAttachPolicies TemplateDeviceTrackingAttachPolicyArrayInput
	// VLAN IDs of the VLANs for which this policy applies
	DeviceTrackingVlanRange pulumi.StringPtrInput
	// Max No. of Reauthentication Attempts - Range: `1`-`10`
	Dot1xMaxReauthReq pulumi.IntPtrInput
	// Max No. of Retries - Range: `1`-`10`
	Dot1xMaxReq pulumi.IntPtrInput
	// Set 802.1x interface pae type - Choices: `authenticator`, `both`, `supplicant`
	Dot1xPae pulumi.StringPtrInput
	// Timeout for supplicant retries - Range: `1`-`65535`
	Dot1xTimeoutTxPeriod pulumi.IntPtrInput
	// Access control list for IP packets
	IpAccessGroups TemplateIpAccessGroupArrayInput
	// DHCP snooping rate limit - Range: `1`-`2048`
	IpDhcpSnoopingLimitRate pulumi.IntPtrInput
	// DHCP Snooping trust config
	IpDhcpSnoopingTrust pulumi.BoolPtrInput
	// Load interval delay in seconds - Range: `30`-`600`
	LoadInterval pulumi.IntPtrInput
	// MAC Authentication Bypass Interface Config Commands
	Mab pulumi.BoolPtrInput
	// Use EAP authentication for MAC Auth Bypass
	MabEap pulumi.BoolPtrInput
	// policy-map name
	ServicePolicyInput pulumi.StringPtrInput
	// policy-map name
	ServicePolicyOutput pulumi.StringPtrInput
	// Apply a subscriber control policy to the interface
	ServicePolicyTypeControlSubscriber pulumi.StringPtrInput
	// Get config from a template
	SourceTemplate pulumi.StringPtrInput
	// Enable BPDU guard for this interface
	SpanningTreeBpduguardEnable pulumi.BoolPtrInput
	// Portfast options for the interface
	SpanningTreePortfast pulumi.BoolPtrInput
	// Disable portfast for this interface
	SpanningTreePortfastDisable pulumi.BoolPtrInput
	// Enable portfast edge on the interface
	SpanningTreePortfastEdge pulumi.BoolPtrInput
	// Enable portfast network on the interface
	SpanningTreePortfastNetwork pulumi.BoolPtrInput
	// help
	SpanningTreeServicePolicy pulumi.BoolPtrInput
	// Shutdown this interface if a storm occurs
	StormControlActionShutdown pulumi.BoolPtrInput
	// Send SNMP trap if a storm occurs
	StormControlActionTrap pulumi.BoolPtrInput
	// Enter threshold
	StormControlBroadcastLevelBpsThreshold pulumi.Float64PtrInput
	// Enter threshold
	StormControlBroadcastLevelPpsThreshold pulumi.StringPtrInput
	// Enter threshold
	StormControlBroadcastLevelThreshold pulumi.Float64PtrInput
	// Enter threshold
	StormControlMulticastLevelBpsThreshold pulumi.Float64PtrInput
	// Enter threshold
	StormControlMulticastLevelPpsThreshold pulumi.StringPtrInput
	// Enter threshold
	StormControlMulticastLevelThreshold pulumi.Float64PtrInput
	// ARP probe
	SubscriberAgingInactivityTimerProbe pulumi.BoolPtrInput
	// Enter a value between 1 and 65535 in seconds - Range: `1`-`65535`
	SubscriberAgingInactivityTimerValue pulumi.IntPtrInput
	// ARP probe
	SubscriberAgingProbe pulumi.BoolPtrInput
	// VLAN ID of the VLAN when this port is in access mode - Range: `1`-`4094`
	SwitchportAccessVlan pulumi.IntPtrInput
	// Block unknown unicast addresses
	SwitchportBlockUnicast pulumi.BoolPtrInput
	// Set trunking mode to ACCESS unconditionally
	SwitchportModeAccess pulumi.BoolPtrInput
	// Set trunking mode to TRUNK unconditionally
	SwitchportModeTrunk pulumi.BoolPtrInput
	// Device will not engage in negotiation protocol on this interface
	SwitchportNonegotiate pulumi.BoolPtrInput
	// Security related command
	SwitchportPortSecurity pulumi.BoolPtrInput
	// Enable aging for configured secure addresses
	SwitchportPortSecurityAgingStatic pulumi.BoolPtrInput
	// Port-security aging time - Range: `1`-`1440`
	SwitchportPortSecurityAgingTime pulumi.IntPtrInput
	// Port-security aging type
	SwitchportPortSecurityAgingType pulumi.BoolPtrInput
	// Aging based on inactivity time period
	SwitchportPortSecurityAgingTypeInactivity pulumi.BoolPtrInput
	SwitchportPortSecurityMaximumRanges       TemplateSwitchportPortSecurityMaximumRangeArrayInput
	// Security violation protect mode
	SwitchportPortSecurityViolationProtect pulumi.BoolPtrInput
	// Security violation restrict mode
	SwitchportPortSecurityViolationRestrict pulumi.BoolPtrInput
	// Security violation shutdown mode
	SwitchportPortSecurityViolationShutdown pulumi.BoolPtrInput
	// Primary normal range VLAN ID of the private VLAN port association - Range: `2`-`1001`
	SwitchportPrivateVlanHostAssociationPrimaryRange pulumi.IntPtrInput
	// Secondary normal range VLAN ID of the private VLAN host port association - Range: `2`-`1001`
	SwitchportPrivateVlanHostAssociationSecondaryRange pulumi.IntPtrInput
	// VLAN IDs of the allowed VLANs when this port is in trunking mode
	SwitchportTrunkAllowedVlans pulumi.StringPtrInput
	// all VLANs
	SwitchportTrunkAllowedVlansAll pulumi.BoolPtrInput
	// no VLANs
	SwitchportTrunkAllowedVlansNone pulumi.BoolPtrInput
	// Set native VLAN tagging state
	SwitchportTrunkNativeVlanTag pulumi.BoolPtrInput
	// VLAN ID of the native VLAN when this port is in trunking mode - Range: `1`-`4094`
	SwitchportTrunkNativeVlanVlanId pulumi.IntPtrInput
	// Vlan for voice traffic - Range: `1`-`4094`
	SwitchportVoiceVlan pulumi.IntPtrInput
	// Template name
	TemplateName pulumi.StringInput
}

func (TemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*templateArgs)(nil)).Elem()
}

type TemplateInput interface {
	pulumi.Input

	ToTemplateOutput() TemplateOutput
	ToTemplateOutputWithContext(ctx context.Context) TemplateOutput
}

func (*Template) ElementType() reflect.Type {
	return reflect.TypeOf((**Template)(nil)).Elem()
}

func (i *Template) ToTemplateOutput() TemplateOutput {
	return i.ToTemplateOutputWithContext(context.Background())
}

func (i *Template) ToTemplateOutputWithContext(ctx context.Context) TemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateOutput)
}

func (i *Template) ToOutput(ctx context.Context) pulumix.Output[*Template] {
	return pulumix.Output[*Template]{
		OutputState: i.ToTemplateOutputWithContext(ctx).OutputState,
	}
}

// TemplateArrayInput is an input type that accepts TemplateArray and TemplateArrayOutput values.
// You can construct a concrete instance of `TemplateArrayInput` via:
//
//	TemplateArray{ TemplateArgs{...} }
type TemplateArrayInput interface {
	pulumi.Input

	ToTemplateArrayOutput() TemplateArrayOutput
	ToTemplateArrayOutputWithContext(context.Context) TemplateArrayOutput
}

type TemplateArray []TemplateInput

func (TemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Template)(nil)).Elem()
}

func (i TemplateArray) ToTemplateArrayOutput() TemplateArrayOutput {
	return i.ToTemplateArrayOutputWithContext(context.Background())
}

func (i TemplateArray) ToTemplateArrayOutputWithContext(ctx context.Context) TemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArrayOutput)
}

func (i TemplateArray) ToOutput(ctx context.Context) pulumix.Output[[]*Template] {
	return pulumix.Output[[]*Template]{
		OutputState: i.ToTemplateArrayOutputWithContext(ctx).OutputState,
	}
}

// TemplateMapInput is an input type that accepts TemplateMap and TemplateMapOutput values.
// You can construct a concrete instance of `TemplateMapInput` via:
//
//	TemplateMap{ "key": TemplateArgs{...} }
type TemplateMapInput interface {
	pulumi.Input

	ToTemplateMapOutput() TemplateMapOutput
	ToTemplateMapOutputWithContext(context.Context) TemplateMapOutput
}

type TemplateMap map[string]TemplateInput

func (TemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Template)(nil)).Elem()
}

func (i TemplateMap) ToTemplateMapOutput() TemplateMapOutput {
	return i.ToTemplateMapOutputWithContext(context.Background())
}

func (i TemplateMap) ToTemplateMapOutputWithContext(ctx context.Context) TemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMapOutput)
}

func (i TemplateMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*Template] {
	return pulumix.Output[map[string]*Template]{
		OutputState: i.ToTemplateMapOutputWithContext(ctx).OutputState,
	}
}

type TemplateOutput struct{ *pulumi.OutputState }

func (TemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Template)(nil)).Elem()
}

func (o TemplateOutput) ToTemplateOutput() TemplateOutput {
	return o
}

func (o TemplateOutput) ToTemplateOutputWithContext(ctx context.Context) TemplateOutput {
	return o
}

func (o TemplateOutput) ToOutput(ctx context.Context) pulumix.Output[*Template] {
	return pulumix.Output[*Template]{
		OutputState: o.OutputState,
	}
}

// Enable closed access on port (disabled by default, i.e. open access)
func (o TemplateOutput) AccessSessionClosed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.AccessSessionClosed }).(pulumi.BoolPtrOutput)
}

// Set the control-direction on the interface - Choices: `both`, `in`
func (o TemplateOutput) AccessSessionControlDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.StringPtrOutput { return v.AccessSessionControlDirection }).(pulumi.StringPtrOutput)
}

// Set the Host mode for authentication on this interface - Choices: `multi-auth`, `multi-domain`, `multi-host`,
// `single-host`
func (o TemplateOutput) AccessSessionHostMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.StringPtrOutput { return v.AccessSessionHostMode }).(pulumi.StringPtrOutput)
}

// Interface templates set to sticky
func (o TemplateOutput) AccessSessionInterfaceTemplateSticky() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.AccessSessionInterfaceTemplateSticky }).(pulumi.BoolPtrOutput)
}

// Sticky timer value - Range: `1`-`65535`
func (o TemplateOutput) AccessSessionInterfaceTemplateStickyTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.IntPtrOutput { return v.AccessSessionInterfaceTemplateStickyTimer }).(pulumi.IntPtrOutput)
}

// Apply template to monitor access sessions on the port
func (o TemplateOutput) AccessSessionMonitor() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.AccessSessionMonitor }).(pulumi.BoolPtrOutput)
}

// Set the port-control value - Choices: `auto`, `force-authorized`, `force-unauthorized`
func (o TemplateOutput) AccessSessionPortControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.StringPtrOutput { return v.AccessSessionPortControl }).(pulumi.StringPtrOutput)
}

// Enable or Disable Reauthentication for this port
func (o TemplateOutput) AuthenticationPeriodic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.AuthenticationPeriodic }).(pulumi.BoolPtrOutput)
}

// Enter a value between 1 and 65535 - Range: `1`-`65535`
func (o TemplateOutput) AuthenticationTimerReauthenticateRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.IntPtrOutput { return v.AuthenticationTimerReauthenticateRange }).(pulumi.IntPtrOutput)
}

// Obtain re-authentication timeout value from the server
func (o TemplateOutput) AuthenticationTimerReauthenticateServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.AuthenticationTimerReauthenticateServer }).(pulumi.BoolPtrOutput)
}

// Supply local configuration for CTS parameters
func (o TemplateOutput) CtsManual() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.CtsManual }).(pulumi.BoolPtrOutput)
}

// Source Security Group Tag to apply to untagged or non-trusted incoming traffic - Range: `2`-`65519`
func (o TemplateOutput) CtsManualPolicyStaticSgt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.IntPtrOutput { return v.CtsManualPolicyStaticSgt }).(pulumi.IntPtrOutput)
}

// Trust the Source Group Tags (SGT) that the peer uses for sending
func (o TemplateOutput) CtsManualPolicyStaticTrusted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.CtsManualPolicyStaticTrusted }).(pulumi.BoolPtrOutput)
}

// CTS SGT Propagation configuration
func (o TemplateOutput) CtsManualPropagateSgt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.CtsManualPropagateSgt }).(pulumi.BoolPtrOutput)
}

// Enable Role-based Access Control enforcement
func (o TemplateOutput) CtsRoleBasedEnforcement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.CtsRoleBasedEnforcement }).(pulumi.BoolPtrOutput)
}

// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
// Default value is `all`. - Choices: `all`, `attributes`
func (o TemplateOutput) DeleteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.StringPtrOutput { return v.DeleteMode }).(pulumi.StringPtrOutput)
}

// A device name from the provider configuration.
func (o TemplateOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// Configure device-tracking on the interface
func (o TemplateOutput) DeviceTracking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.DeviceTracking }).(pulumi.BoolPtrOutput)
}

// policy name for device tracking
func (o TemplateOutput) DeviceTrackingAttachPolicies() TemplateDeviceTrackingAttachPolicyArrayOutput {
	return o.ApplyT(func(v *Template) TemplateDeviceTrackingAttachPolicyArrayOutput { return v.DeviceTrackingAttachPolicies }).(TemplateDeviceTrackingAttachPolicyArrayOutput)
}

// VLAN IDs of the VLANs for which this policy applies
func (o TemplateOutput) DeviceTrackingVlanRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.StringPtrOutput { return v.DeviceTrackingVlanRange }).(pulumi.StringPtrOutput)
}

// Max No. of Reauthentication Attempts - Range: `1`-`10`
func (o TemplateOutput) Dot1xMaxReauthReq() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.IntPtrOutput { return v.Dot1xMaxReauthReq }).(pulumi.IntPtrOutput)
}

// Max No. of Retries - Range: `1`-`10`
func (o TemplateOutput) Dot1xMaxReq() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.IntPtrOutput { return v.Dot1xMaxReq }).(pulumi.IntPtrOutput)
}

// Set 802.1x interface pae type - Choices: `authenticator`, `both`, `supplicant`
func (o TemplateOutput) Dot1xPae() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.StringPtrOutput { return v.Dot1xPae }).(pulumi.StringPtrOutput)
}

// Timeout for supplicant retries - Range: `1`-`65535`
func (o TemplateOutput) Dot1xTimeoutTxPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.IntPtrOutput { return v.Dot1xTimeoutTxPeriod }).(pulumi.IntPtrOutput)
}

// Access control list for IP packets
func (o TemplateOutput) IpAccessGroups() TemplateIpAccessGroupArrayOutput {
	return o.ApplyT(func(v *Template) TemplateIpAccessGroupArrayOutput { return v.IpAccessGroups }).(TemplateIpAccessGroupArrayOutput)
}

// DHCP snooping rate limit - Range: `1`-`2048`
func (o TemplateOutput) IpDhcpSnoopingLimitRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.IntPtrOutput { return v.IpDhcpSnoopingLimitRate }).(pulumi.IntPtrOutput)
}

// DHCP Snooping trust config
func (o TemplateOutput) IpDhcpSnoopingTrust() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.IpDhcpSnoopingTrust }).(pulumi.BoolPtrOutput)
}

// Load interval delay in seconds - Range: `30`-`600`
func (o TemplateOutput) LoadInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.IntPtrOutput { return v.LoadInterval }).(pulumi.IntPtrOutput)
}

// MAC Authentication Bypass Interface Config Commands
func (o TemplateOutput) Mab() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.Mab }).(pulumi.BoolPtrOutput)
}

// Use EAP authentication for MAC Auth Bypass
func (o TemplateOutput) MabEap() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.MabEap }).(pulumi.BoolPtrOutput)
}

// policy-map name
func (o TemplateOutput) ServicePolicyInput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.StringPtrOutput { return v.ServicePolicyInput }).(pulumi.StringPtrOutput)
}

// policy-map name
func (o TemplateOutput) ServicePolicyOutput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.StringPtrOutput { return v.ServicePolicyOutput }).(pulumi.StringPtrOutput)
}

// Apply a subscriber control policy to the interface
func (o TemplateOutput) ServicePolicyTypeControlSubscriber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.StringPtrOutput { return v.ServicePolicyTypeControlSubscriber }).(pulumi.StringPtrOutput)
}

// Get config from a template
func (o TemplateOutput) SourceTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.StringPtrOutput { return v.SourceTemplate }).(pulumi.StringPtrOutput)
}

// Enable BPDU guard for this interface
func (o TemplateOutput) SpanningTreeBpduguardEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SpanningTreeBpduguardEnable }).(pulumi.BoolPtrOutput)
}

// Portfast options for the interface
func (o TemplateOutput) SpanningTreePortfast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SpanningTreePortfast }).(pulumi.BoolPtrOutput)
}

// Disable portfast for this interface
func (o TemplateOutput) SpanningTreePortfastDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SpanningTreePortfastDisable }).(pulumi.BoolPtrOutput)
}

// Enable portfast edge on the interface
func (o TemplateOutput) SpanningTreePortfastEdge() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SpanningTreePortfastEdge }).(pulumi.BoolPtrOutput)
}

// Enable portfast network on the interface
func (o TemplateOutput) SpanningTreePortfastNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SpanningTreePortfastNetwork }).(pulumi.BoolPtrOutput)
}

// help
func (o TemplateOutput) SpanningTreeServicePolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SpanningTreeServicePolicy }).(pulumi.BoolPtrOutput)
}

// Shutdown this interface if a storm occurs
func (o TemplateOutput) StormControlActionShutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.StormControlActionShutdown }).(pulumi.BoolPtrOutput)
}

// Send SNMP trap if a storm occurs
func (o TemplateOutput) StormControlActionTrap() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.StormControlActionTrap }).(pulumi.BoolPtrOutput)
}

// Enter threshold
func (o TemplateOutput) StormControlBroadcastLevelBpsThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Template) pulumi.Float64PtrOutput { return v.StormControlBroadcastLevelBpsThreshold }).(pulumi.Float64PtrOutput)
}

// Enter threshold
func (o TemplateOutput) StormControlBroadcastLevelPpsThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.StringPtrOutput { return v.StormControlBroadcastLevelPpsThreshold }).(pulumi.StringPtrOutput)
}

// Enter threshold
func (o TemplateOutput) StormControlBroadcastLevelThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Template) pulumi.Float64PtrOutput { return v.StormControlBroadcastLevelThreshold }).(pulumi.Float64PtrOutput)
}

// Enter threshold
func (o TemplateOutput) StormControlMulticastLevelBpsThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Template) pulumi.Float64PtrOutput { return v.StormControlMulticastLevelBpsThreshold }).(pulumi.Float64PtrOutput)
}

// Enter threshold
func (o TemplateOutput) StormControlMulticastLevelPpsThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.StringPtrOutput { return v.StormControlMulticastLevelPpsThreshold }).(pulumi.StringPtrOutput)
}

// Enter threshold
func (o TemplateOutput) StormControlMulticastLevelThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Template) pulumi.Float64PtrOutput { return v.StormControlMulticastLevelThreshold }).(pulumi.Float64PtrOutput)
}

// ARP probe
func (o TemplateOutput) SubscriberAgingInactivityTimerProbe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SubscriberAgingInactivityTimerProbe }).(pulumi.BoolPtrOutput)
}

// Enter a value between 1 and 65535 in seconds - Range: `1`-`65535`
func (o TemplateOutput) SubscriberAgingInactivityTimerValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.IntPtrOutput { return v.SubscriberAgingInactivityTimerValue }).(pulumi.IntPtrOutput)
}

// ARP probe
func (o TemplateOutput) SubscriberAgingProbe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SubscriberAgingProbe }).(pulumi.BoolPtrOutput)
}

// VLAN ID of the VLAN when this port is in access mode - Range: `1`-`4094`
func (o TemplateOutput) SwitchportAccessVlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.IntPtrOutput { return v.SwitchportAccessVlan }).(pulumi.IntPtrOutput)
}

// Block unknown unicast addresses
func (o TemplateOutput) SwitchportBlockUnicast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SwitchportBlockUnicast }).(pulumi.BoolPtrOutput)
}

// Set trunking mode to ACCESS unconditionally
func (o TemplateOutput) SwitchportModeAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SwitchportModeAccess }).(pulumi.BoolPtrOutput)
}

// Set trunking mode to TRUNK unconditionally
func (o TemplateOutput) SwitchportModeTrunk() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SwitchportModeTrunk }).(pulumi.BoolPtrOutput)
}

// Device will not engage in negotiation protocol on this interface
func (o TemplateOutput) SwitchportNonegotiate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SwitchportNonegotiate }).(pulumi.BoolPtrOutput)
}

// Security related command
func (o TemplateOutput) SwitchportPortSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SwitchportPortSecurity }).(pulumi.BoolPtrOutput)
}

// Enable aging for configured secure addresses
func (o TemplateOutput) SwitchportPortSecurityAgingStatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SwitchportPortSecurityAgingStatic }).(pulumi.BoolPtrOutput)
}

// Port-security aging time - Range: `1`-`1440`
func (o TemplateOutput) SwitchportPortSecurityAgingTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.IntPtrOutput { return v.SwitchportPortSecurityAgingTime }).(pulumi.IntPtrOutput)
}

// Port-security aging type
func (o TemplateOutput) SwitchportPortSecurityAgingType() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SwitchportPortSecurityAgingType }).(pulumi.BoolPtrOutput)
}

// Aging based on inactivity time period
func (o TemplateOutput) SwitchportPortSecurityAgingTypeInactivity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SwitchportPortSecurityAgingTypeInactivity }).(pulumi.BoolPtrOutput)
}

func (o TemplateOutput) SwitchportPortSecurityMaximumRanges() TemplateSwitchportPortSecurityMaximumRangeArrayOutput {
	return o.ApplyT(func(v *Template) TemplateSwitchportPortSecurityMaximumRangeArrayOutput {
		return v.SwitchportPortSecurityMaximumRanges
	}).(TemplateSwitchportPortSecurityMaximumRangeArrayOutput)
}

// Security violation protect mode
func (o TemplateOutput) SwitchportPortSecurityViolationProtect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SwitchportPortSecurityViolationProtect }).(pulumi.BoolPtrOutput)
}

// Security violation restrict mode
func (o TemplateOutput) SwitchportPortSecurityViolationRestrict() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SwitchportPortSecurityViolationRestrict }).(pulumi.BoolPtrOutput)
}

// Security violation shutdown mode
func (o TemplateOutput) SwitchportPortSecurityViolationShutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SwitchportPortSecurityViolationShutdown }).(pulumi.BoolPtrOutput)
}

// Primary normal range VLAN ID of the private VLAN port association - Range: `2`-`1001`
func (o TemplateOutput) SwitchportPrivateVlanHostAssociationPrimaryRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.IntPtrOutput { return v.SwitchportPrivateVlanHostAssociationPrimaryRange }).(pulumi.IntPtrOutput)
}

// Secondary normal range VLAN ID of the private VLAN host port association - Range: `2`-`1001`
func (o TemplateOutput) SwitchportPrivateVlanHostAssociationSecondaryRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.IntPtrOutput { return v.SwitchportPrivateVlanHostAssociationSecondaryRange }).(pulumi.IntPtrOutput)
}

// VLAN IDs of the allowed VLANs when this port is in trunking mode
func (o TemplateOutput) SwitchportTrunkAllowedVlans() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.StringPtrOutput { return v.SwitchportTrunkAllowedVlans }).(pulumi.StringPtrOutput)
}

// all VLANs
func (o TemplateOutput) SwitchportTrunkAllowedVlansAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SwitchportTrunkAllowedVlansAll }).(pulumi.BoolPtrOutput)
}

// no VLANs
func (o TemplateOutput) SwitchportTrunkAllowedVlansNone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SwitchportTrunkAllowedVlansNone }).(pulumi.BoolPtrOutput)
}

// Set native VLAN tagging state
func (o TemplateOutput) SwitchportTrunkNativeVlanTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.BoolPtrOutput { return v.SwitchportTrunkNativeVlanTag }).(pulumi.BoolPtrOutput)
}

// VLAN ID of the native VLAN when this port is in trunking mode - Range: `1`-`4094`
func (o TemplateOutput) SwitchportTrunkNativeVlanVlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.IntPtrOutput { return v.SwitchportTrunkNativeVlanVlanId }).(pulumi.IntPtrOutput)
}

// Vlan for voice traffic - Range: `1`-`4094`
func (o TemplateOutput) SwitchportVoiceVlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Template) pulumi.IntPtrOutput { return v.SwitchportVoiceVlan }).(pulumi.IntPtrOutput)
}

// Template name
func (o TemplateOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v *Template) pulumi.StringOutput { return v.TemplateName }).(pulumi.StringOutput)
}

type TemplateArrayOutput struct{ *pulumi.OutputState }

func (TemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Template)(nil)).Elem()
}

func (o TemplateArrayOutput) ToTemplateArrayOutput() TemplateArrayOutput {
	return o
}

func (o TemplateArrayOutput) ToTemplateArrayOutputWithContext(ctx context.Context) TemplateArrayOutput {
	return o
}

func (o TemplateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*Template] {
	return pulumix.Output[[]*Template]{
		OutputState: o.OutputState,
	}
}

func (o TemplateArrayOutput) Index(i pulumi.IntInput) TemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Template {
		return vs[0].([]*Template)[vs[1].(int)]
	}).(TemplateOutput)
}

type TemplateMapOutput struct{ *pulumi.OutputState }

func (TemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Template)(nil)).Elem()
}

func (o TemplateMapOutput) ToTemplateMapOutput() TemplateMapOutput {
	return o
}

func (o TemplateMapOutput) ToTemplateMapOutputWithContext(ctx context.Context) TemplateMapOutput {
	return o
}

func (o TemplateMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*Template] {
	return pulumix.Output[map[string]*Template]{
		OutputState: o.OutputState,
	}
}

func (o TemplateMapOutput) MapIndex(k pulumi.StringInput) TemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Template {
		return vs[0].(map[string]*Template)[vs[1].(string)]
	}).(TemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateInput)(nil)).Elem(), &Template{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArrayInput)(nil)).Elem(), TemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMapInput)(nil)).Elem(), TemplateMap{})
	pulumi.RegisterOutputType(TemplateOutput{})
	pulumi.RegisterOutputType(TemplateArrayOutput{})
	pulumi.RegisterOutputType(TemplateMapOutput{})
}
