// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupCryptoIkev2Keyring(ctx *pulumi.Context, args *LookupCryptoIkev2KeyringArgs, opts ...pulumi.InvokeOption) (*LookupCryptoIkev2KeyringResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCryptoIkev2KeyringResult
	err := ctx.Invoke("iosxe:iosxe/getCryptoIkev2Keyring:getCryptoIkev2Keyring", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCryptoIkev2Keyring.
type LookupCryptoIkev2KeyringArgs struct {
	Device *string `pulumi:"device"`
	Name   string  `pulumi:"name"`
}

// A collection of values returned by getCryptoIkev2Keyring.
type LookupCryptoIkev2KeyringResult struct {
	Device *string                     `pulumi:"device"`
	Id     string                      `pulumi:"id"`
	Name   string                      `pulumi:"name"`
	Peers  []GetCryptoIkev2KeyringPeer `pulumi:"peers"`
}

func LookupCryptoIkev2KeyringOutput(ctx *pulumi.Context, args LookupCryptoIkev2KeyringOutputArgs, opts ...pulumi.InvokeOption) LookupCryptoIkev2KeyringResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCryptoIkev2KeyringResult, error) {
			args := v.(LookupCryptoIkev2KeyringArgs)
			r, err := LookupCryptoIkev2Keyring(ctx, &args, opts...)
			var s LookupCryptoIkev2KeyringResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCryptoIkev2KeyringResultOutput)
}

// A collection of arguments for invoking getCryptoIkev2Keyring.
type LookupCryptoIkev2KeyringOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
	Name   pulumi.StringInput    `pulumi:"name"`
}

func (LookupCryptoIkev2KeyringOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCryptoIkev2KeyringArgs)(nil)).Elem()
}

// A collection of values returned by getCryptoIkev2Keyring.
type LookupCryptoIkev2KeyringResultOutput struct{ *pulumi.OutputState }

func (LookupCryptoIkev2KeyringResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCryptoIkev2KeyringResult)(nil)).Elem()
}

func (o LookupCryptoIkev2KeyringResultOutput) ToLookupCryptoIkev2KeyringResultOutput() LookupCryptoIkev2KeyringResultOutput {
	return o
}

func (o LookupCryptoIkev2KeyringResultOutput) ToLookupCryptoIkev2KeyringResultOutputWithContext(ctx context.Context) LookupCryptoIkev2KeyringResultOutput {
	return o
}

func (o LookupCryptoIkev2KeyringResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupCryptoIkev2KeyringResult] {
	return pulumix.Output[LookupCryptoIkev2KeyringResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupCryptoIkev2KeyringResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCryptoIkev2KeyringResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupCryptoIkev2KeyringResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCryptoIkev2KeyringResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCryptoIkev2KeyringResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCryptoIkev2KeyringResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupCryptoIkev2KeyringResultOutput) Peers() GetCryptoIkev2KeyringPeerArrayOutput {
	return o.ApplyT(func(v LookupCryptoIkev2KeyringResult) []GetCryptoIkev2KeyringPeer { return v.Peers }).(GetCryptoIkev2KeyringPeerArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCryptoIkev2KeyringResultOutput{})
}
