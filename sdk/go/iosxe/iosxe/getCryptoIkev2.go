// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupCryptoIkev2(ctx *pulumi.Context, args *LookupCryptoIkev2Args, opts ...pulumi.InvokeOption) (*LookupCryptoIkev2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCryptoIkev2Result
	err := ctx.Invoke("iosxe:iosxe/getCryptoIkev2:getCryptoIkev2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCryptoIkev2.
type LookupCryptoIkev2Args struct {
	Device *string `pulumi:"device"`
}

// A collection of values returned by getCryptoIkev2.
type LookupCryptoIkev2Result struct {
	Device           *string `pulumi:"device"`
	Dpd              int     `pulumi:"dpd"`
	DpdQuery         string  `pulumi:"dpdQuery"`
	DpdRetryInterval int     `pulumi:"dpdRetryInterval"`
	Id               string  `pulumi:"id"`
	NatKeepalive     int     `pulumi:"natKeepalive"`
}

func LookupCryptoIkev2Output(ctx *pulumi.Context, args LookupCryptoIkev2OutputArgs, opts ...pulumi.InvokeOption) LookupCryptoIkev2ResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCryptoIkev2Result, error) {
			args := v.(LookupCryptoIkev2Args)
			r, err := LookupCryptoIkev2(ctx, &args, opts...)
			var s LookupCryptoIkev2Result
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCryptoIkev2ResultOutput)
}

// A collection of arguments for invoking getCryptoIkev2.
type LookupCryptoIkev2OutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
}

func (LookupCryptoIkev2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCryptoIkev2Args)(nil)).Elem()
}

// A collection of values returned by getCryptoIkev2.
type LookupCryptoIkev2ResultOutput struct{ *pulumi.OutputState }

func (LookupCryptoIkev2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCryptoIkev2Result)(nil)).Elem()
}

func (o LookupCryptoIkev2ResultOutput) ToLookupCryptoIkev2ResultOutput() LookupCryptoIkev2ResultOutput {
	return o
}

func (o LookupCryptoIkev2ResultOutput) ToLookupCryptoIkev2ResultOutputWithContext(ctx context.Context) LookupCryptoIkev2ResultOutput {
	return o
}

func (o LookupCryptoIkev2ResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupCryptoIkev2Result] {
	return pulumix.Output[LookupCryptoIkev2Result]{
		OutputState: o.OutputState,
	}
}

func (o LookupCryptoIkev2ResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCryptoIkev2Result) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupCryptoIkev2ResultOutput) Dpd() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCryptoIkev2Result) int { return v.Dpd }).(pulumi.IntOutput)
}

func (o LookupCryptoIkev2ResultOutput) DpdQuery() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCryptoIkev2Result) string { return v.DpdQuery }).(pulumi.StringOutput)
}

func (o LookupCryptoIkev2ResultOutput) DpdRetryInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCryptoIkev2Result) int { return v.DpdRetryInterval }).(pulumi.IntOutput)
}

func (o LookupCryptoIkev2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCryptoIkev2Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCryptoIkev2ResultOutput) NatKeepalive() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCryptoIkev2Result) int { return v.NatKeepalive }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCryptoIkev2ResultOutput{})
}
