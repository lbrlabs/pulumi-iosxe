// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupInterfaceOspf(ctx *pulumi.Context, args *LookupInterfaceOspfArgs, opts ...pulumi.InvokeOption) (*LookupInterfaceOspfResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInterfaceOspfResult
	err := ctx.Invoke("iosxe:iosxe/getInterfaceOspf:getInterfaceOspf", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInterfaceOspf.
type LookupInterfaceOspfArgs struct {
	Device *string `pulumi:"device"`
	Name   string  `pulumi:"name"`
	Type   string  `pulumi:"type"`
}

// A collection of values returned by getInterfaceOspf.
type LookupInterfaceOspfResult struct {
	Cost                         int                                `pulumi:"cost"`
	DeadInterval                 int                                `pulumi:"deadInterval"`
	Device                       *string                            `pulumi:"device"`
	HelloInterval                int                                `pulumi:"helloInterval"`
	Id                           string                             `pulumi:"id"`
	MessageDigestKeys            []GetInterfaceOspfMessageDigestKey `pulumi:"messageDigestKeys"`
	MtuIgnore                    bool                               `pulumi:"mtuIgnore"`
	Name                         string                             `pulumi:"name"`
	NetworkTypeBroadcast         bool                               `pulumi:"networkTypeBroadcast"`
	NetworkTypeNonBroadcast      bool                               `pulumi:"networkTypeNonBroadcast"`
	NetworkTypePointToMultipoint bool                               `pulumi:"networkTypePointToMultipoint"`
	NetworkTypePointToPoint      bool                               `pulumi:"networkTypePointToPoint"`
	Priority                     int                                `pulumi:"priority"`
	ProcessIds                   []GetInterfaceOspfProcessId        `pulumi:"processIds"`
	TtlSecurityHops              int                                `pulumi:"ttlSecurityHops"`
	Type                         string                             `pulumi:"type"`
}

func LookupInterfaceOspfOutput(ctx *pulumi.Context, args LookupInterfaceOspfOutputArgs, opts ...pulumi.InvokeOption) LookupInterfaceOspfResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInterfaceOspfResult, error) {
			args := v.(LookupInterfaceOspfArgs)
			r, err := LookupInterfaceOspf(ctx, &args, opts...)
			var s LookupInterfaceOspfResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInterfaceOspfResultOutput)
}

// A collection of arguments for invoking getInterfaceOspf.
type LookupInterfaceOspfOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
	Name   pulumi.StringInput    `pulumi:"name"`
	Type   pulumi.StringInput    `pulumi:"type"`
}

func (LookupInterfaceOspfOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInterfaceOspfArgs)(nil)).Elem()
}

// A collection of values returned by getInterfaceOspf.
type LookupInterfaceOspfResultOutput struct{ *pulumi.OutputState }

func (LookupInterfaceOspfResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInterfaceOspfResult)(nil)).Elem()
}

func (o LookupInterfaceOspfResultOutput) ToLookupInterfaceOspfResultOutput() LookupInterfaceOspfResultOutput {
	return o
}

func (o LookupInterfaceOspfResultOutput) ToLookupInterfaceOspfResultOutputWithContext(ctx context.Context) LookupInterfaceOspfResultOutput {
	return o
}

func (o LookupInterfaceOspfResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupInterfaceOspfResult] {
	return pulumix.Output[LookupInterfaceOspfResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupInterfaceOspfResultOutput) Cost() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) int { return v.Cost }).(pulumi.IntOutput)
}

func (o LookupInterfaceOspfResultOutput) DeadInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) int { return v.DeadInterval }).(pulumi.IntOutput)
}

func (o LookupInterfaceOspfResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupInterfaceOspfResultOutput) HelloInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) int { return v.HelloInterval }).(pulumi.IntOutput)
}

func (o LookupInterfaceOspfResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInterfaceOspfResultOutput) MessageDigestKeys() GetInterfaceOspfMessageDigestKeyArrayOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) []GetInterfaceOspfMessageDigestKey { return v.MessageDigestKeys }).(GetInterfaceOspfMessageDigestKeyArrayOutput)
}

func (o LookupInterfaceOspfResultOutput) MtuIgnore() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) bool { return v.MtuIgnore }).(pulumi.BoolOutput)
}

func (o LookupInterfaceOspfResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupInterfaceOspfResultOutput) NetworkTypeBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) bool { return v.NetworkTypeBroadcast }).(pulumi.BoolOutput)
}

func (o LookupInterfaceOspfResultOutput) NetworkTypeNonBroadcast() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) bool { return v.NetworkTypeNonBroadcast }).(pulumi.BoolOutput)
}

func (o LookupInterfaceOspfResultOutput) NetworkTypePointToMultipoint() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) bool { return v.NetworkTypePointToMultipoint }).(pulumi.BoolOutput)
}

func (o LookupInterfaceOspfResultOutput) NetworkTypePointToPoint() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) bool { return v.NetworkTypePointToPoint }).(pulumi.BoolOutput)
}

func (o LookupInterfaceOspfResultOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) int { return v.Priority }).(pulumi.IntOutput)
}

func (o LookupInterfaceOspfResultOutput) ProcessIds() GetInterfaceOspfProcessIdArrayOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) []GetInterfaceOspfProcessId { return v.ProcessIds }).(GetInterfaceOspfProcessIdArrayOutput)
}

func (o LookupInterfaceOspfResultOutput) TtlSecurityHops() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) int { return v.TtlSecurityHops }).(pulumi.IntOutput)
}

func (o LookupInterfaceOspfResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInterfaceOspfResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInterfaceOspfResultOutput{})
}
