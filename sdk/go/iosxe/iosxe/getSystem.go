// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupSystem(ctx *pulumi.Context, args *LookupSystemArgs, opts ...pulumi.InvokeOption) (*LookupSystemResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSystemResult
	err := ctx.Invoke("iosxe:iosxe/getSystem:getSystem", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSystem.
type LookupSystemArgs struct {
	Device *string `pulumi:"device"`
}

// A collection of values returned by getSystem.
type LookupSystemResult struct {
	Device                        *string                        `pulumi:"device"`
	Hostname                      string                         `pulumi:"hostname"`
	Id                            string                         `pulumi:"id"`
	IpDomainLookup                bool                           `pulumi:"ipDomainLookup"`
	IpDomainName                  string                         `pulumi:"ipDomainName"`
	IpMulticastRouting            bool                           `pulumi:"ipMulticastRouting"`
	IpMulticastRoutingDistributed bool                           `pulumi:"ipMulticastRoutingDistributed"`
	IpRouting                     bool                           `pulumi:"ipRouting"`
	IpSourceRoute                 bool                           `pulumi:"ipSourceRoute"`
	Ipv6UnicastRouting            bool                           `pulumi:"ipv6UnicastRouting"`
	LoginDelay                    int                            `pulumi:"loginDelay"`
	LoginOnFailure                bool                           `pulumi:"loginOnFailure"`
	LoginOnFailureLog             bool                           `pulumi:"loginOnFailureLog"`
	LoginOnSuccess                bool                           `pulumi:"loginOnSuccess"`
	LoginOnSuccessLog             bool                           `pulumi:"loginOnSuccessLog"`
	Mtu                           int                            `pulumi:"mtu"`
	MulticastRoutingSwitch        bool                           `pulumi:"multicastRoutingSwitch"`
	MulticastRoutingVrfs          []GetSystemMulticastRoutingVrf `pulumi:"multicastRoutingVrfs"`
}

func LookupSystemOutput(ctx *pulumi.Context, args LookupSystemOutputArgs, opts ...pulumi.InvokeOption) LookupSystemResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSystemResult, error) {
			args := v.(LookupSystemArgs)
			r, err := LookupSystem(ctx, &args, opts...)
			var s LookupSystemResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSystemResultOutput)
}

// A collection of arguments for invoking getSystem.
type LookupSystemOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
}

func (LookupSystemOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemArgs)(nil)).Elem()
}

// A collection of values returned by getSystem.
type LookupSystemResultOutput struct{ *pulumi.OutputState }

func (LookupSystemResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSystemResult)(nil)).Elem()
}

func (o LookupSystemResultOutput) ToLookupSystemResultOutput() LookupSystemResultOutput {
	return o
}

func (o LookupSystemResultOutput) ToLookupSystemResultOutputWithContext(ctx context.Context) LookupSystemResultOutput {
	return o
}

func (o LookupSystemResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupSystemResult] {
	return pulumix.Output[LookupSystemResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupSystemResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSystemResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupSystemResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemResult) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o LookupSystemResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSystemResultOutput) IpDomainLookup() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSystemResult) bool { return v.IpDomainLookup }).(pulumi.BoolOutput)
}

func (o LookupSystemResultOutput) IpDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSystemResult) string { return v.IpDomainName }).(pulumi.StringOutput)
}

func (o LookupSystemResultOutput) IpMulticastRouting() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSystemResult) bool { return v.IpMulticastRouting }).(pulumi.BoolOutput)
}

func (o LookupSystemResultOutput) IpMulticastRoutingDistributed() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSystemResult) bool { return v.IpMulticastRoutingDistributed }).(pulumi.BoolOutput)
}

func (o LookupSystemResultOutput) IpRouting() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSystemResult) bool { return v.IpRouting }).(pulumi.BoolOutput)
}

func (o LookupSystemResultOutput) IpSourceRoute() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSystemResult) bool { return v.IpSourceRoute }).(pulumi.BoolOutput)
}

func (o LookupSystemResultOutput) Ipv6UnicastRouting() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSystemResult) bool { return v.Ipv6UnicastRouting }).(pulumi.BoolOutput)
}

func (o LookupSystemResultOutput) LoginDelay() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemResult) int { return v.LoginDelay }).(pulumi.IntOutput)
}

func (o LookupSystemResultOutput) LoginOnFailure() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSystemResult) bool { return v.LoginOnFailure }).(pulumi.BoolOutput)
}

func (o LookupSystemResultOutput) LoginOnFailureLog() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSystemResult) bool { return v.LoginOnFailureLog }).(pulumi.BoolOutput)
}

func (o LookupSystemResultOutput) LoginOnSuccess() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSystemResult) bool { return v.LoginOnSuccess }).(pulumi.BoolOutput)
}

func (o LookupSystemResultOutput) LoginOnSuccessLog() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSystemResult) bool { return v.LoginOnSuccessLog }).(pulumi.BoolOutput)
}

func (o LookupSystemResultOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSystemResult) int { return v.Mtu }).(pulumi.IntOutput)
}

func (o LookupSystemResultOutput) MulticastRoutingSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSystemResult) bool { return v.MulticastRoutingSwitch }).(pulumi.BoolOutput)
}

func (o LookupSystemResultOutput) MulticastRoutingVrfs() GetSystemMulticastRoutingVrfArrayOutput {
	return o.ApplyT(func(v LookupSystemResult) []GetSystemMulticastRoutingVrf { return v.MulticastRoutingVrfs }).(GetSystemMulticastRoutingVrfArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSystemResultOutput{})
}
