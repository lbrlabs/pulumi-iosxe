// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupTacacsServer(ctx *pulumi.Context, args *LookupTacacsServerArgs, opts ...pulumi.InvokeOption) (*LookupTacacsServerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTacacsServerResult
	err := ctx.Invoke("iosxe:iosxe/getTacacsServer:getTacacsServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTacacsServer.
type LookupTacacsServerArgs struct {
	Device *string `pulumi:"device"`
	Name   string  `pulumi:"name"`
}

// A collection of values returned by getTacacsServer.
type LookupTacacsServerResult struct {
	AddressIpv4 string  `pulumi:"addressIpv4"`
	Device      *string `pulumi:"device"`
	Id          string  `pulumi:"id"`
	Key         string  `pulumi:"key"`
	Name        string  `pulumi:"name"`
	Timeout     int     `pulumi:"timeout"`
}

func LookupTacacsServerOutput(ctx *pulumi.Context, args LookupTacacsServerOutputArgs, opts ...pulumi.InvokeOption) LookupTacacsServerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTacacsServerResult, error) {
			args := v.(LookupTacacsServerArgs)
			r, err := LookupTacacsServer(ctx, &args, opts...)
			var s LookupTacacsServerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTacacsServerResultOutput)
}

// A collection of arguments for invoking getTacacsServer.
type LookupTacacsServerOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
	Name   pulumi.StringInput    `pulumi:"name"`
}

func (LookupTacacsServerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTacacsServerArgs)(nil)).Elem()
}

// A collection of values returned by getTacacsServer.
type LookupTacacsServerResultOutput struct{ *pulumi.OutputState }

func (LookupTacacsServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTacacsServerResult)(nil)).Elem()
}

func (o LookupTacacsServerResultOutput) ToLookupTacacsServerResultOutput() LookupTacacsServerResultOutput {
	return o
}

func (o LookupTacacsServerResultOutput) ToLookupTacacsServerResultOutputWithContext(ctx context.Context) LookupTacacsServerResultOutput {
	return o
}

func (o LookupTacacsServerResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupTacacsServerResult] {
	return pulumix.Output[LookupTacacsServerResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupTacacsServerResultOutput) AddressIpv4() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTacacsServerResult) string { return v.AddressIpv4 }).(pulumi.StringOutput)
}

func (o LookupTacacsServerResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTacacsServerResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupTacacsServerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTacacsServerResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTacacsServerResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTacacsServerResult) string { return v.Key }).(pulumi.StringOutput)
}

func (o LookupTacacsServerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTacacsServerResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupTacacsServerResultOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTacacsServerResult) int { return v.Timeout }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTacacsServerResultOutput{})
}
