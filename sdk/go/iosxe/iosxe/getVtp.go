// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupVtp(ctx *pulumi.Context, args *LookupVtpArgs, opts ...pulumi.InvokeOption) (*LookupVtpResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVtpResult
	err := ctx.Invoke("iosxe:iosxe/getVtp:getVtp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVtp.
type LookupVtpArgs struct {
	Device *string `pulumi:"device"`
}

// A collection of values returned by getVtp.
type LookupVtpResult struct {
	Device                 *string `pulumi:"device"`
	Domain                 string  `pulumi:"domain"`
	File                   string  `pulumi:"file"`
	Id                     string  `pulumi:"id"`
	Interface              string  `pulumi:"interface"`
	InterfaceOnly          bool    `pulumi:"interfaceOnly"`
	ModeClientMst          bool    `pulumi:"modeClientMst"`
	ModeClientUnknown      bool    `pulumi:"modeClientUnknown"`
	ModeClientVlan         bool    `pulumi:"modeClientVlan"`
	ModeOffMst             bool    `pulumi:"modeOffMst"`
	ModeOffUnknown         bool    `pulumi:"modeOffUnknown"`
	ModeOffVlan            bool    `pulumi:"modeOffVlan"`
	ModeServerMst          bool    `pulumi:"modeServerMst"`
	ModeServerUnknown      bool    `pulumi:"modeServerUnknown"`
	ModeServerVlan         bool    `pulumi:"modeServerVlan"`
	ModeTransparentMst     bool    `pulumi:"modeTransparentMst"`
	ModeTransparentUnknown bool    `pulumi:"modeTransparentUnknown"`
	ModeTransparentVlan    bool    `pulumi:"modeTransparentVlan"`
	Password               string  `pulumi:"password"`
	PasswordHidden         bool    `pulumi:"passwordHidden"`
	PasswordSecret         bool    `pulumi:"passwordSecret"`
	Pruning                bool    `pulumi:"pruning"`
	Version                int     `pulumi:"version"`
}

func LookupVtpOutput(ctx *pulumi.Context, args LookupVtpOutputArgs, opts ...pulumi.InvokeOption) LookupVtpResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVtpResult, error) {
			args := v.(LookupVtpArgs)
			r, err := LookupVtp(ctx, &args, opts...)
			var s LookupVtpResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVtpResultOutput)
}

// A collection of arguments for invoking getVtp.
type LookupVtpOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
}

func (LookupVtpOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVtpArgs)(nil)).Elem()
}

// A collection of values returned by getVtp.
type LookupVtpResultOutput struct{ *pulumi.OutputState }

func (LookupVtpResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVtpResult)(nil)).Elem()
}

func (o LookupVtpResultOutput) ToLookupVtpResultOutput() LookupVtpResultOutput {
	return o
}

func (o LookupVtpResultOutput) ToLookupVtpResultOutputWithContext(ctx context.Context) LookupVtpResultOutput {
	return o
}

func (o LookupVtpResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupVtpResult] {
	return pulumix.Output[LookupVtpResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupVtpResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVtpResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupVtpResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtpResult) string { return v.Domain }).(pulumi.StringOutput)
}

func (o LookupVtpResultOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtpResult) string { return v.File }).(pulumi.StringOutput)
}

func (o LookupVtpResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtpResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVtpResultOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtpResult) string { return v.Interface }).(pulumi.StringOutput)
}

func (o LookupVtpResultOutput) InterfaceOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.InterfaceOnly }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) ModeClientMst() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.ModeClientMst }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) ModeClientUnknown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.ModeClientUnknown }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) ModeClientVlan() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.ModeClientVlan }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) ModeOffMst() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.ModeOffMst }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) ModeOffUnknown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.ModeOffUnknown }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) ModeOffVlan() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.ModeOffVlan }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) ModeServerMst() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.ModeServerMst }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) ModeServerUnknown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.ModeServerUnknown }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) ModeServerVlan() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.ModeServerVlan }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) ModeTransparentMst() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.ModeTransparentMst }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) ModeTransparentUnknown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.ModeTransparentUnknown }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) ModeTransparentVlan() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.ModeTransparentVlan }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVtpResult) string { return v.Password }).(pulumi.StringOutput)
}

func (o LookupVtpResultOutput) PasswordHidden() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.PasswordHidden }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) PasswordSecret() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.PasswordSecret }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) Pruning() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVtpResult) bool { return v.Pruning }).(pulumi.BoolOutput)
}

func (o LookupVtpResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVtpResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVtpResultOutput{})
}
