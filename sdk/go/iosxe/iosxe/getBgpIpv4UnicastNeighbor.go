// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupBgpIpv4UnicastNeighbor(ctx *pulumi.Context, args *LookupBgpIpv4UnicastNeighborArgs, opts ...pulumi.InvokeOption) (*LookupBgpIpv4UnicastNeighborResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBgpIpv4UnicastNeighborResult
	err := ctx.Invoke("iosxe:iosxe/getBgpIpv4UnicastNeighbor:getBgpIpv4UnicastNeighbor", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBgpIpv4UnicastNeighbor.
type LookupBgpIpv4UnicastNeighborArgs struct {
	Asn    string  `pulumi:"asn"`
	Device *string `pulumi:"device"`
	Ip     string  `pulumi:"ip"`
}

// A collection of values returned by getBgpIpv4UnicastNeighbor.
type LookupBgpIpv4UnicastNeighborResult struct {
	Activate             bool                                `pulumi:"activate"`
	Asn                  string                              `pulumi:"asn"`
	Device               *string                             `pulumi:"device"`
	Id                   string                              `pulumi:"id"`
	Ip                   string                              `pulumi:"ip"`
	RouteMaps            []GetBgpIpv4UnicastNeighborRouteMap `pulumi:"routeMaps"`
	RouteReflectorClient bool                                `pulumi:"routeReflectorClient"`
	SendCommunity        string                              `pulumi:"sendCommunity"`
}

func LookupBgpIpv4UnicastNeighborOutput(ctx *pulumi.Context, args LookupBgpIpv4UnicastNeighborOutputArgs, opts ...pulumi.InvokeOption) LookupBgpIpv4UnicastNeighborResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBgpIpv4UnicastNeighborResult, error) {
			args := v.(LookupBgpIpv4UnicastNeighborArgs)
			r, err := LookupBgpIpv4UnicastNeighbor(ctx, &args, opts...)
			var s LookupBgpIpv4UnicastNeighborResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBgpIpv4UnicastNeighborResultOutput)
}

// A collection of arguments for invoking getBgpIpv4UnicastNeighbor.
type LookupBgpIpv4UnicastNeighborOutputArgs struct {
	Asn    pulumi.StringInput    `pulumi:"asn"`
	Device pulumi.StringPtrInput `pulumi:"device"`
	Ip     pulumi.StringInput    `pulumi:"ip"`
}

func (LookupBgpIpv4UnicastNeighborOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBgpIpv4UnicastNeighborArgs)(nil)).Elem()
}

// A collection of values returned by getBgpIpv4UnicastNeighbor.
type LookupBgpIpv4UnicastNeighborResultOutput struct{ *pulumi.OutputState }

func (LookupBgpIpv4UnicastNeighborResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBgpIpv4UnicastNeighborResult)(nil)).Elem()
}

func (o LookupBgpIpv4UnicastNeighborResultOutput) ToLookupBgpIpv4UnicastNeighborResultOutput() LookupBgpIpv4UnicastNeighborResultOutput {
	return o
}

func (o LookupBgpIpv4UnicastNeighborResultOutput) ToLookupBgpIpv4UnicastNeighborResultOutputWithContext(ctx context.Context) LookupBgpIpv4UnicastNeighborResultOutput {
	return o
}

func (o LookupBgpIpv4UnicastNeighborResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupBgpIpv4UnicastNeighborResult] {
	return pulumix.Output[LookupBgpIpv4UnicastNeighborResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupBgpIpv4UnicastNeighborResultOutput) Activate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBgpIpv4UnicastNeighborResult) bool { return v.Activate }).(pulumi.BoolOutput)
}

func (o LookupBgpIpv4UnicastNeighborResultOutput) Asn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBgpIpv4UnicastNeighborResult) string { return v.Asn }).(pulumi.StringOutput)
}

func (o LookupBgpIpv4UnicastNeighborResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBgpIpv4UnicastNeighborResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupBgpIpv4UnicastNeighborResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBgpIpv4UnicastNeighborResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBgpIpv4UnicastNeighborResultOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBgpIpv4UnicastNeighborResult) string { return v.Ip }).(pulumi.StringOutput)
}

func (o LookupBgpIpv4UnicastNeighborResultOutput) RouteMaps() GetBgpIpv4UnicastNeighborRouteMapArrayOutput {
	return o.ApplyT(func(v LookupBgpIpv4UnicastNeighborResult) []GetBgpIpv4UnicastNeighborRouteMap { return v.RouteMaps }).(GetBgpIpv4UnicastNeighborRouteMapArrayOutput)
}

func (o LookupBgpIpv4UnicastNeighborResultOutput) RouteReflectorClient() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBgpIpv4UnicastNeighborResult) bool { return v.RouteReflectorClient }).(pulumi.BoolOutput)
}

func (o LookupBgpIpv4UnicastNeighborResultOutput) SendCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBgpIpv4UnicastNeighborResult) string { return v.SendCommunity }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBgpIpv4UnicastNeighborResultOutput{})
}
