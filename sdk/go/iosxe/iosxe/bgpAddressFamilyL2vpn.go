// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type BgpAddressFamilyL2vpn struct {
	pulumi.CustomResourceState

	// - Choices: `evpn`, `vpls`
	AfName pulumi.StringOutput `pulumi:"afName"`
	Asn    pulumi.StringOutput `pulumi:"asn"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrOutput `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
}

// NewBgpAddressFamilyL2vpn registers a new resource with the given unique name, arguments, and options.
func NewBgpAddressFamilyL2vpn(ctx *pulumi.Context,
	name string, args *BgpAddressFamilyL2vpnArgs, opts ...pulumi.ResourceOption) (*BgpAddressFamilyL2vpn, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AfName == nil {
		return nil, errors.New("invalid value for required argument 'AfName'")
	}
	if args.Asn == nil {
		return nil, errors.New("invalid value for required argument 'Asn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BgpAddressFamilyL2vpn
	err := ctx.RegisterResource("iosxe:iosxe/bgpAddressFamilyL2vpn:BgpAddressFamilyL2vpn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBgpAddressFamilyL2vpn gets an existing BgpAddressFamilyL2vpn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBgpAddressFamilyL2vpn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BgpAddressFamilyL2vpnState, opts ...pulumi.ResourceOption) (*BgpAddressFamilyL2vpn, error) {
	var resource BgpAddressFamilyL2vpn
	err := ctx.ReadResource("iosxe:iosxe/bgpAddressFamilyL2vpn:BgpAddressFamilyL2vpn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BgpAddressFamilyL2vpn resources.
type bgpAddressFamilyL2vpnState struct {
	// - Choices: `evpn`, `vpls`
	AfName *string `pulumi:"afName"`
	Asn    *string `pulumi:"asn"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
}

type BgpAddressFamilyL2vpnState struct {
	// - Choices: `evpn`, `vpls`
	AfName pulumi.StringPtrInput
	Asn    pulumi.StringPtrInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
}

func (BgpAddressFamilyL2vpnState) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpAddressFamilyL2vpnState)(nil)).Elem()
}

type bgpAddressFamilyL2vpnArgs struct {
	// - Choices: `evpn`, `vpls`
	AfName string `pulumi:"afName"`
	Asn    string `pulumi:"asn"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
}

// The set of arguments for constructing a BgpAddressFamilyL2vpn resource.
type BgpAddressFamilyL2vpnArgs struct {
	// - Choices: `evpn`, `vpls`
	AfName pulumi.StringInput
	Asn    pulumi.StringInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
}

func (BgpAddressFamilyL2vpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpAddressFamilyL2vpnArgs)(nil)).Elem()
}

type BgpAddressFamilyL2vpnInput interface {
	pulumi.Input

	ToBgpAddressFamilyL2vpnOutput() BgpAddressFamilyL2vpnOutput
	ToBgpAddressFamilyL2vpnOutputWithContext(ctx context.Context) BgpAddressFamilyL2vpnOutput
}

func (*BgpAddressFamilyL2vpn) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpAddressFamilyL2vpn)(nil)).Elem()
}

func (i *BgpAddressFamilyL2vpn) ToBgpAddressFamilyL2vpnOutput() BgpAddressFamilyL2vpnOutput {
	return i.ToBgpAddressFamilyL2vpnOutputWithContext(context.Background())
}

func (i *BgpAddressFamilyL2vpn) ToBgpAddressFamilyL2vpnOutputWithContext(ctx context.Context) BgpAddressFamilyL2vpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpAddressFamilyL2vpnOutput)
}

func (i *BgpAddressFamilyL2vpn) ToOutput(ctx context.Context) pulumix.Output[*BgpAddressFamilyL2vpn] {
	return pulumix.Output[*BgpAddressFamilyL2vpn]{
		OutputState: i.ToBgpAddressFamilyL2vpnOutputWithContext(ctx).OutputState,
	}
}

// BgpAddressFamilyL2vpnArrayInput is an input type that accepts BgpAddressFamilyL2vpnArray and BgpAddressFamilyL2vpnArrayOutput values.
// You can construct a concrete instance of `BgpAddressFamilyL2vpnArrayInput` via:
//
//	BgpAddressFamilyL2vpnArray{ BgpAddressFamilyL2vpnArgs{...} }
type BgpAddressFamilyL2vpnArrayInput interface {
	pulumi.Input

	ToBgpAddressFamilyL2vpnArrayOutput() BgpAddressFamilyL2vpnArrayOutput
	ToBgpAddressFamilyL2vpnArrayOutputWithContext(context.Context) BgpAddressFamilyL2vpnArrayOutput
}

type BgpAddressFamilyL2vpnArray []BgpAddressFamilyL2vpnInput

func (BgpAddressFamilyL2vpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpAddressFamilyL2vpn)(nil)).Elem()
}

func (i BgpAddressFamilyL2vpnArray) ToBgpAddressFamilyL2vpnArrayOutput() BgpAddressFamilyL2vpnArrayOutput {
	return i.ToBgpAddressFamilyL2vpnArrayOutputWithContext(context.Background())
}

func (i BgpAddressFamilyL2vpnArray) ToBgpAddressFamilyL2vpnArrayOutputWithContext(ctx context.Context) BgpAddressFamilyL2vpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpAddressFamilyL2vpnArrayOutput)
}

func (i BgpAddressFamilyL2vpnArray) ToOutput(ctx context.Context) pulumix.Output[[]*BgpAddressFamilyL2vpn] {
	return pulumix.Output[[]*BgpAddressFamilyL2vpn]{
		OutputState: i.ToBgpAddressFamilyL2vpnArrayOutputWithContext(ctx).OutputState,
	}
}

// BgpAddressFamilyL2vpnMapInput is an input type that accepts BgpAddressFamilyL2vpnMap and BgpAddressFamilyL2vpnMapOutput values.
// You can construct a concrete instance of `BgpAddressFamilyL2vpnMapInput` via:
//
//	BgpAddressFamilyL2vpnMap{ "key": BgpAddressFamilyL2vpnArgs{...} }
type BgpAddressFamilyL2vpnMapInput interface {
	pulumi.Input

	ToBgpAddressFamilyL2vpnMapOutput() BgpAddressFamilyL2vpnMapOutput
	ToBgpAddressFamilyL2vpnMapOutputWithContext(context.Context) BgpAddressFamilyL2vpnMapOutput
}

type BgpAddressFamilyL2vpnMap map[string]BgpAddressFamilyL2vpnInput

func (BgpAddressFamilyL2vpnMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpAddressFamilyL2vpn)(nil)).Elem()
}

func (i BgpAddressFamilyL2vpnMap) ToBgpAddressFamilyL2vpnMapOutput() BgpAddressFamilyL2vpnMapOutput {
	return i.ToBgpAddressFamilyL2vpnMapOutputWithContext(context.Background())
}

func (i BgpAddressFamilyL2vpnMap) ToBgpAddressFamilyL2vpnMapOutputWithContext(ctx context.Context) BgpAddressFamilyL2vpnMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpAddressFamilyL2vpnMapOutput)
}

func (i BgpAddressFamilyL2vpnMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpAddressFamilyL2vpn] {
	return pulumix.Output[map[string]*BgpAddressFamilyL2vpn]{
		OutputState: i.ToBgpAddressFamilyL2vpnMapOutputWithContext(ctx).OutputState,
	}
}

type BgpAddressFamilyL2vpnOutput struct{ *pulumi.OutputState }

func (BgpAddressFamilyL2vpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpAddressFamilyL2vpn)(nil)).Elem()
}

func (o BgpAddressFamilyL2vpnOutput) ToBgpAddressFamilyL2vpnOutput() BgpAddressFamilyL2vpnOutput {
	return o
}

func (o BgpAddressFamilyL2vpnOutput) ToBgpAddressFamilyL2vpnOutputWithContext(ctx context.Context) BgpAddressFamilyL2vpnOutput {
	return o
}

func (o BgpAddressFamilyL2vpnOutput) ToOutput(ctx context.Context) pulumix.Output[*BgpAddressFamilyL2vpn] {
	return pulumix.Output[*BgpAddressFamilyL2vpn]{
		OutputState: o.OutputState,
	}
}

// - Choices: `evpn`, `vpls`
func (o BgpAddressFamilyL2vpnOutput) AfName() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpAddressFamilyL2vpn) pulumi.StringOutput { return v.AfName }).(pulumi.StringOutput)
}

func (o BgpAddressFamilyL2vpnOutput) Asn() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpAddressFamilyL2vpn) pulumi.StringOutput { return v.Asn }).(pulumi.StringOutput)
}

// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
// Default value is `all`. - Choices: `all`, `attributes`
func (o BgpAddressFamilyL2vpnOutput) DeleteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpAddressFamilyL2vpn) pulumi.StringPtrOutput { return v.DeleteMode }).(pulumi.StringPtrOutput)
}

// A device name from the provider configuration.
func (o BgpAddressFamilyL2vpnOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpAddressFamilyL2vpn) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

type BgpAddressFamilyL2vpnArrayOutput struct{ *pulumi.OutputState }

func (BgpAddressFamilyL2vpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpAddressFamilyL2vpn)(nil)).Elem()
}

func (o BgpAddressFamilyL2vpnArrayOutput) ToBgpAddressFamilyL2vpnArrayOutput() BgpAddressFamilyL2vpnArrayOutput {
	return o
}

func (o BgpAddressFamilyL2vpnArrayOutput) ToBgpAddressFamilyL2vpnArrayOutputWithContext(ctx context.Context) BgpAddressFamilyL2vpnArrayOutput {
	return o
}

func (o BgpAddressFamilyL2vpnArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*BgpAddressFamilyL2vpn] {
	return pulumix.Output[[]*BgpAddressFamilyL2vpn]{
		OutputState: o.OutputState,
	}
}

func (o BgpAddressFamilyL2vpnArrayOutput) Index(i pulumi.IntInput) BgpAddressFamilyL2vpnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BgpAddressFamilyL2vpn {
		return vs[0].([]*BgpAddressFamilyL2vpn)[vs[1].(int)]
	}).(BgpAddressFamilyL2vpnOutput)
}

type BgpAddressFamilyL2vpnMapOutput struct{ *pulumi.OutputState }

func (BgpAddressFamilyL2vpnMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpAddressFamilyL2vpn)(nil)).Elem()
}

func (o BgpAddressFamilyL2vpnMapOutput) ToBgpAddressFamilyL2vpnMapOutput() BgpAddressFamilyL2vpnMapOutput {
	return o
}

func (o BgpAddressFamilyL2vpnMapOutput) ToBgpAddressFamilyL2vpnMapOutputWithContext(ctx context.Context) BgpAddressFamilyL2vpnMapOutput {
	return o
}

func (o BgpAddressFamilyL2vpnMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpAddressFamilyL2vpn] {
	return pulumix.Output[map[string]*BgpAddressFamilyL2vpn]{
		OutputState: o.OutputState,
	}
}

func (o BgpAddressFamilyL2vpnMapOutput) MapIndex(k pulumi.StringInput) BgpAddressFamilyL2vpnOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BgpAddressFamilyL2vpn {
		return vs[0].(map[string]*BgpAddressFamilyL2vpn)[vs[1].(string)]
	}).(BgpAddressFamilyL2vpnOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BgpAddressFamilyL2vpnInput)(nil)).Elem(), &BgpAddressFamilyL2vpn{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpAddressFamilyL2vpnArrayInput)(nil)).Elem(), BgpAddressFamilyL2vpnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpAddressFamilyL2vpnMapInput)(nil)).Elem(), BgpAddressFamilyL2vpnMap{})
	pulumi.RegisterOutputType(BgpAddressFamilyL2vpnOutput{})
	pulumi.RegisterOutputType(BgpAddressFamilyL2vpnArrayOutput{})
	pulumi.RegisterOutputType(BgpAddressFamilyL2vpnMapOutput{})
}
