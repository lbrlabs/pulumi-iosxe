// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type LoggingIpv6HostVrfTransport struct {
	pulumi.CustomResourceState

	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrOutput `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device   pulumi.StringPtrOutput `pulumi:"device"`
	Ipv6Host pulumi.StringOutput    `pulumi:"ipv6Host"`
	// Port Number List
	TransportTcpPorts LoggingIpv6HostVrfTransportTransportTcpPortArrayOutput `pulumi:"transportTcpPorts"`
	// Port Number List
	TransportTlsPorts LoggingIpv6HostVrfTransportTransportTlsPortArrayOutput `pulumi:"transportTlsPorts"`
	// Port Number List
	TransportUdpPorts LoggingIpv6HostVrfTransportTransportUdpPortArrayOutput `pulumi:"transportUdpPorts"`
	// Set VRF option
	Vrf pulumi.StringOutput `pulumi:"vrf"`
}

// NewLoggingIpv6HostVrfTransport registers a new resource with the given unique name, arguments, and options.
func NewLoggingIpv6HostVrfTransport(ctx *pulumi.Context,
	name string, args *LoggingIpv6HostVrfTransportArgs, opts ...pulumi.ResourceOption) (*LoggingIpv6HostVrfTransport, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Ipv6Host == nil {
		return nil, errors.New("invalid value for required argument 'Ipv6Host'")
	}
	if args.Vrf == nil {
		return nil, errors.New("invalid value for required argument 'Vrf'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LoggingIpv6HostVrfTransport
	err := ctx.RegisterResource("iosxe:iosxe/loggingIpv6HostVrfTransport:LoggingIpv6HostVrfTransport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoggingIpv6HostVrfTransport gets an existing LoggingIpv6HostVrfTransport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoggingIpv6HostVrfTransport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoggingIpv6HostVrfTransportState, opts ...pulumi.ResourceOption) (*LoggingIpv6HostVrfTransport, error) {
	var resource LoggingIpv6HostVrfTransport
	err := ctx.ReadResource("iosxe:iosxe/loggingIpv6HostVrfTransport:LoggingIpv6HostVrfTransport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoggingIpv6HostVrfTransport resources.
type loggingIpv6HostVrfTransportState struct {
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device   *string `pulumi:"device"`
	Ipv6Host *string `pulumi:"ipv6Host"`
	// Port Number List
	TransportTcpPorts []LoggingIpv6HostVrfTransportTransportTcpPort `pulumi:"transportTcpPorts"`
	// Port Number List
	TransportTlsPorts []LoggingIpv6HostVrfTransportTransportTlsPort `pulumi:"transportTlsPorts"`
	// Port Number List
	TransportUdpPorts []LoggingIpv6HostVrfTransportTransportUdpPort `pulumi:"transportUdpPorts"`
	// Set VRF option
	Vrf *string `pulumi:"vrf"`
}

type LoggingIpv6HostVrfTransportState struct {
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device   pulumi.StringPtrInput
	Ipv6Host pulumi.StringPtrInput
	// Port Number List
	TransportTcpPorts LoggingIpv6HostVrfTransportTransportTcpPortArrayInput
	// Port Number List
	TransportTlsPorts LoggingIpv6HostVrfTransportTransportTlsPortArrayInput
	// Port Number List
	TransportUdpPorts LoggingIpv6HostVrfTransportTransportUdpPortArrayInput
	// Set VRF option
	Vrf pulumi.StringPtrInput
}

func (LoggingIpv6HostVrfTransportState) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingIpv6HostVrfTransportState)(nil)).Elem()
}

type loggingIpv6HostVrfTransportArgs struct {
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device   *string `pulumi:"device"`
	Ipv6Host string  `pulumi:"ipv6Host"`
	// Port Number List
	TransportTcpPorts []LoggingIpv6HostVrfTransportTransportTcpPort `pulumi:"transportTcpPorts"`
	// Port Number List
	TransportTlsPorts []LoggingIpv6HostVrfTransportTransportTlsPort `pulumi:"transportTlsPorts"`
	// Port Number List
	TransportUdpPorts []LoggingIpv6HostVrfTransportTransportUdpPort `pulumi:"transportUdpPorts"`
	// Set VRF option
	Vrf string `pulumi:"vrf"`
}

// The set of arguments for constructing a LoggingIpv6HostVrfTransport resource.
type LoggingIpv6HostVrfTransportArgs struct {
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device   pulumi.StringPtrInput
	Ipv6Host pulumi.StringInput
	// Port Number List
	TransportTcpPorts LoggingIpv6HostVrfTransportTransportTcpPortArrayInput
	// Port Number List
	TransportTlsPorts LoggingIpv6HostVrfTransportTransportTlsPortArrayInput
	// Port Number List
	TransportUdpPorts LoggingIpv6HostVrfTransportTransportUdpPortArrayInput
	// Set VRF option
	Vrf pulumi.StringInput
}

func (LoggingIpv6HostVrfTransportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingIpv6HostVrfTransportArgs)(nil)).Elem()
}

type LoggingIpv6HostVrfTransportInput interface {
	pulumi.Input

	ToLoggingIpv6HostVrfTransportOutput() LoggingIpv6HostVrfTransportOutput
	ToLoggingIpv6HostVrfTransportOutputWithContext(ctx context.Context) LoggingIpv6HostVrfTransportOutput
}

func (*LoggingIpv6HostVrfTransport) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingIpv6HostVrfTransport)(nil)).Elem()
}

func (i *LoggingIpv6HostVrfTransport) ToLoggingIpv6HostVrfTransportOutput() LoggingIpv6HostVrfTransportOutput {
	return i.ToLoggingIpv6HostVrfTransportOutputWithContext(context.Background())
}

func (i *LoggingIpv6HostVrfTransport) ToLoggingIpv6HostVrfTransportOutputWithContext(ctx context.Context) LoggingIpv6HostVrfTransportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingIpv6HostVrfTransportOutput)
}

func (i *LoggingIpv6HostVrfTransport) ToOutput(ctx context.Context) pulumix.Output[*LoggingIpv6HostVrfTransport] {
	return pulumix.Output[*LoggingIpv6HostVrfTransport]{
		OutputState: i.ToLoggingIpv6HostVrfTransportOutputWithContext(ctx).OutputState,
	}
}

// LoggingIpv6HostVrfTransportArrayInput is an input type that accepts LoggingIpv6HostVrfTransportArray and LoggingIpv6HostVrfTransportArrayOutput values.
// You can construct a concrete instance of `LoggingIpv6HostVrfTransportArrayInput` via:
//
//	LoggingIpv6HostVrfTransportArray{ LoggingIpv6HostVrfTransportArgs{...} }
type LoggingIpv6HostVrfTransportArrayInput interface {
	pulumi.Input

	ToLoggingIpv6HostVrfTransportArrayOutput() LoggingIpv6HostVrfTransportArrayOutput
	ToLoggingIpv6HostVrfTransportArrayOutputWithContext(context.Context) LoggingIpv6HostVrfTransportArrayOutput
}

type LoggingIpv6HostVrfTransportArray []LoggingIpv6HostVrfTransportInput

func (LoggingIpv6HostVrfTransportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoggingIpv6HostVrfTransport)(nil)).Elem()
}

func (i LoggingIpv6HostVrfTransportArray) ToLoggingIpv6HostVrfTransportArrayOutput() LoggingIpv6HostVrfTransportArrayOutput {
	return i.ToLoggingIpv6HostVrfTransportArrayOutputWithContext(context.Background())
}

func (i LoggingIpv6HostVrfTransportArray) ToLoggingIpv6HostVrfTransportArrayOutputWithContext(ctx context.Context) LoggingIpv6HostVrfTransportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingIpv6HostVrfTransportArrayOutput)
}

func (i LoggingIpv6HostVrfTransportArray) ToOutput(ctx context.Context) pulumix.Output[[]*LoggingIpv6HostVrfTransport] {
	return pulumix.Output[[]*LoggingIpv6HostVrfTransport]{
		OutputState: i.ToLoggingIpv6HostVrfTransportArrayOutputWithContext(ctx).OutputState,
	}
}

// LoggingIpv6HostVrfTransportMapInput is an input type that accepts LoggingIpv6HostVrfTransportMap and LoggingIpv6HostVrfTransportMapOutput values.
// You can construct a concrete instance of `LoggingIpv6HostVrfTransportMapInput` via:
//
//	LoggingIpv6HostVrfTransportMap{ "key": LoggingIpv6HostVrfTransportArgs{...} }
type LoggingIpv6HostVrfTransportMapInput interface {
	pulumi.Input

	ToLoggingIpv6HostVrfTransportMapOutput() LoggingIpv6HostVrfTransportMapOutput
	ToLoggingIpv6HostVrfTransportMapOutputWithContext(context.Context) LoggingIpv6HostVrfTransportMapOutput
}

type LoggingIpv6HostVrfTransportMap map[string]LoggingIpv6HostVrfTransportInput

func (LoggingIpv6HostVrfTransportMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoggingIpv6HostVrfTransport)(nil)).Elem()
}

func (i LoggingIpv6HostVrfTransportMap) ToLoggingIpv6HostVrfTransportMapOutput() LoggingIpv6HostVrfTransportMapOutput {
	return i.ToLoggingIpv6HostVrfTransportMapOutputWithContext(context.Background())
}

func (i LoggingIpv6HostVrfTransportMap) ToLoggingIpv6HostVrfTransportMapOutputWithContext(ctx context.Context) LoggingIpv6HostVrfTransportMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingIpv6HostVrfTransportMapOutput)
}

func (i LoggingIpv6HostVrfTransportMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*LoggingIpv6HostVrfTransport] {
	return pulumix.Output[map[string]*LoggingIpv6HostVrfTransport]{
		OutputState: i.ToLoggingIpv6HostVrfTransportMapOutputWithContext(ctx).OutputState,
	}
}

type LoggingIpv6HostVrfTransportOutput struct{ *pulumi.OutputState }

func (LoggingIpv6HostVrfTransportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingIpv6HostVrfTransport)(nil)).Elem()
}

func (o LoggingIpv6HostVrfTransportOutput) ToLoggingIpv6HostVrfTransportOutput() LoggingIpv6HostVrfTransportOutput {
	return o
}

func (o LoggingIpv6HostVrfTransportOutput) ToLoggingIpv6HostVrfTransportOutputWithContext(ctx context.Context) LoggingIpv6HostVrfTransportOutput {
	return o
}

func (o LoggingIpv6HostVrfTransportOutput) ToOutput(ctx context.Context) pulumix.Output[*LoggingIpv6HostVrfTransport] {
	return pulumix.Output[*LoggingIpv6HostVrfTransport]{
		OutputState: o.OutputState,
	}
}

// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
// Default value is `all`. - Choices: `all`, `attributes`
func (o LoggingIpv6HostVrfTransportOutput) DeleteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingIpv6HostVrfTransport) pulumi.StringPtrOutput { return v.DeleteMode }).(pulumi.StringPtrOutput)
}

// A device name from the provider configuration.
func (o LoggingIpv6HostVrfTransportOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingIpv6HostVrfTransport) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LoggingIpv6HostVrfTransportOutput) Ipv6Host() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingIpv6HostVrfTransport) pulumi.StringOutput { return v.Ipv6Host }).(pulumi.StringOutput)
}

// Port Number List
func (o LoggingIpv6HostVrfTransportOutput) TransportTcpPorts() LoggingIpv6HostVrfTransportTransportTcpPortArrayOutput {
	return o.ApplyT(func(v *LoggingIpv6HostVrfTransport) LoggingIpv6HostVrfTransportTransportTcpPortArrayOutput {
		return v.TransportTcpPorts
	}).(LoggingIpv6HostVrfTransportTransportTcpPortArrayOutput)
}

// Port Number List
func (o LoggingIpv6HostVrfTransportOutput) TransportTlsPorts() LoggingIpv6HostVrfTransportTransportTlsPortArrayOutput {
	return o.ApplyT(func(v *LoggingIpv6HostVrfTransport) LoggingIpv6HostVrfTransportTransportTlsPortArrayOutput {
		return v.TransportTlsPorts
	}).(LoggingIpv6HostVrfTransportTransportTlsPortArrayOutput)
}

// Port Number List
func (o LoggingIpv6HostVrfTransportOutput) TransportUdpPorts() LoggingIpv6HostVrfTransportTransportUdpPortArrayOutput {
	return o.ApplyT(func(v *LoggingIpv6HostVrfTransport) LoggingIpv6HostVrfTransportTransportUdpPortArrayOutput {
		return v.TransportUdpPorts
	}).(LoggingIpv6HostVrfTransportTransportUdpPortArrayOutput)
}

// Set VRF option
func (o LoggingIpv6HostVrfTransportOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingIpv6HostVrfTransport) pulumi.StringOutput { return v.Vrf }).(pulumi.StringOutput)
}

type LoggingIpv6HostVrfTransportArrayOutput struct{ *pulumi.OutputState }

func (LoggingIpv6HostVrfTransportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoggingIpv6HostVrfTransport)(nil)).Elem()
}

func (o LoggingIpv6HostVrfTransportArrayOutput) ToLoggingIpv6HostVrfTransportArrayOutput() LoggingIpv6HostVrfTransportArrayOutput {
	return o
}

func (o LoggingIpv6HostVrfTransportArrayOutput) ToLoggingIpv6HostVrfTransportArrayOutputWithContext(ctx context.Context) LoggingIpv6HostVrfTransportArrayOutput {
	return o
}

func (o LoggingIpv6HostVrfTransportArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*LoggingIpv6HostVrfTransport] {
	return pulumix.Output[[]*LoggingIpv6HostVrfTransport]{
		OutputState: o.OutputState,
	}
}

func (o LoggingIpv6HostVrfTransportArrayOutput) Index(i pulumi.IntInput) LoggingIpv6HostVrfTransportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LoggingIpv6HostVrfTransport {
		return vs[0].([]*LoggingIpv6HostVrfTransport)[vs[1].(int)]
	}).(LoggingIpv6HostVrfTransportOutput)
}

type LoggingIpv6HostVrfTransportMapOutput struct{ *pulumi.OutputState }

func (LoggingIpv6HostVrfTransportMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoggingIpv6HostVrfTransport)(nil)).Elem()
}

func (o LoggingIpv6HostVrfTransportMapOutput) ToLoggingIpv6HostVrfTransportMapOutput() LoggingIpv6HostVrfTransportMapOutput {
	return o
}

func (o LoggingIpv6HostVrfTransportMapOutput) ToLoggingIpv6HostVrfTransportMapOutputWithContext(ctx context.Context) LoggingIpv6HostVrfTransportMapOutput {
	return o
}

func (o LoggingIpv6HostVrfTransportMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*LoggingIpv6HostVrfTransport] {
	return pulumix.Output[map[string]*LoggingIpv6HostVrfTransport]{
		OutputState: o.OutputState,
	}
}

func (o LoggingIpv6HostVrfTransportMapOutput) MapIndex(k pulumi.StringInput) LoggingIpv6HostVrfTransportOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LoggingIpv6HostVrfTransport {
		return vs[0].(map[string]*LoggingIpv6HostVrfTransport)[vs[1].(string)]
	}).(LoggingIpv6HostVrfTransportOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingIpv6HostVrfTransportInput)(nil)).Elem(), &LoggingIpv6HostVrfTransport{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingIpv6HostVrfTransportArrayInput)(nil)).Elem(), LoggingIpv6HostVrfTransportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingIpv6HostVrfTransportMapInput)(nil)).Elem(), LoggingIpv6HostVrfTransportMap{})
	pulumi.RegisterOutputType(LoggingIpv6HostVrfTransportOutput{})
	pulumi.RegisterOutputType(LoggingIpv6HostVrfTransportArrayOutput{})
	pulumi.RegisterOutputType(LoggingIpv6HostVrfTransportMapOutput{})
}
