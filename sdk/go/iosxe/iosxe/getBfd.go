// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupBfd(ctx *pulumi.Context, args *LookupBfdArgs, opts ...pulumi.InvokeOption) (*LookupBfdResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBfdResult
	err := ctx.Invoke("iosxe:iosxe/getBfd:getBfd", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBfd.
type LookupBfdArgs struct {
	Device *string `pulumi:"device"`
}

// A collection of values returned by getBfd.
type LookupBfdResult struct {
	Device           *string                 `pulumi:"device"`
	Id               string                  `pulumi:"id"`
	Ipv4BothVrfs     []GetBfdIpv4BothVrf     `pulumi:"ipv4BothVrfs"`
	Ipv4WithDstVrfs  []GetBfdIpv4WithDstVrf  `pulumi:"ipv4WithDstVrfs"`
	Ipv4WithSrcVrfs  []GetBfdIpv4WithSrcVrf  `pulumi:"ipv4WithSrcVrfs"`
	Ipv4WithoutVrfs  []GetBfdIpv4WithoutVrf  `pulumi:"ipv4WithoutVrfs"`
	Ipv6WithBothVrfs []GetBfdIpv6WithBothVrf `pulumi:"ipv6WithBothVrfs"`
	Ipv6WithDstVrfs  []GetBfdIpv6WithDstVrf  `pulumi:"ipv6WithDstVrfs"`
	Ipv6WithSrcVrfs  []GetBfdIpv6WithSrcVrf  `pulumi:"ipv6WithSrcVrfs"`
	Ipv6WithoutVrfs  []GetBfdIpv6WithoutVrf  `pulumi:"ipv6WithoutVrfs"`
	SlowTimers       int                     `pulumi:"slowTimers"`
}

func LookupBfdOutput(ctx *pulumi.Context, args LookupBfdOutputArgs, opts ...pulumi.InvokeOption) LookupBfdResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBfdResult, error) {
			args := v.(LookupBfdArgs)
			r, err := LookupBfd(ctx, &args, opts...)
			var s LookupBfdResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBfdResultOutput)
}

// A collection of arguments for invoking getBfd.
type LookupBfdOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
}

func (LookupBfdOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBfdArgs)(nil)).Elem()
}

// A collection of values returned by getBfd.
type LookupBfdResultOutput struct{ *pulumi.OutputState }

func (LookupBfdResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBfdResult)(nil)).Elem()
}

func (o LookupBfdResultOutput) ToLookupBfdResultOutput() LookupBfdResultOutput {
	return o
}

func (o LookupBfdResultOutput) ToLookupBfdResultOutputWithContext(ctx context.Context) LookupBfdResultOutput {
	return o
}

func (o LookupBfdResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupBfdResult] {
	return pulumix.Output[LookupBfdResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupBfdResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBfdResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupBfdResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBfdResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBfdResultOutput) Ipv4BothVrfs() GetBfdIpv4BothVrfArrayOutput {
	return o.ApplyT(func(v LookupBfdResult) []GetBfdIpv4BothVrf { return v.Ipv4BothVrfs }).(GetBfdIpv4BothVrfArrayOutput)
}

func (o LookupBfdResultOutput) Ipv4WithDstVrfs() GetBfdIpv4WithDstVrfArrayOutput {
	return o.ApplyT(func(v LookupBfdResult) []GetBfdIpv4WithDstVrf { return v.Ipv4WithDstVrfs }).(GetBfdIpv4WithDstVrfArrayOutput)
}

func (o LookupBfdResultOutput) Ipv4WithSrcVrfs() GetBfdIpv4WithSrcVrfArrayOutput {
	return o.ApplyT(func(v LookupBfdResult) []GetBfdIpv4WithSrcVrf { return v.Ipv4WithSrcVrfs }).(GetBfdIpv4WithSrcVrfArrayOutput)
}

func (o LookupBfdResultOutput) Ipv4WithoutVrfs() GetBfdIpv4WithoutVrfArrayOutput {
	return o.ApplyT(func(v LookupBfdResult) []GetBfdIpv4WithoutVrf { return v.Ipv4WithoutVrfs }).(GetBfdIpv4WithoutVrfArrayOutput)
}

func (o LookupBfdResultOutput) Ipv6WithBothVrfs() GetBfdIpv6WithBothVrfArrayOutput {
	return o.ApplyT(func(v LookupBfdResult) []GetBfdIpv6WithBothVrf { return v.Ipv6WithBothVrfs }).(GetBfdIpv6WithBothVrfArrayOutput)
}

func (o LookupBfdResultOutput) Ipv6WithDstVrfs() GetBfdIpv6WithDstVrfArrayOutput {
	return o.ApplyT(func(v LookupBfdResult) []GetBfdIpv6WithDstVrf { return v.Ipv6WithDstVrfs }).(GetBfdIpv6WithDstVrfArrayOutput)
}

func (o LookupBfdResultOutput) Ipv6WithSrcVrfs() GetBfdIpv6WithSrcVrfArrayOutput {
	return o.ApplyT(func(v LookupBfdResult) []GetBfdIpv6WithSrcVrf { return v.Ipv6WithSrcVrfs }).(GetBfdIpv6WithSrcVrfArrayOutput)
}

func (o LookupBfdResultOutput) Ipv6WithoutVrfs() GetBfdIpv6WithoutVrfArrayOutput {
	return o.ApplyT(func(v LookupBfdResult) []GetBfdIpv6WithoutVrf { return v.Ipv6WithoutVrfs }).(GetBfdIpv6WithoutVrfArrayOutput)
}

func (o LookupBfdResultOutput) SlowTimers() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBfdResult) int { return v.SlowTimers }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBfdResultOutput{})
}
