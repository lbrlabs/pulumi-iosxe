// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupArp(ctx *pulumi.Context, args *LookupArpArgs, opts ...pulumi.InvokeOption) (*LookupArpResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupArpResult
	err := ctx.Invoke("iosxe:iosxe/getArp:getArp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getArp.
type LookupArpArgs struct {
	Device *string `pulumi:"device"`
}

// A collection of values returned by getArp.
type LookupArpResult struct {
	Device                          *string                  `pulumi:"device"`
	EntryLearn                      int                      `pulumi:"entryLearn"`
	Id                              string                   `pulumi:"id"`
	IncompleteEntries               int                      `pulumi:"incompleteEntries"`
	InspectionFilters               []GetArpInspectionFilter `pulumi:"inspectionFilters"`
	InspectionLogBufferEntries      int                      `pulumi:"inspectionLogBufferEntries"`
	InspectionLogBufferLogsEntries  int                      `pulumi:"inspectionLogBufferLogsEntries"`
	InspectionLogBufferLogsInterval int                      `pulumi:"inspectionLogBufferLogsInterval"`
	InspectionValidateAllowZeros    bool                     `pulumi:"inspectionValidateAllowZeros"`
	InspectionValidateDstMac        bool                     `pulumi:"inspectionValidateDstMac"`
	InspectionValidateIp            bool                     `pulumi:"inspectionValidateIp"`
	InspectionValidateSrcMac        bool                     `pulumi:"inspectionValidateSrcMac"`
	InspectionVlan                  string                   `pulumi:"inspectionVlan"`
	ProxyDisable                    bool                     `pulumi:"proxyDisable"`
}

func LookupArpOutput(ctx *pulumi.Context, args LookupArpOutputArgs, opts ...pulumi.InvokeOption) LookupArpResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupArpResult, error) {
			args := v.(LookupArpArgs)
			r, err := LookupArp(ctx, &args, opts...)
			var s LookupArpResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupArpResultOutput)
}

// A collection of arguments for invoking getArp.
type LookupArpOutputArgs struct {
	Device pulumi.StringPtrInput `pulumi:"device"`
}

func (LookupArpOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupArpArgs)(nil)).Elem()
}

// A collection of values returned by getArp.
type LookupArpResultOutput struct{ *pulumi.OutputState }

func (LookupArpResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupArpResult)(nil)).Elem()
}

func (o LookupArpResultOutput) ToLookupArpResultOutput() LookupArpResultOutput {
	return o
}

func (o LookupArpResultOutput) ToLookupArpResultOutputWithContext(ctx context.Context) LookupArpResultOutput {
	return o
}

func (o LookupArpResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupArpResult] {
	return pulumix.Output[LookupArpResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupArpResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArpResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

func (o LookupArpResultOutput) EntryLearn() pulumi.IntOutput {
	return o.ApplyT(func(v LookupArpResult) int { return v.EntryLearn }).(pulumi.IntOutput)
}

func (o LookupArpResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArpResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupArpResultOutput) IncompleteEntries() pulumi.IntOutput {
	return o.ApplyT(func(v LookupArpResult) int { return v.IncompleteEntries }).(pulumi.IntOutput)
}

func (o LookupArpResultOutput) InspectionFilters() GetArpInspectionFilterArrayOutput {
	return o.ApplyT(func(v LookupArpResult) []GetArpInspectionFilter { return v.InspectionFilters }).(GetArpInspectionFilterArrayOutput)
}

func (o LookupArpResultOutput) InspectionLogBufferEntries() pulumi.IntOutput {
	return o.ApplyT(func(v LookupArpResult) int { return v.InspectionLogBufferEntries }).(pulumi.IntOutput)
}

func (o LookupArpResultOutput) InspectionLogBufferLogsEntries() pulumi.IntOutput {
	return o.ApplyT(func(v LookupArpResult) int { return v.InspectionLogBufferLogsEntries }).(pulumi.IntOutput)
}

func (o LookupArpResultOutput) InspectionLogBufferLogsInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupArpResult) int { return v.InspectionLogBufferLogsInterval }).(pulumi.IntOutput)
}

func (o LookupArpResultOutput) InspectionValidateAllowZeros() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupArpResult) bool { return v.InspectionValidateAllowZeros }).(pulumi.BoolOutput)
}

func (o LookupArpResultOutput) InspectionValidateDstMac() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupArpResult) bool { return v.InspectionValidateDstMac }).(pulumi.BoolOutput)
}

func (o LookupArpResultOutput) InspectionValidateIp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupArpResult) bool { return v.InspectionValidateIp }).(pulumi.BoolOutput)
}

func (o LookupArpResultOutput) InspectionValidateSrcMac() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupArpResult) bool { return v.InspectionValidateSrcMac }).(pulumi.BoolOutput)
}

func (o LookupArpResultOutput) InspectionVlan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArpResult) string { return v.InspectionVlan }).(pulumi.StringOutput)
}

func (o LookupArpResultOutput) ProxyDisable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupArpResult) bool { return v.ProxyDisable }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupArpResultOutput{})
}
