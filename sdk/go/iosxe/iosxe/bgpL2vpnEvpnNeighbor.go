// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type BgpL2vpnEvpnNeighbor struct {
	pulumi.CustomResourceState

	// Enable the address family for this neighbor - Default value: `true`
	Activate pulumi.BoolOutput   `pulumi:"activate"`
	Asn      pulumi.StringOutput `pulumi:"asn"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrOutput `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	Ip     pulumi.StringOutput    `pulumi:"ip"`
	// Configure a neighbor as Route Reflector client
	RouteReflectorClient pulumi.BoolPtrOutput `pulumi:"routeReflectorClient"`
	// - Choices: `both`, `extended`, `standard`
	SendCommunity pulumi.StringPtrOutput `pulumi:"sendCommunity"`
}

// NewBgpL2vpnEvpnNeighbor registers a new resource with the given unique name, arguments, and options.
func NewBgpL2vpnEvpnNeighbor(ctx *pulumi.Context,
	name string, args *BgpL2vpnEvpnNeighborArgs, opts ...pulumi.ResourceOption) (*BgpL2vpnEvpnNeighbor, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Asn == nil {
		return nil, errors.New("invalid value for required argument 'Asn'")
	}
	if args.Ip == nil {
		return nil, errors.New("invalid value for required argument 'Ip'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BgpL2vpnEvpnNeighbor
	err := ctx.RegisterResource("iosxe:iosxe/bgpL2vpnEvpnNeighbor:BgpL2vpnEvpnNeighbor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBgpL2vpnEvpnNeighbor gets an existing BgpL2vpnEvpnNeighbor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBgpL2vpnEvpnNeighbor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BgpL2vpnEvpnNeighborState, opts ...pulumi.ResourceOption) (*BgpL2vpnEvpnNeighbor, error) {
	var resource BgpL2vpnEvpnNeighbor
	err := ctx.ReadResource("iosxe:iosxe/bgpL2vpnEvpnNeighbor:BgpL2vpnEvpnNeighbor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BgpL2vpnEvpnNeighbor resources.
type bgpL2vpnEvpnNeighborState struct {
	// Enable the address family for this neighbor - Default value: `true`
	Activate *bool   `pulumi:"activate"`
	Asn      *string `pulumi:"asn"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	Ip     *string `pulumi:"ip"`
	// Configure a neighbor as Route Reflector client
	RouteReflectorClient *bool `pulumi:"routeReflectorClient"`
	// - Choices: `both`, `extended`, `standard`
	SendCommunity *string `pulumi:"sendCommunity"`
}

type BgpL2vpnEvpnNeighborState struct {
	// Enable the address family for this neighbor - Default value: `true`
	Activate pulumi.BoolPtrInput
	Asn      pulumi.StringPtrInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	Ip     pulumi.StringPtrInput
	// Configure a neighbor as Route Reflector client
	RouteReflectorClient pulumi.BoolPtrInput
	// - Choices: `both`, `extended`, `standard`
	SendCommunity pulumi.StringPtrInput
}

func (BgpL2vpnEvpnNeighborState) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpL2vpnEvpnNeighborState)(nil)).Elem()
}

type bgpL2vpnEvpnNeighborArgs struct {
	// Enable the address family for this neighbor - Default value: `true`
	Activate *bool  `pulumi:"activate"`
	Asn      string `pulumi:"asn"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	Ip     string  `pulumi:"ip"`
	// Configure a neighbor as Route Reflector client
	RouteReflectorClient *bool `pulumi:"routeReflectorClient"`
	// - Choices: `both`, `extended`, `standard`
	SendCommunity *string `pulumi:"sendCommunity"`
}

// The set of arguments for constructing a BgpL2vpnEvpnNeighbor resource.
type BgpL2vpnEvpnNeighborArgs struct {
	// Enable the address family for this neighbor - Default value: `true`
	Activate pulumi.BoolPtrInput
	Asn      pulumi.StringInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	Ip     pulumi.StringInput
	// Configure a neighbor as Route Reflector client
	RouteReflectorClient pulumi.BoolPtrInput
	// - Choices: `both`, `extended`, `standard`
	SendCommunity pulumi.StringPtrInput
}

func (BgpL2vpnEvpnNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpL2vpnEvpnNeighborArgs)(nil)).Elem()
}

type BgpL2vpnEvpnNeighborInput interface {
	pulumi.Input

	ToBgpL2vpnEvpnNeighborOutput() BgpL2vpnEvpnNeighborOutput
	ToBgpL2vpnEvpnNeighborOutputWithContext(ctx context.Context) BgpL2vpnEvpnNeighborOutput
}

func (*BgpL2vpnEvpnNeighbor) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpL2vpnEvpnNeighbor)(nil)).Elem()
}

func (i *BgpL2vpnEvpnNeighbor) ToBgpL2vpnEvpnNeighborOutput() BgpL2vpnEvpnNeighborOutput {
	return i.ToBgpL2vpnEvpnNeighborOutputWithContext(context.Background())
}

func (i *BgpL2vpnEvpnNeighbor) ToBgpL2vpnEvpnNeighborOutputWithContext(ctx context.Context) BgpL2vpnEvpnNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpL2vpnEvpnNeighborOutput)
}

func (i *BgpL2vpnEvpnNeighbor) ToOutput(ctx context.Context) pulumix.Output[*BgpL2vpnEvpnNeighbor] {
	return pulumix.Output[*BgpL2vpnEvpnNeighbor]{
		OutputState: i.ToBgpL2vpnEvpnNeighborOutputWithContext(ctx).OutputState,
	}
}

// BgpL2vpnEvpnNeighborArrayInput is an input type that accepts BgpL2vpnEvpnNeighborArray and BgpL2vpnEvpnNeighborArrayOutput values.
// You can construct a concrete instance of `BgpL2vpnEvpnNeighborArrayInput` via:
//
//	BgpL2vpnEvpnNeighborArray{ BgpL2vpnEvpnNeighborArgs{...} }
type BgpL2vpnEvpnNeighborArrayInput interface {
	pulumi.Input

	ToBgpL2vpnEvpnNeighborArrayOutput() BgpL2vpnEvpnNeighborArrayOutput
	ToBgpL2vpnEvpnNeighborArrayOutputWithContext(context.Context) BgpL2vpnEvpnNeighborArrayOutput
}

type BgpL2vpnEvpnNeighborArray []BgpL2vpnEvpnNeighborInput

func (BgpL2vpnEvpnNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpL2vpnEvpnNeighbor)(nil)).Elem()
}

func (i BgpL2vpnEvpnNeighborArray) ToBgpL2vpnEvpnNeighborArrayOutput() BgpL2vpnEvpnNeighborArrayOutput {
	return i.ToBgpL2vpnEvpnNeighborArrayOutputWithContext(context.Background())
}

func (i BgpL2vpnEvpnNeighborArray) ToBgpL2vpnEvpnNeighborArrayOutputWithContext(ctx context.Context) BgpL2vpnEvpnNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpL2vpnEvpnNeighborArrayOutput)
}

func (i BgpL2vpnEvpnNeighborArray) ToOutput(ctx context.Context) pulumix.Output[[]*BgpL2vpnEvpnNeighbor] {
	return pulumix.Output[[]*BgpL2vpnEvpnNeighbor]{
		OutputState: i.ToBgpL2vpnEvpnNeighborArrayOutputWithContext(ctx).OutputState,
	}
}

// BgpL2vpnEvpnNeighborMapInput is an input type that accepts BgpL2vpnEvpnNeighborMap and BgpL2vpnEvpnNeighborMapOutput values.
// You can construct a concrete instance of `BgpL2vpnEvpnNeighborMapInput` via:
//
//	BgpL2vpnEvpnNeighborMap{ "key": BgpL2vpnEvpnNeighborArgs{...} }
type BgpL2vpnEvpnNeighborMapInput interface {
	pulumi.Input

	ToBgpL2vpnEvpnNeighborMapOutput() BgpL2vpnEvpnNeighborMapOutput
	ToBgpL2vpnEvpnNeighborMapOutputWithContext(context.Context) BgpL2vpnEvpnNeighborMapOutput
}

type BgpL2vpnEvpnNeighborMap map[string]BgpL2vpnEvpnNeighborInput

func (BgpL2vpnEvpnNeighborMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpL2vpnEvpnNeighbor)(nil)).Elem()
}

func (i BgpL2vpnEvpnNeighborMap) ToBgpL2vpnEvpnNeighborMapOutput() BgpL2vpnEvpnNeighborMapOutput {
	return i.ToBgpL2vpnEvpnNeighborMapOutputWithContext(context.Background())
}

func (i BgpL2vpnEvpnNeighborMap) ToBgpL2vpnEvpnNeighborMapOutputWithContext(ctx context.Context) BgpL2vpnEvpnNeighborMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpL2vpnEvpnNeighborMapOutput)
}

func (i BgpL2vpnEvpnNeighborMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpL2vpnEvpnNeighbor] {
	return pulumix.Output[map[string]*BgpL2vpnEvpnNeighbor]{
		OutputState: i.ToBgpL2vpnEvpnNeighborMapOutputWithContext(ctx).OutputState,
	}
}

type BgpL2vpnEvpnNeighborOutput struct{ *pulumi.OutputState }

func (BgpL2vpnEvpnNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpL2vpnEvpnNeighbor)(nil)).Elem()
}

func (o BgpL2vpnEvpnNeighborOutput) ToBgpL2vpnEvpnNeighborOutput() BgpL2vpnEvpnNeighborOutput {
	return o
}

func (o BgpL2vpnEvpnNeighborOutput) ToBgpL2vpnEvpnNeighborOutputWithContext(ctx context.Context) BgpL2vpnEvpnNeighborOutput {
	return o
}

func (o BgpL2vpnEvpnNeighborOutput) ToOutput(ctx context.Context) pulumix.Output[*BgpL2vpnEvpnNeighbor] {
	return pulumix.Output[*BgpL2vpnEvpnNeighbor]{
		OutputState: o.OutputState,
	}
}

// Enable the address family for this neighbor - Default value: `true`
func (o BgpL2vpnEvpnNeighborOutput) Activate() pulumi.BoolOutput {
	return o.ApplyT(func(v *BgpL2vpnEvpnNeighbor) pulumi.BoolOutput { return v.Activate }).(pulumi.BoolOutput)
}

func (o BgpL2vpnEvpnNeighborOutput) Asn() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpL2vpnEvpnNeighbor) pulumi.StringOutput { return v.Asn }).(pulumi.StringOutput)
}

// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
// Default value is `all`. - Choices: `all`, `attributes`
func (o BgpL2vpnEvpnNeighborOutput) DeleteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpL2vpnEvpnNeighbor) pulumi.StringPtrOutput { return v.DeleteMode }).(pulumi.StringPtrOutput)
}

// A device name from the provider configuration.
func (o BgpL2vpnEvpnNeighborOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpL2vpnEvpnNeighbor) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

func (o BgpL2vpnEvpnNeighborOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpL2vpnEvpnNeighbor) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

// Configure a neighbor as Route Reflector client
func (o BgpL2vpnEvpnNeighborOutput) RouteReflectorClient() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BgpL2vpnEvpnNeighbor) pulumi.BoolPtrOutput { return v.RouteReflectorClient }).(pulumi.BoolPtrOutput)
}

// - Choices: `both`, `extended`, `standard`
func (o BgpL2vpnEvpnNeighborOutput) SendCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpL2vpnEvpnNeighbor) pulumi.StringPtrOutput { return v.SendCommunity }).(pulumi.StringPtrOutput)
}

type BgpL2vpnEvpnNeighborArrayOutput struct{ *pulumi.OutputState }

func (BgpL2vpnEvpnNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpL2vpnEvpnNeighbor)(nil)).Elem()
}

func (o BgpL2vpnEvpnNeighborArrayOutput) ToBgpL2vpnEvpnNeighborArrayOutput() BgpL2vpnEvpnNeighborArrayOutput {
	return o
}

func (o BgpL2vpnEvpnNeighborArrayOutput) ToBgpL2vpnEvpnNeighborArrayOutputWithContext(ctx context.Context) BgpL2vpnEvpnNeighborArrayOutput {
	return o
}

func (o BgpL2vpnEvpnNeighborArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*BgpL2vpnEvpnNeighbor] {
	return pulumix.Output[[]*BgpL2vpnEvpnNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o BgpL2vpnEvpnNeighborArrayOutput) Index(i pulumi.IntInput) BgpL2vpnEvpnNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BgpL2vpnEvpnNeighbor {
		return vs[0].([]*BgpL2vpnEvpnNeighbor)[vs[1].(int)]
	}).(BgpL2vpnEvpnNeighborOutput)
}

type BgpL2vpnEvpnNeighborMapOutput struct{ *pulumi.OutputState }

func (BgpL2vpnEvpnNeighborMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpL2vpnEvpnNeighbor)(nil)).Elem()
}

func (o BgpL2vpnEvpnNeighborMapOutput) ToBgpL2vpnEvpnNeighborMapOutput() BgpL2vpnEvpnNeighborMapOutput {
	return o
}

func (o BgpL2vpnEvpnNeighborMapOutput) ToBgpL2vpnEvpnNeighborMapOutputWithContext(ctx context.Context) BgpL2vpnEvpnNeighborMapOutput {
	return o
}

func (o BgpL2vpnEvpnNeighborMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpL2vpnEvpnNeighbor] {
	return pulumix.Output[map[string]*BgpL2vpnEvpnNeighbor]{
		OutputState: o.OutputState,
	}
}

func (o BgpL2vpnEvpnNeighborMapOutput) MapIndex(k pulumi.StringInput) BgpL2vpnEvpnNeighborOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BgpL2vpnEvpnNeighbor {
		return vs[0].(map[string]*BgpL2vpnEvpnNeighbor)[vs[1].(string)]
	}).(BgpL2vpnEvpnNeighborOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BgpL2vpnEvpnNeighborInput)(nil)).Elem(), &BgpL2vpnEvpnNeighbor{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpL2vpnEvpnNeighborArrayInput)(nil)).Elem(), BgpL2vpnEvpnNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpL2vpnEvpnNeighborMapInput)(nil)).Elem(), BgpL2vpnEvpnNeighborMap{})
	pulumi.RegisterOutputType(BgpL2vpnEvpnNeighborOutput{})
	pulumi.RegisterOutputType(BgpL2vpnEvpnNeighborArrayOutput{})
	pulumi.RegisterOutputType(BgpL2vpnEvpnNeighborMapOutput{})
}
