// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource can manage the Interface OSPFv3 configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iosxe.NewInterfaceOspfv3(ctx, "example", &iosxe.InterfaceOspfv3Args{
//				Cost:                         pulumi.Int(1000),
//				NetworkTypeBroadcast:         pulumi.Bool(false),
//				NetworkTypeNonBroadcast:      pulumi.Bool(false),
//				NetworkTypePointToMultipoint: pulumi.Bool(false),
//				NetworkTypePointToPoint:      pulumi.Bool(true),
//				Type:                         pulumi.String("Loopback"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import iosxe:index/interfaceOspfv3:InterfaceOspfv3 example "Cisco-IOS-XE-native:native/interface/Loopback=1/Cisco-IOS-XE-ospfv3:ospfv3"
//
// ```
type InterfaceOspfv3 struct {
	pulumi.CustomResourceState

	// Static route cost value of the interface - Range: `1`-`65535`
	Cost pulumi.IntPtrOutput `pulumi:"cost"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrOutput `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	Name   pulumi.StringOutput    `pulumi:"name"`
	// Specify OSPF broadcast multi-access network
	NetworkTypeBroadcast pulumi.BoolPtrOutput `pulumi:"networkTypeBroadcast"`
	// Specify OSPF NBMA network
	NetworkTypeNonBroadcast pulumi.BoolPtrOutput `pulumi:"networkTypeNonBroadcast"`
	// Specify OSPF point-to-multipoint network
	NetworkTypePointToMultipoint pulumi.BoolPtrOutput `pulumi:"networkTypePointToMultipoint"`
	// Specify OSPF point-to-point network
	NetworkTypePointToPoint pulumi.BoolPtrOutput `pulumi:"networkTypePointToPoint"`
	// Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
	// `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
	// `Port-channel`
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewInterfaceOspfv3 registers a new resource with the given unique name, arguments, and options.
func NewInterfaceOspfv3(ctx *pulumi.Context,
	name string, args *InterfaceOspfv3Args, opts ...pulumi.ResourceOption) (*InterfaceOspfv3, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InterfaceOspfv3
	err := ctx.RegisterResource("iosxe:index/interfaceOspfv3:InterfaceOspfv3", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInterfaceOspfv3 gets an existing InterfaceOspfv3 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInterfaceOspfv3(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InterfaceOspfv3State, opts ...pulumi.ResourceOption) (*InterfaceOspfv3, error) {
	var resource InterfaceOspfv3
	err := ctx.ReadResource("iosxe:index/interfaceOspfv3:InterfaceOspfv3", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InterfaceOspfv3 resources.
type interfaceOspfv3State struct {
	// Static route cost value of the interface - Range: `1`-`65535`
	Cost *int `pulumi:"cost"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	Name   *string `pulumi:"name"`
	// Specify OSPF broadcast multi-access network
	NetworkTypeBroadcast *bool `pulumi:"networkTypeBroadcast"`
	// Specify OSPF NBMA network
	NetworkTypeNonBroadcast *bool `pulumi:"networkTypeNonBroadcast"`
	// Specify OSPF point-to-multipoint network
	NetworkTypePointToMultipoint *bool `pulumi:"networkTypePointToMultipoint"`
	// Specify OSPF point-to-point network
	NetworkTypePointToPoint *bool `pulumi:"networkTypePointToPoint"`
	// Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
	// `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
	// `Port-channel`
	Type *string `pulumi:"type"`
}

type InterfaceOspfv3State struct {
	// Static route cost value of the interface - Range: `1`-`65535`
	Cost pulumi.IntPtrInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	Name   pulumi.StringPtrInput
	// Specify OSPF broadcast multi-access network
	NetworkTypeBroadcast pulumi.BoolPtrInput
	// Specify OSPF NBMA network
	NetworkTypeNonBroadcast pulumi.BoolPtrInput
	// Specify OSPF point-to-multipoint network
	NetworkTypePointToMultipoint pulumi.BoolPtrInput
	// Specify OSPF point-to-point network
	NetworkTypePointToPoint pulumi.BoolPtrInput
	// Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
	// `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
	// `Port-channel`
	Type pulumi.StringPtrInput
}

func (InterfaceOspfv3State) ElementType() reflect.Type {
	return reflect.TypeOf((*interfaceOspfv3State)(nil)).Elem()
}

type interfaceOspfv3Args struct {
	// Static route cost value of the interface - Range: `1`-`65535`
	Cost *int `pulumi:"cost"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	Name   *string `pulumi:"name"`
	// Specify OSPF broadcast multi-access network
	NetworkTypeBroadcast *bool `pulumi:"networkTypeBroadcast"`
	// Specify OSPF NBMA network
	NetworkTypeNonBroadcast *bool `pulumi:"networkTypeNonBroadcast"`
	// Specify OSPF point-to-multipoint network
	NetworkTypePointToMultipoint *bool `pulumi:"networkTypePointToMultipoint"`
	// Specify OSPF point-to-point network
	NetworkTypePointToPoint *bool `pulumi:"networkTypePointToPoint"`
	// Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
	// `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
	// `Port-channel`
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a InterfaceOspfv3 resource.
type InterfaceOspfv3Args struct {
	// Static route cost value of the interface - Range: `1`-`65535`
	Cost pulumi.IntPtrInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	Name   pulumi.StringPtrInput
	// Specify OSPF broadcast multi-access network
	NetworkTypeBroadcast pulumi.BoolPtrInput
	// Specify OSPF NBMA network
	NetworkTypeNonBroadcast pulumi.BoolPtrInput
	// Specify OSPF point-to-multipoint network
	NetworkTypePointToMultipoint pulumi.BoolPtrInput
	// Specify OSPF point-to-point network
	NetworkTypePointToPoint pulumi.BoolPtrInput
	// Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
	// `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
	// `Port-channel`
	Type pulumi.StringInput
}

func (InterfaceOspfv3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*interfaceOspfv3Args)(nil)).Elem()
}

type InterfaceOspfv3Input interface {
	pulumi.Input

	ToInterfaceOspfv3Output() InterfaceOspfv3Output
	ToInterfaceOspfv3OutputWithContext(ctx context.Context) InterfaceOspfv3Output
}

func (*InterfaceOspfv3) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceOspfv3)(nil)).Elem()
}

func (i *InterfaceOspfv3) ToInterfaceOspfv3Output() InterfaceOspfv3Output {
	return i.ToInterfaceOspfv3OutputWithContext(context.Background())
}

func (i *InterfaceOspfv3) ToInterfaceOspfv3OutputWithContext(ctx context.Context) InterfaceOspfv3Output {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceOspfv3Output)
}

func (i *InterfaceOspfv3) ToOutput(ctx context.Context) pulumix.Output[*InterfaceOspfv3] {
	return pulumix.Output[*InterfaceOspfv3]{
		OutputState: i.ToInterfaceOspfv3OutputWithContext(ctx).OutputState,
	}
}

// InterfaceOspfv3ArrayInput is an input type that accepts InterfaceOspfv3Array and InterfaceOspfv3ArrayOutput values.
// You can construct a concrete instance of `InterfaceOspfv3ArrayInput` via:
//
//	InterfaceOspfv3Array{ InterfaceOspfv3Args{...} }
type InterfaceOspfv3ArrayInput interface {
	pulumi.Input

	ToInterfaceOspfv3ArrayOutput() InterfaceOspfv3ArrayOutput
	ToInterfaceOspfv3ArrayOutputWithContext(context.Context) InterfaceOspfv3ArrayOutput
}

type InterfaceOspfv3Array []InterfaceOspfv3Input

func (InterfaceOspfv3Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InterfaceOspfv3)(nil)).Elem()
}

func (i InterfaceOspfv3Array) ToInterfaceOspfv3ArrayOutput() InterfaceOspfv3ArrayOutput {
	return i.ToInterfaceOspfv3ArrayOutputWithContext(context.Background())
}

func (i InterfaceOspfv3Array) ToInterfaceOspfv3ArrayOutputWithContext(ctx context.Context) InterfaceOspfv3ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceOspfv3ArrayOutput)
}

func (i InterfaceOspfv3Array) ToOutput(ctx context.Context) pulumix.Output[[]*InterfaceOspfv3] {
	return pulumix.Output[[]*InterfaceOspfv3]{
		OutputState: i.ToInterfaceOspfv3ArrayOutputWithContext(ctx).OutputState,
	}
}

// InterfaceOspfv3MapInput is an input type that accepts InterfaceOspfv3Map and InterfaceOspfv3MapOutput values.
// You can construct a concrete instance of `InterfaceOspfv3MapInput` via:
//
//	InterfaceOspfv3Map{ "key": InterfaceOspfv3Args{...} }
type InterfaceOspfv3MapInput interface {
	pulumi.Input

	ToInterfaceOspfv3MapOutput() InterfaceOspfv3MapOutput
	ToInterfaceOspfv3MapOutputWithContext(context.Context) InterfaceOspfv3MapOutput
}

type InterfaceOspfv3Map map[string]InterfaceOspfv3Input

func (InterfaceOspfv3Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InterfaceOspfv3)(nil)).Elem()
}

func (i InterfaceOspfv3Map) ToInterfaceOspfv3MapOutput() InterfaceOspfv3MapOutput {
	return i.ToInterfaceOspfv3MapOutputWithContext(context.Background())
}

func (i InterfaceOspfv3Map) ToInterfaceOspfv3MapOutputWithContext(ctx context.Context) InterfaceOspfv3MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceOspfv3MapOutput)
}

func (i InterfaceOspfv3Map) ToOutput(ctx context.Context) pulumix.Output[map[string]*InterfaceOspfv3] {
	return pulumix.Output[map[string]*InterfaceOspfv3]{
		OutputState: i.ToInterfaceOspfv3MapOutputWithContext(ctx).OutputState,
	}
}

type InterfaceOspfv3Output struct{ *pulumi.OutputState }

func (InterfaceOspfv3Output) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceOspfv3)(nil)).Elem()
}

func (o InterfaceOspfv3Output) ToInterfaceOspfv3Output() InterfaceOspfv3Output {
	return o
}

func (o InterfaceOspfv3Output) ToInterfaceOspfv3OutputWithContext(ctx context.Context) InterfaceOspfv3Output {
	return o
}

func (o InterfaceOspfv3Output) ToOutput(ctx context.Context) pulumix.Output[*InterfaceOspfv3] {
	return pulumix.Output[*InterfaceOspfv3]{
		OutputState: o.OutputState,
	}
}

// Static route cost value of the interface - Range: `1`-`65535`
func (o InterfaceOspfv3Output) Cost() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceOspfv3) pulumi.IntPtrOutput { return v.Cost }).(pulumi.IntPtrOutput)
}

// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
// Default value is `all`. - Choices: `all`, `attributes`
func (o InterfaceOspfv3Output) DeleteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceOspfv3) pulumi.StringPtrOutput { return v.DeleteMode }).(pulumi.StringPtrOutput)
}

// A device name from the provider configuration.
func (o InterfaceOspfv3Output) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceOspfv3) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

func (o InterfaceOspfv3Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *InterfaceOspfv3) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specify OSPF broadcast multi-access network
func (o InterfaceOspfv3Output) NetworkTypeBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceOspfv3) pulumi.BoolPtrOutput { return v.NetworkTypeBroadcast }).(pulumi.BoolPtrOutput)
}

// Specify OSPF NBMA network
func (o InterfaceOspfv3Output) NetworkTypeNonBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceOspfv3) pulumi.BoolPtrOutput { return v.NetworkTypeNonBroadcast }).(pulumi.BoolPtrOutput)
}

// Specify OSPF point-to-multipoint network
func (o InterfaceOspfv3Output) NetworkTypePointToMultipoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceOspfv3) pulumi.BoolPtrOutput { return v.NetworkTypePointToMultipoint }).(pulumi.BoolPtrOutput)
}

// Specify OSPF point-to-point network
func (o InterfaceOspfv3Output) NetworkTypePointToPoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceOspfv3) pulumi.BoolPtrOutput { return v.NetworkTypePointToPoint }).(pulumi.BoolPtrOutput)
}

// Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
// `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
// `Port-channel`
func (o InterfaceOspfv3Output) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *InterfaceOspfv3) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type InterfaceOspfv3ArrayOutput struct{ *pulumi.OutputState }

func (InterfaceOspfv3ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InterfaceOspfv3)(nil)).Elem()
}

func (o InterfaceOspfv3ArrayOutput) ToInterfaceOspfv3ArrayOutput() InterfaceOspfv3ArrayOutput {
	return o
}

func (o InterfaceOspfv3ArrayOutput) ToInterfaceOspfv3ArrayOutputWithContext(ctx context.Context) InterfaceOspfv3ArrayOutput {
	return o
}

func (o InterfaceOspfv3ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*InterfaceOspfv3] {
	return pulumix.Output[[]*InterfaceOspfv3]{
		OutputState: o.OutputState,
	}
}

func (o InterfaceOspfv3ArrayOutput) Index(i pulumi.IntInput) InterfaceOspfv3Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InterfaceOspfv3 {
		return vs[0].([]*InterfaceOspfv3)[vs[1].(int)]
	}).(InterfaceOspfv3Output)
}

type InterfaceOspfv3MapOutput struct{ *pulumi.OutputState }

func (InterfaceOspfv3MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InterfaceOspfv3)(nil)).Elem()
}

func (o InterfaceOspfv3MapOutput) ToInterfaceOspfv3MapOutput() InterfaceOspfv3MapOutput {
	return o
}

func (o InterfaceOspfv3MapOutput) ToInterfaceOspfv3MapOutputWithContext(ctx context.Context) InterfaceOspfv3MapOutput {
	return o
}

func (o InterfaceOspfv3MapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*InterfaceOspfv3] {
	return pulumix.Output[map[string]*InterfaceOspfv3]{
		OutputState: o.OutputState,
	}
}

func (o InterfaceOspfv3MapOutput) MapIndex(k pulumi.StringInput) InterfaceOspfv3Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InterfaceOspfv3 {
		return vs[0].(map[string]*InterfaceOspfv3)[vs[1].(string)]
	}).(InterfaceOspfv3Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceOspfv3Input)(nil)).Elem(), &InterfaceOspfv3{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceOspfv3ArrayInput)(nil)).Elem(), InterfaceOspfv3Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceOspfv3MapInput)(nil)).Elem(), InterfaceOspfv3Map{})
	pulumi.RegisterOutputType(InterfaceOspfv3Output{})
	pulumi.RegisterOutputType(InterfaceOspfv3ArrayOutput{})
	pulumi.RegisterOutputType(InterfaceOspfv3MapOutput{})
}
