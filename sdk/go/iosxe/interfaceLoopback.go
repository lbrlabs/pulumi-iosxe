// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource can manage the Interface Loopback configuration.
//
// ## Import
//
// ```sh
//
//	$ pulumi import iosxe:index/interfaceLoopback:InterfaceLoopback example "Cisco-IOS-XE-native:native/interface/Loopback=100"
//
// ```
type InterfaceLoopback struct {
	pulumi.CustomResourceState

	// Set ARP cache timeout - Range: `0`-`2147483`
	ArpTimeout pulumi.IntPtrOutput `pulumi:"arpTimeout"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrOutput `pulumi:"deleteMode"`
	// Interface specific description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A device name from the provider configuration.
	Device          pulumi.StringPtrOutput `pulumi:"device"`
	IpAccessGroupIn pulumi.StringPtrOutput `pulumi:"ipAccessGroupIn"`
	// inbound packets
	IpAccessGroupInEnable pulumi.BoolPtrOutput   `pulumi:"ipAccessGroupInEnable"`
	IpAccessGroupOut      pulumi.StringPtrOutput `pulumi:"ipAccessGroupOut"`
	// outbound packets
	IpAccessGroupOutEnable pulumi.BoolPtrOutput `pulumi:"ipAccessGroupOutEnable"`
	// Enable proxy ARP
	IpProxyArp pulumi.BoolPtrOutput `pulumi:"ipProxyArp"`
	// Enable sending ICMP Redirect messages
	IpRedirects pulumi.BoolPtrOutput `pulumi:"ipRedirects"`
	// Enable sending ICMP Unreachable messages
	IpUnreachables  pulumi.BoolPtrOutput   `pulumi:"ipUnreachables"`
	Ipv4Address     pulumi.StringPtrOutput `pulumi:"ipv4Address"`
	Ipv4AddressMask pulumi.StringPtrOutput `pulumi:"ipv4AddressMask"`
	// Insert default route
	Ipv6AddressAutoconfigDefault pulumi.BoolPtrOutput `pulumi:"ipv6AddressAutoconfigDefault"`
	// Obtain IPv6 address from DHCP server
	Ipv6AddressDhcp pulumi.BoolPtrOutput                    `pulumi:"ipv6AddressDhcp"`
	Ipv6Addresses   InterfaceLoopbackIpv6AddressArrayOutput `pulumi:"ipv6Addresses"`
	// Enable IPv6 on interface
	Ipv6Enable             pulumi.BoolPtrOutput                             `pulumi:"ipv6Enable"`
	Ipv6LinkLocalAddresses InterfaceLoopbackIpv6LinkLocalAddressArrayOutput `pulumi:"ipv6LinkLocalAddresses"`
	// Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`
	Ipv6Mtu pulumi.IntPtrOutput `pulumi:"ipv6Mtu"`
	// Suppress all IPv6 RA
	Ipv6NdRaSuppressAll pulumi.BoolPtrOutput `pulumi:"ipv6NdRaSuppressAll"`
	// - Range: `0`-`2147483647`
	Name pulumi.IntOutput `pulumi:"name"`
	// Shutdown the selected interface
	Shutdown pulumi.BoolPtrOutput `pulumi:"shutdown"`
	// Configure forwarding table
	VrfForwarding pulumi.StringPtrOutput `pulumi:"vrfForwarding"`
}

// NewInterfaceLoopback registers a new resource with the given unique name, arguments, and options.
func NewInterfaceLoopback(ctx *pulumi.Context,
	name string, args *InterfaceLoopbackArgs, opts ...pulumi.ResourceOption) (*InterfaceLoopback, error) {
	if args == nil {
		args = &InterfaceLoopbackArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InterfaceLoopback
	err := ctx.RegisterResource("iosxe:index/interfaceLoopback:InterfaceLoopback", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInterfaceLoopback gets an existing InterfaceLoopback resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInterfaceLoopback(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InterfaceLoopbackState, opts ...pulumi.ResourceOption) (*InterfaceLoopback, error) {
	var resource InterfaceLoopback
	err := ctx.ReadResource("iosxe:index/interfaceLoopback:InterfaceLoopback", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InterfaceLoopback resources.
type interfaceLoopbackState struct {
	// Set ARP cache timeout - Range: `0`-`2147483`
	ArpTimeout *int `pulumi:"arpTimeout"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// Interface specific description
	Description *string `pulumi:"description"`
	// A device name from the provider configuration.
	Device          *string `pulumi:"device"`
	IpAccessGroupIn *string `pulumi:"ipAccessGroupIn"`
	// inbound packets
	IpAccessGroupInEnable *bool   `pulumi:"ipAccessGroupInEnable"`
	IpAccessGroupOut      *string `pulumi:"ipAccessGroupOut"`
	// outbound packets
	IpAccessGroupOutEnable *bool `pulumi:"ipAccessGroupOutEnable"`
	// Enable proxy ARP
	IpProxyArp *bool `pulumi:"ipProxyArp"`
	// Enable sending ICMP Redirect messages
	IpRedirects *bool `pulumi:"ipRedirects"`
	// Enable sending ICMP Unreachable messages
	IpUnreachables  *bool   `pulumi:"ipUnreachables"`
	Ipv4Address     *string `pulumi:"ipv4Address"`
	Ipv4AddressMask *string `pulumi:"ipv4AddressMask"`
	// Insert default route
	Ipv6AddressAutoconfigDefault *bool `pulumi:"ipv6AddressAutoconfigDefault"`
	// Obtain IPv6 address from DHCP server
	Ipv6AddressDhcp *bool                          `pulumi:"ipv6AddressDhcp"`
	Ipv6Addresses   []InterfaceLoopbackIpv6Address `pulumi:"ipv6Addresses"`
	// Enable IPv6 on interface
	Ipv6Enable             *bool                                   `pulumi:"ipv6Enable"`
	Ipv6LinkLocalAddresses []InterfaceLoopbackIpv6LinkLocalAddress `pulumi:"ipv6LinkLocalAddresses"`
	// Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`
	Ipv6Mtu *int `pulumi:"ipv6Mtu"`
	// Suppress all IPv6 RA
	Ipv6NdRaSuppressAll *bool `pulumi:"ipv6NdRaSuppressAll"`
	// - Range: `0`-`2147483647`
	Name *int `pulumi:"name"`
	// Shutdown the selected interface
	Shutdown *bool `pulumi:"shutdown"`
	// Configure forwarding table
	VrfForwarding *string `pulumi:"vrfForwarding"`
}

type InterfaceLoopbackState struct {
	// Set ARP cache timeout - Range: `0`-`2147483`
	ArpTimeout pulumi.IntPtrInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// Interface specific description
	Description pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device          pulumi.StringPtrInput
	IpAccessGroupIn pulumi.StringPtrInput
	// inbound packets
	IpAccessGroupInEnable pulumi.BoolPtrInput
	IpAccessGroupOut      pulumi.StringPtrInput
	// outbound packets
	IpAccessGroupOutEnable pulumi.BoolPtrInput
	// Enable proxy ARP
	IpProxyArp pulumi.BoolPtrInput
	// Enable sending ICMP Redirect messages
	IpRedirects pulumi.BoolPtrInput
	// Enable sending ICMP Unreachable messages
	IpUnreachables  pulumi.BoolPtrInput
	Ipv4Address     pulumi.StringPtrInput
	Ipv4AddressMask pulumi.StringPtrInput
	// Insert default route
	Ipv6AddressAutoconfigDefault pulumi.BoolPtrInput
	// Obtain IPv6 address from DHCP server
	Ipv6AddressDhcp pulumi.BoolPtrInput
	Ipv6Addresses   InterfaceLoopbackIpv6AddressArrayInput
	// Enable IPv6 on interface
	Ipv6Enable             pulumi.BoolPtrInput
	Ipv6LinkLocalAddresses InterfaceLoopbackIpv6LinkLocalAddressArrayInput
	// Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`
	Ipv6Mtu pulumi.IntPtrInput
	// Suppress all IPv6 RA
	Ipv6NdRaSuppressAll pulumi.BoolPtrInput
	// - Range: `0`-`2147483647`
	Name pulumi.IntPtrInput
	// Shutdown the selected interface
	Shutdown pulumi.BoolPtrInput
	// Configure forwarding table
	VrfForwarding pulumi.StringPtrInput
}

func (InterfaceLoopbackState) ElementType() reflect.Type {
	return reflect.TypeOf((*interfaceLoopbackState)(nil)).Elem()
}

type interfaceLoopbackArgs struct {
	// Set ARP cache timeout - Range: `0`-`2147483`
	ArpTimeout *int `pulumi:"arpTimeout"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// Interface specific description
	Description *string `pulumi:"description"`
	// A device name from the provider configuration.
	Device          *string `pulumi:"device"`
	IpAccessGroupIn *string `pulumi:"ipAccessGroupIn"`
	// inbound packets
	IpAccessGroupInEnable *bool   `pulumi:"ipAccessGroupInEnable"`
	IpAccessGroupOut      *string `pulumi:"ipAccessGroupOut"`
	// outbound packets
	IpAccessGroupOutEnable *bool `pulumi:"ipAccessGroupOutEnable"`
	// Enable proxy ARP
	IpProxyArp *bool `pulumi:"ipProxyArp"`
	// Enable sending ICMP Redirect messages
	IpRedirects *bool `pulumi:"ipRedirects"`
	// Enable sending ICMP Unreachable messages
	IpUnreachables  *bool   `pulumi:"ipUnreachables"`
	Ipv4Address     *string `pulumi:"ipv4Address"`
	Ipv4AddressMask *string `pulumi:"ipv4AddressMask"`
	// Insert default route
	Ipv6AddressAutoconfigDefault *bool `pulumi:"ipv6AddressAutoconfigDefault"`
	// Obtain IPv6 address from DHCP server
	Ipv6AddressDhcp *bool                          `pulumi:"ipv6AddressDhcp"`
	Ipv6Addresses   []InterfaceLoopbackIpv6Address `pulumi:"ipv6Addresses"`
	// Enable IPv6 on interface
	Ipv6Enable             *bool                                   `pulumi:"ipv6Enable"`
	Ipv6LinkLocalAddresses []InterfaceLoopbackIpv6LinkLocalAddress `pulumi:"ipv6LinkLocalAddresses"`
	// Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`
	Ipv6Mtu *int `pulumi:"ipv6Mtu"`
	// Suppress all IPv6 RA
	Ipv6NdRaSuppressAll *bool `pulumi:"ipv6NdRaSuppressAll"`
	// - Range: `0`-`2147483647`
	Name *int `pulumi:"name"`
	// Shutdown the selected interface
	Shutdown *bool `pulumi:"shutdown"`
	// Configure forwarding table
	VrfForwarding *string `pulumi:"vrfForwarding"`
}

// The set of arguments for constructing a InterfaceLoopback resource.
type InterfaceLoopbackArgs struct {
	// Set ARP cache timeout - Range: `0`-`2147483`
	ArpTimeout pulumi.IntPtrInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// Interface specific description
	Description pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device          pulumi.StringPtrInput
	IpAccessGroupIn pulumi.StringPtrInput
	// inbound packets
	IpAccessGroupInEnable pulumi.BoolPtrInput
	IpAccessGroupOut      pulumi.StringPtrInput
	// outbound packets
	IpAccessGroupOutEnable pulumi.BoolPtrInput
	// Enable proxy ARP
	IpProxyArp pulumi.BoolPtrInput
	// Enable sending ICMP Redirect messages
	IpRedirects pulumi.BoolPtrInput
	// Enable sending ICMP Unreachable messages
	IpUnreachables  pulumi.BoolPtrInput
	Ipv4Address     pulumi.StringPtrInput
	Ipv4AddressMask pulumi.StringPtrInput
	// Insert default route
	Ipv6AddressAutoconfigDefault pulumi.BoolPtrInput
	// Obtain IPv6 address from DHCP server
	Ipv6AddressDhcp pulumi.BoolPtrInput
	Ipv6Addresses   InterfaceLoopbackIpv6AddressArrayInput
	// Enable IPv6 on interface
	Ipv6Enable             pulumi.BoolPtrInput
	Ipv6LinkLocalAddresses InterfaceLoopbackIpv6LinkLocalAddressArrayInput
	// Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`
	Ipv6Mtu pulumi.IntPtrInput
	// Suppress all IPv6 RA
	Ipv6NdRaSuppressAll pulumi.BoolPtrInput
	// - Range: `0`-`2147483647`
	Name pulumi.IntPtrInput
	// Shutdown the selected interface
	Shutdown pulumi.BoolPtrInput
	// Configure forwarding table
	VrfForwarding pulumi.StringPtrInput
}

func (InterfaceLoopbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*interfaceLoopbackArgs)(nil)).Elem()
}

type InterfaceLoopbackInput interface {
	pulumi.Input

	ToInterfaceLoopbackOutput() InterfaceLoopbackOutput
	ToInterfaceLoopbackOutputWithContext(ctx context.Context) InterfaceLoopbackOutput
}

func (*InterfaceLoopback) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceLoopback)(nil)).Elem()
}

func (i *InterfaceLoopback) ToInterfaceLoopbackOutput() InterfaceLoopbackOutput {
	return i.ToInterfaceLoopbackOutputWithContext(context.Background())
}

func (i *InterfaceLoopback) ToInterfaceLoopbackOutputWithContext(ctx context.Context) InterfaceLoopbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceLoopbackOutput)
}

func (i *InterfaceLoopback) ToOutput(ctx context.Context) pulumix.Output[*InterfaceLoopback] {
	return pulumix.Output[*InterfaceLoopback]{
		OutputState: i.ToInterfaceLoopbackOutputWithContext(ctx).OutputState,
	}
}

// InterfaceLoopbackArrayInput is an input type that accepts InterfaceLoopbackArray and InterfaceLoopbackArrayOutput values.
// You can construct a concrete instance of `InterfaceLoopbackArrayInput` via:
//
//	InterfaceLoopbackArray{ InterfaceLoopbackArgs{...} }
type InterfaceLoopbackArrayInput interface {
	pulumi.Input

	ToInterfaceLoopbackArrayOutput() InterfaceLoopbackArrayOutput
	ToInterfaceLoopbackArrayOutputWithContext(context.Context) InterfaceLoopbackArrayOutput
}

type InterfaceLoopbackArray []InterfaceLoopbackInput

func (InterfaceLoopbackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InterfaceLoopback)(nil)).Elem()
}

func (i InterfaceLoopbackArray) ToInterfaceLoopbackArrayOutput() InterfaceLoopbackArrayOutput {
	return i.ToInterfaceLoopbackArrayOutputWithContext(context.Background())
}

func (i InterfaceLoopbackArray) ToInterfaceLoopbackArrayOutputWithContext(ctx context.Context) InterfaceLoopbackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceLoopbackArrayOutput)
}

func (i InterfaceLoopbackArray) ToOutput(ctx context.Context) pulumix.Output[[]*InterfaceLoopback] {
	return pulumix.Output[[]*InterfaceLoopback]{
		OutputState: i.ToInterfaceLoopbackArrayOutputWithContext(ctx).OutputState,
	}
}

// InterfaceLoopbackMapInput is an input type that accepts InterfaceLoopbackMap and InterfaceLoopbackMapOutput values.
// You can construct a concrete instance of `InterfaceLoopbackMapInput` via:
//
//	InterfaceLoopbackMap{ "key": InterfaceLoopbackArgs{...} }
type InterfaceLoopbackMapInput interface {
	pulumi.Input

	ToInterfaceLoopbackMapOutput() InterfaceLoopbackMapOutput
	ToInterfaceLoopbackMapOutputWithContext(context.Context) InterfaceLoopbackMapOutput
}

type InterfaceLoopbackMap map[string]InterfaceLoopbackInput

func (InterfaceLoopbackMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InterfaceLoopback)(nil)).Elem()
}

func (i InterfaceLoopbackMap) ToInterfaceLoopbackMapOutput() InterfaceLoopbackMapOutput {
	return i.ToInterfaceLoopbackMapOutputWithContext(context.Background())
}

func (i InterfaceLoopbackMap) ToInterfaceLoopbackMapOutputWithContext(ctx context.Context) InterfaceLoopbackMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceLoopbackMapOutput)
}

func (i InterfaceLoopbackMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*InterfaceLoopback] {
	return pulumix.Output[map[string]*InterfaceLoopback]{
		OutputState: i.ToInterfaceLoopbackMapOutputWithContext(ctx).OutputState,
	}
}

type InterfaceLoopbackOutput struct{ *pulumi.OutputState }

func (InterfaceLoopbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterfaceLoopback)(nil)).Elem()
}

func (o InterfaceLoopbackOutput) ToInterfaceLoopbackOutput() InterfaceLoopbackOutput {
	return o
}

func (o InterfaceLoopbackOutput) ToInterfaceLoopbackOutputWithContext(ctx context.Context) InterfaceLoopbackOutput {
	return o
}

func (o InterfaceLoopbackOutput) ToOutput(ctx context.Context) pulumix.Output[*InterfaceLoopback] {
	return pulumix.Output[*InterfaceLoopback]{
		OutputState: o.OutputState,
	}
}

// Set ARP cache timeout - Range: `0`-`2147483`
func (o InterfaceLoopbackOutput) ArpTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.IntPtrOutput { return v.ArpTimeout }).(pulumi.IntPtrOutput)
}

// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
// Default value is `all`. - Choices: `all`, `attributes`
func (o InterfaceLoopbackOutput) DeleteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.StringPtrOutput { return v.DeleteMode }).(pulumi.StringPtrOutput)
}

// Interface specific description
func (o InterfaceLoopbackOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A device name from the provider configuration.
func (o InterfaceLoopbackOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

func (o InterfaceLoopbackOutput) IpAccessGroupIn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.StringPtrOutput { return v.IpAccessGroupIn }).(pulumi.StringPtrOutput)
}

// inbound packets
func (o InterfaceLoopbackOutput) IpAccessGroupInEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.BoolPtrOutput { return v.IpAccessGroupInEnable }).(pulumi.BoolPtrOutput)
}

func (o InterfaceLoopbackOutput) IpAccessGroupOut() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.StringPtrOutput { return v.IpAccessGroupOut }).(pulumi.StringPtrOutput)
}

// outbound packets
func (o InterfaceLoopbackOutput) IpAccessGroupOutEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.BoolPtrOutput { return v.IpAccessGroupOutEnable }).(pulumi.BoolPtrOutput)
}

// Enable proxy ARP
func (o InterfaceLoopbackOutput) IpProxyArp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.BoolPtrOutput { return v.IpProxyArp }).(pulumi.BoolPtrOutput)
}

// Enable sending ICMP Redirect messages
func (o InterfaceLoopbackOutput) IpRedirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.BoolPtrOutput { return v.IpRedirects }).(pulumi.BoolPtrOutput)
}

// Enable sending ICMP Unreachable messages
func (o InterfaceLoopbackOutput) IpUnreachables() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.BoolPtrOutput { return v.IpUnreachables }).(pulumi.BoolPtrOutput)
}

func (o InterfaceLoopbackOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.StringPtrOutput { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

func (o InterfaceLoopbackOutput) Ipv4AddressMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.StringPtrOutput { return v.Ipv4AddressMask }).(pulumi.StringPtrOutput)
}

// Insert default route
func (o InterfaceLoopbackOutput) Ipv6AddressAutoconfigDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.BoolPtrOutput { return v.Ipv6AddressAutoconfigDefault }).(pulumi.BoolPtrOutput)
}

// Obtain IPv6 address from DHCP server
func (o InterfaceLoopbackOutput) Ipv6AddressDhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.BoolPtrOutput { return v.Ipv6AddressDhcp }).(pulumi.BoolPtrOutput)
}

func (o InterfaceLoopbackOutput) Ipv6Addresses() InterfaceLoopbackIpv6AddressArrayOutput {
	return o.ApplyT(func(v *InterfaceLoopback) InterfaceLoopbackIpv6AddressArrayOutput { return v.Ipv6Addresses }).(InterfaceLoopbackIpv6AddressArrayOutput)
}

// Enable IPv6 on interface
func (o InterfaceLoopbackOutput) Ipv6Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.BoolPtrOutput { return v.Ipv6Enable }).(pulumi.BoolPtrOutput)
}

func (o InterfaceLoopbackOutput) Ipv6LinkLocalAddresses() InterfaceLoopbackIpv6LinkLocalAddressArrayOutput {
	return o.ApplyT(func(v *InterfaceLoopback) InterfaceLoopbackIpv6LinkLocalAddressArrayOutput {
		return v.Ipv6LinkLocalAddresses
	}).(InterfaceLoopbackIpv6LinkLocalAddressArrayOutput)
}

// Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`
func (o InterfaceLoopbackOutput) Ipv6Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.IntPtrOutput { return v.Ipv6Mtu }).(pulumi.IntPtrOutput)
}

// Suppress all IPv6 RA
func (o InterfaceLoopbackOutput) Ipv6NdRaSuppressAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.BoolPtrOutput { return v.Ipv6NdRaSuppressAll }).(pulumi.BoolPtrOutput)
}

// - Range: `0`-`2147483647`
func (o InterfaceLoopbackOutput) Name() pulumi.IntOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.IntOutput { return v.Name }).(pulumi.IntOutput)
}

// Shutdown the selected interface
func (o InterfaceLoopbackOutput) Shutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.BoolPtrOutput { return v.Shutdown }).(pulumi.BoolPtrOutput)
}

// Configure forwarding table
func (o InterfaceLoopbackOutput) VrfForwarding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InterfaceLoopback) pulumi.StringPtrOutput { return v.VrfForwarding }).(pulumi.StringPtrOutput)
}

type InterfaceLoopbackArrayOutput struct{ *pulumi.OutputState }

func (InterfaceLoopbackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InterfaceLoopback)(nil)).Elem()
}

func (o InterfaceLoopbackArrayOutput) ToInterfaceLoopbackArrayOutput() InterfaceLoopbackArrayOutput {
	return o
}

func (o InterfaceLoopbackArrayOutput) ToInterfaceLoopbackArrayOutputWithContext(ctx context.Context) InterfaceLoopbackArrayOutput {
	return o
}

func (o InterfaceLoopbackArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*InterfaceLoopback] {
	return pulumix.Output[[]*InterfaceLoopback]{
		OutputState: o.OutputState,
	}
}

func (o InterfaceLoopbackArrayOutput) Index(i pulumi.IntInput) InterfaceLoopbackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InterfaceLoopback {
		return vs[0].([]*InterfaceLoopback)[vs[1].(int)]
	}).(InterfaceLoopbackOutput)
}

type InterfaceLoopbackMapOutput struct{ *pulumi.OutputState }

func (InterfaceLoopbackMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InterfaceLoopback)(nil)).Elem()
}

func (o InterfaceLoopbackMapOutput) ToInterfaceLoopbackMapOutput() InterfaceLoopbackMapOutput {
	return o
}

func (o InterfaceLoopbackMapOutput) ToInterfaceLoopbackMapOutputWithContext(ctx context.Context) InterfaceLoopbackMapOutput {
	return o
}

func (o InterfaceLoopbackMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*InterfaceLoopback] {
	return pulumix.Output[map[string]*InterfaceLoopback]{
		OutputState: o.OutputState,
	}
}

func (o InterfaceLoopbackMapOutput) MapIndex(k pulumi.StringInput) InterfaceLoopbackOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InterfaceLoopback {
		return vs[0].(map[string]*InterfaceLoopback)[vs[1].(string)]
	}).(InterfaceLoopbackOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceLoopbackInput)(nil)).Elem(), &InterfaceLoopback{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceLoopbackArrayInput)(nil)).Elem(), InterfaceLoopbackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterfaceLoopbackMapInput)(nil)).Elem(), InterfaceLoopbackMap{})
	pulumi.RegisterOutputType(InterfaceLoopbackOutput{})
	pulumi.RegisterOutputType(InterfaceLoopbackArrayOutput{})
	pulumi.RegisterOutputType(InterfaceLoopbackMapOutput{})
}
