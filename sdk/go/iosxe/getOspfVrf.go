// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can read the OSPF VRF configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iosxe.LookupOspfVrf(ctx, &iosxe.LookupOspfVrfArgs{
//				ProcessId: 2,
//				Vrf:       "VRF1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupOspfVrf(ctx *pulumi.Context, args *LookupOspfVrfArgs, opts ...pulumi.InvokeOption) (*LookupOspfVrfResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOspfVrfResult
	err := ctx.Invoke("iosxe:index/getOspfVrf:getOspfVrf", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOspfVrf.
type LookupOspfVrfArgs struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Process ID
	ProcessId int `pulumi:"processId"`
	// VPN Routing/Forwarding Instance
	Vrf string `pulumi:"vrf"`
}

// A collection of values returned by getOspfVrf.
type LookupOspfVrfResult struct {
	// OSPF area parameters
	Areas []GetOspfVrfArea `pulumi:"areas"`
	// Enable BFD on all interfaces
	BfdAllInterfaces bool `pulumi:"bfdAllInterfaces"`
	// Distribute a default route
	DefaultInformationOriginate bool `pulumi:"defaultInformationOriginate"`
	// Always advertise default route
	DefaultInformationOriginateAlways bool `pulumi:"defaultInformationOriginateAlways"`
	// Set metric of redistributed routes
	DefaultMetric int `pulumi:"defaultMetric"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Administrative distance
	Distance int `pulumi:"distance"`
	// OSPF domain-tag
	DomainTag int `pulumi:"domainTag"`
	// The path of the retrieved object.
	Id string `pulumi:"id"`
	// Configure LDP automatic configuration
	MplsLdpAutoconfig bool `pulumi:"mplsLdpAutoconfig"`
	// Configure LDP-IGP Synchronization
	MplsLdpSync bool `pulumi:"mplsLdpSync"`
	// Specify a neighbor router
	Neighbors []GetOspfVrfNeighbor `pulumi:"neighbors"`
	// Enable routing on an IP network
	Networks []GetOspfVrfNetwork `pulumi:"networks"`
	// Suppress routing updates on all interfaces
	PassiveInterfaceDefault bool `pulumi:"passiveInterfaceDefault"`
	// OSPF topology priority
	Priority int `pulumi:"priority"`
	// Process ID
	ProcessId int `pulumi:"processId"`
	// Override configured router identifier (peers will reset)
	RouterId string `pulumi:"routerId"`
	// Shutdown the OSPF protocol under the current instance
	Shutdown bool `pulumi:"shutdown"`
	// Configure IP address summaries
	SummaryAddresses []GetOspfVrfSummaryAddress `pulumi:"summaryAddresses"`
	// VPN Routing/Forwarding Instance
	Vrf string `pulumi:"vrf"`
}

func LookupOspfVrfOutput(ctx *pulumi.Context, args LookupOspfVrfOutputArgs, opts ...pulumi.InvokeOption) LookupOspfVrfResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOspfVrfResult, error) {
			args := v.(LookupOspfVrfArgs)
			r, err := LookupOspfVrf(ctx, &args, opts...)
			var s LookupOspfVrfResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOspfVrfResultOutput)
}

// A collection of arguments for invoking getOspfVrf.
type LookupOspfVrfOutputArgs struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput `pulumi:"device"`
	// Process ID
	ProcessId pulumi.IntInput `pulumi:"processId"`
	// VPN Routing/Forwarding Instance
	Vrf pulumi.StringInput `pulumi:"vrf"`
}

func (LookupOspfVrfOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOspfVrfArgs)(nil)).Elem()
}

// A collection of values returned by getOspfVrf.
type LookupOspfVrfResultOutput struct{ *pulumi.OutputState }

func (LookupOspfVrfResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOspfVrfResult)(nil)).Elem()
}

func (o LookupOspfVrfResultOutput) ToLookupOspfVrfResultOutput() LookupOspfVrfResultOutput {
	return o
}

func (o LookupOspfVrfResultOutput) ToLookupOspfVrfResultOutputWithContext(ctx context.Context) LookupOspfVrfResultOutput {
	return o
}

func (o LookupOspfVrfResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupOspfVrfResult] {
	return pulumix.Output[LookupOspfVrfResult]{
		OutputState: o.OutputState,
	}
}

// OSPF area parameters
func (o LookupOspfVrfResultOutput) Areas() GetOspfVrfAreaArrayOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) []GetOspfVrfArea { return v.Areas }).(GetOspfVrfAreaArrayOutput)
}

// Enable BFD on all interfaces
func (o LookupOspfVrfResultOutput) BfdAllInterfaces() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) bool { return v.BfdAllInterfaces }).(pulumi.BoolOutput)
}

// Distribute a default route
func (o LookupOspfVrfResultOutput) DefaultInformationOriginate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) bool { return v.DefaultInformationOriginate }).(pulumi.BoolOutput)
}

// Always advertise default route
func (o LookupOspfVrfResultOutput) DefaultInformationOriginateAlways() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) bool { return v.DefaultInformationOriginateAlways }).(pulumi.BoolOutput)
}

// Set metric of redistributed routes
func (o LookupOspfVrfResultOutput) DefaultMetric() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) int { return v.DefaultMetric }).(pulumi.IntOutput)
}

// A device name from the provider configuration.
func (o LookupOspfVrfResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// Administrative distance
func (o LookupOspfVrfResultOutput) Distance() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) int { return v.Distance }).(pulumi.IntOutput)
}

// OSPF domain-tag
func (o LookupOspfVrfResultOutput) DomainTag() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) int { return v.DomainTag }).(pulumi.IntOutput)
}

// The path of the retrieved object.
func (o LookupOspfVrfResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) string { return v.Id }).(pulumi.StringOutput)
}

// Configure LDP automatic configuration
func (o LookupOspfVrfResultOutput) MplsLdpAutoconfig() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) bool { return v.MplsLdpAutoconfig }).(pulumi.BoolOutput)
}

// Configure LDP-IGP Synchronization
func (o LookupOspfVrfResultOutput) MplsLdpSync() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) bool { return v.MplsLdpSync }).(pulumi.BoolOutput)
}

// Specify a neighbor router
func (o LookupOspfVrfResultOutput) Neighbors() GetOspfVrfNeighborArrayOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) []GetOspfVrfNeighbor { return v.Neighbors }).(GetOspfVrfNeighborArrayOutput)
}

// Enable routing on an IP network
func (o LookupOspfVrfResultOutput) Networks() GetOspfVrfNetworkArrayOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) []GetOspfVrfNetwork { return v.Networks }).(GetOspfVrfNetworkArrayOutput)
}

// Suppress routing updates on all interfaces
func (o LookupOspfVrfResultOutput) PassiveInterfaceDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) bool { return v.PassiveInterfaceDefault }).(pulumi.BoolOutput)
}

// OSPF topology priority
func (o LookupOspfVrfResultOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) int { return v.Priority }).(pulumi.IntOutput)
}

// Process ID
func (o LookupOspfVrfResultOutput) ProcessId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) int { return v.ProcessId }).(pulumi.IntOutput)
}

// Override configured router identifier (peers will reset)
func (o LookupOspfVrfResultOutput) RouterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) string { return v.RouterId }).(pulumi.StringOutput)
}

// Shutdown the OSPF protocol under the current instance
func (o LookupOspfVrfResultOutput) Shutdown() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) bool { return v.Shutdown }).(pulumi.BoolOutput)
}

// Configure IP address summaries
func (o LookupOspfVrfResultOutput) SummaryAddresses() GetOspfVrfSummaryAddressArrayOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) []GetOspfVrfSummaryAddress { return v.SummaryAddresses }).(GetOspfVrfSummaryAddressArrayOutput)
}

// VPN Routing/Forwarding Instance
func (o LookupOspfVrfResultOutput) Vrf() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOspfVrfResult) string { return v.Vrf }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOspfVrfResultOutput{})
}
