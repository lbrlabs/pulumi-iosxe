// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource can manage the Service Template configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iosxe.NewServiceTemplate(ctx, "example", &iosxe.ServiceTemplateArgs{
//				AbsoluteTimer: pulumi.Int(45),
//				AccessGroups: iosxe.ServiceTemplateAccessGroupArray{
//					&iosxe.ServiceTemplateAccessGroupArgs{
//						Name: pulumi.String("ag1"),
//					},
//				},
//				Description:          pulumi.String("service_template_desc"),
//				DnsAclPreauth:        pulumi.String("dns_acl_name"),
//				IanctivityTimer:      pulumi.Int(25),
//				InactivityTimerProbe: pulumi.Bool(false),
//				InterfaceTemplates: iosxe.ServiceTemplateInterfaceTemplateArray{
//					&iosxe.ServiceTemplateInterfaceTemplateArgs{
//						Name: pulumi.String("template1"),
//					},
//				},
//				LinksecPolicy:           pulumi.String("must-secure"),
//				RedirectAppendClientMac: pulumi.String("00:01:00:01:00:01"),
//				RedirectAppendSwitchMac: pulumi.String("00:01:00:01:00:02"),
//				RedirectUrl:             pulumi.String("valid_url"),
//				RedirectUrlMatchAcl:     pulumi.String("acl_name"),
//				RedirectUrlMatchAction:  pulumi.String("redirect-on-no-match"),
//				ServicePolicyQosInput:   pulumi.String("input_qos"),
//				ServicePolicyQosOutput:  pulumi.String("output_qos"),
//				Sgt:                     pulumi.Int(57),
//				Tags: iosxe.ServiceTemplateTagArray{
//					&iosxe.ServiceTemplateTagArgs{
//						Name: pulumi.String("tag_name"),
//					},
//				},
//				TunnelCapwapName: pulumi.String("TUN1"),
//				Vlan:             pulumi.Int(27),
//				Vnid:             pulumi.String("12345"),
//				VoiceVlan:        pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import iosxe:index/serviceTemplate:ServiceTemplate example "Cisco-IOS-XE-native:native/Cisco-IOS-XE-switch:service-template=MY_TEMPLATE"
//
// ```
type ServiceTemplate struct {
	pulumi.CustomResourceState

	// Enter a value between 1 and 1073741823 - Range: `1`-`1073741823`
	AbsoluteTimer pulumi.IntPtrOutput `pulumi:"absoluteTimer"`
	// Access list to be applied
	AccessGroups ServiceTemplateAccessGroupArrayOutput `pulumi:"accessGroups"`
	// Enter a description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// pre-authentication
	DnsAclPreauth pulumi.StringPtrOutput `pulumi:"dnsAclPreauth"`
	// Enter a value between 1 and 65535 - Range: `1`-`65535`
	IanctivityTimer pulumi.IntPtrOutput `pulumi:"ianctivityTimer"`
	// ARP probe
	InactivityTimerProbe pulumi.BoolPtrOutput `pulumi:"inactivityTimerProbe"`
	// Interface template to be applied
	InterfaceTemplates ServiceTemplateInterfaceTemplateArrayOutput `pulumi:"interfaceTemplates"`
	// Set the link security policy - Choices: `must-not-secure`, `must-secure`, `should-secure`
	LinksecPolicy pulumi.StringPtrOutput `pulumi:"linksecPolicy"`
	// mdns policy to be applied
	MdnsServicePolicy pulumi.StringPtrOutput `pulumi:"mdnsServicePolicy"`
	// Specify a template name (maximum 48 characters)
	Name pulumi.StringOutput `pulumi:"name"`
	// Append client Mac Address in redirect URL
	RedirectAppendClientMac pulumi.StringPtrOutput `pulumi:"redirectAppendClientMac"`
	// Append switch Mac Address in redirect URL
	RedirectAppendSwitchMac pulumi.StringPtrOutput `pulumi:"redirectAppendSwitchMac"`
	// Specify a valid URL
	RedirectUrl pulumi.StringPtrOutput `pulumi:"redirectUrl"`
	// Specify the access list name
	RedirectUrlMatchAcl pulumi.StringPtrOutput `pulumi:"redirectUrlMatchAcl"`
	// - Choices: `one-time-redirect`, `redirect-on-no-match`
	RedirectUrlMatchAction pulumi.StringPtrOutput `pulumi:"redirectUrlMatchAction"`
	// Configure input Qos policy
	ServicePolicyQosInput pulumi.StringPtrOutput `pulumi:"servicePolicyQosInput"`
	// Configure output Qos policy
	ServicePolicyQosOutput pulumi.StringPtrOutput `pulumi:"servicePolicyQosOutput"`
	// SGT tag - Range: `2`-`65519`
	Sgt pulumi.IntPtrOutput `pulumi:"sgt"`
	// tag name
	Tags ServiceTemplateTagArrayOutput `pulumi:"tags"`
	// tunnel profile name
	TunnelCapwapName pulumi.StringPtrOutput `pulumi:"tunnelCapwapName"`
	// Vlan to be applied - Range: `1`-`4094`
	Vlan pulumi.IntPtrOutput `pulumi:"vlan"`
	// Vnid to be applied
	Vnid pulumi.StringPtrOutput `pulumi:"vnid"`
	// Critical voice vlan
	VoiceVlan pulumi.BoolPtrOutput `pulumi:"voiceVlan"`
}

// NewServiceTemplate registers a new resource with the given unique name, arguments, and options.
func NewServiceTemplate(ctx *pulumi.Context,
	name string, args *ServiceTemplateArgs, opts ...pulumi.ResourceOption) (*ServiceTemplate, error) {
	if args == nil {
		args = &ServiceTemplateArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceTemplate
	err := ctx.RegisterResource("iosxe:index/serviceTemplate:ServiceTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceTemplate gets an existing ServiceTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceTemplateState, opts ...pulumi.ResourceOption) (*ServiceTemplate, error) {
	var resource ServiceTemplate
	err := ctx.ReadResource("iosxe:index/serviceTemplate:ServiceTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceTemplate resources.
type serviceTemplateState struct {
	// Enter a value between 1 and 1073741823 - Range: `1`-`1073741823`
	AbsoluteTimer *int `pulumi:"absoluteTimer"`
	// Access list to be applied
	AccessGroups []ServiceTemplateAccessGroup `pulumi:"accessGroups"`
	// Enter a description
	Description *string `pulumi:"description"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// pre-authentication
	DnsAclPreauth *string `pulumi:"dnsAclPreauth"`
	// Enter a value between 1 and 65535 - Range: `1`-`65535`
	IanctivityTimer *int `pulumi:"ianctivityTimer"`
	// ARP probe
	InactivityTimerProbe *bool `pulumi:"inactivityTimerProbe"`
	// Interface template to be applied
	InterfaceTemplates []ServiceTemplateInterfaceTemplate `pulumi:"interfaceTemplates"`
	// Set the link security policy - Choices: `must-not-secure`, `must-secure`, `should-secure`
	LinksecPolicy *string `pulumi:"linksecPolicy"`
	// mdns policy to be applied
	MdnsServicePolicy *string `pulumi:"mdnsServicePolicy"`
	// Specify a template name (maximum 48 characters)
	Name *string `pulumi:"name"`
	// Append client Mac Address in redirect URL
	RedirectAppendClientMac *string `pulumi:"redirectAppendClientMac"`
	// Append switch Mac Address in redirect URL
	RedirectAppendSwitchMac *string `pulumi:"redirectAppendSwitchMac"`
	// Specify a valid URL
	RedirectUrl *string `pulumi:"redirectUrl"`
	// Specify the access list name
	RedirectUrlMatchAcl *string `pulumi:"redirectUrlMatchAcl"`
	// - Choices: `one-time-redirect`, `redirect-on-no-match`
	RedirectUrlMatchAction *string `pulumi:"redirectUrlMatchAction"`
	// Configure input Qos policy
	ServicePolicyQosInput *string `pulumi:"servicePolicyQosInput"`
	// Configure output Qos policy
	ServicePolicyQosOutput *string `pulumi:"servicePolicyQosOutput"`
	// SGT tag - Range: `2`-`65519`
	Sgt *int `pulumi:"sgt"`
	// tag name
	Tags []ServiceTemplateTag `pulumi:"tags"`
	// tunnel profile name
	TunnelCapwapName *string `pulumi:"tunnelCapwapName"`
	// Vlan to be applied - Range: `1`-`4094`
	Vlan *int `pulumi:"vlan"`
	// Vnid to be applied
	Vnid *string `pulumi:"vnid"`
	// Critical voice vlan
	VoiceVlan *bool `pulumi:"voiceVlan"`
}

type ServiceTemplateState struct {
	// Enter a value between 1 and 1073741823 - Range: `1`-`1073741823`
	AbsoluteTimer pulumi.IntPtrInput
	// Access list to be applied
	AccessGroups ServiceTemplateAccessGroupArrayInput
	// Enter a description
	Description pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// pre-authentication
	DnsAclPreauth pulumi.StringPtrInput
	// Enter a value between 1 and 65535 - Range: `1`-`65535`
	IanctivityTimer pulumi.IntPtrInput
	// ARP probe
	InactivityTimerProbe pulumi.BoolPtrInput
	// Interface template to be applied
	InterfaceTemplates ServiceTemplateInterfaceTemplateArrayInput
	// Set the link security policy - Choices: `must-not-secure`, `must-secure`, `should-secure`
	LinksecPolicy pulumi.StringPtrInput
	// mdns policy to be applied
	MdnsServicePolicy pulumi.StringPtrInput
	// Specify a template name (maximum 48 characters)
	Name pulumi.StringPtrInput
	// Append client Mac Address in redirect URL
	RedirectAppendClientMac pulumi.StringPtrInput
	// Append switch Mac Address in redirect URL
	RedirectAppendSwitchMac pulumi.StringPtrInput
	// Specify a valid URL
	RedirectUrl pulumi.StringPtrInput
	// Specify the access list name
	RedirectUrlMatchAcl pulumi.StringPtrInput
	// - Choices: `one-time-redirect`, `redirect-on-no-match`
	RedirectUrlMatchAction pulumi.StringPtrInput
	// Configure input Qos policy
	ServicePolicyQosInput pulumi.StringPtrInput
	// Configure output Qos policy
	ServicePolicyQosOutput pulumi.StringPtrInput
	// SGT tag - Range: `2`-`65519`
	Sgt pulumi.IntPtrInput
	// tag name
	Tags ServiceTemplateTagArrayInput
	// tunnel profile name
	TunnelCapwapName pulumi.StringPtrInput
	// Vlan to be applied - Range: `1`-`4094`
	Vlan pulumi.IntPtrInput
	// Vnid to be applied
	Vnid pulumi.StringPtrInput
	// Critical voice vlan
	VoiceVlan pulumi.BoolPtrInput
}

func (ServiceTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceTemplateState)(nil)).Elem()
}

type serviceTemplateArgs struct {
	// Enter a value between 1 and 1073741823 - Range: `1`-`1073741823`
	AbsoluteTimer *int `pulumi:"absoluteTimer"`
	// Access list to be applied
	AccessGroups []ServiceTemplateAccessGroup `pulumi:"accessGroups"`
	// Enter a description
	Description *string `pulumi:"description"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// pre-authentication
	DnsAclPreauth *string `pulumi:"dnsAclPreauth"`
	// Enter a value between 1 and 65535 - Range: `1`-`65535`
	IanctivityTimer *int `pulumi:"ianctivityTimer"`
	// ARP probe
	InactivityTimerProbe *bool `pulumi:"inactivityTimerProbe"`
	// Interface template to be applied
	InterfaceTemplates []ServiceTemplateInterfaceTemplate `pulumi:"interfaceTemplates"`
	// Set the link security policy - Choices: `must-not-secure`, `must-secure`, `should-secure`
	LinksecPolicy *string `pulumi:"linksecPolicy"`
	// mdns policy to be applied
	MdnsServicePolicy *string `pulumi:"mdnsServicePolicy"`
	// Specify a template name (maximum 48 characters)
	Name *string `pulumi:"name"`
	// Append client Mac Address in redirect URL
	RedirectAppendClientMac *string `pulumi:"redirectAppendClientMac"`
	// Append switch Mac Address in redirect URL
	RedirectAppendSwitchMac *string `pulumi:"redirectAppendSwitchMac"`
	// Specify a valid URL
	RedirectUrl *string `pulumi:"redirectUrl"`
	// Specify the access list name
	RedirectUrlMatchAcl *string `pulumi:"redirectUrlMatchAcl"`
	// - Choices: `one-time-redirect`, `redirect-on-no-match`
	RedirectUrlMatchAction *string `pulumi:"redirectUrlMatchAction"`
	// Configure input Qos policy
	ServicePolicyQosInput *string `pulumi:"servicePolicyQosInput"`
	// Configure output Qos policy
	ServicePolicyQosOutput *string `pulumi:"servicePolicyQosOutput"`
	// SGT tag - Range: `2`-`65519`
	Sgt *int `pulumi:"sgt"`
	// tag name
	Tags []ServiceTemplateTag `pulumi:"tags"`
	// tunnel profile name
	TunnelCapwapName *string `pulumi:"tunnelCapwapName"`
	// Vlan to be applied - Range: `1`-`4094`
	Vlan *int `pulumi:"vlan"`
	// Vnid to be applied
	Vnid *string `pulumi:"vnid"`
	// Critical voice vlan
	VoiceVlan *bool `pulumi:"voiceVlan"`
}

// The set of arguments for constructing a ServiceTemplate resource.
type ServiceTemplateArgs struct {
	// Enter a value between 1 and 1073741823 - Range: `1`-`1073741823`
	AbsoluteTimer pulumi.IntPtrInput
	// Access list to be applied
	AccessGroups ServiceTemplateAccessGroupArrayInput
	// Enter a description
	Description pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// pre-authentication
	DnsAclPreauth pulumi.StringPtrInput
	// Enter a value between 1 and 65535 - Range: `1`-`65535`
	IanctivityTimer pulumi.IntPtrInput
	// ARP probe
	InactivityTimerProbe pulumi.BoolPtrInput
	// Interface template to be applied
	InterfaceTemplates ServiceTemplateInterfaceTemplateArrayInput
	// Set the link security policy - Choices: `must-not-secure`, `must-secure`, `should-secure`
	LinksecPolicy pulumi.StringPtrInput
	// mdns policy to be applied
	MdnsServicePolicy pulumi.StringPtrInput
	// Specify a template name (maximum 48 characters)
	Name pulumi.StringPtrInput
	// Append client Mac Address in redirect URL
	RedirectAppendClientMac pulumi.StringPtrInput
	// Append switch Mac Address in redirect URL
	RedirectAppendSwitchMac pulumi.StringPtrInput
	// Specify a valid URL
	RedirectUrl pulumi.StringPtrInput
	// Specify the access list name
	RedirectUrlMatchAcl pulumi.StringPtrInput
	// - Choices: `one-time-redirect`, `redirect-on-no-match`
	RedirectUrlMatchAction pulumi.StringPtrInput
	// Configure input Qos policy
	ServicePolicyQosInput pulumi.StringPtrInput
	// Configure output Qos policy
	ServicePolicyQosOutput pulumi.StringPtrInput
	// SGT tag - Range: `2`-`65519`
	Sgt pulumi.IntPtrInput
	// tag name
	Tags ServiceTemplateTagArrayInput
	// tunnel profile name
	TunnelCapwapName pulumi.StringPtrInput
	// Vlan to be applied - Range: `1`-`4094`
	Vlan pulumi.IntPtrInput
	// Vnid to be applied
	Vnid pulumi.StringPtrInput
	// Critical voice vlan
	VoiceVlan pulumi.BoolPtrInput
}

func (ServiceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceTemplateArgs)(nil)).Elem()
}

type ServiceTemplateInput interface {
	pulumi.Input

	ToServiceTemplateOutput() ServiceTemplateOutput
	ToServiceTemplateOutputWithContext(ctx context.Context) ServiceTemplateOutput
}

func (*ServiceTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplate)(nil)).Elem()
}

func (i *ServiceTemplate) ToServiceTemplateOutput() ServiceTemplateOutput {
	return i.ToServiceTemplateOutputWithContext(context.Background())
}

func (i *ServiceTemplate) ToServiceTemplateOutputWithContext(ctx context.Context) ServiceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateOutput)
}

func (i *ServiceTemplate) ToOutput(ctx context.Context) pulumix.Output[*ServiceTemplate] {
	return pulumix.Output[*ServiceTemplate]{
		OutputState: i.ToServiceTemplateOutputWithContext(ctx).OutputState,
	}
}

// ServiceTemplateArrayInput is an input type that accepts ServiceTemplateArray and ServiceTemplateArrayOutput values.
// You can construct a concrete instance of `ServiceTemplateArrayInput` via:
//
//	ServiceTemplateArray{ ServiceTemplateArgs{...} }
type ServiceTemplateArrayInput interface {
	pulumi.Input

	ToServiceTemplateArrayOutput() ServiceTemplateArrayOutput
	ToServiceTemplateArrayOutputWithContext(context.Context) ServiceTemplateArrayOutput
}

type ServiceTemplateArray []ServiceTemplateInput

func (ServiceTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceTemplate)(nil)).Elem()
}

func (i ServiceTemplateArray) ToServiceTemplateArrayOutput() ServiceTemplateArrayOutput {
	return i.ToServiceTemplateArrayOutputWithContext(context.Background())
}

func (i ServiceTemplateArray) ToServiceTemplateArrayOutputWithContext(ctx context.Context) ServiceTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateArrayOutput)
}

func (i ServiceTemplateArray) ToOutput(ctx context.Context) pulumix.Output[[]*ServiceTemplate] {
	return pulumix.Output[[]*ServiceTemplate]{
		OutputState: i.ToServiceTemplateArrayOutputWithContext(ctx).OutputState,
	}
}

// ServiceTemplateMapInput is an input type that accepts ServiceTemplateMap and ServiceTemplateMapOutput values.
// You can construct a concrete instance of `ServiceTemplateMapInput` via:
//
//	ServiceTemplateMap{ "key": ServiceTemplateArgs{...} }
type ServiceTemplateMapInput interface {
	pulumi.Input

	ToServiceTemplateMapOutput() ServiceTemplateMapOutput
	ToServiceTemplateMapOutputWithContext(context.Context) ServiceTemplateMapOutput
}

type ServiceTemplateMap map[string]ServiceTemplateInput

func (ServiceTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceTemplate)(nil)).Elem()
}

func (i ServiceTemplateMap) ToServiceTemplateMapOutput() ServiceTemplateMapOutput {
	return i.ToServiceTemplateMapOutputWithContext(context.Background())
}

func (i ServiceTemplateMap) ToServiceTemplateMapOutputWithContext(ctx context.Context) ServiceTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTemplateMapOutput)
}

func (i ServiceTemplateMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*ServiceTemplate] {
	return pulumix.Output[map[string]*ServiceTemplate]{
		OutputState: i.ToServiceTemplateMapOutputWithContext(ctx).OutputState,
	}
}

type ServiceTemplateOutput struct{ *pulumi.OutputState }

func (ServiceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTemplate)(nil)).Elem()
}

func (o ServiceTemplateOutput) ToServiceTemplateOutput() ServiceTemplateOutput {
	return o
}

func (o ServiceTemplateOutput) ToServiceTemplateOutputWithContext(ctx context.Context) ServiceTemplateOutput {
	return o
}

func (o ServiceTemplateOutput) ToOutput(ctx context.Context) pulumix.Output[*ServiceTemplate] {
	return pulumix.Output[*ServiceTemplate]{
		OutputState: o.OutputState,
	}
}

// Enter a value between 1 and 1073741823 - Range: `1`-`1073741823`
func (o ServiceTemplateOutput) AbsoluteTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.IntPtrOutput { return v.AbsoluteTimer }).(pulumi.IntPtrOutput)
}

// Access list to be applied
func (o ServiceTemplateOutput) AccessGroups() ServiceTemplateAccessGroupArrayOutput {
	return o.ApplyT(func(v *ServiceTemplate) ServiceTemplateAccessGroupArrayOutput { return v.AccessGroups }).(ServiceTemplateAccessGroupArrayOutput)
}

// Enter a description
func (o ServiceTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A device name from the provider configuration.
func (o ServiceTemplateOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// pre-authentication
func (o ServiceTemplateOutput) DnsAclPreauth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.StringPtrOutput { return v.DnsAclPreauth }).(pulumi.StringPtrOutput)
}

// Enter a value between 1 and 65535 - Range: `1`-`65535`
func (o ServiceTemplateOutput) IanctivityTimer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.IntPtrOutput { return v.IanctivityTimer }).(pulumi.IntPtrOutput)
}

// ARP probe
func (o ServiceTemplateOutput) InactivityTimerProbe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.BoolPtrOutput { return v.InactivityTimerProbe }).(pulumi.BoolPtrOutput)
}

// Interface template to be applied
func (o ServiceTemplateOutput) InterfaceTemplates() ServiceTemplateInterfaceTemplateArrayOutput {
	return o.ApplyT(func(v *ServiceTemplate) ServiceTemplateInterfaceTemplateArrayOutput { return v.InterfaceTemplates }).(ServiceTemplateInterfaceTemplateArrayOutput)
}

// Set the link security policy - Choices: `must-not-secure`, `must-secure`, `should-secure`
func (o ServiceTemplateOutput) LinksecPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.StringPtrOutput { return v.LinksecPolicy }).(pulumi.StringPtrOutput)
}

// mdns policy to be applied
func (o ServiceTemplateOutput) MdnsServicePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.StringPtrOutput { return v.MdnsServicePolicy }).(pulumi.StringPtrOutput)
}

// Specify a template name (maximum 48 characters)
func (o ServiceTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Append client Mac Address in redirect URL
func (o ServiceTemplateOutput) RedirectAppendClientMac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.StringPtrOutput { return v.RedirectAppendClientMac }).(pulumi.StringPtrOutput)
}

// Append switch Mac Address in redirect URL
func (o ServiceTemplateOutput) RedirectAppendSwitchMac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.StringPtrOutput { return v.RedirectAppendSwitchMac }).(pulumi.StringPtrOutput)
}

// Specify a valid URL
func (o ServiceTemplateOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.StringPtrOutput { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// Specify the access list name
func (o ServiceTemplateOutput) RedirectUrlMatchAcl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.StringPtrOutput { return v.RedirectUrlMatchAcl }).(pulumi.StringPtrOutput)
}

// - Choices: `one-time-redirect`, `redirect-on-no-match`
func (o ServiceTemplateOutput) RedirectUrlMatchAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.StringPtrOutput { return v.RedirectUrlMatchAction }).(pulumi.StringPtrOutput)
}

// Configure input Qos policy
func (o ServiceTemplateOutput) ServicePolicyQosInput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.StringPtrOutput { return v.ServicePolicyQosInput }).(pulumi.StringPtrOutput)
}

// Configure output Qos policy
func (o ServiceTemplateOutput) ServicePolicyQosOutput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.StringPtrOutput { return v.ServicePolicyQosOutput }).(pulumi.StringPtrOutput)
}

// SGT tag - Range: `2`-`65519`
func (o ServiceTemplateOutput) Sgt() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.IntPtrOutput { return v.Sgt }).(pulumi.IntPtrOutput)
}

// tag name
func (o ServiceTemplateOutput) Tags() ServiceTemplateTagArrayOutput {
	return o.ApplyT(func(v *ServiceTemplate) ServiceTemplateTagArrayOutput { return v.Tags }).(ServiceTemplateTagArrayOutput)
}

// tunnel profile name
func (o ServiceTemplateOutput) TunnelCapwapName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.StringPtrOutput { return v.TunnelCapwapName }).(pulumi.StringPtrOutput)
}

// Vlan to be applied - Range: `1`-`4094`
func (o ServiceTemplateOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.IntPtrOutput { return v.Vlan }).(pulumi.IntPtrOutput)
}

// Vnid to be applied
func (o ServiceTemplateOutput) Vnid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.StringPtrOutput { return v.Vnid }).(pulumi.StringPtrOutput)
}

// Critical voice vlan
func (o ServiceTemplateOutput) VoiceVlan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceTemplate) pulumi.BoolPtrOutput { return v.VoiceVlan }).(pulumi.BoolPtrOutput)
}

type ServiceTemplateArrayOutput struct{ *pulumi.OutputState }

func (ServiceTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceTemplate)(nil)).Elem()
}

func (o ServiceTemplateArrayOutput) ToServiceTemplateArrayOutput() ServiceTemplateArrayOutput {
	return o
}

func (o ServiceTemplateArrayOutput) ToServiceTemplateArrayOutputWithContext(ctx context.Context) ServiceTemplateArrayOutput {
	return o
}

func (o ServiceTemplateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*ServiceTemplate] {
	return pulumix.Output[[]*ServiceTemplate]{
		OutputState: o.OutputState,
	}
}

func (o ServiceTemplateArrayOutput) Index(i pulumi.IntInput) ServiceTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceTemplate {
		return vs[0].([]*ServiceTemplate)[vs[1].(int)]
	}).(ServiceTemplateOutput)
}

type ServiceTemplateMapOutput struct{ *pulumi.OutputState }

func (ServiceTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceTemplate)(nil)).Elem()
}

func (o ServiceTemplateMapOutput) ToServiceTemplateMapOutput() ServiceTemplateMapOutput {
	return o
}

func (o ServiceTemplateMapOutput) ToServiceTemplateMapOutputWithContext(ctx context.Context) ServiceTemplateMapOutput {
	return o
}

func (o ServiceTemplateMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*ServiceTemplate] {
	return pulumix.Output[map[string]*ServiceTemplate]{
		OutputState: o.OutputState,
	}
}

func (o ServiceTemplateMapOutput) MapIndex(k pulumi.StringInput) ServiceTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceTemplate {
		return vs[0].(map[string]*ServiceTemplate)[vs[1].(string)]
	}).(ServiceTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTemplateInput)(nil)).Elem(), &ServiceTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTemplateArrayInput)(nil)).Elem(), ServiceTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTemplateMapInput)(nil)).Elem(), ServiceTemplateMap{})
	pulumi.RegisterOutputType(ServiceTemplateOutput{})
	pulumi.RegisterOutputType(ServiceTemplateArrayOutput{})
	pulumi.RegisterOutputType(ServiceTemplateMapOutput{})
}
