// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"errors"
	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource can manage the BGP Address Family IPv4 VRF configuration.
//
// ## Import
//
// ```sh
//
//	$ pulumi import iosxe:index/bgpAddressFamilyIpv4Vrf:BgpAddressFamilyIpv4Vrf example "Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000/address-family/with-vrf/ipv4=unicast"
//
// ```
type BgpAddressFamilyIpv4Vrf struct {
	pulumi.CustomResourceState

	// - Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`
	AfName pulumi.StringOutput `pulumi:"afName"`
	Asn    pulumi.StringOutput `pulumi:"asn"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrOutput `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput                `pulumi:"device"`
	Vrfs   BgpAddressFamilyIpv4VrfVrfArrayOutput `pulumi:"vrfs"`
}

// NewBgpAddressFamilyIpv4Vrf registers a new resource with the given unique name, arguments, and options.
func NewBgpAddressFamilyIpv4Vrf(ctx *pulumi.Context,
	name string, args *BgpAddressFamilyIpv4VrfArgs, opts ...pulumi.ResourceOption) (*BgpAddressFamilyIpv4Vrf, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AfName == nil {
		return nil, errors.New("invalid value for required argument 'AfName'")
	}
	if args.Asn == nil {
		return nil, errors.New("invalid value for required argument 'Asn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BgpAddressFamilyIpv4Vrf
	err := ctx.RegisterResource("iosxe:index/bgpAddressFamilyIpv4Vrf:BgpAddressFamilyIpv4Vrf", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBgpAddressFamilyIpv4Vrf gets an existing BgpAddressFamilyIpv4Vrf resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBgpAddressFamilyIpv4Vrf(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BgpAddressFamilyIpv4VrfState, opts ...pulumi.ResourceOption) (*BgpAddressFamilyIpv4Vrf, error) {
	var resource BgpAddressFamilyIpv4Vrf
	err := ctx.ReadResource("iosxe:index/bgpAddressFamilyIpv4Vrf:BgpAddressFamilyIpv4Vrf", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BgpAddressFamilyIpv4Vrf resources.
type bgpAddressFamilyIpv4VrfState struct {
	// - Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`
	AfName *string `pulumi:"afName"`
	Asn    *string `pulumi:"asn"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device *string                      `pulumi:"device"`
	Vrfs   []BgpAddressFamilyIpv4VrfVrf `pulumi:"vrfs"`
}

type BgpAddressFamilyIpv4VrfState struct {
	// - Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`
	AfName pulumi.StringPtrInput
	Asn    pulumi.StringPtrInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	Vrfs   BgpAddressFamilyIpv4VrfVrfArrayInput
}

func (BgpAddressFamilyIpv4VrfState) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpAddressFamilyIpv4VrfState)(nil)).Elem()
}

type bgpAddressFamilyIpv4VrfArgs struct {
	// - Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`
	AfName string `pulumi:"afName"`
	Asn    string `pulumi:"asn"`
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device *string                      `pulumi:"device"`
	Vrfs   []BgpAddressFamilyIpv4VrfVrf `pulumi:"vrfs"`
}

// The set of arguments for constructing a BgpAddressFamilyIpv4Vrf resource.
type BgpAddressFamilyIpv4VrfArgs struct {
	// - Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`
	AfName pulumi.StringInput
	Asn    pulumi.StringInput
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	Vrfs   BgpAddressFamilyIpv4VrfVrfArrayInput
}

func (BgpAddressFamilyIpv4VrfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpAddressFamilyIpv4VrfArgs)(nil)).Elem()
}

type BgpAddressFamilyIpv4VrfInput interface {
	pulumi.Input

	ToBgpAddressFamilyIpv4VrfOutput() BgpAddressFamilyIpv4VrfOutput
	ToBgpAddressFamilyIpv4VrfOutputWithContext(ctx context.Context) BgpAddressFamilyIpv4VrfOutput
}

func (*BgpAddressFamilyIpv4Vrf) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpAddressFamilyIpv4Vrf)(nil)).Elem()
}

func (i *BgpAddressFamilyIpv4Vrf) ToBgpAddressFamilyIpv4VrfOutput() BgpAddressFamilyIpv4VrfOutput {
	return i.ToBgpAddressFamilyIpv4VrfOutputWithContext(context.Background())
}

func (i *BgpAddressFamilyIpv4Vrf) ToBgpAddressFamilyIpv4VrfOutputWithContext(ctx context.Context) BgpAddressFamilyIpv4VrfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpAddressFamilyIpv4VrfOutput)
}

func (i *BgpAddressFamilyIpv4Vrf) ToOutput(ctx context.Context) pulumix.Output[*BgpAddressFamilyIpv4Vrf] {
	return pulumix.Output[*BgpAddressFamilyIpv4Vrf]{
		OutputState: i.ToBgpAddressFamilyIpv4VrfOutputWithContext(ctx).OutputState,
	}
}

// BgpAddressFamilyIpv4VrfArrayInput is an input type that accepts BgpAddressFamilyIpv4VrfArray and BgpAddressFamilyIpv4VrfArrayOutput values.
// You can construct a concrete instance of `BgpAddressFamilyIpv4VrfArrayInput` via:
//
//	BgpAddressFamilyIpv4VrfArray{ BgpAddressFamilyIpv4VrfArgs{...} }
type BgpAddressFamilyIpv4VrfArrayInput interface {
	pulumi.Input

	ToBgpAddressFamilyIpv4VrfArrayOutput() BgpAddressFamilyIpv4VrfArrayOutput
	ToBgpAddressFamilyIpv4VrfArrayOutputWithContext(context.Context) BgpAddressFamilyIpv4VrfArrayOutput
}

type BgpAddressFamilyIpv4VrfArray []BgpAddressFamilyIpv4VrfInput

func (BgpAddressFamilyIpv4VrfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpAddressFamilyIpv4Vrf)(nil)).Elem()
}

func (i BgpAddressFamilyIpv4VrfArray) ToBgpAddressFamilyIpv4VrfArrayOutput() BgpAddressFamilyIpv4VrfArrayOutput {
	return i.ToBgpAddressFamilyIpv4VrfArrayOutputWithContext(context.Background())
}

func (i BgpAddressFamilyIpv4VrfArray) ToBgpAddressFamilyIpv4VrfArrayOutputWithContext(ctx context.Context) BgpAddressFamilyIpv4VrfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpAddressFamilyIpv4VrfArrayOutput)
}

func (i BgpAddressFamilyIpv4VrfArray) ToOutput(ctx context.Context) pulumix.Output[[]*BgpAddressFamilyIpv4Vrf] {
	return pulumix.Output[[]*BgpAddressFamilyIpv4Vrf]{
		OutputState: i.ToBgpAddressFamilyIpv4VrfArrayOutputWithContext(ctx).OutputState,
	}
}

// BgpAddressFamilyIpv4VrfMapInput is an input type that accepts BgpAddressFamilyIpv4VrfMap and BgpAddressFamilyIpv4VrfMapOutput values.
// You can construct a concrete instance of `BgpAddressFamilyIpv4VrfMapInput` via:
//
//	BgpAddressFamilyIpv4VrfMap{ "key": BgpAddressFamilyIpv4VrfArgs{...} }
type BgpAddressFamilyIpv4VrfMapInput interface {
	pulumi.Input

	ToBgpAddressFamilyIpv4VrfMapOutput() BgpAddressFamilyIpv4VrfMapOutput
	ToBgpAddressFamilyIpv4VrfMapOutputWithContext(context.Context) BgpAddressFamilyIpv4VrfMapOutput
}

type BgpAddressFamilyIpv4VrfMap map[string]BgpAddressFamilyIpv4VrfInput

func (BgpAddressFamilyIpv4VrfMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpAddressFamilyIpv4Vrf)(nil)).Elem()
}

func (i BgpAddressFamilyIpv4VrfMap) ToBgpAddressFamilyIpv4VrfMapOutput() BgpAddressFamilyIpv4VrfMapOutput {
	return i.ToBgpAddressFamilyIpv4VrfMapOutputWithContext(context.Background())
}

func (i BgpAddressFamilyIpv4VrfMap) ToBgpAddressFamilyIpv4VrfMapOutputWithContext(ctx context.Context) BgpAddressFamilyIpv4VrfMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpAddressFamilyIpv4VrfMapOutput)
}

func (i BgpAddressFamilyIpv4VrfMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpAddressFamilyIpv4Vrf] {
	return pulumix.Output[map[string]*BgpAddressFamilyIpv4Vrf]{
		OutputState: i.ToBgpAddressFamilyIpv4VrfMapOutputWithContext(ctx).OutputState,
	}
}

type BgpAddressFamilyIpv4VrfOutput struct{ *pulumi.OutputState }

func (BgpAddressFamilyIpv4VrfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpAddressFamilyIpv4Vrf)(nil)).Elem()
}

func (o BgpAddressFamilyIpv4VrfOutput) ToBgpAddressFamilyIpv4VrfOutput() BgpAddressFamilyIpv4VrfOutput {
	return o
}

func (o BgpAddressFamilyIpv4VrfOutput) ToBgpAddressFamilyIpv4VrfOutputWithContext(ctx context.Context) BgpAddressFamilyIpv4VrfOutput {
	return o
}

func (o BgpAddressFamilyIpv4VrfOutput) ToOutput(ctx context.Context) pulumix.Output[*BgpAddressFamilyIpv4Vrf] {
	return pulumix.Output[*BgpAddressFamilyIpv4Vrf]{
		OutputState: o.OutputState,
	}
}

// - Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`
func (o BgpAddressFamilyIpv4VrfOutput) AfName() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpAddressFamilyIpv4Vrf) pulumi.StringOutput { return v.AfName }).(pulumi.StringOutput)
}

func (o BgpAddressFamilyIpv4VrfOutput) Asn() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpAddressFamilyIpv4Vrf) pulumi.StringOutput { return v.Asn }).(pulumi.StringOutput)
}

// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
// Default value is `all`. - Choices: `all`, `attributes`
func (o BgpAddressFamilyIpv4VrfOutput) DeleteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpAddressFamilyIpv4Vrf) pulumi.StringPtrOutput { return v.DeleteMode }).(pulumi.StringPtrOutput)
}

// A device name from the provider configuration.
func (o BgpAddressFamilyIpv4VrfOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpAddressFamilyIpv4Vrf) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

func (o BgpAddressFamilyIpv4VrfOutput) Vrfs() BgpAddressFamilyIpv4VrfVrfArrayOutput {
	return o.ApplyT(func(v *BgpAddressFamilyIpv4Vrf) BgpAddressFamilyIpv4VrfVrfArrayOutput { return v.Vrfs }).(BgpAddressFamilyIpv4VrfVrfArrayOutput)
}

type BgpAddressFamilyIpv4VrfArrayOutput struct{ *pulumi.OutputState }

func (BgpAddressFamilyIpv4VrfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpAddressFamilyIpv4Vrf)(nil)).Elem()
}

func (o BgpAddressFamilyIpv4VrfArrayOutput) ToBgpAddressFamilyIpv4VrfArrayOutput() BgpAddressFamilyIpv4VrfArrayOutput {
	return o
}

func (o BgpAddressFamilyIpv4VrfArrayOutput) ToBgpAddressFamilyIpv4VrfArrayOutputWithContext(ctx context.Context) BgpAddressFamilyIpv4VrfArrayOutput {
	return o
}

func (o BgpAddressFamilyIpv4VrfArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*BgpAddressFamilyIpv4Vrf] {
	return pulumix.Output[[]*BgpAddressFamilyIpv4Vrf]{
		OutputState: o.OutputState,
	}
}

func (o BgpAddressFamilyIpv4VrfArrayOutput) Index(i pulumi.IntInput) BgpAddressFamilyIpv4VrfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BgpAddressFamilyIpv4Vrf {
		return vs[0].([]*BgpAddressFamilyIpv4Vrf)[vs[1].(int)]
	}).(BgpAddressFamilyIpv4VrfOutput)
}

type BgpAddressFamilyIpv4VrfMapOutput struct{ *pulumi.OutputState }

func (BgpAddressFamilyIpv4VrfMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpAddressFamilyIpv4Vrf)(nil)).Elem()
}

func (o BgpAddressFamilyIpv4VrfMapOutput) ToBgpAddressFamilyIpv4VrfMapOutput() BgpAddressFamilyIpv4VrfMapOutput {
	return o
}

func (o BgpAddressFamilyIpv4VrfMapOutput) ToBgpAddressFamilyIpv4VrfMapOutputWithContext(ctx context.Context) BgpAddressFamilyIpv4VrfMapOutput {
	return o
}

func (o BgpAddressFamilyIpv4VrfMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*BgpAddressFamilyIpv4Vrf] {
	return pulumix.Output[map[string]*BgpAddressFamilyIpv4Vrf]{
		OutputState: o.OutputState,
	}
}

func (o BgpAddressFamilyIpv4VrfMapOutput) MapIndex(k pulumi.StringInput) BgpAddressFamilyIpv4VrfOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BgpAddressFamilyIpv4Vrf {
		return vs[0].(map[string]*BgpAddressFamilyIpv4Vrf)[vs[1].(string)]
	}).(BgpAddressFamilyIpv4VrfOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BgpAddressFamilyIpv4VrfInput)(nil)).Elem(), &BgpAddressFamilyIpv4Vrf{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpAddressFamilyIpv4VrfArrayInput)(nil)).Elem(), BgpAddressFamilyIpv4VrfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpAddressFamilyIpv4VrfMapInput)(nil)).Elem(), BgpAddressFamilyIpv4VrfMap{})
	pulumi.RegisterOutputType(BgpAddressFamilyIpv4VrfOutput{})
	pulumi.RegisterOutputType(BgpAddressFamilyIpv4VrfArrayOutput{})
	pulumi.RegisterOutputType(BgpAddressFamilyIpv4VrfMapOutput{})
}
