// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This data source can read the Interface PIM configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iosxe.LookupInterfacePim(ctx, &iosxe.LookupInterfacePimArgs{
//				Name: "100",
//				Type: "Loopback",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInterfacePim(ctx *pulumi.Context, args *LookupInterfacePimArgs, opts ...pulumi.InvokeOption) (*LookupInterfacePimResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInterfacePimResult
	err := ctx.Invoke("iosxe:index/getInterfacePim:getInterfacePim", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInterfacePim.
type LookupInterfacePimArgs struct {
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	Name   string  `pulumi:"name"`
	// Interface type
	Type string `pulumi:"type"`
}

// A collection of values returned by getInterfacePim.
type LookupInterfacePimResult struct {
	// Configure BFD
	Bfd bool `pulumi:"bfd"`
	// Border of PIM domain
	Border bool `pulumi:"border"`
	// Border of PIM domain
	BsrBorder bool `pulumi:"bsrBorder"`
	// Enable PIM dense-mode operation
	DenseMode bool `pulumi:"denseMode"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// PIM router DR priority
	DrPriority int `pulumi:"drPriority"`
	// The path of the retrieved object.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// Enable PIM passive interface operation
	Passive bool `pulumi:"passive"`
	// Enable PIM sparse-dense-mode operation
	SparseDenseMode bool `pulumi:"sparseDenseMode"`
	// Enable PIM sparse-mode operation
	SparseMode bool `pulumi:"sparseMode"`
	// Interface type
	Type string `pulumi:"type"`
}

func LookupInterfacePimOutput(ctx *pulumi.Context, args LookupInterfacePimOutputArgs, opts ...pulumi.InvokeOption) LookupInterfacePimResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInterfacePimResult, error) {
			args := v.(LookupInterfacePimArgs)
			r, err := LookupInterfacePim(ctx, &args, opts...)
			var s LookupInterfacePimResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInterfacePimResultOutput)
}

// A collection of arguments for invoking getInterfacePim.
type LookupInterfacePimOutputArgs struct {
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput `pulumi:"device"`
	Name   pulumi.StringInput    `pulumi:"name"`
	// Interface type
	Type pulumi.StringInput `pulumi:"type"`
}

func (LookupInterfacePimOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInterfacePimArgs)(nil)).Elem()
}

// A collection of values returned by getInterfacePim.
type LookupInterfacePimResultOutput struct{ *pulumi.OutputState }

func (LookupInterfacePimResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInterfacePimResult)(nil)).Elem()
}

func (o LookupInterfacePimResultOutput) ToLookupInterfacePimResultOutput() LookupInterfacePimResultOutput {
	return o
}

func (o LookupInterfacePimResultOutput) ToLookupInterfacePimResultOutputWithContext(ctx context.Context) LookupInterfacePimResultOutput {
	return o
}

func (o LookupInterfacePimResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupInterfacePimResult] {
	return pulumix.Output[LookupInterfacePimResult]{
		OutputState: o.OutputState,
	}
}

// Configure BFD
func (o LookupInterfacePimResultOutput) Bfd() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfacePimResult) bool { return v.Bfd }).(pulumi.BoolOutput)
}

// Border of PIM domain
func (o LookupInterfacePimResultOutput) Border() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfacePimResult) bool { return v.Border }).(pulumi.BoolOutput)
}

// Border of PIM domain
func (o LookupInterfacePimResultOutput) BsrBorder() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfacePimResult) bool { return v.BsrBorder }).(pulumi.BoolOutput)
}

// Enable PIM dense-mode operation
func (o LookupInterfacePimResultOutput) DenseMode() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfacePimResult) bool { return v.DenseMode }).(pulumi.BoolOutput)
}

// A device name from the provider configuration.
func (o LookupInterfacePimResultOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInterfacePimResult) *string { return v.Device }).(pulumi.StringPtrOutput)
}

// PIM router DR priority
func (o LookupInterfacePimResultOutput) DrPriority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInterfacePimResult) int { return v.DrPriority }).(pulumi.IntOutput)
}

// The path of the retrieved object.
func (o LookupInterfacePimResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInterfacePimResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInterfacePimResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInterfacePimResult) string { return v.Name }).(pulumi.StringOutput)
}

// Enable PIM passive interface operation
func (o LookupInterfacePimResultOutput) Passive() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfacePimResult) bool { return v.Passive }).(pulumi.BoolOutput)
}

// Enable PIM sparse-dense-mode operation
func (o LookupInterfacePimResultOutput) SparseDenseMode() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfacePimResult) bool { return v.SparseDenseMode }).(pulumi.BoolOutput)
}

// Enable PIM sparse-mode operation
func (o LookupInterfacePimResultOutput) SparseMode() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInterfacePimResult) bool { return v.SparseMode }).(pulumi.BoolOutput)
}

// Interface type
func (o LookupInterfacePimResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInterfacePimResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInterfacePimResultOutput{})
}
