// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iosxe

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource can manage the ARP configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iosxe.NewArp(ctx, "example", &iosxe.ArpArgs{
//				IncompleteEntries: pulumi.Int(10),
//				ProxyDisable:      pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import iosxe:index/arp:Arp example "Cisco-IOS-XE-native:native/ip/arp"
//
// ```
type Arp struct {
	pulumi.CustomResourceState

	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrOutput `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device pulumi.StringPtrOutput `pulumi:"device"`
	// Maximum learn entry limit - Range: `255`-`512000`
	EntryLearn pulumi.IntPtrOutput `pulumi:"entryLearn"`
	// Specify the number of IP addresses to resolve - Range: `1`-`2147483647`
	IncompleteEntries pulumi.IntPtrOutput `pulumi:"incompleteEntries"`
	// Specify ARP acl to be applied
	InspectionFilters ArpInspectionFilterArrayOutput `pulumi:"inspectionFilters"`
	// Number of entries for log buffer - Range: `0`-`1024`
	InspectionLogBufferEntries pulumi.IntPtrOutput `pulumi:"inspectionLogBufferEntries"`
	// Number of entries for log buffer - Range: `0`-`1024`
	InspectionLogBufferLogsEntries pulumi.IntPtrOutput `pulumi:"inspectionLogBufferLogsEntries"`
	// Interval for controlling logging rate - Range: `0`-`86400`
	InspectionLogBufferLogsInterval pulumi.IntPtrOutput `pulumi:"inspectionLogBufferLogsInterval"`
	// Allow 0.0.0.0 sender IP address
	InspectionValidateAllowZeros pulumi.BoolPtrOutput `pulumi:"inspectionValidateAllowZeros"`
	// Validate destination MAC address
	InspectionValidateDstMac pulumi.BoolPtrOutput `pulumi:"inspectionValidateDstMac"`
	// Validate IP addresses
	InspectionValidateIp pulumi.BoolPtrOutput `pulumi:"inspectionValidateIp"`
	// Validate source MAC address
	InspectionValidateSrcMac pulumi.BoolPtrOutput `pulumi:"inspectionValidateSrcMac"`
	// Enable/Disable ARP Inspection on vlans
	InspectionVlan pulumi.StringPtrOutput `pulumi:"inspectionVlan"`
	// Disable proxy ARP on all interfaces
	ProxyDisable pulumi.BoolPtrOutput `pulumi:"proxyDisable"`
}

// NewArp registers a new resource with the given unique name, arguments, and options.
func NewArp(ctx *pulumi.Context,
	name string, args *ArpArgs, opts ...pulumi.ResourceOption) (*Arp, error) {
	if args == nil {
		args = &ArpArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Arp
	err := ctx.RegisterResource("iosxe:index/arp:Arp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetArp gets an existing Arp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetArp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ArpState, opts ...pulumi.ResourceOption) (*Arp, error) {
	var resource Arp
	err := ctx.ReadResource("iosxe:index/arp:Arp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Arp resources.
type arpState struct {
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Maximum learn entry limit - Range: `255`-`512000`
	EntryLearn *int `pulumi:"entryLearn"`
	// Specify the number of IP addresses to resolve - Range: `1`-`2147483647`
	IncompleteEntries *int `pulumi:"incompleteEntries"`
	// Specify ARP acl to be applied
	InspectionFilters []ArpInspectionFilter `pulumi:"inspectionFilters"`
	// Number of entries for log buffer - Range: `0`-`1024`
	InspectionLogBufferEntries *int `pulumi:"inspectionLogBufferEntries"`
	// Number of entries for log buffer - Range: `0`-`1024`
	InspectionLogBufferLogsEntries *int `pulumi:"inspectionLogBufferLogsEntries"`
	// Interval for controlling logging rate - Range: `0`-`86400`
	InspectionLogBufferLogsInterval *int `pulumi:"inspectionLogBufferLogsInterval"`
	// Allow 0.0.0.0 sender IP address
	InspectionValidateAllowZeros *bool `pulumi:"inspectionValidateAllowZeros"`
	// Validate destination MAC address
	InspectionValidateDstMac *bool `pulumi:"inspectionValidateDstMac"`
	// Validate IP addresses
	InspectionValidateIp *bool `pulumi:"inspectionValidateIp"`
	// Validate source MAC address
	InspectionValidateSrcMac *bool `pulumi:"inspectionValidateSrcMac"`
	// Enable/Disable ARP Inspection on vlans
	InspectionVlan *string `pulumi:"inspectionVlan"`
	// Disable proxy ARP on all interfaces
	ProxyDisable *bool `pulumi:"proxyDisable"`
}

type ArpState struct {
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Maximum learn entry limit - Range: `255`-`512000`
	EntryLearn pulumi.IntPtrInput
	// Specify the number of IP addresses to resolve - Range: `1`-`2147483647`
	IncompleteEntries pulumi.IntPtrInput
	// Specify ARP acl to be applied
	InspectionFilters ArpInspectionFilterArrayInput
	// Number of entries for log buffer - Range: `0`-`1024`
	InspectionLogBufferEntries pulumi.IntPtrInput
	// Number of entries for log buffer - Range: `0`-`1024`
	InspectionLogBufferLogsEntries pulumi.IntPtrInput
	// Interval for controlling logging rate - Range: `0`-`86400`
	InspectionLogBufferLogsInterval pulumi.IntPtrInput
	// Allow 0.0.0.0 sender IP address
	InspectionValidateAllowZeros pulumi.BoolPtrInput
	// Validate destination MAC address
	InspectionValidateDstMac pulumi.BoolPtrInput
	// Validate IP addresses
	InspectionValidateIp pulumi.BoolPtrInput
	// Validate source MAC address
	InspectionValidateSrcMac pulumi.BoolPtrInput
	// Enable/Disable ARP Inspection on vlans
	InspectionVlan pulumi.StringPtrInput
	// Disable proxy ARP on all interfaces
	ProxyDisable pulumi.BoolPtrInput
}

func (ArpState) ElementType() reflect.Type {
	return reflect.TypeOf((*arpState)(nil)).Elem()
}

type arpArgs struct {
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode *string `pulumi:"deleteMode"`
	// A device name from the provider configuration.
	Device *string `pulumi:"device"`
	// Maximum learn entry limit - Range: `255`-`512000`
	EntryLearn *int `pulumi:"entryLearn"`
	// Specify the number of IP addresses to resolve - Range: `1`-`2147483647`
	IncompleteEntries *int `pulumi:"incompleteEntries"`
	// Specify ARP acl to be applied
	InspectionFilters []ArpInspectionFilter `pulumi:"inspectionFilters"`
	// Number of entries for log buffer - Range: `0`-`1024`
	InspectionLogBufferEntries *int `pulumi:"inspectionLogBufferEntries"`
	// Number of entries for log buffer - Range: `0`-`1024`
	InspectionLogBufferLogsEntries *int `pulumi:"inspectionLogBufferLogsEntries"`
	// Interval for controlling logging rate - Range: `0`-`86400`
	InspectionLogBufferLogsInterval *int `pulumi:"inspectionLogBufferLogsInterval"`
	// Allow 0.0.0.0 sender IP address
	InspectionValidateAllowZeros *bool `pulumi:"inspectionValidateAllowZeros"`
	// Validate destination MAC address
	InspectionValidateDstMac *bool `pulumi:"inspectionValidateDstMac"`
	// Validate IP addresses
	InspectionValidateIp *bool `pulumi:"inspectionValidateIp"`
	// Validate source MAC address
	InspectionValidateSrcMac *bool `pulumi:"inspectionValidateSrcMac"`
	// Enable/Disable ARP Inspection on vlans
	InspectionVlan *string `pulumi:"inspectionVlan"`
	// Disable proxy ARP on all interfaces
	ProxyDisable *bool `pulumi:"proxyDisable"`
}

// The set of arguments for constructing a Arp resource.
type ArpArgs struct {
	// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
	// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
	// Default value is `all`. - Choices: `all`, `attributes`
	DeleteMode pulumi.StringPtrInput
	// A device name from the provider configuration.
	Device pulumi.StringPtrInput
	// Maximum learn entry limit - Range: `255`-`512000`
	EntryLearn pulumi.IntPtrInput
	// Specify the number of IP addresses to resolve - Range: `1`-`2147483647`
	IncompleteEntries pulumi.IntPtrInput
	// Specify ARP acl to be applied
	InspectionFilters ArpInspectionFilterArrayInput
	// Number of entries for log buffer - Range: `0`-`1024`
	InspectionLogBufferEntries pulumi.IntPtrInput
	// Number of entries for log buffer - Range: `0`-`1024`
	InspectionLogBufferLogsEntries pulumi.IntPtrInput
	// Interval for controlling logging rate - Range: `0`-`86400`
	InspectionLogBufferLogsInterval pulumi.IntPtrInput
	// Allow 0.0.0.0 sender IP address
	InspectionValidateAllowZeros pulumi.BoolPtrInput
	// Validate destination MAC address
	InspectionValidateDstMac pulumi.BoolPtrInput
	// Validate IP addresses
	InspectionValidateIp pulumi.BoolPtrInput
	// Validate source MAC address
	InspectionValidateSrcMac pulumi.BoolPtrInput
	// Enable/Disable ARP Inspection on vlans
	InspectionVlan pulumi.StringPtrInput
	// Disable proxy ARP on all interfaces
	ProxyDisable pulumi.BoolPtrInput
}

func (ArpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*arpArgs)(nil)).Elem()
}

type ArpInput interface {
	pulumi.Input

	ToArpOutput() ArpOutput
	ToArpOutputWithContext(ctx context.Context) ArpOutput
}

func (*Arp) ElementType() reflect.Type {
	return reflect.TypeOf((**Arp)(nil)).Elem()
}

func (i *Arp) ToArpOutput() ArpOutput {
	return i.ToArpOutputWithContext(context.Background())
}

func (i *Arp) ToArpOutputWithContext(ctx context.Context) ArpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArpOutput)
}

func (i *Arp) ToOutput(ctx context.Context) pulumix.Output[*Arp] {
	return pulumix.Output[*Arp]{
		OutputState: i.ToArpOutputWithContext(ctx).OutputState,
	}
}

// ArpArrayInput is an input type that accepts ArpArray and ArpArrayOutput values.
// You can construct a concrete instance of `ArpArrayInput` via:
//
//	ArpArray{ ArpArgs{...} }
type ArpArrayInput interface {
	pulumi.Input

	ToArpArrayOutput() ArpArrayOutput
	ToArpArrayOutputWithContext(context.Context) ArpArrayOutput
}

type ArpArray []ArpInput

func (ArpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Arp)(nil)).Elem()
}

func (i ArpArray) ToArpArrayOutput() ArpArrayOutput {
	return i.ToArpArrayOutputWithContext(context.Background())
}

func (i ArpArray) ToArpArrayOutputWithContext(ctx context.Context) ArpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArpArrayOutput)
}

func (i ArpArray) ToOutput(ctx context.Context) pulumix.Output[[]*Arp] {
	return pulumix.Output[[]*Arp]{
		OutputState: i.ToArpArrayOutputWithContext(ctx).OutputState,
	}
}

// ArpMapInput is an input type that accepts ArpMap and ArpMapOutput values.
// You can construct a concrete instance of `ArpMapInput` via:
//
//	ArpMap{ "key": ArpArgs{...} }
type ArpMapInput interface {
	pulumi.Input

	ToArpMapOutput() ArpMapOutput
	ToArpMapOutputWithContext(context.Context) ArpMapOutput
}

type ArpMap map[string]ArpInput

func (ArpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Arp)(nil)).Elem()
}

func (i ArpMap) ToArpMapOutput() ArpMapOutput {
	return i.ToArpMapOutputWithContext(context.Background())
}

func (i ArpMap) ToArpMapOutputWithContext(ctx context.Context) ArpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArpMapOutput)
}

func (i ArpMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*Arp] {
	return pulumix.Output[map[string]*Arp]{
		OutputState: i.ToArpMapOutputWithContext(ctx).OutputState,
	}
}

type ArpOutput struct{ *pulumi.OutputState }

func (ArpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Arp)(nil)).Elem()
}

func (o ArpOutput) ToArpOutput() ArpOutput {
	return o
}

func (o ArpOutput) ToArpOutputWithContext(ctx context.Context) ArpOutput {
	return o
}

func (o ArpOutput) ToOutput(ctx context.Context) pulumix.Output[*Arp] {
	return pulumix.Output[*Arp]{
		OutputState: o.OutputState,
	}
}

// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
// Default value is `all`. - Choices: `all`, `attributes`
func (o ArpOutput) DeleteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Arp) pulumi.StringPtrOutput { return v.DeleteMode }).(pulumi.StringPtrOutput)
}

// A device name from the provider configuration.
func (o ArpOutput) Device() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Arp) pulumi.StringPtrOutput { return v.Device }).(pulumi.StringPtrOutput)
}

// Maximum learn entry limit - Range: `255`-`512000`
func (o ArpOutput) EntryLearn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Arp) pulumi.IntPtrOutput { return v.EntryLearn }).(pulumi.IntPtrOutput)
}

// Specify the number of IP addresses to resolve - Range: `1`-`2147483647`
func (o ArpOutput) IncompleteEntries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Arp) pulumi.IntPtrOutput { return v.IncompleteEntries }).(pulumi.IntPtrOutput)
}

// Specify ARP acl to be applied
func (o ArpOutput) InspectionFilters() ArpInspectionFilterArrayOutput {
	return o.ApplyT(func(v *Arp) ArpInspectionFilterArrayOutput { return v.InspectionFilters }).(ArpInspectionFilterArrayOutput)
}

// Number of entries for log buffer - Range: `0`-`1024`
func (o ArpOutput) InspectionLogBufferEntries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Arp) pulumi.IntPtrOutput { return v.InspectionLogBufferEntries }).(pulumi.IntPtrOutput)
}

// Number of entries for log buffer - Range: `0`-`1024`
func (o ArpOutput) InspectionLogBufferLogsEntries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Arp) pulumi.IntPtrOutput { return v.InspectionLogBufferLogsEntries }).(pulumi.IntPtrOutput)
}

// Interval for controlling logging rate - Range: `0`-`86400`
func (o ArpOutput) InspectionLogBufferLogsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Arp) pulumi.IntPtrOutput { return v.InspectionLogBufferLogsInterval }).(pulumi.IntPtrOutput)
}

// Allow 0.0.0.0 sender IP address
func (o ArpOutput) InspectionValidateAllowZeros() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Arp) pulumi.BoolPtrOutput { return v.InspectionValidateAllowZeros }).(pulumi.BoolPtrOutput)
}

// Validate destination MAC address
func (o ArpOutput) InspectionValidateDstMac() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Arp) pulumi.BoolPtrOutput { return v.InspectionValidateDstMac }).(pulumi.BoolPtrOutput)
}

// Validate IP addresses
func (o ArpOutput) InspectionValidateIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Arp) pulumi.BoolPtrOutput { return v.InspectionValidateIp }).(pulumi.BoolPtrOutput)
}

// Validate source MAC address
func (o ArpOutput) InspectionValidateSrcMac() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Arp) pulumi.BoolPtrOutput { return v.InspectionValidateSrcMac }).(pulumi.BoolPtrOutput)
}

// Enable/Disable ARP Inspection on vlans
func (o ArpOutput) InspectionVlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Arp) pulumi.StringPtrOutput { return v.InspectionVlan }).(pulumi.StringPtrOutput)
}

// Disable proxy ARP on all interfaces
func (o ArpOutput) ProxyDisable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Arp) pulumi.BoolPtrOutput { return v.ProxyDisable }).(pulumi.BoolPtrOutput)
}

type ArpArrayOutput struct{ *pulumi.OutputState }

func (ArpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Arp)(nil)).Elem()
}

func (o ArpArrayOutput) ToArpArrayOutput() ArpArrayOutput {
	return o
}

func (o ArpArrayOutput) ToArpArrayOutputWithContext(ctx context.Context) ArpArrayOutput {
	return o
}

func (o ArpArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*Arp] {
	return pulumix.Output[[]*Arp]{
		OutputState: o.OutputState,
	}
}

func (o ArpArrayOutput) Index(i pulumi.IntInput) ArpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Arp {
		return vs[0].([]*Arp)[vs[1].(int)]
	}).(ArpOutput)
}

type ArpMapOutput struct{ *pulumi.OutputState }

func (ArpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Arp)(nil)).Elem()
}

func (o ArpMapOutput) ToArpMapOutput() ArpMapOutput {
	return o
}

func (o ArpMapOutput) ToArpMapOutputWithContext(ctx context.Context) ArpMapOutput {
	return o
}

func (o ArpMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*Arp] {
	return pulumix.Output[map[string]*Arp]{
		OutputState: o.OutputState,
	}
}

func (o ArpMapOutput) MapIndex(k pulumi.StringInput) ArpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Arp {
		return vs[0].(map[string]*Arp)[vs[1].(string)]
	}).(ArpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ArpInput)(nil)).Elem(), &Arp{})
	pulumi.RegisterInputType(reflect.TypeOf((*ArpArrayInput)(nil)).Elem(), ArpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ArpMapInput)(nil)).Elem(), ArpMap{})
	pulumi.RegisterOutputType(ArpOutput{})
	pulumi.RegisterOutputType(ArpArrayOutput{})
	pulumi.RegisterOutputType(ArpMapOutput{})
}
