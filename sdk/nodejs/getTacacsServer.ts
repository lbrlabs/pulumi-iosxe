// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the TACACS Server configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getTacacsServer({
 *     name: "tacacs_10.10.15.13",
 * });
 * ```
 */
export function getTacacsServer(args: GetTacacsServerArgs, opts?: pulumi.InvokeOptions): Promise<GetTacacsServerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getTacacsServer:getTacacsServer", {
        "device": args.device,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getTacacsServer.
 */
export interface GetTacacsServerArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    /**
     * Name for the tacacs server configuration
     */
    name: string;
}

/**
 * A collection of values returned by getTacacsServer.
 */
export interface GetTacacsServerResult {
    /**
     * IPv4 address or Hostname for tacacs server
     */
    readonly addressIpv4: string;
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * The path of the retrieved object.
     */
    readonly id: string;
    /**
     * The UNENCRYPTED (cleartext) server key
     */
    readonly key: string;
    /**
     * Name for the tacacs server configuration
     */
    readonly name: string;
    /**
     * Time to wait for this TACACS server to reply (overrides default)
     */
    readonly timeout: number;
}
/**
 * This data source can read the TACACS Server configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getTacacsServer({
 *     name: "tacacs_10.10.15.13",
 * });
 * ```
 */
export function getTacacsServerOutput(args: GetTacacsServerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTacacsServerResult> {
    return pulumi.output(args).apply((a: any) => getTacacsServer(a, opts))
}

/**
 * A collection of arguments for invoking getTacacsServer.
 */
export interface GetTacacsServerOutputArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Name for the tacacs server configuration
     */
    name: pulumi.Input<string>;
}
