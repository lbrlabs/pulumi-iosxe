// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the Crypto IPSec Transform Set configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getCryptoIpsecTransformSet({
 *     name: "TEST",
 * });
 * ```
 */
export function getCryptoIpsecTransformSet(args: GetCryptoIpsecTransformSetArgs, opts?: pulumi.InvokeOptions): Promise<GetCryptoIpsecTransformSetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getCryptoIpsecTransformSet:getCryptoIpsecTransformSet", {
        "device": args.device,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCryptoIpsecTransformSet.
 */
export interface GetCryptoIpsecTransformSetArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    name: string;
}

/**
 * A collection of values returned by getCryptoIpsecTransformSet.
 */
export interface GetCryptoIpsecTransformSetResult {
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    readonly esp: string;
    readonly espHmac: string;
    /**
     * The path of the retrieved object.
     */
    readonly id: string;
    /**
     * tunnel (datagram encapsulation) mode
     */
    readonly modeTunnel: boolean;
    readonly name: string;
}
/**
 * This data source can read the Crypto IPSec Transform Set configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getCryptoIpsecTransformSet({
 *     name: "TEST",
 * });
 * ```
 */
export function getCryptoIpsecTransformSetOutput(args: GetCryptoIpsecTransformSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCryptoIpsecTransformSetResult> {
    return pulumi.output(args).apply((a: any) => getCryptoIpsecTransformSet(a, opts))
}

/**
 * A collection of arguments for invoking getCryptoIpsecTransformSet.
 */
export interface GetCryptoIpsecTransformSetOutputArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
