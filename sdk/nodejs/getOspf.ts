// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the OSPF configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getOspf({
 *     processId: 1,
 * });
 * ```
 */
export function getOspf(args: GetOspfArgs, opts?: pulumi.InvokeOptions): Promise<GetOspfResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getOspf:getOspf", {
        "device": args.device,
        "processId": args.processId,
    }, opts);
}

/**
 * A collection of arguments for invoking getOspf.
 */
export interface GetOspfArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    /**
     * Process ID
     */
    processId: number;
}

/**
 * A collection of values returned by getOspf.
 */
export interface GetOspfResult {
    /**
     * OSPF area parameters
     */
    readonly areas: outputs.GetOspfArea[];
    /**
     * Enable BFD on all interfaces
     */
    readonly bfdAllInterfaces: boolean;
    /**
     * Distribute a default route
     */
    readonly defaultInformationOriginate: boolean;
    /**
     * Always advertise default route
     */
    readonly defaultInformationOriginateAlways: boolean;
    /**
     * Set metric of redistributed routes
     */
    readonly defaultMetric: number;
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * Administrative distance
     */
    readonly distance: number;
    /**
     * OSPF domain-tag
     */
    readonly domainTag: number;
    /**
     * The path of the retrieved object.
     */
    readonly id: string;
    /**
     * Configure LDP automatic configuration
     */
    readonly mplsLdpAutoconfig: boolean;
    /**
     * Configure LDP-IGP Synchronization
     */
    readonly mplsLdpSync: boolean;
    /**
     * Specify a neighbor router
     */
    readonly neighbors: outputs.GetOspfNeighbor[];
    /**
     * Enable routing on an IP network
     */
    readonly networks: outputs.GetOspfNetwork[];
    /**
     * Suppress routing updates on all interfaces
     */
    readonly passiveInterfaceDefault: boolean;
    /**
     * OSPF topology priority
     */
    readonly priority: number;
    /**
     * Process ID
     */
    readonly processId: number;
    /**
     * Override configured router identifier (peers will reset)
     */
    readonly routerId: string;
    /**
     * Shutdown the OSPF protocol under the current instance
     */
    readonly shutdown: boolean;
    /**
     * Configure IP address summaries
     */
    readonly summaryAddresses: outputs.GetOspfSummaryAddress[];
}
/**
 * This data source can read the OSPF configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getOspf({
 *     processId: 1,
 * });
 * ```
 */
export function getOspfOutput(args: GetOspfOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOspfResult> {
    return pulumi.output(args).apply((a: any) => getOspf(a, opts))
}

/**
 * A collection of arguments for invoking getOspf.
 */
export interface GetOspfOutputArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Process ID
     */
    processId: pulumi.Input<number>;
}
