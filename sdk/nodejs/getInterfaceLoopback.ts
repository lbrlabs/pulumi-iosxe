// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the Interface Loopback configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getInterfaceLoopback({
 *     name: 100,
 * });
 * ```
 */
export function getInterfaceLoopback(args: GetInterfaceLoopbackArgs, opts?: pulumi.InvokeOptions): Promise<GetInterfaceLoopbackResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getInterfaceLoopback:getInterfaceLoopback", {
        "device": args.device,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getInterfaceLoopback.
 */
export interface GetInterfaceLoopbackArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    name: number;
}

/**
 * A collection of values returned by getInterfaceLoopback.
 */
export interface GetInterfaceLoopbackResult {
    /**
     * Set ARP cache timeout
     */
    readonly arpTimeout: number;
    /**
     * Interface specific description
     */
    readonly description: string;
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * The path of the retrieved object.
     */
    readonly id: string;
    readonly ipAccessGroupIn: string;
    /**
     * inbound packets
     */
    readonly ipAccessGroupInEnable: boolean;
    readonly ipAccessGroupOut: string;
    /**
     * outbound packets
     */
    readonly ipAccessGroupOutEnable: boolean;
    /**
     * Enable proxy ARP
     */
    readonly ipProxyArp: boolean;
    /**
     * Enable sending ICMP Redirect messages
     */
    readonly ipRedirects: boolean;
    /**
     * Enable sending ICMP Unreachable messages
     */
    readonly ipUnreachables: boolean;
    readonly ipv4Address: string;
    readonly ipv4AddressMask: string;
    /**
     * Insert default route
     */
    readonly ipv6AddressAutoconfigDefault: boolean;
    /**
     * Obtain IPv6 address from DHCP server
     */
    readonly ipv6AddressDhcp: boolean;
    readonly ipv6Addresses: outputs.GetInterfaceLoopbackIpv6Address[];
    /**
     * Enable IPv6 on interface
     */
    readonly ipv6Enable: boolean;
    readonly ipv6LinkLocalAddresses: outputs.GetInterfaceLoopbackIpv6LinkLocalAddress[];
    /**
     * Set IPv6 Maximum Transmission Unit
     */
    readonly ipv6Mtu: number;
    /**
     * Suppress all IPv6 RA
     */
    readonly ipv6NdRaSuppressAll: boolean;
    readonly name: number;
    /**
     * Shutdown the selected interface
     */
    readonly shutdown: boolean;
    /**
     * Configure forwarding table
     */
    readonly vrfForwarding: string;
}
/**
 * This data source can read the Interface Loopback configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getInterfaceLoopback({
 *     name: 100,
 * });
 * ```
 */
export function getInterfaceLoopbackOutput(args: GetInterfaceLoopbackOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInterfaceLoopbackResult> {
    return pulumi.output(args).apply((a: any) => getInterfaceLoopback(a, opts))
}

/**
 * A collection of arguments for invoking getInterfaceLoopback.
 */
export interface GetInterfaceLoopbackOutputArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    name: pulumi.Input<number>;
}
