// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the VTP configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getVtp({});
 * ```
 */
export function getVtp(args?: GetVtpArgs, opts?: pulumi.InvokeOptions): Promise<GetVtpResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getVtp:getVtp", {
        "device": args.device,
    }, opts);
}

/**
 * A collection of arguments for invoking getVtp.
 */
export interface GetVtpArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: string;
}

/**
 * A collection of values returned by getVtp.
 */
export interface GetVtpResult {
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * Set the name of the VTP administrative domain.
     */
    readonly domain: string;
    /**
     * Configure IFS filesystem file where VTP configuration is stored.
     */
    readonly file: string;
    /**
     * The path of the retrieved object.
     */
    readonly id: string;
    /**
     * The name of the interface providing the VTP updater ID for this device
     */
    readonly interface: string;
    /**
     * Use only this interface's IP address as the VTP IP updater address
     */
    readonly interfaceOnly: boolean;
    /**
     * Set the mode for MST VTP instance
     */
    readonly modeClientMst: boolean;
    /**
     * Set the mode for unknown VTP instances
     */
    readonly modeClientUnknown: boolean;
    /**
     * Set the mode for VLAN VTP instance
     */
    readonly modeClientVlan: boolean;
    /**
     * Set the mode for MST VTP instance
     */
    readonly modeOffMst: boolean;
    /**
     * Set the mode for unknown VTP instances
     */
    readonly modeOffUnknown: boolean;
    /**
     * Set the mode for VLAN VTP instance
     */
    readonly modeOffVlan: boolean;
    /**
     * Set the mode for MST VTP instance
     */
    readonly modeServerMst: boolean;
    /**
     * Set the mode for unknown VTP instances
     */
    readonly modeServerUnknown: boolean;
    /**
     * Set the mode for VLAN VTP instance
     */
    readonly modeServerVlan: boolean;
    /**
     * Set the mode for MST VTP instance
     */
    readonly modeTransparentMst: boolean;
    /**
     * Set the mode for unknown VTP instances
     */
    readonly modeTransparentUnknown: boolean;
    /**
     * Set the mode for VLAN VTP instance
     */
    readonly modeTransparentVlan: boolean;
    /**
     * The ascii password for the VTP administrative domain
     */
    readonly password: string;
    /**
     * Set the VTP password hidden option
     */
    readonly passwordHidden: boolean;
    /**
     * Specify the vtp password in encrypted form
     */
    readonly passwordSecret: boolean;
    /**
     * Set the administrative domain to permit pruning
     */
    readonly pruning: boolean;
    /**
     * Set the administrative domain to VTP version
     */
    readonly version: number;
}
/**
 * This data source can read the VTP configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getVtp({});
 * ```
 */
export function getVtpOutput(args?: GetVtpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVtpResult> {
    return pulumi.output(args).apply((a: any) => getVtp(a, opts))
}

/**
 * A collection of arguments for invoking getVtp.
 */
export interface GetVtpOutputArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
}
