// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the Radius configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getRadius({
 *     name: "radius_10.10.15.12",
 * });
 * ```
 */
export function getRadius(args: GetRadiusArgs, opts?: pulumi.InvokeOptions): Promise<GetRadiusResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getRadius:getRadius", {
        "device": args.device,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getRadius.
 */
export interface GetRadiusArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    /**
     * Name for the radius server configuration
     */
    name: string;
}

/**
 * A collection of values returned by getRadius.
 */
export interface GetRadiusResult {
    /**
     * UDP port for RADIUS accounting server (default is 1813)
     */
    readonly accountingPort: number;
    /**
     * UDP port for RADIUS authentication server (default is 1812)
     */
    readonly authenticationPort: number;
    /**
     * Do not test accounting ports of the servers.
     */
    readonly automateTesterIgnoreAcctPort: boolean;
    /**
     * Send a packet to verify the server status
     */
    readonly automateTesterProbeOnConfig: boolean;
    readonly automateTesterUsername: string;
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * The path of the retrieved object.
     */
    readonly id: string;
    /**
     * IPv4 address or Hostname for radius server
     */
    readonly ipv4Address: string;
    readonly key: string;
    /**
     * Name for the radius server configuration
     */
    readonly name: string;
    /**
     * The UNENCRYPTED (cleartext) server key
     */
    readonly pacKey: string;
    /**
     * 0 - Specifies an UNENCRYPTED key will follow 6 - Specifies an ENCRYPTED key will follow 7 - Specifies HIDDEN key will follow
     */
    readonly pacKeyEncryption: string;
    /**
     * Number of retries to active server (overrides default)
     */
    readonly retransmit: number;
    /**
     * Time to wait for a RADIUS server to reply (overrides default)
     */
    readonly timeout: number;
}
/**
 * This data source can read the Radius configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getRadius({
 *     name: "radius_10.10.15.12",
 * });
 * ```
 */
export function getRadiusOutput(args: GetRadiusOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRadiusResult> {
    return pulumi.output(args).apply((a: any) => getRadius(a, opts))
}

/**
 * A collection of arguments for invoking getRadius.
 */
export interface GetRadiusOutputArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Name for the radius server configuration
     */
    name: pulumi.Input<string>;
}
