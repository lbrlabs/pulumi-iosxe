// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the BGP Neighbor configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getBgpNeighbor({
 *     asn: "65000",
 *     ip: "3.3.3.3",
 * });
 * ```
 */
export function getBgpNeighbor(args: GetBgpNeighborArgs, opts?: pulumi.InvokeOptions): Promise<GetBgpNeighborResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getBgpNeighbor:getBgpNeighbor", {
        "asn": args.asn,
        "device": args.device,
        "ip": args.ip,
    }, opts);
}

/**
 * A collection of arguments for invoking getBgpNeighbor.
 */
export interface GetBgpNeighborArgs {
    asn: string;
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    ip: string;
}

/**
 * A collection of values returned by getBgpNeighbor.
 */
export interface GetBgpNeighborResult {
    readonly asn: string;
    readonly clusterId: string;
    /**
     * Neighbor specific description
     */
    readonly description: string;
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * one-hop away EBGP peer using loopback address
     */
    readonly disableConnectedCheck: boolean;
    /**
     * Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.
     */
    readonly ebgpMultihop: boolean;
    readonly ebgpMultihopMaxHop: number;
    /**
     * Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation
     */
    readonly fallOverBfdCheckControlPlaneFailure: boolean;
    /**
     * Force BFD multi-hop to detect failure
     */
    readonly fallOverBfdMultiHop: boolean;
    /**
     * Force BFD single-hop to detect failure
     */
    readonly fallOverBfdSingleHop: boolean;
    /**
     * Enable BFD strict-mode
     */
    readonly fallOverBfdStrictMode: boolean;
    readonly fallOverDefaultEnable: boolean;
    readonly fallOverDefaultRouteMap: string;
    readonly fallOverMaximumMetricRouteMap: string;
    /**
     * The path of the retrieved object.
     */
    readonly id: string;
    readonly ip: string;
    readonly localAs: string;
    /**
     * Accept either real AS or local AS from the ebgp peer
     */
    readonly localAsDualAs: boolean;
    /**
     * Do not prepend local-as to updates from ebgp peers
     */
    readonly localAsNoPrepend: boolean;
    /**
     * Replace real AS with local AS in the EBGP updates
     */
    readonly localAsReplaceAs: boolean;
    /**
     * Log neighbor up/down and reset reason
     */
    readonly logNeighborChanges: boolean;
    readonly password: string;
    /**
     * Encryption type (0 to disable encryption, 7 for proprietary)
     */
    readonly passwordType: number;
    /**
     * Specify a BGP peer-group remote-as
     */
    readonly remoteAs: string;
    /**
     * Administratively shut down this neighbor
     */
    readonly shutdown: boolean;
    readonly timersHoldtime: number;
    readonly timersKeepaliveInterval: number;
    readonly timersMinimumNeighborHold: number;
    /**
     * IP hops
     */
    readonly ttlSecurityHops: number;
    /**
     * Loopback interface
     */
    readonly updateSourceLoopback: string;
    /**
     * Set the BGP version to match a neighbor
     */
    readonly version: number;
}
/**
 * This data source can read the BGP Neighbor configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getBgpNeighbor({
 *     asn: "65000",
 *     ip: "3.3.3.3",
 * });
 * ```
 */
export function getBgpNeighborOutput(args: GetBgpNeighborOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBgpNeighborResult> {
    return pulumi.output(args).apply((a: any) => getBgpNeighbor(a, opts))
}

/**
 * A collection of arguments for invoking getBgpNeighbor.
 */
export interface GetBgpNeighborOutputArgs {
    asn: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    ip: pulumi.Input<string>;
}
