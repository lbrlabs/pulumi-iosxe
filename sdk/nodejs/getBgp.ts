// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the BGP configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getBgp({
 *     asn: "65000",
 * });
 * ```
 */
export function getBgp(args: GetBgpArgs, opts?: pulumi.InvokeOptions): Promise<GetBgpResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getBgp:getBgp", {
        "asn": args.asn,
        "device": args.device,
    }, opts);
}

/**
 * A collection of arguments for invoking getBgp.
 */
export interface GetBgpArgs {
    asn: string;
    /**
     * A device name from the provider configuration.
     */
    device?: string;
}

/**
 * A collection of values returned by getBgp.
 */
export interface GetBgpResult {
    readonly asn: string;
    /**
     * Activate ipv4-unicast for a peer by default
     */
    readonly defaultIpv4Unicast: boolean;
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * The path of the retrieved object.
     */
    readonly id: string;
    /**
     * Log neighbor up/down and reset reason
     */
    readonly logNeighborChanges: boolean;
    /**
     * Loopback interface
     */
    readonly routerIdLoopback: number;
}
/**
 * This data source can read the BGP configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getBgp({
 *     asn: "65000",
 * });
 * ```
 */
export function getBgpOutput(args: GetBgpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBgpResult> {
    return pulumi.output(args).apply((a: any) => getBgp(a, opts))
}

/**
 * A collection of arguments for invoking getBgp.
 */
export interface GetBgpOutputArgs {
    asn: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
}
