// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the Service configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getService({});
 * ```
 */
export function getService(args?: GetServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getService:getService", {
        "device": args.device,
    }, opts);
}

/**
 * A collection of arguments for invoking getService.
 */
export interface GetServiceArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: string;
}

/**
 * A collection of values returned by getService.
 */
export interface GetServiceResult {
    /**
     * Enable call-home service
     */
    readonly callHome: boolean;
    /**
     * Compress the configuration file
     */
    readonly compressConfig: boolean;
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * Enable DHCP server and relay agent
     */
    readonly dhcp: boolean;
    /**
     * The path of the retrieved object.
     */
    readonly id: string;
    /**
     * Enable PAD commands
     */
    readonly pad: boolean;
    /**
     * Encrypt system passwords
     */
    readonly passwordEncryption: boolean;
    /**
     * Enable password recovery
     */
    readonly passwordRecovery: boolean;
    /**
     * Stamp logger messages with a sequence number
     */
    readonly sequenceNumbers: boolean;
    /**
     * Generate keepalives on idle incoming network connections
     */
    readonly tcpKeepalivesIn: boolean;
    /**
     * Generate keepalives on idle outgoing network connections
     */
    readonly tcpKeepalivesOut: boolean;
    /**
     * Timestamp debug/log messages
     */
    readonly timestamps: boolean;
    /**
     * Timestamp debug messages
     */
    readonly timestampsDebug: boolean;
    /**
     * Timestamp with date and time
     */
    readonly timestampsDebugDatetime: boolean;
    /**
     * Use local time zone for timestamps
     */
    readonly timestampsDebugDatetimeLocaltime: boolean;
    /**
     * Include milliseconds in timestamp
     */
    readonly timestampsDebugDatetimeMsec: boolean;
    /**
     * Add time zone information to timestamp
     */
    readonly timestampsDebugDatetimeShowTimezone: boolean;
    /**
     * Include year in timestamp
     */
    readonly timestampsDebugDatetimeYear: boolean;
    /**
     * Timestamp with system uptime
     */
    readonly timestampsDebugUptime: boolean;
    /**
     * Timestamp log messages
     */
    readonly timestampsLog: boolean;
    /**
     * Timestamp with date and time
     */
    readonly timestampsLogDatetime: boolean;
    /**
     * Use local time zone for timestamps
     */
    readonly timestampsLogDatetimeLocaltime: boolean;
    /**
     * Include milliseconds in timestamp
     */
    readonly timestampsLogDatetimeMsec: boolean;
    /**
     * Add time zone information to timestamp
     */
    readonly timestampsLogDatetimeShowTimezone: boolean;
    /**
     * Include year in timestamp
     */
    readonly timestampsLogDatetimeYear: boolean;
    /**
     * Timestamp with system uptime
     */
    readonly timestampsLogUptime: boolean;
}
/**
 * This data source can read the Service configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getService({});
 * ```
 */
export function getServiceOutput(args?: GetServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceResult> {
    return pulumi.output(args).apply((a: any) => getService(a, opts))
}

/**
 * A collection of arguments for invoking getService.
 */
export interface GetServiceOutputArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
}
