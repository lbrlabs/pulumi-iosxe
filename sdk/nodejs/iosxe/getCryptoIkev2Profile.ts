// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getCryptoIkev2Profile(args: GetCryptoIkev2ProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetCryptoIkev2ProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:iosxe/getCryptoIkev2Profile:getCryptoIkev2Profile", {
        "device": args.device,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCryptoIkev2Profile.
 */
export interface GetCryptoIkev2ProfileArgs {
    device?: string;
    name: string;
}

/**
 * A collection of values returned by getCryptoIkev2Profile.
 */
export interface GetCryptoIkev2ProfileResult {
    readonly authenticationLocalPreShare: boolean;
    readonly authenticationRemotePreShare: boolean;
    readonly configExchangeRequest: boolean;
    readonly description: string;
    readonly device?: string;
    readonly dpdInterval: number;
    readonly dpdQuery: string;
    readonly dpdRetry: number;
    readonly id: string;
    readonly identityLocalAddress: string;
    readonly identityLocalKeyId: string;
    readonly keyringLocal: string;
    readonly matchAddressLocalIp: string;
    readonly matchFvrf: string;
    readonly matchFvrfAny: boolean;
    readonly matchIdentityRemoteIpv4Addresses: outputs.iosxe.GetCryptoIkev2ProfileMatchIdentityRemoteIpv4Address[];
    readonly matchIdentityRemoteIpv6Prefixes: string[];
    readonly matchIdentityRemoteKeys: string[];
    readonly matchInboundOnly: boolean;
    readonly name: string;
}
export function getCryptoIkev2ProfileOutput(args: GetCryptoIkev2ProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCryptoIkev2ProfileResult> {
    return pulumi.output(args).apply((a: any) => getCryptoIkev2Profile(a, opts))
}

/**
 * A collection of arguments for invoking getCryptoIkev2Profile.
 */
export interface GetCryptoIkev2ProfileOutputArgs {
    device?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
