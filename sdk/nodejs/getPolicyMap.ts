// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This data source can read the Policy Map configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getPolicyMap({
 *     name: "dot1x_policy",
 * });
 * ```
 */
export function getPolicyMap(args: GetPolicyMapArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyMapResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getPolicyMap:getPolicyMap", {
        "device": args.device,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getPolicyMap.
 */
export interface GetPolicyMapArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    /**
     * Name of the policy map
     */
    name: string;
}

/**
 * A collection of values returned by getPolicyMap.
 */
export interface GetPolicyMapResult {
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * The path of the retrieved object.
     */
    readonly id: string;
    /**
     * Name of the policy map
     */
    readonly name: string;
    /**
     * Domain name of the policy map
     */
    readonly subscriber: boolean;
    /**
     * type of the policy-map
     */
    readonly type: string;
}
/**
 * This data source can read the Policy Map configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getPolicyMap({
 *     name: "dot1x_policy",
 * });
 * ```
 */
export function getPolicyMapOutput(args: GetPolicyMapOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyMapResult> {
    return pulumi.output(args).apply((a: any) => getPolicyMap(a, opts))
}

/**
 * A collection of arguments for invoking getPolicyMap.
 */
export interface GetPolicyMapOutputArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Name of the policy map
     */
    name: pulumi.Input<string>;
}
