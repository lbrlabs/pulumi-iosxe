// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source can read the MDT Subscription configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getMdtSubscription({
 *     subscriptionId: 101,
 * });
 * ```
 */
export function getMdtSubscription(args: GetMdtSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetMdtSubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getMdtSubscription:getMdtSubscription", {
        "device": args.device,
        "subscriptionId": args.subscriptionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMdtSubscription.
 */
export interface GetMdtSubscriptionArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: string;
    /**
     * Unique subscription identifier.
     */
    subscriptionId: number;
}

/**
 * A collection of values returned by getMdtSubscription.
 */
export interface GetMdtSubscriptionResult {
    /**
     * A device name from the provider configuration.
     */
    readonly device?: string;
    /**
     * Update notification encoding
     */
    readonly encoding: string;
    /**
     * XPath expression describing the set of objects wanted as part of the subscription
     */
    readonly filterXpath: string;
    /**
     * The path of the retrieved object.
     */
    readonly id: string;
    /**
     * Configuration of receivers of configured subscriptions. Use of this is deprecated. Use mdt-receiver-names instead.
     */
    readonly receivers: outputs.GetMdtSubscriptionReceiver[];
    /**
     * The source address for the notifications
     */
    readonly sourceAddress: string;
    /**
     * Network instance name for the VRF
     */
    readonly sourceVrf: string;
    /**
     * The name of the event stream being subscribed to
     */
    readonly stream: string;
    /**
     * Unique subscription identifier.
     */
    readonly subscriptionId: number;
    /**
     * If true, there is no initial update notification with the current value of all the data. NOT CURRENTLY SUPPORTED. If specified, must be false
     */
    readonly updatePolicyOnChange: boolean;
    /**
     * Period of update notifications in hundredths of a second
     */
    readonly updatePolicyPeriodic: number;
}
/**
 * This data source can read the MDT Subscription configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as iosxe from "@pulumi/iosxe";
 *
 * const example = iosxe.getMdtSubscription({
 *     subscriptionId: 101,
 * });
 * ```
 */
export function getMdtSubscriptionOutput(args: GetMdtSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMdtSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getMdtSubscription(a, opts))
}

/**
 * A collection of arguments for invoking getMdtSubscription.
 */
export interface GetMdtSubscriptionOutputArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Unique subscription identifier.
     */
    subscriptionId: pulumi.Input<number>;
}
