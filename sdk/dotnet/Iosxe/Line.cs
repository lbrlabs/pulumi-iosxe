// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe
{
    /// <summary>
    /// This resource can manage the Line configuration.
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import iosxe:index/line:Line example "Cisco-IOS-XE-native:native/line"
    /// ```
    /// </summary>
    [IosxeResourceType("iosxe:index/line:Line")]
    public partial class Line : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Primary terminal line
        /// </summary>
        [Output("consoles")]
        public Output<ImmutableArray<Outputs.LineConsole>> Consoles { get; private set; } = null!;

        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Output("deleteMode")]
        public Output<string?> DeleteMode { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// Virtual terminal
        /// </summary>
        [Output("vties")]
        public Output<ImmutableArray<Outputs.LineVty>> Vties { get; private set; } = null!;


        /// <summary>
        /// Create a Line resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Line(string name, LineArgs? args = null, CustomResourceOptions? options = null)
            : base("iosxe:index/line:Line", name, args ?? new LineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Line(string name, Input<string> id, LineState? state = null, CustomResourceOptions? options = null)
            : base("iosxe:index/line:Line", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Line resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Line Get(string name, Input<string> id, LineState? state = null, CustomResourceOptions? options = null)
        {
            return new Line(name, id, state, options);
        }
    }

    public sealed class LineArgs : global::Pulumi.ResourceArgs
    {
        [Input("consoles")]
        private InputList<Inputs.LineConsoleArgs>? _consoles;

        /// <summary>
        /// Primary terminal line
        /// </summary>
        public InputList<Inputs.LineConsoleArgs> Consoles
        {
            get => _consoles ?? (_consoles = new InputList<Inputs.LineConsoleArgs>());
            set => _consoles = value;
        }

        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Input("deleteMode")]
        public Input<string>? DeleteMode { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("vties")]
        private InputList<Inputs.LineVtyArgs>? _vties;

        /// <summary>
        /// Virtual terminal
        /// </summary>
        public InputList<Inputs.LineVtyArgs> Vties
        {
            get => _vties ?? (_vties = new InputList<Inputs.LineVtyArgs>());
            set => _vties = value;
        }

        public LineArgs()
        {
        }
        public static new LineArgs Empty => new LineArgs();
    }

    public sealed class LineState : global::Pulumi.ResourceArgs
    {
        [Input("consoles")]
        private InputList<Inputs.LineConsoleGetArgs>? _consoles;

        /// <summary>
        /// Primary terminal line
        /// </summary>
        public InputList<Inputs.LineConsoleGetArgs> Consoles
        {
            get => _consoles ?? (_consoles = new InputList<Inputs.LineConsoleGetArgs>());
            set => _consoles = value;
        }

        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Input("deleteMode")]
        public Input<string>? DeleteMode { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("vties")]
        private InputList<Inputs.LineVtyGetArgs>? _vties;

        /// <summary>
        /// Virtual terminal
        /// </summary>
        public InputList<Inputs.LineVtyGetArgs> Vties
        {
            get => _vties ?? (_vties = new InputList<Inputs.LineVtyGetArgs>());
            set => _vties = value;
        }

        public LineState()
        {
        }
        public static new LineState Empty => new LineState();
    }
}
