// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe
{
    public static class GetStaticRoute
    {
        /// <summary>
        /// This data source can read the Static Route configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetStaticRoute.Invoke(new()
        ///     {
        ///         Mask = "255.255.255.255",
        ///         Prefix = "5.5.5.5",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetStaticRouteResult> InvokeAsync(GetStaticRouteArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStaticRouteResult>("iosxe:index/getStaticRoute:getStaticRoute", args ?? new GetStaticRouteArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Static Route configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetStaticRoute.Invoke(new()
        ///     {
        ///         Mask = "255.255.255.255",
        ///         Prefix = "5.5.5.5",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetStaticRouteResult> Invoke(GetStaticRouteInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStaticRouteResult>("iosxe:index/getStaticRoute:getStaticRoute", args ?? new GetStaticRouteInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStaticRouteArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        [Input("mask", required: true)]
        public string Mask { get; set; } = null!;

        [Input("prefix", required: true)]
        public string Prefix { get; set; } = null!;

        public GetStaticRouteArgs()
        {
        }
        public static new GetStaticRouteArgs Empty => new GetStaticRouteArgs();
    }

    public sealed class GetStaticRouteInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("mask", required: true)]
        public Input<string> Mask { get; set; } = null!;

        [Input("prefix", required: true)]
        public Input<string> Prefix { get; set; } = null!;

        public GetStaticRouteInvokeArgs()
        {
        }
        public static new GetStaticRouteInvokeArgs Empty => new GetStaticRouteInvokeArgs();
    }


    [OutputType]
    public sealed class GetStaticRouteResult
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// The path of the retrieved object.
        /// </summary>
        public readonly string Id;
        public readonly string Mask;
        public readonly ImmutableArray<Outputs.GetStaticRouteNextHopResult> NextHops;
        public readonly string Prefix;

        [OutputConstructor]
        private GetStaticRouteResult(
            string? device,

            string id,

            string mask,

            ImmutableArray<Outputs.GetStaticRouteNextHopResult> nextHops,

            string prefix)
        {
            Device = device;
            Id = id;
            Mask = mask;
            NextHops = nextHops;
            Prefix = prefix;
        }
    }
}
