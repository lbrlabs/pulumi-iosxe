// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Outputs
{

    [OutputType]
    public sealed class AccessListStandardEntry
    {
        /// <summary>
        /// Any source prefix
        /// </summary>
        public readonly bool? DenyAny;
        /// <summary>
        /// A single source host
        /// </summary>
        public readonly string? DenyHost;
        /// <summary>
        /// Log matches against this entry
        /// </summary>
        public readonly bool? DenyLog;
        /// <summary>
        /// Network address prefix
        /// </summary>
        public readonly string? DenyPrefix;
        /// <summary>
        /// Wildcard bits
        /// </summary>
        public readonly string? DenyPrefixMask;
        /// <summary>
        /// Any source prefix
        /// </summary>
        public readonly bool? PermitAny;
        /// <summary>
        /// A single source host
        /// </summary>
        public readonly string? PermitHost;
        /// <summary>
        /// Log matches against this entry
        /// </summary>
        public readonly bool? PermitLog;
        /// <summary>
        /// Network address prefix
        /// </summary>
        public readonly string? PermitPrefix;
        /// <summary>
        /// Wildcard bits
        /// </summary>
        public readonly string? PermitPrefixMask;
        /// <summary>
        /// Access list entry comment
        /// </summary>
        public readonly string? Remark;
        /// <summary>
        /// - Range: `1`-`2147483647`
        /// </summary>
        public readonly int Sequence;

        [OutputConstructor]
        private AccessListStandardEntry(
            bool? denyAny,

            string? denyHost,

            bool? denyLog,

            string? denyPrefix,

            string? denyPrefixMask,

            bool? permitAny,

            string? permitHost,

            bool? permitLog,

            string? permitPrefix,

            string? permitPrefixMask,

            string? remark,

            int sequence)
        {
            DenyAny = denyAny;
            DenyHost = denyHost;
            DenyLog = denyLog;
            DenyPrefix = denyPrefix;
            DenyPrefixMask = denyPrefixMask;
            PermitAny = permitAny;
            PermitHost = permitHost;
            PermitLog = permitLog;
            PermitPrefix = permitPrefix;
            PermitPrefixMask = permitPrefixMask;
            Remark = remark;
            Sequence = sequence;
        }
    }
}
