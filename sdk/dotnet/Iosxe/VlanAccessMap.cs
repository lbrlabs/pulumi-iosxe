// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe
{
    /// <summary>
    /// This resource can manage the VLAN Access Map configuration.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Iosxe = Lbrlabs.PulumiPackage.Iosxe;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Iosxe.VlanAccessMap("example", new()
    ///     {
    ///         Action = "forward",
    ///         MatchIpAddresses = new[]
    ///         {
    ///             "ACL1",
    ///         },
    ///         MatchIpv6Addresses = new[]
    ///         {
    ///             "ACL2",
    ///         },
    ///         Sequence = 10,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import iosxe:index/vlanAccessMap:VlanAccessMap example "Cisco-IOS-XE-native:native/vlan/Cisco-IOS-XE-vlan:access-map=VAM1,10"
    /// ```
    /// </summary>
    [IosxeResourceType("iosxe:index/vlanAccessMap:VlanAccessMap")]
    public partial class VlanAccessMap : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Take the action - Choices: `drop`, `forward`
        /// </summary>
        [Output("action")]
        public Output<string?> Action { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        [Output("matchIpAddresses")]
        public Output<ImmutableArray<string>> MatchIpAddresses { get; private set; } = null!;

        /// <summary>
        /// Match IPv6 address to access control.
        /// </summary>
        [Output("matchIpv6Addresses")]
        public Output<ImmutableArray<string>> MatchIpv6Addresses { get; private set; } = null!;

        /// <summary>
        /// Vlan access map tag
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`
        /// </summary>
        [Output("sequence")]
        public Output<int> Sequence { get; private set; } = null!;


        /// <summary>
        /// Create a VlanAccessMap resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VlanAccessMap(string name, VlanAccessMapArgs args, CustomResourceOptions? options = null)
            : base("iosxe:index/vlanAccessMap:VlanAccessMap", name, args ?? new VlanAccessMapArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VlanAccessMap(string name, Input<string> id, VlanAccessMapState? state = null, CustomResourceOptions? options = null)
            : base("iosxe:index/vlanAccessMap:VlanAccessMap", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VlanAccessMap resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VlanAccessMap Get(string name, Input<string> id, VlanAccessMapState? state = null, CustomResourceOptions? options = null)
        {
            return new VlanAccessMap(name, id, state, options);
        }
    }

    public sealed class VlanAccessMapArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Take the action - Choices: `drop`, `forward`
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("matchIpAddresses")]
        private InputList<string>? _matchIpAddresses;
        public InputList<string> MatchIpAddresses
        {
            get => _matchIpAddresses ?? (_matchIpAddresses = new InputList<string>());
            set => _matchIpAddresses = value;
        }

        [Input("matchIpv6Addresses")]
        private InputList<string>? _matchIpv6Addresses;

        /// <summary>
        /// Match IPv6 address to access control.
        /// </summary>
        public InputList<string> MatchIpv6Addresses
        {
            get => _matchIpv6Addresses ?? (_matchIpv6Addresses = new InputList<string>());
            set => _matchIpv6Addresses = value;
        }

        /// <summary>
        /// Vlan access map tag
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`
        /// </summary>
        [Input("sequence", required: true)]
        public Input<int> Sequence { get; set; } = null!;

        public VlanAccessMapArgs()
        {
        }
        public static new VlanAccessMapArgs Empty => new VlanAccessMapArgs();
    }

    public sealed class VlanAccessMapState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Take the action - Choices: `drop`, `forward`
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("matchIpAddresses")]
        private InputList<string>? _matchIpAddresses;
        public InputList<string> MatchIpAddresses
        {
            get => _matchIpAddresses ?? (_matchIpAddresses = new InputList<string>());
            set => _matchIpAddresses = value;
        }

        [Input("matchIpv6Addresses")]
        private InputList<string>? _matchIpv6Addresses;

        /// <summary>
        /// Match IPv6 address to access control.
        /// </summary>
        public InputList<string> MatchIpv6Addresses
        {
            get => _matchIpv6Addresses ?? (_matchIpv6Addresses = new InputList<string>());
            set => _matchIpv6Addresses = value;
        }

        /// <summary>
        /// Vlan access map tag
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`
        /// </summary>
        [Input("sequence")]
        public Input<int>? Sequence { get; set; }

        public VlanAccessMapState()
        {
        }
        public static new VlanAccessMapState Empty => new VlanAccessMapState();
    }
}
