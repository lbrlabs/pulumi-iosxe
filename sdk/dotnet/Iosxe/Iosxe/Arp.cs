// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    [IosxeResourceType("iosxe:iosxe/arp:Arp")]
    public partial class Arp : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Output("deleteMode")]
        public Output<string?> DeleteMode { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// Maximum learn entry limit - Range: `255`-`512000`
        /// </summary>
        [Output("entryLearn")]
        public Output<int?> EntryLearn { get; private set; } = null!;

        /// <summary>
        /// Specify the number of IP addresses to resolve - Range: `1`-`2147483647`
        /// </summary>
        [Output("incompleteEntries")]
        public Output<int?> IncompleteEntries { get; private set; } = null!;

        /// <summary>
        /// Specify ARP acl to be applied
        /// </summary>
        [Output("inspectionFilters")]
        public Output<ImmutableArray<Outputs.ArpInspectionFilter>> InspectionFilters { get; private set; } = null!;

        /// <summary>
        /// Number of entries for log buffer - Range: `0`-`1024`
        /// </summary>
        [Output("inspectionLogBufferEntries")]
        public Output<int?> InspectionLogBufferEntries { get; private set; } = null!;

        /// <summary>
        /// Number of entries for log buffer - Range: `0`-`1024`
        /// </summary>
        [Output("inspectionLogBufferLogsEntries")]
        public Output<int?> InspectionLogBufferLogsEntries { get; private set; } = null!;

        /// <summary>
        /// Interval for controlling logging rate - Range: `0`-`86400`
        /// </summary>
        [Output("inspectionLogBufferLogsInterval")]
        public Output<int?> InspectionLogBufferLogsInterval { get; private set; } = null!;

        /// <summary>
        /// Allow 0.0.0.0 sender IP address
        /// </summary>
        [Output("inspectionValidateAllowZeros")]
        public Output<bool?> InspectionValidateAllowZeros { get; private set; } = null!;

        /// <summary>
        /// Validate destination MAC address
        /// </summary>
        [Output("inspectionValidateDstMac")]
        public Output<bool?> InspectionValidateDstMac { get; private set; } = null!;

        /// <summary>
        /// Validate IP addresses
        /// </summary>
        [Output("inspectionValidateIp")]
        public Output<bool?> InspectionValidateIp { get; private set; } = null!;

        /// <summary>
        /// Validate source MAC address
        /// </summary>
        [Output("inspectionValidateSrcMac")]
        public Output<bool?> InspectionValidateSrcMac { get; private set; } = null!;

        /// <summary>
        /// Enable/Disable ARP Inspection on vlans
        /// </summary>
        [Output("inspectionVlan")]
        public Output<string?> InspectionVlan { get; private set; } = null!;

        /// <summary>
        /// Disable proxy ARP on all interfaces
        /// </summary>
        [Output("proxyDisable")]
        public Output<bool?> ProxyDisable { get; private set; } = null!;


        /// <summary>
        /// Create a Arp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Arp(string name, ArpArgs? args = null, CustomResourceOptions? options = null)
            : base("iosxe:iosxe/arp:Arp", name, args ?? new ArpArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Arp(string name, Input<string> id, ArpState? state = null, CustomResourceOptions? options = null)
            : base("iosxe:iosxe/arp:Arp", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Arp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Arp Get(string name, Input<string> id, ArpState? state = null, CustomResourceOptions? options = null)
        {
            return new Arp(name, id, state, options);
        }
    }

    public sealed class ArpArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Input("deleteMode")]
        public Input<string>? DeleteMode { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Maximum learn entry limit - Range: `255`-`512000`
        /// </summary>
        [Input("entryLearn")]
        public Input<int>? EntryLearn { get; set; }

        /// <summary>
        /// Specify the number of IP addresses to resolve - Range: `1`-`2147483647`
        /// </summary>
        [Input("incompleteEntries")]
        public Input<int>? IncompleteEntries { get; set; }

        [Input("inspectionFilters")]
        private InputList<Inputs.ArpInspectionFilterArgs>? _inspectionFilters;

        /// <summary>
        /// Specify ARP acl to be applied
        /// </summary>
        public InputList<Inputs.ArpInspectionFilterArgs> InspectionFilters
        {
            get => _inspectionFilters ?? (_inspectionFilters = new InputList<Inputs.ArpInspectionFilterArgs>());
            set => _inspectionFilters = value;
        }

        /// <summary>
        /// Number of entries for log buffer - Range: `0`-`1024`
        /// </summary>
        [Input("inspectionLogBufferEntries")]
        public Input<int>? InspectionLogBufferEntries { get; set; }

        /// <summary>
        /// Number of entries for log buffer - Range: `0`-`1024`
        /// </summary>
        [Input("inspectionLogBufferLogsEntries")]
        public Input<int>? InspectionLogBufferLogsEntries { get; set; }

        /// <summary>
        /// Interval for controlling logging rate - Range: `0`-`86400`
        /// </summary>
        [Input("inspectionLogBufferLogsInterval")]
        public Input<int>? InspectionLogBufferLogsInterval { get; set; }

        /// <summary>
        /// Allow 0.0.0.0 sender IP address
        /// </summary>
        [Input("inspectionValidateAllowZeros")]
        public Input<bool>? InspectionValidateAllowZeros { get; set; }

        /// <summary>
        /// Validate destination MAC address
        /// </summary>
        [Input("inspectionValidateDstMac")]
        public Input<bool>? InspectionValidateDstMac { get; set; }

        /// <summary>
        /// Validate IP addresses
        /// </summary>
        [Input("inspectionValidateIp")]
        public Input<bool>? InspectionValidateIp { get; set; }

        /// <summary>
        /// Validate source MAC address
        /// </summary>
        [Input("inspectionValidateSrcMac")]
        public Input<bool>? InspectionValidateSrcMac { get; set; }

        /// <summary>
        /// Enable/Disable ARP Inspection on vlans
        /// </summary>
        [Input("inspectionVlan")]
        public Input<string>? InspectionVlan { get; set; }

        /// <summary>
        /// Disable proxy ARP on all interfaces
        /// </summary>
        [Input("proxyDisable")]
        public Input<bool>? ProxyDisable { get; set; }

        public ArpArgs()
        {
        }
        public static new ArpArgs Empty => new ArpArgs();
    }

    public sealed class ArpState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Input("deleteMode")]
        public Input<string>? DeleteMode { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Maximum learn entry limit - Range: `255`-`512000`
        /// </summary>
        [Input("entryLearn")]
        public Input<int>? EntryLearn { get; set; }

        /// <summary>
        /// Specify the number of IP addresses to resolve - Range: `1`-`2147483647`
        /// </summary>
        [Input("incompleteEntries")]
        public Input<int>? IncompleteEntries { get; set; }

        [Input("inspectionFilters")]
        private InputList<Inputs.ArpInspectionFilterGetArgs>? _inspectionFilters;

        /// <summary>
        /// Specify ARP acl to be applied
        /// </summary>
        public InputList<Inputs.ArpInspectionFilterGetArgs> InspectionFilters
        {
            get => _inspectionFilters ?? (_inspectionFilters = new InputList<Inputs.ArpInspectionFilterGetArgs>());
            set => _inspectionFilters = value;
        }

        /// <summary>
        /// Number of entries for log buffer - Range: `0`-`1024`
        /// </summary>
        [Input("inspectionLogBufferEntries")]
        public Input<int>? InspectionLogBufferEntries { get; set; }

        /// <summary>
        /// Number of entries for log buffer - Range: `0`-`1024`
        /// </summary>
        [Input("inspectionLogBufferLogsEntries")]
        public Input<int>? InspectionLogBufferLogsEntries { get; set; }

        /// <summary>
        /// Interval for controlling logging rate - Range: `0`-`86400`
        /// </summary>
        [Input("inspectionLogBufferLogsInterval")]
        public Input<int>? InspectionLogBufferLogsInterval { get; set; }

        /// <summary>
        /// Allow 0.0.0.0 sender IP address
        /// </summary>
        [Input("inspectionValidateAllowZeros")]
        public Input<bool>? InspectionValidateAllowZeros { get; set; }

        /// <summary>
        /// Validate destination MAC address
        /// </summary>
        [Input("inspectionValidateDstMac")]
        public Input<bool>? InspectionValidateDstMac { get; set; }

        /// <summary>
        /// Validate IP addresses
        /// </summary>
        [Input("inspectionValidateIp")]
        public Input<bool>? InspectionValidateIp { get; set; }

        /// <summary>
        /// Validate source MAC address
        /// </summary>
        [Input("inspectionValidateSrcMac")]
        public Input<bool>? InspectionValidateSrcMac { get; set; }

        /// <summary>
        /// Enable/Disable ARP Inspection on vlans
        /// </summary>
        [Input("inspectionVlan")]
        public Input<string>? InspectionVlan { get; set; }

        /// <summary>
        /// Disable proxy ARP on all interfaces
        /// </summary>
        [Input("proxyDisable")]
        public Input<bool>? ProxyDisable { get; set; }

        public ArpState()
        {
        }
        public static new ArpState Empty => new ArpState();
    }
}
