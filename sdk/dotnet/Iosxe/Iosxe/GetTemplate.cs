// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    public static class GetTemplate
    {
        public static Task<GetTemplateResult> InvokeAsync(GetTemplateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTemplateResult>("iosxe:iosxe/getTemplate:getTemplate", args ?? new GetTemplateArgs(), options.WithDefaults());

        public static Output<GetTemplateResult> Invoke(GetTemplateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTemplateResult>("iosxe:iosxe/getTemplate:getTemplate", args ?? new GetTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTemplateArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("templateName", required: true)]
        public string TemplateName { get; set; } = null!;

        public GetTemplateArgs()
        {
        }
        public static new GetTemplateArgs Empty => new GetTemplateArgs();
    }

    public sealed class GetTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("templateName", required: true)]
        public Input<string> TemplateName { get; set; } = null!;

        public GetTemplateInvokeArgs()
        {
        }
        public static new GetTemplateInvokeArgs Empty => new GetTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetTemplateResult
    {
        public readonly bool AccessSessionClosed;
        public readonly string AccessSessionControlDirection;
        public readonly string AccessSessionHostMode;
        public readonly bool AccessSessionInterfaceTemplateSticky;
        public readonly int AccessSessionInterfaceTemplateStickyTimer;
        public readonly bool AccessSessionMonitor;
        public readonly string AccessSessionPortControl;
        public readonly bool AuthenticationPeriodic;
        public readonly int AuthenticationTimerReauthenticateRange;
        public readonly bool AuthenticationTimerReauthenticateServer;
        public readonly bool CtsManual;
        public readonly int CtsManualPolicyStaticSgt;
        public readonly bool CtsManualPolicyStaticTrusted;
        public readonly bool CtsManualPropagateSgt;
        public readonly bool CtsRoleBasedEnforcement;
        public readonly string? Device;
        public readonly bool DeviceTracking;
        public readonly ImmutableArray<Outputs.GetTemplateDeviceTrackingAttachPolicyResult> DeviceTrackingAttachPolicies;
        public readonly string DeviceTrackingVlanRange;
        public readonly int Dot1xMaxReauthReq;
        public readonly int Dot1xMaxReq;
        public readonly string Dot1xPae;
        public readonly int Dot1xTimeoutTxPeriod;
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetTemplateIpAccessGroupResult> IpAccessGroups;
        public readonly int IpDhcpSnoopingLimitRate;
        public readonly bool IpDhcpSnoopingTrust;
        public readonly int LoadInterval;
        public readonly bool Mab;
        public readonly bool MabEap;
        public readonly string ServicePolicyInput;
        public readonly string ServicePolicyOutput;
        public readonly string ServicePolicyTypeControlSubscriber;
        public readonly string SourceTemplate;
        public readonly bool SpanningTreeBpduguardEnable;
        public readonly bool SpanningTreePortfast;
        public readonly bool SpanningTreePortfastDisable;
        public readonly bool SpanningTreePortfastEdge;
        public readonly bool SpanningTreePortfastNetwork;
        public readonly bool SpanningTreeServicePolicy;
        public readonly bool StormControlActionShutdown;
        public readonly bool StormControlActionTrap;
        public readonly double StormControlBroadcastLevelBpsThreshold;
        public readonly string StormControlBroadcastLevelPpsThreshold;
        public readonly double StormControlBroadcastLevelThreshold;
        public readonly double StormControlMulticastLevelBpsThreshold;
        public readonly string StormControlMulticastLevelPpsThreshold;
        public readonly double StormControlMulticastLevelThreshold;
        public readonly bool SubscriberAgingInactivityTimerProbe;
        public readonly int SubscriberAgingInactivityTimerValue;
        public readonly bool SubscriberAgingProbe;
        public readonly int SwitchportAccessVlan;
        public readonly bool SwitchportBlockUnicast;
        public readonly bool SwitchportModeAccess;
        public readonly bool SwitchportModeTrunk;
        public readonly bool SwitchportNonegotiate;
        public readonly bool SwitchportPortSecurity;
        public readonly bool SwitchportPortSecurityAgingStatic;
        public readonly int SwitchportPortSecurityAgingTime;
        public readonly bool SwitchportPortSecurityAgingType;
        public readonly bool SwitchportPortSecurityAgingTypeInactivity;
        public readonly ImmutableArray<Outputs.GetTemplateSwitchportPortSecurityMaximumRangeResult> SwitchportPortSecurityMaximumRanges;
        public readonly bool SwitchportPortSecurityViolationProtect;
        public readonly bool SwitchportPortSecurityViolationRestrict;
        public readonly bool SwitchportPortSecurityViolationShutdown;
        public readonly int SwitchportPrivateVlanHostAssociationPrimaryRange;
        public readonly int SwitchportPrivateVlanHostAssociationSecondaryRange;
        public readonly string SwitchportTrunkAllowedVlans;
        public readonly bool SwitchportTrunkAllowedVlansAll;
        public readonly bool SwitchportTrunkAllowedVlansNone;
        public readonly bool SwitchportTrunkNativeVlanTag;
        public readonly int SwitchportTrunkNativeVlanVlanId;
        public readonly int SwitchportVoiceVlan;
        public readonly string TemplateName;

        [OutputConstructor]
        private GetTemplateResult(
            bool accessSessionClosed,

            string accessSessionControlDirection,

            string accessSessionHostMode,

            bool accessSessionInterfaceTemplateSticky,

            int accessSessionInterfaceTemplateStickyTimer,

            bool accessSessionMonitor,

            string accessSessionPortControl,

            bool authenticationPeriodic,

            int authenticationTimerReauthenticateRange,

            bool authenticationTimerReauthenticateServer,

            bool ctsManual,

            int ctsManualPolicyStaticSgt,

            bool ctsManualPolicyStaticTrusted,

            bool ctsManualPropagateSgt,

            bool ctsRoleBasedEnforcement,

            string? device,

            bool deviceTracking,

            ImmutableArray<Outputs.GetTemplateDeviceTrackingAttachPolicyResult> deviceTrackingAttachPolicies,

            string deviceTrackingVlanRange,

            int dot1xMaxReauthReq,

            int dot1xMaxReq,

            string dot1xPae,

            int dot1xTimeoutTxPeriod,

            string id,

            ImmutableArray<Outputs.GetTemplateIpAccessGroupResult> ipAccessGroups,

            int ipDhcpSnoopingLimitRate,

            bool ipDhcpSnoopingTrust,

            int loadInterval,

            bool mab,

            bool mabEap,

            string servicePolicyInput,

            string servicePolicyOutput,

            string servicePolicyTypeControlSubscriber,

            string sourceTemplate,

            bool spanningTreeBpduguardEnable,

            bool spanningTreePortfast,

            bool spanningTreePortfastDisable,

            bool spanningTreePortfastEdge,

            bool spanningTreePortfastNetwork,

            bool spanningTreeServicePolicy,

            bool stormControlActionShutdown,

            bool stormControlActionTrap,

            double stormControlBroadcastLevelBpsThreshold,

            string stormControlBroadcastLevelPpsThreshold,

            double stormControlBroadcastLevelThreshold,

            double stormControlMulticastLevelBpsThreshold,

            string stormControlMulticastLevelPpsThreshold,

            double stormControlMulticastLevelThreshold,

            bool subscriberAgingInactivityTimerProbe,

            int subscriberAgingInactivityTimerValue,

            bool subscriberAgingProbe,

            int switchportAccessVlan,

            bool switchportBlockUnicast,

            bool switchportModeAccess,

            bool switchportModeTrunk,

            bool switchportNonegotiate,

            bool switchportPortSecurity,

            bool switchportPortSecurityAgingStatic,

            int switchportPortSecurityAgingTime,

            bool switchportPortSecurityAgingType,

            bool switchportPortSecurityAgingTypeInactivity,

            ImmutableArray<Outputs.GetTemplateSwitchportPortSecurityMaximumRangeResult> switchportPortSecurityMaximumRanges,

            bool switchportPortSecurityViolationProtect,

            bool switchportPortSecurityViolationRestrict,

            bool switchportPortSecurityViolationShutdown,

            int switchportPrivateVlanHostAssociationPrimaryRange,

            int switchportPrivateVlanHostAssociationSecondaryRange,

            string switchportTrunkAllowedVlans,

            bool switchportTrunkAllowedVlansAll,

            bool switchportTrunkAllowedVlansNone,

            bool switchportTrunkNativeVlanTag,

            int switchportTrunkNativeVlanVlanId,

            int switchportVoiceVlan,

            string templateName)
        {
            AccessSessionClosed = accessSessionClosed;
            AccessSessionControlDirection = accessSessionControlDirection;
            AccessSessionHostMode = accessSessionHostMode;
            AccessSessionInterfaceTemplateSticky = accessSessionInterfaceTemplateSticky;
            AccessSessionInterfaceTemplateStickyTimer = accessSessionInterfaceTemplateStickyTimer;
            AccessSessionMonitor = accessSessionMonitor;
            AccessSessionPortControl = accessSessionPortControl;
            AuthenticationPeriodic = authenticationPeriodic;
            AuthenticationTimerReauthenticateRange = authenticationTimerReauthenticateRange;
            AuthenticationTimerReauthenticateServer = authenticationTimerReauthenticateServer;
            CtsManual = ctsManual;
            CtsManualPolicyStaticSgt = ctsManualPolicyStaticSgt;
            CtsManualPolicyStaticTrusted = ctsManualPolicyStaticTrusted;
            CtsManualPropagateSgt = ctsManualPropagateSgt;
            CtsRoleBasedEnforcement = ctsRoleBasedEnforcement;
            Device = device;
            DeviceTracking = deviceTracking;
            DeviceTrackingAttachPolicies = deviceTrackingAttachPolicies;
            DeviceTrackingVlanRange = deviceTrackingVlanRange;
            Dot1xMaxReauthReq = dot1xMaxReauthReq;
            Dot1xMaxReq = dot1xMaxReq;
            Dot1xPae = dot1xPae;
            Dot1xTimeoutTxPeriod = dot1xTimeoutTxPeriod;
            Id = id;
            IpAccessGroups = ipAccessGroups;
            IpDhcpSnoopingLimitRate = ipDhcpSnoopingLimitRate;
            IpDhcpSnoopingTrust = ipDhcpSnoopingTrust;
            LoadInterval = loadInterval;
            Mab = mab;
            MabEap = mabEap;
            ServicePolicyInput = servicePolicyInput;
            ServicePolicyOutput = servicePolicyOutput;
            ServicePolicyTypeControlSubscriber = servicePolicyTypeControlSubscriber;
            SourceTemplate = sourceTemplate;
            SpanningTreeBpduguardEnable = spanningTreeBpduguardEnable;
            SpanningTreePortfast = spanningTreePortfast;
            SpanningTreePortfastDisable = spanningTreePortfastDisable;
            SpanningTreePortfastEdge = spanningTreePortfastEdge;
            SpanningTreePortfastNetwork = spanningTreePortfastNetwork;
            SpanningTreeServicePolicy = spanningTreeServicePolicy;
            StormControlActionShutdown = stormControlActionShutdown;
            StormControlActionTrap = stormControlActionTrap;
            StormControlBroadcastLevelBpsThreshold = stormControlBroadcastLevelBpsThreshold;
            StormControlBroadcastLevelPpsThreshold = stormControlBroadcastLevelPpsThreshold;
            StormControlBroadcastLevelThreshold = stormControlBroadcastLevelThreshold;
            StormControlMulticastLevelBpsThreshold = stormControlMulticastLevelBpsThreshold;
            StormControlMulticastLevelPpsThreshold = stormControlMulticastLevelPpsThreshold;
            StormControlMulticastLevelThreshold = stormControlMulticastLevelThreshold;
            SubscriberAgingInactivityTimerProbe = subscriberAgingInactivityTimerProbe;
            SubscriberAgingInactivityTimerValue = subscriberAgingInactivityTimerValue;
            SubscriberAgingProbe = subscriberAgingProbe;
            SwitchportAccessVlan = switchportAccessVlan;
            SwitchportBlockUnicast = switchportBlockUnicast;
            SwitchportModeAccess = switchportModeAccess;
            SwitchportModeTrunk = switchportModeTrunk;
            SwitchportNonegotiate = switchportNonegotiate;
            SwitchportPortSecurity = switchportPortSecurity;
            SwitchportPortSecurityAgingStatic = switchportPortSecurityAgingStatic;
            SwitchportPortSecurityAgingTime = switchportPortSecurityAgingTime;
            SwitchportPortSecurityAgingType = switchportPortSecurityAgingType;
            SwitchportPortSecurityAgingTypeInactivity = switchportPortSecurityAgingTypeInactivity;
            SwitchportPortSecurityMaximumRanges = switchportPortSecurityMaximumRanges;
            SwitchportPortSecurityViolationProtect = switchportPortSecurityViolationProtect;
            SwitchportPortSecurityViolationRestrict = switchportPortSecurityViolationRestrict;
            SwitchportPortSecurityViolationShutdown = switchportPortSecurityViolationShutdown;
            SwitchportPrivateVlanHostAssociationPrimaryRange = switchportPrivateVlanHostAssociationPrimaryRange;
            SwitchportPrivateVlanHostAssociationSecondaryRange = switchportPrivateVlanHostAssociationSecondaryRange;
            SwitchportTrunkAllowedVlans = switchportTrunkAllowedVlans;
            SwitchportTrunkAllowedVlansAll = switchportTrunkAllowedVlansAll;
            SwitchportTrunkAllowedVlansNone = switchportTrunkAllowedVlansNone;
            SwitchportTrunkNativeVlanTag = switchportTrunkNativeVlanTag;
            SwitchportTrunkNativeVlanVlanId = switchportTrunkNativeVlanVlanId;
            SwitchportVoiceVlan = switchportVoiceVlan;
            TemplateName = templateName;
        }
    }
}
