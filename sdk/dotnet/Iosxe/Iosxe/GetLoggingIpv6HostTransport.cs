// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    public static class GetLoggingIpv6HostTransport
    {
        public static Task<GetLoggingIpv6HostTransportResult> InvokeAsync(GetLoggingIpv6HostTransportArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLoggingIpv6HostTransportResult>("iosxe:iosxe/getLoggingIpv6HostTransport:getLoggingIpv6HostTransport", args ?? new GetLoggingIpv6HostTransportArgs(), options.WithDefaults());

        public static Output<GetLoggingIpv6HostTransportResult> Invoke(GetLoggingIpv6HostTransportInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLoggingIpv6HostTransportResult>("iosxe:iosxe/getLoggingIpv6HostTransport:getLoggingIpv6HostTransport", args ?? new GetLoggingIpv6HostTransportInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLoggingIpv6HostTransportArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("ipv6Host", required: true)]
        public string Ipv6Host { get; set; } = null!;

        public GetLoggingIpv6HostTransportArgs()
        {
        }
        public static new GetLoggingIpv6HostTransportArgs Empty => new GetLoggingIpv6HostTransportArgs();
    }

    public sealed class GetLoggingIpv6HostTransportInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("ipv6Host", required: true)]
        public Input<string> Ipv6Host { get; set; } = null!;

        public GetLoggingIpv6HostTransportInvokeArgs()
        {
        }
        public static new GetLoggingIpv6HostTransportInvokeArgs Empty => new GetLoggingIpv6HostTransportInvokeArgs();
    }


    [OutputType]
    public sealed class GetLoggingIpv6HostTransportResult
    {
        public readonly string? Device;
        public readonly string Id;
        public readonly string Ipv6Host;
        public readonly ImmutableArray<Outputs.GetLoggingIpv6HostTransportTransportTcpPortResult> TransportTcpPorts;
        public readonly ImmutableArray<Outputs.GetLoggingIpv6HostTransportTransportTlsPortResult> TransportTlsPorts;
        public readonly ImmutableArray<Outputs.GetLoggingIpv6HostTransportTransportUdpPortResult> TransportUdpPorts;

        [OutputConstructor]
        private GetLoggingIpv6HostTransportResult(
            string? device,

            string id,

            string ipv6Host,

            ImmutableArray<Outputs.GetLoggingIpv6HostTransportTransportTcpPortResult> transportTcpPorts,

            ImmutableArray<Outputs.GetLoggingIpv6HostTransportTransportTlsPortResult> transportTlsPorts,

            ImmutableArray<Outputs.GetLoggingIpv6HostTransportTransportUdpPortResult> transportUdpPorts)
        {
            Device = device;
            Id = id;
            Ipv6Host = ipv6Host;
            TransportTcpPorts = transportTcpPorts;
            TransportTlsPorts = transportTlsPorts;
            TransportUdpPorts = transportUdpPorts;
        }
    }
}
