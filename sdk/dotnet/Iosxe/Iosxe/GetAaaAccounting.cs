// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    public static class GetAaaAccounting
    {
        public static Task<GetAaaAccountingResult> InvokeAsync(GetAaaAccountingArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAaaAccountingResult>("iosxe:iosxe/getAaaAccounting:getAaaAccounting", args ?? new GetAaaAccountingArgs(), options.WithDefaults());

        public static Output<GetAaaAccountingResult> Invoke(GetAaaAccountingInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAaaAccountingResult>("iosxe:iosxe/getAaaAccounting:getAaaAccounting", args ?? new GetAaaAccountingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAaaAccountingArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        public GetAaaAccountingArgs()
        {
        }
        public static new GetAaaAccountingArgs Empty => new GetAaaAccountingArgs();
    }

    public sealed class GetAaaAccountingInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        public GetAaaAccountingInvokeArgs()
        {
        }
        public static new GetAaaAccountingInvokeArgs Empty => new GetAaaAccountingInvokeArgs();
    }


    [OutputType]
    public sealed class GetAaaAccountingResult
    {
        public readonly string? Device;
        public readonly ImmutableArray<Outputs.GetAaaAccountingExecResult> Execs;
        public readonly string Id;
        public readonly string IdentityDefaultStartStopGroup1;
        public readonly string IdentityDefaultStartStopGroup2;
        public readonly string IdentityDefaultStartStopGroup3;
        public readonly string IdentityDefaultStartStopGroup4;
        public readonly ImmutableArray<Outputs.GetAaaAccountingNetworkResult> Networks;
        public readonly bool SystemGuaranteeFirst;
        public readonly int UpdateNewinfoPeriodic;

        [OutputConstructor]
        private GetAaaAccountingResult(
            string? device,

            ImmutableArray<Outputs.GetAaaAccountingExecResult> execs,

            string id,

            string identityDefaultStartStopGroup1,

            string identityDefaultStartStopGroup2,

            string identityDefaultStartStopGroup3,

            string identityDefaultStartStopGroup4,

            ImmutableArray<Outputs.GetAaaAccountingNetworkResult> networks,

            bool systemGuaranteeFirst,

            int updateNewinfoPeriodic)
        {
            Device = device;
            Execs = execs;
            Id = id;
            IdentityDefaultStartStopGroup1 = identityDefaultStartStopGroup1;
            IdentityDefaultStartStopGroup2 = identityDefaultStartStopGroup2;
            IdentityDefaultStartStopGroup3 = identityDefaultStartStopGroup3;
            IdentityDefaultStartStopGroup4 = identityDefaultStartStopGroup4;
            Networks = networks;
            SystemGuaranteeFirst = systemGuaranteeFirst;
            UpdateNewinfoPeriodic = updateNewinfoPeriodic;
        }
    }
}
