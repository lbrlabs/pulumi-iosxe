// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    public static class GetService
    {
        public static Task<GetServiceResult> InvokeAsync(GetServiceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceResult>("iosxe:iosxe/getService:getService", args ?? new GetServiceArgs(), options.WithDefaults());

        public static Output<GetServiceResult> Invoke(GetServiceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceResult>("iosxe:iosxe/getService:getService", args ?? new GetServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        public GetServiceArgs()
        {
        }
        public static new GetServiceArgs Empty => new GetServiceArgs();
    }

    public sealed class GetServiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        public GetServiceInvokeArgs()
        {
        }
        public static new GetServiceInvokeArgs Empty => new GetServiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceResult
    {
        public readonly bool CallHome;
        public readonly bool CompressConfig;
        public readonly string? Device;
        public readonly bool Dhcp;
        public readonly string Id;
        public readonly bool Pad;
        public readonly bool PasswordEncryption;
        public readonly bool PasswordRecovery;
        public readonly bool SequenceNumbers;
        public readonly bool TcpKeepalivesIn;
        public readonly bool TcpKeepalivesOut;
        public readonly bool Timestamps;
        public readonly bool TimestampsDebug;
        public readonly bool TimestampsDebugDatetime;
        public readonly bool TimestampsDebugDatetimeLocaltime;
        public readonly bool TimestampsDebugDatetimeMsec;
        public readonly bool TimestampsDebugDatetimeShowTimezone;
        public readonly bool TimestampsDebugDatetimeYear;
        public readonly bool TimestampsDebugUptime;
        public readonly bool TimestampsLog;
        public readonly bool TimestampsLogDatetime;
        public readonly bool TimestampsLogDatetimeLocaltime;
        public readonly bool TimestampsLogDatetimeMsec;
        public readonly bool TimestampsLogDatetimeShowTimezone;
        public readonly bool TimestampsLogDatetimeYear;
        public readonly bool TimestampsLogUptime;

        [OutputConstructor]
        private GetServiceResult(
            bool callHome,

            bool compressConfig,

            string? device,

            bool dhcp,

            string id,

            bool pad,

            bool passwordEncryption,

            bool passwordRecovery,

            bool sequenceNumbers,

            bool tcpKeepalivesIn,

            bool tcpKeepalivesOut,

            bool timestamps,

            bool timestampsDebug,

            bool timestampsDebugDatetime,

            bool timestampsDebugDatetimeLocaltime,

            bool timestampsDebugDatetimeMsec,

            bool timestampsDebugDatetimeShowTimezone,

            bool timestampsDebugDatetimeYear,

            bool timestampsDebugUptime,

            bool timestampsLog,

            bool timestampsLogDatetime,

            bool timestampsLogDatetimeLocaltime,

            bool timestampsLogDatetimeMsec,

            bool timestampsLogDatetimeShowTimezone,

            bool timestampsLogDatetimeYear,

            bool timestampsLogUptime)
        {
            CallHome = callHome;
            CompressConfig = compressConfig;
            Device = device;
            Dhcp = dhcp;
            Id = id;
            Pad = pad;
            PasswordEncryption = passwordEncryption;
            PasswordRecovery = passwordRecovery;
            SequenceNumbers = sequenceNumbers;
            TcpKeepalivesIn = tcpKeepalivesIn;
            TcpKeepalivesOut = tcpKeepalivesOut;
            Timestamps = timestamps;
            TimestampsDebug = timestampsDebug;
            TimestampsDebugDatetime = timestampsDebugDatetime;
            TimestampsDebugDatetimeLocaltime = timestampsDebugDatetimeLocaltime;
            TimestampsDebugDatetimeMsec = timestampsDebugDatetimeMsec;
            TimestampsDebugDatetimeShowTimezone = timestampsDebugDatetimeShowTimezone;
            TimestampsDebugDatetimeYear = timestampsDebugDatetimeYear;
            TimestampsDebugUptime = timestampsDebugUptime;
            TimestampsLog = timestampsLog;
            TimestampsLogDatetime = timestampsLogDatetime;
            TimestampsLogDatetimeLocaltime = timestampsLogDatetimeLocaltime;
            TimestampsLogDatetimeMsec = timestampsLogDatetimeMsec;
            TimestampsLogDatetimeShowTimezone = timestampsLogDatetimeShowTimezone;
            TimestampsLogDatetimeYear = timestampsLogDatetimeYear;
            TimestampsLogUptime = timestampsLogUptime;
        }
    }
}
