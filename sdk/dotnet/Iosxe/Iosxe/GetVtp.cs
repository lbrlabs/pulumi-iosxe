// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    public static class GetVtp
    {
        public static Task<GetVtpResult> InvokeAsync(GetVtpArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVtpResult>("iosxe:iosxe/getVtp:getVtp", args ?? new GetVtpArgs(), options.WithDefaults());

        public static Output<GetVtpResult> Invoke(GetVtpInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVtpResult>("iosxe:iosxe/getVtp:getVtp", args ?? new GetVtpInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVtpArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        public GetVtpArgs()
        {
        }
        public static new GetVtpArgs Empty => new GetVtpArgs();
    }

    public sealed class GetVtpInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        public GetVtpInvokeArgs()
        {
        }
        public static new GetVtpInvokeArgs Empty => new GetVtpInvokeArgs();
    }


    [OutputType]
    public sealed class GetVtpResult
    {
        public readonly string? Device;
        public readonly string Domain;
        public readonly string File;
        public readonly string Id;
        public readonly string Interface;
        public readonly bool InterfaceOnly;
        public readonly bool ModeClientMst;
        public readonly bool ModeClientUnknown;
        public readonly bool ModeClientVlan;
        public readonly bool ModeOffMst;
        public readonly bool ModeOffUnknown;
        public readonly bool ModeOffVlan;
        public readonly bool ModeServerMst;
        public readonly bool ModeServerUnknown;
        public readonly bool ModeServerVlan;
        public readonly bool ModeTransparentMst;
        public readonly bool ModeTransparentUnknown;
        public readonly bool ModeTransparentVlan;
        public readonly string Password;
        public readonly bool PasswordHidden;
        public readonly bool PasswordSecret;
        public readonly bool Pruning;
        public readonly int Version;

        [OutputConstructor]
        private GetVtpResult(
            string? device,

            string domain,

            string file,

            string id,

            string @interface,

            bool interfaceOnly,

            bool modeClientMst,

            bool modeClientUnknown,

            bool modeClientVlan,

            bool modeOffMst,

            bool modeOffUnknown,

            bool modeOffVlan,

            bool modeServerMst,

            bool modeServerUnknown,

            bool modeServerVlan,

            bool modeTransparentMst,

            bool modeTransparentUnknown,

            bool modeTransparentVlan,

            string password,

            bool passwordHidden,

            bool passwordSecret,

            bool pruning,

            int version)
        {
            Device = device;
            Domain = domain;
            File = file;
            Id = id;
            Interface = @interface;
            InterfaceOnly = interfaceOnly;
            ModeClientMst = modeClientMst;
            ModeClientUnknown = modeClientUnknown;
            ModeClientVlan = modeClientVlan;
            ModeOffMst = modeOffMst;
            ModeOffUnknown = modeOffUnknown;
            ModeOffVlan = modeOffVlan;
            ModeServerMst = modeServerMst;
            ModeServerUnknown = modeServerUnknown;
            ModeServerVlan = modeServerVlan;
            ModeTransparentMst = modeTransparentMst;
            ModeTransparentUnknown = modeTransparentUnknown;
            ModeTransparentVlan = modeTransparentVlan;
            Password = password;
            PasswordHidden = passwordHidden;
            PasswordSecret = passwordSecret;
            Pruning = pruning;
            Version = version;
        }
    }
}
