// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    [IosxeResourceType("iosxe:iosxe/vlan:Vlan")]
    public partial class Vlan : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// Ascii name of the VLAN
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Configure association between private VLANs
        /// </summary>
        [Output("privateVlanAssociation")]
        public Output<string?> PrivateVlanAssociation { get; private set; } = null!;

        /// <summary>
        /// Configure the VLAN as a community private VLAN
        /// </summary>
        [Output("privateVlanCommunity")]
        public Output<bool?> PrivateVlanCommunity { get; private set; } = null!;

        /// <summary>
        /// Configure the VLAN as an isolated private VLAN
        /// </summary>
        [Output("privateVlanIsolated")]
        public Output<bool?> PrivateVlanIsolated { get; private set; } = null!;

        /// <summary>
        /// Configure the VLAN as a primary private VLAN
        /// </summary>
        [Output("privateVlanPrimary")]
        public Output<bool?> PrivateVlanPrimary { get; private set; } = null!;

        /// <summary>
        /// Configure as Remote SPAN VLAN
        /// </summary>
        [Output("remoteSpan")]
        public Output<bool?> RemoteSpan { get; private set; } = null!;

        /// <summary>
        /// Shutdown VLAN switching
        /// </summary>
        [Output("shutdown")]
        public Output<bool?> Shutdown { get; private set; } = null!;

        /// <summary>
        /// a single VLAN id (allowed value range 1-4094)or Comma-separated VLAN id range.e.g. 99 or 1-30 or 1-20,30,40-50 - Range:
        /// `1`-`4094`
        /// </summary>
        [Output("vlanId")]
        public Output<int> VlanId { get; private set; } = null!;


        /// <summary>
        /// Create a Vlan resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Vlan(string name, VlanArgs args, CustomResourceOptions? options = null)
            : base("iosxe:iosxe/vlan:Vlan", name, args ?? new VlanArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Vlan(string name, Input<string> id, VlanState? state = null, CustomResourceOptions? options = null)
            : base("iosxe:iosxe/vlan:Vlan", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Vlan resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Vlan Get(string name, Input<string> id, VlanState? state = null, CustomResourceOptions? options = null)
        {
            return new Vlan(name, id, state, options);
        }
    }

    public sealed class VlanArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Ascii name of the VLAN
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Configure association between private VLANs
        /// </summary>
        [Input("privateVlanAssociation")]
        public Input<string>? PrivateVlanAssociation { get; set; }

        /// <summary>
        /// Configure the VLAN as a community private VLAN
        /// </summary>
        [Input("privateVlanCommunity")]
        public Input<bool>? PrivateVlanCommunity { get; set; }

        /// <summary>
        /// Configure the VLAN as an isolated private VLAN
        /// </summary>
        [Input("privateVlanIsolated")]
        public Input<bool>? PrivateVlanIsolated { get; set; }

        /// <summary>
        /// Configure the VLAN as a primary private VLAN
        /// </summary>
        [Input("privateVlanPrimary")]
        public Input<bool>? PrivateVlanPrimary { get; set; }

        /// <summary>
        /// Configure as Remote SPAN VLAN
        /// </summary>
        [Input("remoteSpan")]
        public Input<bool>? RemoteSpan { get; set; }

        /// <summary>
        /// Shutdown VLAN switching
        /// </summary>
        [Input("shutdown")]
        public Input<bool>? Shutdown { get; set; }

        /// <summary>
        /// a single VLAN id (allowed value range 1-4094)or Comma-separated VLAN id range.e.g. 99 or 1-30 or 1-20,30,40-50 - Range:
        /// `1`-`4094`
        /// </summary>
        [Input("vlanId", required: true)]
        public Input<int> VlanId { get; set; } = null!;

        public VlanArgs()
        {
        }
        public static new VlanArgs Empty => new VlanArgs();
    }

    public sealed class VlanState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Ascii name of the VLAN
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Configure association between private VLANs
        /// </summary>
        [Input("privateVlanAssociation")]
        public Input<string>? PrivateVlanAssociation { get; set; }

        /// <summary>
        /// Configure the VLAN as a community private VLAN
        /// </summary>
        [Input("privateVlanCommunity")]
        public Input<bool>? PrivateVlanCommunity { get; set; }

        /// <summary>
        /// Configure the VLAN as an isolated private VLAN
        /// </summary>
        [Input("privateVlanIsolated")]
        public Input<bool>? PrivateVlanIsolated { get; set; }

        /// <summary>
        /// Configure the VLAN as a primary private VLAN
        /// </summary>
        [Input("privateVlanPrimary")]
        public Input<bool>? PrivateVlanPrimary { get; set; }

        /// <summary>
        /// Configure as Remote SPAN VLAN
        /// </summary>
        [Input("remoteSpan")]
        public Input<bool>? RemoteSpan { get; set; }

        /// <summary>
        /// Shutdown VLAN switching
        /// </summary>
        [Input("shutdown")]
        public Input<bool>? Shutdown { get; set; }

        /// <summary>
        /// a single VLAN id (allowed value range 1-4094)or Comma-separated VLAN id range.e.g. 99 or 1-30 or 1-20,30,40-50 - Range:
        /// `1`-`4094`
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public VlanState()
        {
        }
        public static new VlanState Empty => new VlanState();
    }
}
