// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    public static class GetClock
    {
        public static Task<GetClockResult> InvokeAsync(GetClockArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClockResult>("iosxe:iosxe/getClock:getClock", args ?? new GetClockArgs(), options.WithDefaults());

        public static Output<GetClockResult> Invoke(GetClockInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClockResult>("iosxe:iosxe/getClock:getClock", args ?? new GetClockInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClockArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        public GetClockArgs()
        {
        }
        public static new GetClockArgs Empty => new GetClockArgs();
    }

    public sealed class GetClockInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        public GetClockInvokeArgs()
        {
        }
        public static new GetClockInvokeArgs Empty => new GetClockInvokeArgs();
    }


    [OutputType]
    public sealed class GetClockResult
    {
        public readonly bool CalendarValid;
        public readonly string? Device;
        public readonly string Id;
        public readonly bool SummerTimeDate;
        public readonly int SummerTimeDateEndDay;
        public readonly string SummerTimeDateEndMonth;
        public readonly string SummerTimeDateEndTime;
        public readonly int SummerTimeDateEndYear;
        public readonly int SummerTimeDateOffset;
        public readonly int SummerTimeDateStartDay;
        public readonly string SummerTimeDateStartMonth;
        public readonly string SummerTimeDateStartTime;
        public readonly int SummerTimeDateStartYear;
        public readonly bool SummerTimeRecurring;
        public readonly string SummerTimeRecurringEndMonth;
        public readonly string SummerTimeRecurringEndTime;
        public readonly string SummerTimeRecurringEndWeek;
        public readonly string SummerTimeRecurringEndWeekday;
        public readonly int SummerTimeRecurringOffset;
        public readonly string SummerTimeRecurringStartMonth;
        public readonly string SummerTimeRecurringStartTime;
        public readonly string SummerTimeRecurringStartWeek;
        public readonly string SummerTimeRecurringStartWeekday;
        public readonly string SummerTimeZone;

        [OutputConstructor]
        private GetClockResult(
            bool calendarValid,

            string? device,

            string id,

            bool summerTimeDate,

            int summerTimeDateEndDay,

            string summerTimeDateEndMonth,

            string summerTimeDateEndTime,

            int summerTimeDateEndYear,

            int summerTimeDateOffset,

            int summerTimeDateStartDay,

            string summerTimeDateStartMonth,

            string summerTimeDateStartTime,

            int summerTimeDateStartYear,

            bool summerTimeRecurring,

            string summerTimeRecurringEndMonth,

            string summerTimeRecurringEndTime,

            string summerTimeRecurringEndWeek,

            string summerTimeRecurringEndWeekday,

            int summerTimeRecurringOffset,

            string summerTimeRecurringStartMonth,

            string summerTimeRecurringStartTime,

            string summerTimeRecurringStartWeek,

            string summerTimeRecurringStartWeekday,

            string summerTimeZone)
        {
            CalendarValid = calendarValid;
            Device = device;
            Id = id;
            SummerTimeDate = summerTimeDate;
            SummerTimeDateEndDay = summerTimeDateEndDay;
            SummerTimeDateEndMonth = summerTimeDateEndMonth;
            SummerTimeDateEndTime = summerTimeDateEndTime;
            SummerTimeDateEndYear = summerTimeDateEndYear;
            SummerTimeDateOffset = summerTimeDateOffset;
            SummerTimeDateStartDay = summerTimeDateStartDay;
            SummerTimeDateStartMonth = summerTimeDateStartMonth;
            SummerTimeDateStartTime = summerTimeDateStartTime;
            SummerTimeDateStartYear = summerTimeDateStartYear;
            SummerTimeRecurring = summerTimeRecurring;
            SummerTimeRecurringEndMonth = summerTimeRecurringEndMonth;
            SummerTimeRecurringEndTime = summerTimeRecurringEndTime;
            SummerTimeRecurringEndWeek = summerTimeRecurringEndWeek;
            SummerTimeRecurringEndWeekday = summerTimeRecurringEndWeekday;
            SummerTimeRecurringOffset = summerTimeRecurringOffset;
            SummerTimeRecurringStartMonth = summerTimeRecurringStartMonth;
            SummerTimeRecurringStartTime = summerTimeRecurringStartTime;
            SummerTimeRecurringStartWeek = summerTimeRecurringStartWeek;
            SummerTimeRecurringStartWeekday = summerTimeRecurringStartWeekday;
            SummerTimeZone = summerTimeZone;
        }
    }
}
