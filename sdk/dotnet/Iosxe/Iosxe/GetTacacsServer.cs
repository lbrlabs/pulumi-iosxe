// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    public static class GetTacacsServer
    {
        public static Task<GetTacacsServerResult> InvokeAsync(GetTacacsServerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTacacsServerResult>("iosxe:iosxe/getTacacsServer:getTacacsServer", args ?? new GetTacacsServerArgs(), options.WithDefaults());

        public static Output<GetTacacsServerResult> Invoke(GetTacacsServerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTacacsServerResult>("iosxe:iosxe/getTacacsServer:getTacacsServer", args ?? new GetTacacsServerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTacacsServerArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetTacacsServerArgs()
        {
        }
        public static new GetTacacsServerArgs Empty => new GetTacacsServerArgs();
    }

    public sealed class GetTacacsServerInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetTacacsServerInvokeArgs()
        {
        }
        public static new GetTacacsServerInvokeArgs Empty => new GetTacacsServerInvokeArgs();
    }


    [OutputType]
    public sealed class GetTacacsServerResult
    {
        public readonly string AddressIpv4;
        public readonly string? Device;
        public readonly string Id;
        public readonly string Key;
        public readonly string Name;
        public readonly int Timeout;

        [OutputConstructor]
        private GetTacacsServerResult(
            string addressIpv4,

            string? device,

            string id,

            string key,

            string name,

            int timeout)
        {
            AddressIpv4 = addressIpv4;
            Device = device;
            Id = id;
            Key = key;
            Name = name;
            Timeout = timeout;
        }
    }
}
