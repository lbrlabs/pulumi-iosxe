// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    [IosxeResourceType("iosxe:iosxe/classMap:ClassMap")]
    public partial class ClassMap : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Class-Map description
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// match name of service template activated on session
        /// </summary>
        [Output("matchActivatedServiceTemplates")]
        public Output<ImmutableArray<Outputs.ClassMapMatchActivatedServiceTemplate>> MatchActivatedServiceTemplates { get; private set; } = null!;

        /// <summary>
        /// authorized
        /// </summary>
        [Output("matchAuthorizationStatusAuthorized")]
        public Output<bool?> MatchAuthorizationStatusAuthorized { get; private set; } = null!;

        /// <summary>
        /// unauthorized
        /// </summary>
        [Output("matchAuthorizationStatusUnauthorized")]
        public Output<bool?> MatchAuthorizationStatusUnauthorized { get; private set; } = null!;

        /// <summary>
        /// greater than
        /// </summary>
        [Output("matchAuthorizingMethodPriorityGreaterThans")]
        public Output<ImmutableArray<int>> MatchAuthorizingMethodPriorityGreaterThans { get; private set; } = null!;

        /// <summary>
        /// dot1x
        /// </summary>
        [Output("matchMethodDot1x")]
        public Output<bool?> MatchMethodDot1x { get; private set; } = null!;

        /// <summary>
        /// mab
        /// </summary>
        [Output("matchMethodMab")]
        public Output<bool?> MatchMethodMab { get; private set; } = null!;

        /// <summary>
        /// aaa timeout type
        /// </summary>
        [Output("matchResultTypeAaaTimeout")]
        public Output<bool?> MatchResultTypeAaaTimeout { get; private set; } = null!;

        /// <summary>
        /// agent not found type
        /// </summary>
        [Output("matchResultTypeMethodDot1xAgentNotFound")]
        public Output<bool?> MatchResultTypeMethodDot1xAgentNotFound { get; private set; } = null!;

        /// <summary>
        /// failure type
        /// </summary>
        [Output("matchResultTypeMethodDot1xAuthoritative")]
        public Output<bool?> MatchResultTypeMethodDot1xAuthoritative { get; private set; } = null!;

        /// <summary>
        /// method_timeout type
        /// </summary>
        [Output("matchResultTypeMethodDot1xMethodTimeout")]
        public Output<bool?> MatchResultTypeMethodDot1xMethodTimeout { get; private set; } = null!;

        /// <summary>
        /// failure type
        /// </summary>
        [Output("matchResultTypeMethodMabAuthoritative")]
        public Output<bool?> MatchResultTypeMethodMabAuthoritative { get; private set; } = null!;

        /// <summary>
        /// name of the class map
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
        /// </summary>
        [Output("prematch")]
        public Output<string> Prematch { get; private set; } = null!;

        /// <summary>
        /// Domain name of the class map
        /// </summary>
        [Output("subscriber")]
        public Output<bool?> Subscriber { get; private set; } = null!;

        /// <summary>
        /// type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
        /// `stack`, `traffic`
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ClassMap resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClassMap(string name, ClassMapArgs args, CustomResourceOptions? options = null)
            : base("iosxe:iosxe/classMap:ClassMap", name, args ?? new ClassMapArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClassMap(string name, Input<string> id, ClassMapState? state = null, CustomResourceOptions? options = null)
            : base("iosxe:iosxe/classMap:ClassMap", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClassMap resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClassMap Get(string name, Input<string> id, ClassMapState? state = null, CustomResourceOptions? options = null)
        {
            return new ClassMap(name, id, state, options);
        }
    }

    public sealed class ClassMapArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Class-Map description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("matchActivatedServiceTemplates")]
        private InputList<Inputs.ClassMapMatchActivatedServiceTemplateArgs>? _matchActivatedServiceTemplates;

        /// <summary>
        /// match name of service template activated on session
        /// </summary>
        public InputList<Inputs.ClassMapMatchActivatedServiceTemplateArgs> MatchActivatedServiceTemplates
        {
            get => _matchActivatedServiceTemplates ?? (_matchActivatedServiceTemplates = new InputList<Inputs.ClassMapMatchActivatedServiceTemplateArgs>());
            set => _matchActivatedServiceTemplates = value;
        }

        /// <summary>
        /// authorized
        /// </summary>
        [Input("matchAuthorizationStatusAuthorized")]
        public Input<bool>? MatchAuthorizationStatusAuthorized { get; set; }

        /// <summary>
        /// unauthorized
        /// </summary>
        [Input("matchAuthorizationStatusUnauthorized")]
        public Input<bool>? MatchAuthorizationStatusUnauthorized { get; set; }

        [Input("matchAuthorizingMethodPriorityGreaterThans")]
        private InputList<int>? _matchAuthorizingMethodPriorityGreaterThans;

        /// <summary>
        /// greater than
        /// </summary>
        public InputList<int> MatchAuthorizingMethodPriorityGreaterThans
        {
            get => _matchAuthorizingMethodPriorityGreaterThans ?? (_matchAuthorizingMethodPriorityGreaterThans = new InputList<int>());
            set => _matchAuthorizingMethodPriorityGreaterThans = value;
        }

        /// <summary>
        /// dot1x
        /// </summary>
        [Input("matchMethodDot1x")]
        public Input<bool>? MatchMethodDot1x { get; set; }

        /// <summary>
        /// mab
        /// </summary>
        [Input("matchMethodMab")]
        public Input<bool>? MatchMethodMab { get; set; }

        /// <summary>
        /// aaa timeout type
        /// </summary>
        [Input("matchResultTypeAaaTimeout")]
        public Input<bool>? MatchResultTypeAaaTimeout { get; set; }

        /// <summary>
        /// agent not found type
        /// </summary>
        [Input("matchResultTypeMethodDot1xAgentNotFound")]
        public Input<bool>? MatchResultTypeMethodDot1xAgentNotFound { get; set; }

        /// <summary>
        /// failure type
        /// </summary>
        [Input("matchResultTypeMethodDot1xAuthoritative")]
        public Input<bool>? MatchResultTypeMethodDot1xAuthoritative { get; set; }

        /// <summary>
        /// method_timeout type
        /// </summary>
        [Input("matchResultTypeMethodDot1xMethodTimeout")]
        public Input<bool>? MatchResultTypeMethodDot1xMethodTimeout { get; set; }

        /// <summary>
        /// failure type
        /// </summary>
        [Input("matchResultTypeMethodMabAuthoritative")]
        public Input<bool>? MatchResultTypeMethodMabAuthoritative { get; set; }

        /// <summary>
        /// name of the class map
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
        /// </summary>
        [Input("prematch", required: true)]
        public Input<string> Prematch { get; set; } = null!;

        /// <summary>
        /// Domain name of the class map
        /// </summary>
        [Input("subscriber")]
        public Input<bool>? Subscriber { get; set; }

        /// <summary>
        /// type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
        /// `stack`, `traffic`
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ClassMapArgs()
        {
        }
        public static new ClassMapArgs Empty => new ClassMapArgs();
    }

    public sealed class ClassMapState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Class-Map description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("matchActivatedServiceTemplates")]
        private InputList<Inputs.ClassMapMatchActivatedServiceTemplateGetArgs>? _matchActivatedServiceTemplates;

        /// <summary>
        /// match name of service template activated on session
        /// </summary>
        public InputList<Inputs.ClassMapMatchActivatedServiceTemplateGetArgs> MatchActivatedServiceTemplates
        {
            get => _matchActivatedServiceTemplates ?? (_matchActivatedServiceTemplates = new InputList<Inputs.ClassMapMatchActivatedServiceTemplateGetArgs>());
            set => _matchActivatedServiceTemplates = value;
        }

        /// <summary>
        /// authorized
        /// </summary>
        [Input("matchAuthorizationStatusAuthorized")]
        public Input<bool>? MatchAuthorizationStatusAuthorized { get; set; }

        /// <summary>
        /// unauthorized
        /// </summary>
        [Input("matchAuthorizationStatusUnauthorized")]
        public Input<bool>? MatchAuthorizationStatusUnauthorized { get; set; }

        [Input("matchAuthorizingMethodPriorityGreaterThans")]
        private InputList<int>? _matchAuthorizingMethodPriorityGreaterThans;

        /// <summary>
        /// greater than
        /// </summary>
        public InputList<int> MatchAuthorizingMethodPriorityGreaterThans
        {
            get => _matchAuthorizingMethodPriorityGreaterThans ?? (_matchAuthorizingMethodPriorityGreaterThans = new InputList<int>());
            set => _matchAuthorizingMethodPriorityGreaterThans = value;
        }

        /// <summary>
        /// dot1x
        /// </summary>
        [Input("matchMethodDot1x")]
        public Input<bool>? MatchMethodDot1x { get; set; }

        /// <summary>
        /// mab
        /// </summary>
        [Input("matchMethodMab")]
        public Input<bool>? MatchMethodMab { get; set; }

        /// <summary>
        /// aaa timeout type
        /// </summary>
        [Input("matchResultTypeAaaTimeout")]
        public Input<bool>? MatchResultTypeAaaTimeout { get; set; }

        /// <summary>
        /// agent not found type
        /// </summary>
        [Input("matchResultTypeMethodDot1xAgentNotFound")]
        public Input<bool>? MatchResultTypeMethodDot1xAgentNotFound { get; set; }

        /// <summary>
        /// failure type
        /// </summary>
        [Input("matchResultTypeMethodDot1xAuthoritative")]
        public Input<bool>? MatchResultTypeMethodDot1xAuthoritative { get; set; }

        /// <summary>
        /// method_timeout type
        /// </summary>
        [Input("matchResultTypeMethodDot1xMethodTimeout")]
        public Input<bool>? MatchResultTypeMethodDot1xMethodTimeout { get; set; }

        /// <summary>
        /// failure type
        /// </summary>
        [Input("matchResultTypeMethodMabAuthoritative")]
        public Input<bool>? MatchResultTypeMethodMabAuthoritative { get; set; }

        /// <summary>
        /// name of the class map
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
        /// </summary>
        [Input("prematch")]
        public Input<string>? Prematch { get; set; }

        /// <summary>
        /// Domain name of the class map
        /// </summary>
        [Input("subscriber")]
        public Input<bool>? Subscriber { get; set; }

        /// <summary>
        /// type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
        /// `stack`, `traffic`
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ClassMapState()
        {
        }
        public static new ClassMapState Empty => new ClassMapState();
    }
}
