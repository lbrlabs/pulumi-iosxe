// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    public static class GetRouteMap
    {
        public static Task<GetRouteMapResult> InvokeAsync(GetRouteMapArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRouteMapResult>("iosxe:iosxe/getRouteMap:getRouteMap", args ?? new GetRouteMapArgs(), options.WithDefaults());

        public static Output<GetRouteMapResult> Invoke(GetRouteMapInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRouteMapResult>("iosxe:iosxe/getRouteMap:getRouteMap", args ?? new GetRouteMapInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRouteMapArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetRouteMapArgs()
        {
        }
        public static new GetRouteMapArgs Empty => new GetRouteMapArgs();
    }

    public sealed class GetRouteMapInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetRouteMapInvokeArgs()
        {
        }
        public static new GetRouteMapInvokeArgs Empty => new GetRouteMapInvokeArgs();
    }


    [OutputType]
    public sealed class GetRouteMapResult
    {
        public readonly string? Device;
        public readonly ImmutableArray<Outputs.GetRouteMapEntryResult> Entries;
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetRouteMapResult(
            string? device,

            ImmutableArray<Outputs.GetRouteMapEntryResult> entries,

            string id,

            string name)
        {
            Device = device;
            Entries = entries;
            Id = id;
            Name = name;
        }
    }
}
