// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    public static class GetCdp
    {
        public static Task<GetCdpResult> InvokeAsync(GetCdpArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCdpResult>("iosxe:iosxe/getCdp:getCdp", args ?? new GetCdpArgs(), options.WithDefaults());

        public static Output<GetCdpResult> Invoke(GetCdpInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCdpResult>("iosxe:iosxe/getCdp:getCdp", args ?? new GetCdpInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCdpArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        public GetCdpArgs()
        {
        }
        public static new GetCdpArgs Empty => new GetCdpArgs();
    }

    public sealed class GetCdpInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        public GetCdpInvokeArgs()
        {
        }
        public static new GetCdpInvokeArgs Empty => new GetCdpInvokeArgs();
    }


    [OutputType]
    public sealed class GetCdpResult
    {
        public readonly string? Device;
        public readonly string FilterTlvList;
        public readonly int Holdtime;
        public readonly string Id;
        public readonly bool Run;
        public readonly int Timer;
        public readonly ImmutableArray<Outputs.GetCdpTlvListResult> TlvLists;

        [OutputConstructor]
        private GetCdpResult(
            string? device,

            string filterTlvList,

            int holdtime,

            string id,

            bool run,

            int timer,

            ImmutableArray<Outputs.GetCdpTlvListResult> tlvLists)
        {
            Device = device;
            FilterTlvList = filterTlvList;
            Holdtime = holdtime;
            Id = id;
            Run = run;
            Timer = timer;
            TlvLists = tlvLists;
        }
    }
}
