// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    public static class GetArp
    {
        public static Task<GetArpResult> InvokeAsync(GetArpArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetArpResult>("iosxe:iosxe/getArp:getArp", args ?? new GetArpArgs(), options.WithDefaults());

        public static Output<GetArpResult> Invoke(GetArpInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetArpResult>("iosxe:iosxe/getArp:getArp", args ?? new GetArpInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetArpArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        public GetArpArgs()
        {
        }
        public static new GetArpArgs Empty => new GetArpArgs();
    }

    public sealed class GetArpInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        public GetArpInvokeArgs()
        {
        }
        public static new GetArpInvokeArgs Empty => new GetArpInvokeArgs();
    }


    [OutputType]
    public sealed class GetArpResult
    {
        public readonly string? Device;
        public readonly int EntryLearn;
        public readonly string Id;
        public readonly int IncompleteEntries;
        public readonly ImmutableArray<Outputs.GetArpInspectionFilterResult> InspectionFilters;
        public readonly int InspectionLogBufferEntries;
        public readonly int InspectionLogBufferLogsEntries;
        public readonly int InspectionLogBufferLogsInterval;
        public readonly bool InspectionValidateAllowZeros;
        public readonly bool InspectionValidateDstMac;
        public readonly bool InspectionValidateIp;
        public readonly bool InspectionValidateSrcMac;
        public readonly string InspectionVlan;
        public readonly bool ProxyDisable;

        [OutputConstructor]
        private GetArpResult(
            string? device,

            int entryLearn,

            string id,

            int incompleteEntries,

            ImmutableArray<Outputs.GetArpInspectionFilterResult> inspectionFilters,

            int inspectionLogBufferEntries,

            int inspectionLogBufferLogsEntries,

            int inspectionLogBufferLogsInterval,

            bool inspectionValidateAllowZeros,

            bool inspectionValidateDstMac,

            bool inspectionValidateIp,

            bool inspectionValidateSrcMac,

            string inspectionVlan,

            bool proxyDisable)
        {
            Device = device;
            EntryLearn = entryLearn;
            Id = id;
            IncompleteEntries = incompleteEntries;
            InspectionFilters = inspectionFilters;
            InspectionLogBufferEntries = inspectionLogBufferEntries;
            InspectionLogBufferLogsEntries = inspectionLogBufferLogsEntries;
            InspectionLogBufferLogsInterval = inspectionLogBufferLogsInterval;
            InspectionValidateAllowZeros = inspectionValidateAllowZeros;
            InspectionValidateDstMac = inspectionValidateDstMac;
            InspectionValidateIp = inspectionValidateIp;
            InspectionValidateSrcMac = inspectionValidateSrcMac;
            InspectionVlan = inspectionVlan;
            ProxyDisable = proxyDisable;
        }
    }
}
