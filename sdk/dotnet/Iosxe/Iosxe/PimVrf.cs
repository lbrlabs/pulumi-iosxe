// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    [IosxeResourceType("iosxe:iosxe/pimVrf:PimVrf")]
    public partial class PimVrf : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configure AutoRP global operations
        /// </summary>
        [Output("autorp")]
        public Output<bool?> Autorp { get; private set; } = null!;

        /// <summary>
        /// Allow AutoRP packets across sparse mode interface
        /// </summary>
        [Output("autorpListener")]
        public Output<bool?> AutorpListener { get; private set; } = null!;

        /// <summary>
        /// BSR RP candidate filter
        /// </summary>
        [Output("bsrCandidateAcceptRpCandidate")]
        public Output<string?> BsrCandidateAcceptRpCandidate { get; private set; } = null!;

        /// <summary>
        /// Loopback interface - Range: `0`-`2147483647`
        /// </summary>
        [Output("bsrCandidateLoopback")]
        public Output<int?> BsrCandidateLoopback { get; private set; } = null!;

        /// <summary>
        /// Hash Mask length for RP selection - Range: `0`-`32`
        /// </summary>
        [Output("bsrCandidateMask")]
        public Output<int?> BsrCandidateMask { get; private set; } = null!;

        /// <summary>
        /// Priority value for candidate bootstrap router - Range: `0`-`255`
        /// </summary>
        [Output("bsrCandidatePriority")]
        public Output<int?> BsrCandidatePriority { get; private set; } = null!;

        /// <summary>
        /// Cache outgoing interface RPF info
        /// </summary>
        [Output("cacheRpfOif")]
        public Output<bool?> CacheRpfOif { get; private set; } = null!;

        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Output("deleteMode")]
        public Output<string?> DeleteMode { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// IP address of Rendezvous-point for group
        /// </summary>
        [Output("rpAddress")]
        public Output<string?> RpAddress { get; private set; } = null!;

        /// <summary>
        /// Group range treated in bidirectional shared-tree mode
        /// </summary>
        [Output("rpAddressBidir")]
        public Output<bool?> RpAddressBidir { get; private set; } = null!;

        /// <summary>
        /// Overrides dynamically learnt RP mappings
        /// </summary>
        [Output("rpAddressOverride")]
        public Output<bool?> RpAddressOverride { get; private set; } = null!;

        /// <summary>
        /// PIM RP-address (Rendezvous Point)
        /// </summary>
        [Output("rpAddresses")]
        public Output<ImmutableArray<Outputs.PimVrfRpAddress>> RpAddresses { get; private set; } = null!;

        /// <summary>
        /// To be a PIM version 2 RP candidate
        /// </summary>
        [Output("rpCandidates")]
        public Output<ImmutableArray<Outputs.PimVrfRpCandidate>> RpCandidates { get; private set; } = null!;

        /// <summary>
        /// Use 232/8 group range for SSM
        /// </summary>
        [Output("ssmDefault")]
        public Output<bool?> SsmDefault { get; private set; } = null!;

        /// <summary>
        /// ACL for group range to be used for SSM
        /// </summary>
        [Output("ssmRange")]
        public Output<string?> SsmRange { get; private set; } = null!;

        [Output("vrf")]
        public Output<string> Vrf { get; private set; } = null!;


        /// <summary>
        /// Create a PimVrf resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PimVrf(string name, PimVrfArgs args, CustomResourceOptions? options = null)
            : base("iosxe:iosxe/pimVrf:PimVrf", name, args ?? new PimVrfArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PimVrf(string name, Input<string> id, PimVrfState? state = null, CustomResourceOptions? options = null)
            : base("iosxe:iosxe/pimVrf:PimVrf", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PimVrf resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PimVrf Get(string name, Input<string> id, PimVrfState? state = null, CustomResourceOptions? options = null)
        {
            return new PimVrf(name, id, state, options);
        }
    }

    public sealed class PimVrfArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configure AutoRP global operations
        /// </summary>
        [Input("autorp")]
        public Input<bool>? Autorp { get; set; }

        /// <summary>
        /// Allow AutoRP packets across sparse mode interface
        /// </summary>
        [Input("autorpListener")]
        public Input<bool>? AutorpListener { get; set; }

        /// <summary>
        /// BSR RP candidate filter
        /// </summary>
        [Input("bsrCandidateAcceptRpCandidate")]
        public Input<string>? BsrCandidateAcceptRpCandidate { get; set; }

        /// <summary>
        /// Loopback interface - Range: `0`-`2147483647`
        /// </summary>
        [Input("bsrCandidateLoopback")]
        public Input<int>? BsrCandidateLoopback { get; set; }

        /// <summary>
        /// Hash Mask length for RP selection - Range: `0`-`32`
        /// </summary>
        [Input("bsrCandidateMask")]
        public Input<int>? BsrCandidateMask { get; set; }

        /// <summary>
        /// Priority value for candidate bootstrap router - Range: `0`-`255`
        /// </summary>
        [Input("bsrCandidatePriority")]
        public Input<int>? BsrCandidatePriority { get; set; }

        /// <summary>
        /// Cache outgoing interface RPF info
        /// </summary>
        [Input("cacheRpfOif")]
        public Input<bool>? CacheRpfOif { get; set; }

        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Input("deleteMode")]
        public Input<string>? DeleteMode { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// IP address of Rendezvous-point for group
        /// </summary>
        [Input("rpAddress")]
        public Input<string>? RpAddress { get; set; }

        /// <summary>
        /// Group range treated in bidirectional shared-tree mode
        /// </summary>
        [Input("rpAddressBidir")]
        public Input<bool>? RpAddressBidir { get; set; }

        /// <summary>
        /// Overrides dynamically learnt RP mappings
        /// </summary>
        [Input("rpAddressOverride")]
        public Input<bool>? RpAddressOverride { get; set; }

        [Input("rpAddresses")]
        private InputList<Inputs.PimVrfRpAddressArgs>? _rpAddresses;

        /// <summary>
        /// PIM RP-address (Rendezvous Point)
        /// </summary>
        public InputList<Inputs.PimVrfRpAddressArgs> RpAddresses
        {
            get => _rpAddresses ?? (_rpAddresses = new InputList<Inputs.PimVrfRpAddressArgs>());
            set => _rpAddresses = value;
        }

        [Input("rpCandidates")]
        private InputList<Inputs.PimVrfRpCandidateArgs>? _rpCandidates;

        /// <summary>
        /// To be a PIM version 2 RP candidate
        /// </summary>
        public InputList<Inputs.PimVrfRpCandidateArgs> RpCandidates
        {
            get => _rpCandidates ?? (_rpCandidates = new InputList<Inputs.PimVrfRpCandidateArgs>());
            set => _rpCandidates = value;
        }

        /// <summary>
        /// Use 232/8 group range for SSM
        /// </summary>
        [Input("ssmDefault")]
        public Input<bool>? SsmDefault { get; set; }

        /// <summary>
        /// ACL for group range to be used for SSM
        /// </summary>
        [Input("ssmRange")]
        public Input<string>? SsmRange { get; set; }

        [Input("vrf", required: true)]
        public Input<string> Vrf { get; set; } = null!;

        public PimVrfArgs()
        {
        }
        public static new PimVrfArgs Empty => new PimVrfArgs();
    }

    public sealed class PimVrfState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configure AutoRP global operations
        /// </summary>
        [Input("autorp")]
        public Input<bool>? Autorp { get; set; }

        /// <summary>
        /// Allow AutoRP packets across sparse mode interface
        /// </summary>
        [Input("autorpListener")]
        public Input<bool>? AutorpListener { get; set; }

        /// <summary>
        /// BSR RP candidate filter
        /// </summary>
        [Input("bsrCandidateAcceptRpCandidate")]
        public Input<string>? BsrCandidateAcceptRpCandidate { get; set; }

        /// <summary>
        /// Loopback interface - Range: `0`-`2147483647`
        /// </summary>
        [Input("bsrCandidateLoopback")]
        public Input<int>? BsrCandidateLoopback { get; set; }

        /// <summary>
        /// Hash Mask length for RP selection - Range: `0`-`32`
        /// </summary>
        [Input("bsrCandidateMask")]
        public Input<int>? BsrCandidateMask { get; set; }

        /// <summary>
        /// Priority value for candidate bootstrap router - Range: `0`-`255`
        /// </summary>
        [Input("bsrCandidatePriority")]
        public Input<int>? BsrCandidatePriority { get; set; }

        /// <summary>
        /// Cache outgoing interface RPF info
        /// </summary>
        [Input("cacheRpfOif")]
        public Input<bool>? CacheRpfOif { get; set; }

        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Input("deleteMode")]
        public Input<string>? DeleteMode { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// IP address of Rendezvous-point for group
        /// </summary>
        [Input("rpAddress")]
        public Input<string>? RpAddress { get; set; }

        /// <summary>
        /// Group range treated in bidirectional shared-tree mode
        /// </summary>
        [Input("rpAddressBidir")]
        public Input<bool>? RpAddressBidir { get; set; }

        /// <summary>
        /// Overrides dynamically learnt RP mappings
        /// </summary>
        [Input("rpAddressOverride")]
        public Input<bool>? RpAddressOverride { get; set; }

        [Input("rpAddresses")]
        private InputList<Inputs.PimVrfRpAddressGetArgs>? _rpAddresses;

        /// <summary>
        /// PIM RP-address (Rendezvous Point)
        /// </summary>
        public InputList<Inputs.PimVrfRpAddressGetArgs> RpAddresses
        {
            get => _rpAddresses ?? (_rpAddresses = new InputList<Inputs.PimVrfRpAddressGetArgs>());
            set => _rpAddresses = value;
        }

        [Input("rpCandidates")]
        private InputList<Inputs.PimVrfRpCandidateGetArgs>? _rpCandidates;

        /// <summary>
        /// To be a PIM version 2 RP candidate
        /// </summary>
        public InputList<Inputs.PimVrfRpCandidateGetArgs> RpCandidates
        {
            get => _rpCandidates ?? (_rpCandidates = new InputList<Inputs.PimVrfRpCandidateGetArgs>());
            set => _rpCandidates = value;
        }

        /// <summary>
        /// Use 232/8 group range for SSM
        /// </summary>
        [Input("ssmDefault")]
        public Input<bool>? SsmDefault { get; set; }

        /// <summary>
        /// ACL for group range to be used for SSM
        /// </summary>
        [Input("ssmRange")]
        public Input<string>? SsmRange { get; set; }

        [Input("vrf")]
        public Input<string>? Vrf { get; set; }

        public PimVrfState()
        {
        }
        public static new PimVrfState Empty => new PimVrfState();
    }
}
