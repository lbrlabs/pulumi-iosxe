// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    [IosxeResourceType("iosxe:iosxe/loggingIpv6HostTransport:LoggingIpv6HostTransport")]
    public partial class LoggingIpv6HostTransport : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Output("deleteMode")]
        public Output<string?> DeleteMode { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        [Output("ipv6Host")]
        public Output<string> Ipv6Host { get; private set; } = null!;

        /// <summary>
        /// Port Number List
        /// </summary>
        [Output("transportTcpPorts")]
        public Output<ImmutableArray<Outputs.LoggingIpv6HostTransportTransportTcpPort>> TransportTcpPorts { get; private set; } = null!;

        /// <summary>
        /// Port Number List
        /// </summary>
        [Output("transportTlsPorts")]
        public Output<ImmutableArray<Outputs.LoggingIpv6HostTransportTransportTlsPort>> TransportTlsPorts { get; private set; } = null!;

        /// <summary>
        /// Port Number List
        /// </summary>
        [Output("transportUdpPorts")]
        public Output<ImmutableArray<Outputs.LoggingIpv6HostTransportTransportUdpPort>> TransportUdpPorts { get; private set; } = null!;


        /// <summary>
        /// Create a LoggingIpv6HostTransport resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LoggingIpv6HostTransport(string name, LoggingIpv6HostTransportArgs args, CustomResourceOptions? options = null)
            : base("iosxe:iosxe/loggingIpv6HostTransport:LoggingIpv6HostTransport", name, args ?? new LoggingIpv6HostTransportArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LoggingIpv6HostTransport(string name, Input<string> id, LoggingIpv6HostTransportState? state = null, CustomResourceOptions? options = null)
            : base("iosxe:iosxe/loggingIpv6HostTransport:LoggingIpv6HostTransport", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LoggingIpv6HostTransport resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LoggingIpv6HostTransport Get(string name, Input<string> id, LoggingIpv6HostTransportState? state = null, CustomResourceOptions? options = null)
        {
            return new LoggingIpv6HostTransport(name, id, state, options);
        }
    }

    public sealed class LoggingIpv6HostTransportArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Input("deleteMode")]
        public Input<string>? DeleteMode { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("ipv6Host", required: true)]
        public Input<string> Ipv6Host { get; set; } = null!;

        [Input("transportTcpPorts")]
        private InputList<Inputs.LoggingIpv6HostTransportTransportTcpPortArgs>? _transportTcpPorts;

        /// <summary>
        /// Port Number List
        /// </summary>
        public InputList<Inputs.LoggingIpv6HostTransportTransportTcpPortArgs> TransportTcpPorts
        {
            get => _transportTcpPorts ?? (_transportTcpPorts = new InputList<Inputs.LoggingIpv6HostTransportTransportTcpPortArgs>());
            set => _transportTcpPorts = value;
        }

        [Input("transportTlsPorts")]
        private InputList<Inputs.LoggingIpv6HostTransportTransportTlsPortArgs>? _transportTlsPorts;

        /// <summary>
        /// Port Number List
        /// </summary>
        public InputList<Inputs.LoggingIpv6HostTransportTransportTlsPortArgs> TransportTlsPorts
        {
            get => _transportTlsPorts ?? (_transportTlsPorts = new InputList<Inputs.LoggingIpv6HostTransportTransportTlsPortArgs>());
            set => _transportTlsPorts = value;
        }

        [Input("transportUdpPorts")]
        private InputList<Inputs.LoggingIpv6HostTransportTransportUdpPortArgs>? _transportUdpPorts;

        /// <summary>
        /// Port Number List
        /// </summary>
        public InputList<Inputs.LoggingIpv6HostTransportTransportUdpPortArgs> TransportUdpPorts
        {
            get => _transportUdpPorts ?? (_transportUdpPorts = new InputList<Inputs.LoggingIpv6HostTransportTransportUdpPortArgs>());
            set => _transportUdpPorts = value;
        }

        public LoggingIpv6HostTransportArgs()
        {
        }
        public static new LoggingIpv6HostTransportArgs Empty => new LoggingIpv6HostTransportArgs();
    }

    public sealed class LoggingIpv6HostTransportState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Input("deleteMode")]
        public Input<string>? DeleteMode { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("ipv6Host")]
        public Input<string>? Ipv6Host { get; set; }

        [Input("transportTcpPorts")]
        private InputList<Inputs.LoggingIpv6HostTransportTransportTcpPortGetArgs>? _transportTcpPorts;

        /// <summary>
        /// Port Number List
        /// </summary>
        public InputList<Inputs.LoggingIpv6HostTransportTransportTcpPortGetArgs> TransportTcpPorts
        {
            get => _transportTcpPorts ?? (_transportTcpPorts = new InputList<Inputs.LoggingIpv6HostTransportTransportTcpPortGetArgs>());
            set => _transportTcpPorts = value;
        }

        [Input("transportTlsPorts")]
        private InputList<Inputs.LoggingIpv6HostTransportTransportTlsPortGetArgs>? _transportTlsPorts;

        /// <summary>
        /// Port Number List
        /// </summary>
        public InputList<Inputs.LoggingIpv6HostTransportTransportTlsPortGetArgs> TransportTlsPorts
        {
            get => _transportTlsPorts ?? (_transportTlsPorts = new InputList<Inputs.LoggingIpv6HostTransportTransportTlsPortGetArgs>());
            set => _transportTlsPorts = value;
        }

        [Input("transportUdpPorts")]
        private InputList<Inputs.LoggingIpv6HostTransportTransportUdpPortGetArgs>? _transportUdpPorts;

        /// <summary>
        /// Port Number List
        /// </summary>
        public InputList<Inputs.LoggingIpv6HostTransportTransportUdpPortGetArgs> TransportUdpPorts
        {
            get => _transportUdpPorts ?? (_transportUdpPorts = new InputList<Inputs.LoggingIpv6HostTransportTransportUdpPortGetArgs>());
            set => _transportUdpPorts = value;
        }

        public LoggingIpv6HostTransportState()
        {
        }
        public static new LoggingIpv6HostTransportState Empty => new LoggingIpv6HostTransportState();
    }
}
