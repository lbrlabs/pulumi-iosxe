// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe.Iosxe
{
    public static class GetRestconf
    {
        public static Task<GetRestconfResult> InvokeAsync(GetRestconfArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRestconfResult>("iosxe:iosxe/getRestconf:getRestconf", args ?? new GetRestconfArgs(), options.WithDefaults());

        public static Output<GetRestconfResult> Invoke(GetRestconfInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRestconfResult>("iosxe:iosxe/getRestconf:getRestconf", args ?? new GetRestconfInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRestconfArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public string? Device { get; set; }

        [Input("path", required: true)]
        public string Path { get; set; } = null!;

        public GetRestconfArgs()
        {
        }
        public static new GetRestconfArgs Empty => new GetRestconfArgs();
    }

    public sealed class GetRestconfInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        public GetRestconfInvokeArgs()
        {
        }
        public static new GetRestconfInvokeArgs Empty => new GetRestconfInvokeArgs();
    }


    [OutputType]
    public sealed class GetRestconfResult
    {
        public readonly ImmutableDictionary<string, string> Attributes;
        public readonly string? Device;
        public readonly string Id;
        public readonly string Path;

        [OutputConstructor]
        private GetRestconfResult(
            ImmutableDictionary<string, string> attributes,

            string? device,

            string id,

            string path)
        {
            Attributes = attributes;
            Device = device;
            Id = id;
            Path = path;
        }
    }
}
