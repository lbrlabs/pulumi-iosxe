// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe
{
    public static class GetInterfaceMpls
    {
        /// <summary>
        /// This data source can read the Interface MPLS configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetInterfaceMpls.Invoke(new()
        ///     {
        ///         Name = "1",
        ///         Type = "Loopback",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetInterfaceMplsResult> InvokeAsync(GetInterfaceMplsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInterfaceMplsResult>("iosxe:index/getInterfaceMpls:getInterfaceMpls", args ?? new GetInterfaceMplsArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Interface MPLS configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetInterfaceMpls.Invoke(new()
        ///     {
        ///         Name = "1",
        ///         Type = "Loopback",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetInterfaceMplsResult> Invoke(GetInterfaceMplsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInterfaceMplsResult>("iosxe:index/getInterfaceMpls:getInterfaceMpls", args ?? new GetInterfaceMplsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInterfaceMplsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Interface type
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        public GetInterfaceMplsArgs()
        {
        }
        public static new GetInterfaceMplsArgs Empty => new GetInterfaceMplsArgs();
    }

    public sealed class GetInterfaceMplsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Interface type
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public GetInterfaceMplsInvokeArgs()
        {
        }
        public static new GetInterfaceMplsInvokeArgs Empty => new GetInterfaceMplsInvokeArgs();
    }


    [OutputType]
    public sealed class GetInterfaceMplsResult
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// The path of the retrieved object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Configure dynamic MPLS forwarding for IP
        /// </summary>
        public readonly bool Ip;
        /// <summary>
        /// Set MPLS Maximum Transmission Unit
        /// </summary>
        public readonly string Mtu;
        public readonly string Name;
        /// <summary>
        /// Interface type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetInterfaceMplsResult(
            string? device,

            string id,

            bool ip,

            string mtu,

            string name,

            string type)
        {
            Device = device;
            Id = id;
            Ip = ip;
            Mtu = mtu;
            Name = name;
            Type = type;
        }
    }
}
