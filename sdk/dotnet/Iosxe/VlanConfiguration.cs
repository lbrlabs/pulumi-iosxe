// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe
{
    /// <summary>
    /// This resource can manage the VLAN Configuration configuration.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Iosxe = Lbrlabs.PulumiPackage.Iosxe;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Iosxe.VlanConfiguration("example", new()
    ///     {
    ///         EvpnInstance = 123,
    ///         EvpnInstanceVni = 10123,
    ///         VlanId = 123,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import iosxe:index/vlanConfiguration:VlanConfiguration example "Cisco-IOS-XE-native:native/vlan/Cisco-IOS-XE-vlan:configuration=123"
    /// ```
    /// </summary>
    [IosxeResourceType("iosxe:index/vlanConfiguration:VlanConfiguration")]
    public partial class VlanConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enter VFI name
        /// </summary>
        [Output("accessVfi")]
        public Output<string?> AccessVfi { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// - Range: `1`-`65535`
        /// </summary>
        [Output("evpnInstance")]
        public Output<int?> EvpnInstance { get; private set; } = null!;

        /// <summary>
        /// VxLAN VNI value - Range: `4096`-`16777215`
        /// </summary>
        [Output("evpnInstanceVni")]
        public Output<int?> EvpnInstanceVni { get; private set; } = null!;

        /// <summary>
        /// VLAN ID List Eg. 1-10,15 - Range: `1`-`4094`
        /// </summary>
        [Output("vlanId")]
        public Output<int> VlanId { get; private set; } = null!;

        /// <summary>
        /// VxLAN VNI value - Range: `4096`-`16777215`
        /// </summary>
        [Output("vni")]
        public Output<int?> Vni { get; private set; } = null!;


        /// <summary>
        /// Create a VlanConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VlanConfiguration(string name, VlanConfigurationArgs args, CustomResourceOptions? options = null)
            : base("iosxe:index/vlanConfiguration:VlanConfiguration", name, args ?? new VlanConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VlanConfiguration(string name, Input<string> id, VlanConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("iosxe:index/vlanConfiguration:VlanConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VlanConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VlanConfiguration Get(string name, Input<string> id, VlanConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new VlanConfiguration(name, id, state, options);
        }
    }

    public sealed class VlanConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enter VFI name
        /// </summary>
        [Input("accessVfi")]
        public Input<string>? AccessVfi { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// - Range: `1`-`65535`
        /// </summary>
        [Input("evpnInstance")]
        public Input<int>? EvpnInstance { get; set; }

        /// <summary>
        /// VxLAN VNI value - Range: `4096`-`16777215`
        /// </summary>
        [Input("evpnInstanceVni")]
        public Input<int>? EvpnInstanceVni { get; set; }

        /// <summary>
        /// VLAN ID List Eg. 1-10,15 - Range: `1`-`4094`
        /// </summary>
        [Input("vlanId", required: true)]
        public Input<int> VlanId { get; set; } = null!;

        /// <summary>
        /// VxLAN VNI value - Range: `4096`-`16777215`
        /// </summary>
        [Input("vni")]
        public Input<int>? Vni { get; set; }

        public VlanConfigurationArgs()
        {
        }
        public static new VlanConfigurationArgs Empty => new VlanConfigurationArgs();
    }

    public sealed class VlanConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enter VFI name
        /// </summary>
        [Input("accessVfi")]
        public Input<string>? AccessVfi { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// - Range: `1`-`65535`
        /// </summary>
        [Input("evpnInstance")]
        public Input<int>? EvpnInstance { get; set; }

        /// <summary>
        /// VxLAN VNI value - Range: `4096`-`16777215`
        /// </summary>
        [Input("evpnInstanceVni")]
        public Input<int>? EvpnInstanceVni { get; set; }

        /// <summary>
        /// VLAN ID List Eg. 1-10,15 - Range: `1`-`4094`
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        /// <summary>
        /// VxLAN VNI value - Range: `4096`-`16777215`
        /// </summary>
        [Input("vni")]
        public Input<int>? Vni { get; set; }

        public VlanConfigurationState()
        {
        }
        public static new VlanConfigurationState Empty => new VlanConfigurationState();
    }
}
