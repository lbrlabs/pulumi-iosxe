// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe
{
    public static class GetAaaAuthentication
    {
        /// <summary>
        /// This data source can read the AAA Authentication configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetAaaAuthentication.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAaaAuthenticationResult> InvokeAsync(GetAaaAuthenticationArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAaaAuthenticationResult>("iosxe:index/getAaaAuthentication:getAaaAuthentication", args ?? new GetAaaAuthenticationArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the AAA Authentication configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetAaaAuthentication.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAaaAuthenticationResult> Invoke(GetAaaAuthenticationInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAaaAuthenticationResult>("iosxe:index/getAaaAuthentication:getAaaAuthentication", args ?? new GetAaaAuthenticationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAaaAuthenticationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        public GetAaaAuthenticationArgs()
        {
        }
        public static new GetAaaAuthenticationArgs Empty => new GetAaaAuthenticationArgs();
    }

    public sealed class GetAaaAuthenticationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        public GetAaaAuthenticationInvokeArgs()
        {
        }
        public static new GetAaaAuthenticationInvokeArgs Empty => new GetAaaAuthenticationInvokeArgs();
    }


    [OutputType]
    public sealed class GetAaaAuthenticationResult
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// Use Server-group
        /// </summary>
        public readonly string Dot1xDefaultA1Group;
        /// <summary>
        /// Use local username authentication
        /// </summary>
        public readonly bool Dot1xDefaultA1Local;
        /// <summary>
        /// Use Server-group
        /// </summary>
        public readonly string Dot1xDefaultA2Group;
        /// <summary>
        /// Use local username authentication
        /// </summary>
        public readonly bool Dot1xDefaultA2Local;
        /// <summary>
        /// Use Server-group
        /// </summary>
        public readonly string Dot1xDefaultA3Group;
        /// <summary>
        /// Use local username authentication
        /// </summary>
        public readonly bool Dot1xDefaultA3Local;
        /// <summary>
        /// Use Server-group
        /// </summary>
        public readonly string Dot1xDefaultA4Group;
        /// <summary>
        /// Use local username authentication
        /// </summary>
        public readonly bool Dot1xDefaultA4Local;
        /// <summary>
        /// The path of the retrieved object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Set authentication lists for logins.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAaaAuthenticationLoginResult> Logins;

        [OutputConstructor]
        private GetAaaAuthenticationResult(
            string? device,

            string dot1xDefaultA1Group,

            bool dot1xDefaultA1Local,

            string dot1xDefaultA2Group,

            bool dot1xDefaultA2Local,

            string dot1xDefaultA3Group,

            bool dot1xDefaultA3Local,

            string dot1xDefaultA4Group,

            bool dot1xDefaultA4Local,

            string id,

            ImmutableArray<Outputs.GetAaaAuthenticationLoginResult> logins)
        {
            Device = device;
            Dot1xDefaultA1Group = dot1xDefaultA1Group;
            Dot1xDefaultA1Local = dot1xDefaultA1Local;
            Dot1xDefaultA2Group = dot1xDefaultA2Group;
            Dot1xDefaultA2Local = dot1xDefaultA2Local;
            Dot1xDefaultA3Group = dot1xDefaultA3Group;
            Dot1xDefaultA3Local = dot1xDefaultA3Local;
            Dot1xDefaultA4Group = dot1xDefaultA4Group;
            Dot1xDefaultA4Local = dot1xDefaultA4Local;
            Id = id;
            Logins = logins;
        }
    }
}
