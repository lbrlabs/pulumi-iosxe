// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe
{
    public static class GetInterfaceLoopback
    {
        /// <summary>
        /// This data source can read the Interface Loopback configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetInterfaceLoopback.Invoke(new()
        ///     {
        ///         Name = 100,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetInterfaceLoopbackResult> InvokeAsync(GetInterfaceLoopbackArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInterfaceLoopbackResult>("iosxe:index/getInterfaceLoopback:getInterfaceLoopback", args ?? new GetInterfaceLoopbackArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Interface Loopback configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetInterfaceLoopback.Invoke(new()
        ///     {
        ///         Name = 100,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetInterfaceLoopbackResult> Invoke(GetInterfaceLoopbackInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInterfaceLoopbackResult>("iosxe:index/getInterfaceLoopback:getInterfaceLoopback", args ?? new GetInterfaceLoopbackInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInterfaceLoopbackArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        [Input("name", required: true)]
        public int Name { get; set; }

        public GetInterfaceLoopbackArgs()
        {
        }
        public static new GetInterfaceLoopbackArgs Empty => new GetInterfaceLoopbackArgs();
    }

    public sealed class GetInterfaceLoopbackInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("name", required: true)]
        public Input<int> Name { get; set; } = null!;

        public GetInterfaceLoopbackInvokeArgs()
        {
        }
        public static new GetInterfaceLoopbackInvokeArgs Empty => new GetInterfaceLoopbackInvokeArgs();
    }


    [OutputType]
    public sealed class GetInterfaceLoopbackResult
    {
        /// <summary>
        /// Set ARP cache timeout
        /// </summary>
        public readonly int ArpTimeout;
        /// <summary>
        /// Interface specific description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// The path of the retrieved object.
        /// </summary>
        public readonly string Id;
        public readonly string IpAccessGroupIn;
        /// <summary>
        /// inbound packets
        /// </summary>
        public readonly bool IpAccessGroupInEnable;
        public readonly string IpAccessGroupOut;
        /// <summary>
        /// outbound packets
        /// </summary>
        public readonly bool IpAccessGroupOutEnable;
        /// <summary>
        /// Enable proxy ARP
        /// </summary>
        public readonly bool IpProxyArp;
        /// <summary>
        /// Enable sending ICMP Redirect messages
        /// </summary>
        public readonly bool IpRedirects;
        /// <summary>
        /// Enable sending ICMP Unreachable messages
        /// </summary>
        public readonly bool IpUnreachables;
        public readonly string Ipv4Address;
        public readonly string Ipv4AddressMask;
        /// <summary>
        /// Insert default route
        /// </summary>
        public readonly bool Ipv6AddressAutoconfigDefault;
        /// <summary>
        /// Obtain IPv6 address from DHCP server
        /// </summary>
        public readonly bool Ipv6AddressDhcp;
        public readonly ImmutableArray<Outputs.GetInterfaceLoopbackIpv6AddressResult> Ipv6Addresses;
        /// <summary>
        /// Enable IPv6 on interface
        /// </summary>
        public readonly bool Ipv6Enable;
        public readonly ImmutableArray<Outputs.GetInterfaceLoopbackIpv6LinkLocalAddressResult> Ipv6LinkLocalAddresses;
        /// <summary>
        /// Set IPv6 Maximum Transmission Unit
        /// </summary>
        public readonly int Ipv6Mtu;
        /// <summary>
        /// Suppress all IPv6 RA
        /// </summary>
        public readonly bool Ipv6NdRaSuppressAll;
        public readonly int Name;
        /// <summary>
        /// Shutdown the selected interface
        /// </summary>
        public readonly bool Shutdown;
        /// <summary>
        /// Configure forwarding table
        /// </summary>
        public readonly string VrfForwarding;

        [OutputConstructor]
        private GetInterfaceLoopbackResult(
            int arpTimeout,

            string description,

            string? device,

            string id,

            string ipAccessGroupIn,

            bool ipAccessGroupInEnable,

            string ipAccessGroupOut,

            bool ipAccessGroupOutEnable,

            bool ipProxyArp,

            bool ipRedirects,

            bool ipUnreachables,

            string ipv4Address,

            string ipv4AddressMask,

            bool ipv6AddressAutoconfigDefault,

            bool ipv6AddressDhcp,

            ImmutableArray<Outputs.GetInterfaceLoopbackIpv6AddressResult> ipv6Addresses,

            bool ipv6Enable,

            ImmutableArray<Outputs.GetInterfaceLoopbackIpv6LinkLocalAddressResult> ipv6LinkLocalAddresses,

            int ipv6Mtu,

            bool ipv6NdRaSuppressAll,

            int name,

            bool shutdown,

            string vrfForwarding)
        {
            ArpTimeout = arpTimeout;
            Description = description;
            Device = device;
            Id = id;
            IpAccessGroupIn = ipAccessGroupIn;
            IpAccessGroupInEnable = ipAccessGroupInEnable;
            IpAccessGroupOut = ipAccessGroupOut;
            IpAccessGroupOutEnable = ipAccessGroupOutEnable;
            IpProxyArp = ipProxyArp;
            IpRedirects = ipRedirects;
            IpUnreachables = ipUnreachables;
            Ipv4Address = ipv4Address;
            Ipv4AddressMask = ipv4AddressMask;
            Ipv6AddressAutoconfigDefault = ipv6AddressAutoconfigDefault;
            Ipv6AddressDhcp = ipv6AddressDhcp;
            Ipv6Addresses = ipv6Addresses;
            Ipv6Enable = ipv6Enable;
            Ipv6LinkLocalAddresses = ipv6LinkLocalAddresses;
            Ipv6Mtu = ipv6Mtu;
            Ipv6NdRaSuppressAll = ipv6NdRaSuppressAll;
            Name = name;
            Shutdown = shutdown;
            VrfForwarding = vrfForwarding;
        }
    }
}
