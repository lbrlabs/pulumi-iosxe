// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe
{
    public static class GetAccessListExtended
    {
        /// <summary>
        /// This data source can read the Access List Extended configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetAccessListExtended.Invoke(new()
        ///     {
        ///         Name = "EACL1",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAccessListExtendedResult> InvokeAsync(GetAccessListExtendedArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccessListExtendedResult>("iosxe:index/getAccessListExtended:getAccessListExtended", args ?? new GetAccessListExtendedArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Access List Extended configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetAccessListExtended.Invoke(new()
        ///     {
        ///         Name = "EACL1",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAccessListExtendedResult> Invoke(GetAccessListExtendedInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessListExtendedResult>("iosxe:index/getAccessListExtended:getAccessListExtended", args ?? new GetAccessListExtendedInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccessListExtendedArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetAccessListExtendedArgs()
        {
        }
        public static new GetAccessListExtendedArgs Empty => new GetAccessListExtendedArgs();
    }

    public sealed class GetAccessListExtendedInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetAccessListExtendedInvokeArgs()
        {
        }
        public static new GetAccessListExtendedInvokeArgs Empty => new GetAccessListExtendedInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccessListExtendedResult
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        public readonly ImmutableArray<Outputs.GetAccessListExtendedEntryResult> Entries;
        /// <summary>
        /// The path of the retrieved object.
        /// </summary>
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetAccessListExtendedResult(
            string? device,

            ImmutableArray<Outputs.GetAccessListExtendedEntryResult> entries,

            string id,

            string name)
        {
            Device = device;
            Entries = entries;
            Id = id;
            Name = name;
        }
    }
}
