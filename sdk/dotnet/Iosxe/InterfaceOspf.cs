// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe
{
    /// <summary>
    /// This resource can manage the Interface OSPF configuration.
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import iosxe:index/interfaceOspf:InterfaceOspf example "Cisco-IOS-XE-native:native/interface/Loopback=1/ip/Cisco-IOS-XE-ospf:router-ospf/ospf"
    /// ```
    /// </summary>
    [IosxeResourceType("iosxe:index/interfaceOspf:InterfaceOspf")]
    public partial class InterfaceOspf : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Route cost of this interface - Range: `1`-`65535`
        /// </summary>
        [Output("cost")]
        public Output<int?> Cost { get; private set; } = null!;

        /// <summary>
        /// Interval after which a neighbor is declared dead - Range: `1`-`65535`
        /// </summary>
        [Output("deadInterval")]
        public Output<int?> DeadInterval { get; private set; } = null!;

        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Output("deleteMode")]
        public Output<string?> DeleteMode { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// Time between HELLO packets - Range: `1`-`65535`
        /// </summary>
        [Output("helloInterval")]
        public Output<int?> HelloInterval { get; private set; } = null!;

        /// <summary>
        /// Message digest authentication password (key)
        /// </summary>
        [Output("messageDigestKeys")]
        public Output<ImmutableArray<Outputs.InterfaceOspfMessageDigestKey>> MessageDigestKeys { get; private set; } = null!;

        /// <summary>
        /// Ignores the MTU in DBD packets
        /// </summary>
        [Output("mtuIgnore")]
        public Output<bool?> MtuIgnore { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specify OSPF broadcast multi-access network
        /// </summary>
        [Output("networkTypeBroadcast")]
        public Output<bool?> NetworkTypeBroadcast { get; private set; } = null!;

        /// <summary>
        /// Specify OSPF NBMA network
        /// </summary>
        [Output("networkTypeNonBroadcast")]
        public Output<bool?> NetworkTypeNonBroadcast { get; private set; } = null!;

        /// <summary>
        /// Specify OSPF point-to-multipoint network
        /// </summary>
        [Output("networkTypePointToMultipoint")]
        public Output<bool?> NetworkTypePointToMultipoint { get; private set; } = null!;

        /// <summary>
        /// Specify OSPF point-to-point network
        /// </summary>
        [Output("networkTypePointToPoint")]
        public Output<bool?> NetworkTypePointToPoint { get; private set; } = null!;

        /// <summary>
        /// Router priority - Range: `0`-`255`
        /// </summary>
        [Output("priority")]
        public Output<int?> Priority { get; private set; } = null!;

        [Output("processIds")]
        public Output<ImmutableArray<Outputs.InterfaceOspfProcessId>> ProcessIds { get; private set; } = null!;

        /// <summary>
        /// IP hops - Range: `1`-`254`
        /// </summary>
        [Output("ttlSecurityHops")]
        public Output<int?> TtlSecurityHops { get; private set; } = null!;

        /// <summary>
        /// Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
        /// `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
        /// `Port-channel`
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a InterfaceOspf resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InterfaceOspf(string name, InterfaceOspfArgs args, CustomResourceOptions? options = null)
            : base("iosxe:index/interfaceOspf:InterfaceOspf", name, args ?? new InterfaceOspfArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InterfaceOspf(string name, Input<string> id, InterfaceOspfState? state = null, CustomResourceOptions? options = null)
            : base("iosxe:index/interfaceOspf:InterfaceOspf", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InterfaceOspf resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InterfaceOspf Get(string name, Input<string> id, InterfaceOspfState? state = null, CustomResourceOptions? options = null)
        {
            return new InterfaceOspf(name, id, state, options);
        }
    }

    public sealed class InterfaceOspfArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Route cost of this interface - Range: `1`-`65535`
        /// </summary>
        [Input("cost")]
        public Input<int>? Cost { get; set; }

        /// <summary>
        /// Interval after which a neighbor is declared dead - Range: `1`-`65535`
        /// </summary>
        [Input("deadInterval")]
        public Input<int>? DeadInterval { get; set; }

        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Input("deleteMode")]
        public Input<string>? DeleteMode { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Time between HELLO packets - Range: `1`-`65535`
        /// </summary>
        [Input("helloInterval")]
        public Input<int>? HelloInterval { get; set; }

        [Input("messageDigestKeys")]
        private InputList<Inputs.InterfaceOspfMessageDigestKeyArgs>? _messageDigestKeys;

        /// <summary>
        /// Message digest authentication password (key)
        /// </summary>
        public InputList<Inputs.InterfaceOspfMessageDigestKeyArgs> MessageDigestKeys
        {
            get => _messageDigestKeys ?? (_messageDigestKeys = new InputList<Inputs.InterfaceOspfMessageDigestKeyArgs>());
            set => _messageDigestKeys = value;
        }

        /// <summary>
        /// Ignores the MTU in DBD packets
        /// </summary>
        [Input("mtuIgnore")]
        public Input<bool>? MtuIgnore { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specify OSPF broadcast multi-access network
        /// </summary>
        [Input("networkTypeBroadcast")]
        public Input<bool>? NetworkTypeBroadcast { get; set; }

        /// <summary>
        /// Specify OSPF NBMA network
        /// </summary>
        [Input("networkTypeNonBroadcast")]
        public Input<bool>? NetworkTypeNonBroadcast { get; set; }

        /// <summary>
        /// Specify OSPF point-to-multipoint network
        /// </summary>
        [Input("networkTypePointToMultipoint")]
        public Input<bool>? NetworkTypePointToMultipoint { get; set; }

        /// <summary>
        /// Specify OSPF point-to-point network
        /// </summary>
        [Input("networkTypePointToPoint")]
        public Input<bool>? NetworkTypePointToPoint { get; set; }

        /// <summary>
        /// Router priority - Range: `0`-`255`
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        [Input("processIds")]
        private InputList<Inputs.InterfaceOspfProcessIdArgs>? _processIds;
        public InputList<Inputs.InterfaceOspfProcessIdArgs> ProcessIds
        {
            get => _processIds ?? (_processIds = new InputList<Inputs.InterfaceOspfProcessIdArgs>());
            set => _processIds = value;
        }

        /// <summary>
        /// IP hops - Range: `1`-`254`
        /// </summary>
        [Input("ttlSecurityHops")]
        public Input<int>? TtlSecurityHops { get; set; }

        /// <summary>
        /// Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
        /// `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
        /// `Port-channel`
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public InterfaceOspfArgs()
        {
        }
        public static new InterfaceOspfArgs Empty => new InterfaceOspfArgs();
    }

    public sealed class InterfaceOspfState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Route cost of this interface - Range: `1`-`65535`
        /// </summary>
        [Input("cost")]
        public Input<int>? Cost { get; set; }

        /// <summary>
        /// Interval after which a neighbor is declared dead - Range: `1`-`65535`
        /// </summary>
        [Input("deadInterval")]
        public Input<int>? DeadInterval { get; set; }

        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Input("deleteMode")]
        public Input<string>? DeleteMode { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Time between HELLO packets - Range: `1`-`65535`
        /// </summary>
        [Input("helloInterval")]
        public Input<int>? HelloInterval { get; set; }

        [Input("messageDigestKeys")]
        private InputList<Inputs.InterfaceOspfMessageDigestKeyGetArgs>? _messageDigestKeys;

        /// <summary>
        /// Message digest authentication password (key)
        /// </summary>
        public InputList<Inputs.InterfaceOspfMessageDigestKeyGetArgs> MessageDigestKeys
        {
            get => _messageDigestKeys ?? (_messageDigestKeys = new InputList<Inputs.InterfaceOspfMessageDigestKeyGetArgs>());
            set => _messageDigestKeys = value;
        }

        /// <summary>
        /// Ignores the MTU in DBD packets
        /// </summary>
        [Input("mtuIgnore")]
        public Input<bool>? MtuIgnore { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specify OSPF broadcast multi-access network
        /// </summary>
        [Input("networkTypeBroadcast")]
        public Input<bool>? NetworkTypeBroadcast { get; set; }

        /// <summary>
        /// Specify OSPF NBMA network
        /// </summary>
        [Input("networkTypeNonBroadcast")]
        public Input<bool>? NetworkTypeNonBroadcast { get; set; }

        /// <summary>
        /// Specify OSPF point-to-multipoint network
        /// </summary>
        [Input("networkTypePointToMultipoint")]
        public Input<bool>? NetworkTypePointToMultipoint { get; set; }

        /// <summary>
        /// Specify OSPF point-to-point network
        /// </summary>
        [Input("networkTypePointToPoint")]
        public Input<bool>? NetworkTypePointToPoint { get; set; }

        /// <summary>
        /// Router priority - Range: `0`-`255`
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        [Input("processIds")]
        private InputList<Inputs.InterfaceOspfProcessIdGetArgs>? _processIds;
        public InputList<Inputs.InterfaceOspfProcessIdGetArgs> ProcessIds
        {
            get => _processIds ?? (_processIds = new InputList<Inputs.InterfaceOspfProcessIdGetArgs>());
            set => _processIds = value;
        }

        /// <summary>
        /// IP hops - Range: `1`-`254`
        /// </summary>
        [Input("ttlSecurityHops")]
        public Input<int>? TtlSecurityHops { get; set; }

        /// <summary>
        /// Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
        /// `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
        /// `Port-channel`
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public InterfaceOspfState()
        {
        }
        public static new InterfaceOspfState Empty => new InterfaceOspfState();
    }
}
