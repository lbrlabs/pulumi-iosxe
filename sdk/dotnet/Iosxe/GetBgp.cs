// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe
{
    public static class GetBgp
    {
        /// <summary>
        /// This data source can read the BGP configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetBgp.Invoke(new()
        ///     {
        ///         Asn = "65000",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBgpResult> InvokeAsync(GetBgpArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBgpResult>("iosxe:index/getBgp:getBgp", args ?? new GetBgpArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the BGP configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetBgp.Invoke(new()
        ///     {
        ///         Asn = "65000",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBgpResult> Invoke(GetBgpInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBgpResult>("iosxe:index/getBgp:getBgp", args ?? new GetBgpInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBgpArgs : global::Pulumi.InvokeArgs
    {
        [Input("asn", required: true)]
        public string Asn { get; set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        public GetBgpArgs()
        {
        }
        public static new GetBgpArgs Empty => new GetBgpArgs();
    }

    public sealed class GetBgpInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("asn", required: true)]
        public Input<string> Asn { get; set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        public GetBgpInvokeArgs()
        {
        }
        public static new GetBgpInvokeArgs Empty => new GetBgpInvokeArgs();
    }


    [OutputType]
    public sealed class GetBgpResult
    {
        public readonly string Asn;
        /// <summary>
        /// Activate ipv4-unicast for a peer by default
        /// </summary>
        public readonly bool DefaultIpv4Unicast;
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// The path of the retrieved object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Log neighbor up/down and reset reason
        /// </summary>
        public readonly bool LogNeighborChanges;
        /// <summary>
        /// Loopback interface
        /// </summary>
        public readonly int RouterIdLoopback;

        [OutputConstructor]
        private GetBgpResult(
            string asn,

            bool defaultIpv4Unicast,

            string? device,

            string id,

            bool logNeighborChanges,

            int routerIdLoopback)
        {
            Asn = asn;
            DefaultIpv4Unicast = defaultIpv4Unicast;
            Device = device;
            Id = id;
            LogNeighborChanges = logNeighborChanges;
            RouterIdLoopback = routerIdLoopback;
        }
    }
}
