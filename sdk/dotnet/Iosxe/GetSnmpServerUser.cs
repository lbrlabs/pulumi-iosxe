// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe
{
    public static class GetSnmpServerUser
    {
        /// <summary>
        /// This data source can read the SNMP Server User configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetSnmpServerUser.Invoke(new()
        ///     {
        ///         Grpname = "GROUP1",
        ///         Username = "USER1",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSnmpServerUserResult> InvokeAsync(GetSnmpServerUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSnmpServerUserResult>("iosxe:index/getSnmpServerUser:getSnmpServerUser", args ?? new GetSnmpServerUserArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the SNMP Server User configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetSnmpServerUser.Invoke(new()
        ///     {
        ///         Grpname = "GROUP1",
        ///         Username = "USER1",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSnmpServerUserResult> Invoke(GetSnmpServerUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnmpServerUserResult>("iosxe:index/getSnmpServerUser:getSnmpServerUser", args ?? new GetSnmpServerUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSnmpServerUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        /// <summary>
        /// Group to which the user belongs
        /// </summary>
        [Input("grpname", required: true)]
        public string Grpname { get; set; } = null!;

        /// <summary>
        /// Name of the user
        /// </summary>
        [Input("username", required: true)]
        public string Username { get; set; } = null!;

        public GetSnmpServerUserArgs()
        {
        }
        public static new GetSnmpServerUserArgs Empty => new GetSnmpServerUserArgs();
    }

    public sealed class GetSnmpServerUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// Group to which the user belongs
        /// </summary>
        [Input("grpname", required: true)]
        public Input<string> Grpname { get; set; } = null!;

        /// <summary>
        /// Name of the user
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public GetSnmpServerUserInvokeArgs()
        {
        }
        public static new GetSnmpServerUserInvokeArgs Empty => new GetSnmpServerUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetSnmpServerUserResult
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// Group to which the user belongs
        /// </summary>
        public readonly string Grpname;
        /// <summary>
        /// The path of the retrieved object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the user
        /// </summary>
        public readonly string Username;
        /// <summary>
        /// Access-list name
        /// </summary>
        public readonly string V3AuthAccessAclName;
        /// <summary>
        /// Specify IPv6 Named Access-List
        /// </summary>
        public readonly string V3AuthAccessIpv6Acl;
        /// <summary>
        /// Standard IP Access-list allowing access with this community string
        /// </summary>
        public readonly int V3AuthAccessStandardAcl;
        /// <summary>
        /// Use HMAC SHA/MD5 algorithm for authentication
        /// </summary>
        public readonly string V3AuthAlgorithm;
        /// <summary>
        /// Authentication password for user
        /// </summary>
        public readonly string V3AuthPassword;
        /// <summary>
        /// Access-list name
        /// </summary>
        public readonly string V3AuthPrivAesAccessAclName;
        /// <summary>
        /// Specify IPv6 Named Access-List
        /// </summary>
        public readonly string V3AuthPrivAesAccessIpv6Acl;
        /// <summary>
        /// Standard IP Access-list allowing access with this community string
        /// </summary>
        public readonly int V3AuthPrivAesAccessStandardAcl;
        public readonly string V3AuthPrivAesAlgorithm;
        /// <summary>
        /// Authentication password for user
        /// </summary>
        public readonly string V3AuthPrivAesPassword;
        /// <summary>
        /// Access-list name
        /// </summary>
        public readonly string V3AuthPrivDes3AccessAclName;
        /// <summary>
        /// Specify IPv6 Named Access-List
        /// </summary>
        public readonly string V3AuthPrivDes3AccessIpv6Acl;
        /// <summary>
        /// Standard IP Access-list allowing access with this community string
        /// </summary>
        public readonly int V3AuthPrivDes3AccessStandardAcl;
        /// <summary>
        /// Authentication password for user
        /// </summary>
        public readonly string V3AuthPrivDes3Password;
        /// <summary>
        /// Access-list name
        /// </summary>
        public readonly string V3AuthPrivDesAccessAclName;
        /// <summary>
        /// Specify IPv6 Named Access-List
        /// </summary>
        public readonly string V3AuthPrivDesAccessIpv6Acl;
        /// <summary>
        /// Standard IP Access-list allowing access with this community string
        /// </summary>
        public readonly int V3AuthPrivDesAccessStandardAcl;
        /// <summary>
        /// Authentication password for user
        /// </summary>
        public readonly string V3AuthPrivDesPassword;

        [OutputConstructor]
        private GetSnmpServerUserResult(
            string? device,

            string grpname,

            string id,

            string username,

            string v3AuthAccessAclName,

            string v3AuthAccessIpv6Acl,

            int v3AuthAccessStandardAcl,

            string v3AuthAlgorithm,

            string v3AuthPassword,

            string v3AuthPrivAesAccessAclName,

            string v3AuthPrivAesAccessIpv6Acl,

            int v3AuthPrivAesAccessStandardAcl,

            string v3AuthPrivAesAlgorithm,

            string v3AuthPrivAesPassword,

            string v3AuthPrivDes3AccessAclName,

            string v3AuthPrivDes3AccessIpv6Acl,

            int v3AuthPrivDes3AccessStandardAcl,

            string v3AuthPrivDes3Password,

            string v3AuthPrivDesAccessAclName,

            string v3AuthPrivDesAccessIpv6Acl,

            int v3AuthPrivDesAccessStandardAcl,

            string v3AuthPrivDesPassword)
        {
            Device = device;
            Grpname = grpname;
            Id = id;
            Username = username;
            V3AuthAccessAclName = v3AuthAccessAclName;
            V3AuthAccessIpv6Acl = v3AuthAccessIpv6Acl;
            V3AuthAccessStandardAcl = v3AuthAccessStandardAcl;
            V3AuthAlgorithm = v3AuthAlgorithm;
            V3AuthPassword = v3AuthPassword;
            V3AuthPrivAesAccessAclName = v3AuthPrivAesAccessAclName;
            V3AuthPrivAesAccessIpv6Acl = v3AuthPrivAesAccessIpv6Acl;
            V3AuthPrivAesAccessStandardAcl = v3AuthPrivAesAccessStandardAcl;
            V3AuthPrivAesAlgorithm = v3AuthPrivAesAlgorithm;
            V3AuthPrivAesPassword = v3AuthPrivAesPassword;
            V3AuthPrivDes3AccessAclName = v3AuthPrivDes3AccessAclName;
            V3AuthPrivDes3AccessIpv6Acl = v3AuthPrivDes3AccessIpv6Acl;
            V3AuthPrivDes3AccessStandardAcl = v3AuthPrivDes3AccessStandardAcl;
            V3AuthPrivDes3Password = v3AuthPrivDes3Password;
            V3AuthPrivDesAccessAclName = v3AuthPrivDesAccessAclName;
            V3AuthPrivDesAccessIpv6Acl = v3AuthPrivDesAccessIpv6Acl;
            V3AuthPrivDesAccessStandardAcl = v3AuthPrivDesAccessStandardAcl;
            V3AuthPrivDesPassword = v3AuthPrivDesPassword;
        }
    }
}
