// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe
{
    /// <summary>
    /// This resource can manage the AAA Accounting configuration.
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import iosxe:index/aaaAccounting:AaaAccounting example "Cisco-IOS-XE-native:native/aaa/Cisco-IOS-XE-aaa:accounting"
    /// ```
    /// </summary>
    [IosxeResourceType("iosxe:index/aaaAccounting:AaaAccounting")]
    public partial class AaaAccounting : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Output("deleteMode")]
        public Output<string?> DeleteMode { get; private set; } = null!;

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// For starting an exec (shell).
        /// </summary>
        [Output("execs")]
        public Output<ImmutableArray<Outputs.AaaAccountingExec>> Execs { get; private set; } = null!;

        /// <summary>
        /// Use Server-group
        /// </summary>
        [Output("identityDefaultStartStopGroup1")]
        public Output<string?> IdentityDefaultStartStopGroup1 { get; private set; } = null!;

        /// <summary>
        /// Use Server-group
        /// </summary>
        [Output("identityDefaultStartStopGroup2")]
        public Output<string?> IdentityDefaultStartStopGroup2 { get; private set; } = null!;

        /// <summary>
        /// Use Server-group
        /// </summary>
        [Output("identityDefaultStartStopGroup3")]
        public Output<string?> IdentityDefaultStartStopGroup3 { get; private set; } = null!;

        /// <summary>
        /// Use Server-group
        /// </summary>
        [Output("identityDefaultStartStopGroup4")]
        public Output<string?> IdentityDefaultStartStopGroup4 { get; private set; } = null!;

        /// <summary>
        /// For network services. (PPP, SLIP, ARAP)
        /// </summary>
        [Output("networks")]
        public Output<ImmutableArray<Outputs.AaaAccountingNetwork>> Networks { get; private set; } = null!;

        /// <summary>
        /// Guarantee system accounting as first record.
        /// </summary>
        [Output("systemGuaranteeFirst")]
        public Output<bool?> SystemGuaranteeFirst { get; private set; } = null!;

        /// <summary>
        /// Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
        /// </summary>
        [Output("updateNewinfoPeriodic")]
        public Output<int?> UpdateNewinfoPeriodic { get; private set; } = null!;


        /// <summary>
        /// Create a AaaAccounting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AaaAccounting(string name, AaaAccountingArgs? args = null, CustomResourceOptions? options = null)
            : base("iosxe:index/aaaAccounting:AaaAccounting", name, args ?? new AaaAccountingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AaaAccounting(string name, Input<string> id, AaaAccountingState? state = null, CustomResourceOptions? options = null)
            : base("iosxe:index/aaaAccounting:AaaAccounting", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AaaAccounting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AaaAccounting Get(string name, Input<string> id, AaaAccountingState? state = null, CustomResourceOptions? options = null)
        {
            return new AaaAccounting(name, id, state, options);
        }
    }

    public sealed class AaaAccountingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Input("deleteMode")]
        public Input<string>? DeleteMode { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("execs")]
        private InputList<Inputs.AaaAccountingExecArgs>? _execs;

        /// <summary>
        /// For starting an exec (shell).
        /// </summary>
        public InputList<Inputs.AaaAccountingExecArgs> Execs
        {
            get => _execs ?? (_execs = new InputList<Inputs.AaaAccountingExecArgs>());
            set => _execs = value;
        }

        /// <summary>
        /// Use Server-group
        /// </summary>
        [Input("identityDefaultStartStopGroup1")]
        public Input<string>? IdentityDefaultStartStopGroup1 { get; set; }

        /// <summary>
        /// Use Server-group
        /// </summary>
        [Input("identityDefaultStartStopGroup2")]
        public Input<string>? IdentityDefaultStartStopGroup2 { get; set; }

        /// <summary>
        /// Use Server-group
        /// </summary>
        [Input("identityDefaultStartStopGroup3")]
        public Input<string>? IdentityDefaultStartStopGroup3 { get; set; }

        /// <summary>
        /// Use Server-group
        /// </summary>
        [Input("identityDefaultStartStopGroup4")]
        public Input<string>? IdentityDefaultStartStopGroup4 { get; set; }

        [Input("networks")]
        private InputList<Inputs.AaaAccountingNetworkArgs>? _networks;

        /// <summary>
        /// For network services. (PPP, SLIP, ARAP)
        /// </summary>
        public InputList<Inputs.AaaAccountingNetworkArgs> Networks
        {
            get => _networks ?? (_networks = new InputList<Inputs.AaaAccountingNetworkArgs>());
            set => _networks = value;
        }

        /// <summary>
        /// Guarantee system accounting as first record.
        /// </summary>
        [Input("systemGuaranteeFirst")]
        public Input<bool>? SystemGuaranteeFirst { get; set; }

        /// <summary>
        /// Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
        /// </summary>
        [Input("updateNewinfoPeriodic")]
        public Input<int>? UpdateNewinfoPeriodic { get; set; }

        public AaaAccountingArgs()
        {
        }
        public static new AaaAccountingArgs Empty => new AaaAccountingArgs();
    }

    public sealed class AaaAccountingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
        /// managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
        /// Default value is `all`. - Choices: `all`, `attributes`
        /// </summary>
        [Input("deleteMode")]
        public Input<string>? DeleteMode { get; set; }

        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("execs")]
        private InputList<Inputs.AaaAccountingExecGetArgs>? _execs;

        /// <summary>
        /// For starting an exec (shell).
        /// </summary>
        public InputList<Inputs.AaaAccountingExecGetArgs> Execs
        {
            get => _execs ?? (_execs = new InputList<Inputs.AaaAccountingExecGetArgs>());
            set => _execs = value;
        }

        /// <summary>
        /// Use Server-group
        /// </summary>
        [Input("identityDefaultStartStopGroup1")]
        public Input<string>? IdentityDefaultStartStopGroup1 { get; set; }

        /// <summary>
        /// Use Server-group
        /// </summary>
        [Input("identityDefaultStartStopGroup2")]
        public Input<string>? IdentityDefaultStartStopGroup2 { get; set; }

        /// <summary>
        /// Use Server-group
        /// </summary>
        [Input("identityDefaultStartStopGroup3")]
        public Input<string>? IdentityDefaultStartStopGroup3 { get; set; }

        /// <summary>
        /// Use Server-group
        /// </summary>
        [Input("identityDefaultStartStopGroup4")]
        public Input<string>? IdentityDefaultStartStopGroup4 { get; set; }

        [Input("networks")]
        private InputList<Inputs.AaaAccountingNetworkGetArgs>? _networks;

        /// <summary>
        /// For network services. (PPP, SLIP, ARAP)
        /// </summary>
        public InputList<Inputs.AaaAccountingNetworkGetArgs> Networks
        {
            get => _networks ?? (_networks = new InputList<Inputs.AaaAccountingNetworkGetArgs>());
            set => _networks = value;
        }

        /// <summary>
        /// Guarantee system accounting as first record.
        /// </summary>
        [Input("systemGuaranteeFirst")]
        public Input<bool>? SystemGuaranteeFirst { get; set; }

        /// <summary>
        /// Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`
        /// </summary>
        [Input("updateNewinfoPeriodic")]
        public Input<int>? UpdateNewinfoPeriodic { get; set; }

        public AaaAccountingState()
        {
        }
        public static new AaaAccountingState Empty => new AaaAccountingState();
    }
}
