// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe
{
    /// <summary>
    /// This resource can manage the EVPN Instance configuration.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Iosxe = Lbrlabs.PulumiPackage.Iosxe;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Iosxe.EvpnInstance("example", new()
    ///     {
    ///         EvpnInstanceNum = 10,
    ///         VlanBasedAutoRouteTarget = false,
    ///         VlanBasedDefaultGatewayAdvertise = "enable",
    ///         VlanBasedEncapsulation = "vxlan",
    ///         VlanBasedIpLocalLearningDisable = false,
    ///         VlanBasedIpLocalLearningEnable = true,
    ///         VlanBasedRd = "10:10",
    ///         VlanBasedReOriginateRouteType5 = true,
    ///         VlanBasedReplicationTypeIngress = false,
    ///         VlanBasedReplicationTypeMp2mp = false,
    ///         VlanBasedReplicationTypeP2mp = false,
    ///         VlanBasedReplicationTypeStatic = true,
    ///         VlanBasedRouteTarget = "10:10",
    ///         VlanBasedRouteTargetBoth = "10:10",
    ///         VlanBasedRouteTargetExport = "10:10",
    ///         VlanBasedRouteTargetImport = "10:10",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import iosxe:index/evpnInstance:EvpnInstance example "Cisco-IOS-XE-native:native/l2vpn/Cisco-IOS-XE-l2vpn:evpn_cont/evpn-instance/evpn/instance/instance=10"
    /// ```
    /// </summary>
    [IosxeResourceType("iosxe:index/evpnInstance:EvpnInstance")]
    public partial class EvpnInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Output("device")]
        public Output<string?> Device { get; private set; } = null!;

        /// <summary>
        /// evpn instance number - Range: `1`-`65535`
        /// </summary>
        [Output("evpnInstanceNum")]
        public Output<int> EvpnInstanceNum { get; private set; } = null!;

        /// <summary>
        /// Automatically set a route-target
        /// </summary>
        [Output("vlanBasedAutoRouteTarget")]
        public Output<bool?> VlanBasedAutoRouteTarget { get; private set; } = null!;

        /// <summary>
        /// Advertise Default Gateway MAC/IP routes - Choices: `disable`, `enable`
        /// </summary>
        [Output("vlanBasedDefaultGatewayAdvertise")]
        public Output<string?> VlanBasedDefaultGatewayAdvertise { get; private set; } = null!;

        /// <summary>
        /// Data encapsulation method - Choices: `mpls`, `vxlan`
        /// </summary>
        [Output("vlanBasedEncapsulation")]
        public Output<string?> VlanBasedEncapsulation { get; private set; } = null!;

        /// <summary>
        /// Disable IP local learning from dataplane
        /// </summary>
        [Output("vlanBasedIpLocalLearningDisable")]
        public Output<bool?> VlanBasedIpLocalLearningDisable { get; private set; } = null!;

        /// <summary>
        /// Enable IP local learning from dataplane
        /// </summary>
        [Output("vlanBasedIpLocalLearningEnable")]
        public Output<bool?> VlanBasedIpLocalLearningEnable { get; private set; } = null!;

        /// <summary>
        /// ASN:nn or IP-address:nn
        /// </summary>
        [Output("vlanBasedRd")]
        public Output<string?> VlanBasedRd { get; private set; } = null!;

        /// <summary>
        /// Re-originate route-type 5
        /// </summary>
        [Output("vlanBasedReOriginateRouteType5")]
        public Output<bool?> VlanBasedReOriginateRouteType5 { get; private set; } = null!;

        /// <summary>
        /// Ingress replication
        /// </summary>
        [Output("vlanBasedReplicationTypeIngress")]
        public Output<bool?> VlanBasedReplicationTypeIngress { get; private set; } = null!;

        /// <summary>
        /// mp2mp replication
        /// </summary>
        [Output("vlanBasedReplicationTypeMp2mp")]
        public Output<bool?> VlanBasedReplicationTypeMp2mp { get; private set; } = null!;

        /// <summary>
        /// p2mp replication
        /// </summary>
        [Output("vlanBasedReplicationTypeP2mp")]
        public Output<bool?> VlanBasedReplicationTypeP2mp { get; private set; } = null!;

        /// <summary>
        /// Static replication
        /// </summary>
        [Output("vlanBasedReplicationTypeStatic")]
        public Output<bool?> VlanBasedReplicationTypeStatic { get; private set; } = null!;

        /// <summary>
        /// ASN:nn or IP-address:nn
        /// </summary>
        [Output("vlanBasedRouteTarget")]
        public Output<string?> VlanBasedRouteTarget { get; private set; } = null!;

        /// <summary>
        /// ASN:nn or IP-address:nn
        /// </summary>
        [Output("vlanBasedRouteTargetBoth")]
        public Output<string?> VlanBasedRouteTargetBoth { get; private set; } = null!;

        /// <summary>
        /// ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)
        /// </summary>
        [Output("vlanBasedRouteTargetExport")]
        public Output<string?> VlanBasedRouteTargetExport { get; private set; } = null!;

        /// <summary>
        /// ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)
        /// </summary>
        [Output("vlanBasedRouteTargetImport")]
        public Output<string?> VlanBasedRouteTargetImport { get; private set; } = null!;


        /// <summary>
        /// Create a EvpnInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EvpnInstance(string name, EvpnInstanceArgs args, CustomResourceOptions? options = null)
            : base("iosxe:index/evpnInstance:EvpnInstance", name, args ?? new EvpnInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EvpnInstance(string name, Input<string> id, EvpnInstanceState? state = null, CustomResourceOptions? options = null)
            : base("iosxe:index/evpnInstance:EvpnInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EvpnInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EvpnInstance Get(string name, Input<string> id, EvpnInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new EvpnInstance(name, id, state, options);
        }
    }

    public sealed class EvpnInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// evpn instance number - Range: `1`-`65535`
        /// </summary>
        [Input("evpnInstanceNum", required: true)]
        public Input<int> EvpnInstanceNum { get; set; } = null!;

        /// <summary>
        /// Automatically set a route-target
        /// </summary>
        [Input("vlanBasedAutoRouteTarget")]
        public Input<bool>? VlanBasedAutoRouteTarget { get; set; }

        /// <summary>
        /// Advertise Default Gateway MAC/IP routes - Choices: `disable`, `enable`
        /// </summary>
        [Input("vlanBasedDefaultGatewayAdvertise")]
        public Input<string>? VlanBasedDefaultGatewayAdvertise { get; set; }

        /// <summary>
        /// Data encapsulation method - Choices: `mpls`, `vxlan`
        /// </summary>
        [Input("vlanBasedEncapsulation")]
        public Input<string>? VlanBasedEncapsulation { get; set; }

        /// <summary>
        /// Disable IP local learning from dataplane
        /// </summary>
        [Input("vlanBasedIpLocalLearningDisable")]
        public Input<bool>? VlanBasedIpLocalLearningDisable { get; set; }

        /// <summary>
        /// Enable IP local learning from dataplane
        /// </summary>
        [Input("vlanBasedIpLocalLearningEnable")]
        public Input<bool>? VlanBasedIpLocalLearningEnable { get; set; }

        /// <summary>
        /// ASN:nn or IP-address:nn
        /// </summary>
        [Input("vlanBasedRd")]
        public Input<string>? VlanBasedRd { get; set; }

        /// <summary>
        /// Re-originate route-type 5
        /// </summary>
        [Input("vlanBasedReOriginateRouteType5")]
        public Input<bool>? VlanBasedReOriginateRouteType5 { get; set; }

        /// <summary>
        /// Ingress replication
        /// </summary>
        [Input("vlanBasedReplicationTypeIngress")]
        public Input<bool>? VlanBasedReplicationTypeIngress { get; set; }

        /// <summary>
        /// mp2mp replication
        /// </summary>
        [Input("vlanBasedReplicationTypeMp2mp")]
        public Input<bool>? VlanBasedReplicationTypeMp2mp { get; set; }

        /// <summary>
        /// p2mp replication
        /// </summary>
        [Input("vlanBasedReplicationTypeP2mp")]
        public Input<bool>? VlanBasedReplicationTypeP2mp { get; set; }

        /// <summary>
        /// Static replication
        /// </summary>
        [Input("vlanBasedReplicationTypeStatic")]
        public Input<bool>? VlanBasedReplicationTypeStatic { get; set; }

        /// <summary>
        /// ASN:nn or IP-address:nn
        /// </summary>
        [Input("vlanBasedRouteTarget")]
        public Input<string>? VlanBasedRouteTarget { get; set; }

        /// <summary>
        /// ASN:nn or IP-address:nn
        /// </summary>
        [Input("vlanBasedRouteTargetBoth")]
        public Input<string>? VlanBasedRouteTargetBoth { get; set; }

        /// <summary>
        /// ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)
        /// </summary>
        [Input("vlanBasedRouteTargetExport")]
        public Input<string>? VlanBasedRouteTargetExport { get; set; }

        /// <summary>
        /// ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)
        /// </summary>
        [Input("vlanBasedRouteTargetImport")]
        public Input<string>? VlanBasedRouteTargetImport { get; set; }

        public EvpnInstanceArgs()
        {
        }
        public static new EvpnInstanceArgs Empty => new EvpnInstanceArgs();
    }

    public sealed class EvpnInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        /// <summary>
        /// evpn instance number - Range: `1`-`65535`
        /// </summary>
        [Input("evpnInstanceNum")]
        public Input<int>? EvpnInstanceNum { get; set; }

        /// <summary>
        /// Automatically set a route-target
        /// </summary>
        [Input("vlanBasedAutoRouteTarget")]
        public Input<bool>? VlanBasedAutoRouteTarget { get; set; }

        /// <summary>
        /// Advertise Default Gateway MAC/IP routes - Choices: `disable`, `enable`
        /// </summary>
        [Input("vlanBasedDefaultGatewayAdvertise")]
        public Input<string>? VlanBasedDefaultGatewayAdvertise { get; set; }

        /// <summary>
        /// Data encapsulation method - Choices: `mpls`, `vxlan`
        /// </summary>
        [Input("vlanBasedEncapsulation")]
        public Input<string>? VlanBasedEncapsulation { get; set; }

        /// <summary>
        /// Disable IP local learning from dataplane
        /// </summary>
        [Input("vlanBasedIpLocalLearningDisable")]
        public Input<bool>? VlanBasedIpLocalLearningDisable { get; set; }

        /// <summary>
        /// Enable IP local learning from dataplane
        /// </summary>
        [Input("vlanBasedIpLocalLearningEnable")]
        public Input<bool>? VlanBasedIpLocalLearningEnable { get; set; }

        /// <summary>
        /// ASN:nn or IP-address:nn
        /// </summary>
        [Input("vlanBasedRd")]
        public Input<string>? VlanBasedRd { get; set; }

        /// <summary>
        /// Re-originate route-type 5
        /// </summary>
        [Input("vlanBasedReOriginateRouteType5")]
        public Input<bool>? VlanBasedReOriginateRouteType5 { get; set; }

        /// <summary>
        /// Ingress replication
        /// </summary>
        [Input("vlanBasedReplicationTypeIngress")]
        public Input<bool>? VlanBasedReplicationTypeIngress { get; set; }

        /// <summary>
        /// mp2mp replication
        /// </summary>
        [Input("vlanBasedReplicationTypeMp2mp")]
        public Input<bool>? VlanBasedReplicationTypeMp2mp { get; set; }

        /// <summary>
        /// p2mp replication
        /// </summary>
        [Input("vlanBasedReplicationTypeP2mp")]
        public Input<bool>? VlanBasedReplicationTypeP2mp { get; set; }

        /// <summary>
        /// Static replication
        /// </summary>
        [Input("vlanBasedReplicationTypeStatic")]
        public Input<bool>? VlanBasedReplicationTypeStatic { get; set; }

        /// <summary>
        /// ASN:nn or IP-address:nn
        /// </summary>
        [Input("vlanBasedRouteTarget")]
        public Input<string>? VlanBasedRouteTarget { get; set; }

        /// <summary>
        /// ASN:nn or IP-address:nn
        /// </summary>
        [Input("vlanBasedRouteTargetBoth")]
        public Input<string>? VlanBasedRouteTargetBoth { get; set; }

        /// <summary>
        /// ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)
        /// </summary>
        [Input("vlanBasedRouteTargetExport")]
        public Input<string>? VlanBasedRouteTargetExport { get; set; }

        /// <summary>
        /// ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)
        /// </summary>
        [Input("vlanBasedRouteTargetImport")]
        public Input<string>? VlanBasedRouteTargetImport { get; set; }

        public EvpnInstanceState()
        {
        }
        public static new EvpnInstanceState Empty => new EvpnInstanceState();
    }
}
