// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe
{
    public static class GetBfd
    {
        /// <summary>
        /// This data source can read the BFD configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetBfd.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBfdResult> InvokeAsync(GetBfdArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBfdResult>("iosxe:index/getBfd:getBfd", args ?? new GetBfdArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can read the BFD configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetBfd.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBfdResult> Invoke(GetBfdInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBfdResult>("iosxe:index/getBfd:getBfd", args ?? new GetBfdInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBfdArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        public GetBfdArgs()
        {
        }
        public static new GetBfdArgs Empty => new GetBfdArgs();
    }

    public sealed class GetBfdInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        public GetBfdInvokeArgs()
        {
        }
        public static new GetBfdInvokeArgs Empty => new GetBfdInvokeArgs();
    }


    [OutputType]
    public sealed class GetBfdResult
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// The path of the retrieved object.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// IPv4 Address Family with vrf
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBfdIpv4BothVrfResult> Ipv4BothVrfs;
        /// <summary>
        /// IPv4 Address Family with vrf
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBfdIpv4WithDstVrfResult> Ipv4WithDstVrfs;
        /// <summary>
        /// IPv4 Address Family with vrf
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBfdIpv4WithSrcVrfResult> Ipv4WithSrcVrfs;
        /// <summary>
        /// IPv4 Address Family with vrf
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBfdIpv4WithoutVrfResult> Ipv4WithoutVrfs;
        /// <summary>
        /// IPv6 Address Family with vrf
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBfdIpv6WithBothVrfResult> Ipv6WithBothVrfs;
        /// <summary>
        /// IPv6 Address Family with vrf
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBfdIpv6WithDstVrfResult> Ipv6WithDstVrfs;
        /// <summary>
        /// IPv6 Address Family with vrf
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBfdIpv6WithSrcVrfResult> Ipv6WithSrcVrfs;
        /// <summary>
        /// IPv6 Address Family with vrf
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBfdIpv6WithoutVrfResult> Ipv6WithoutVrfs;
        /// <summary>
        /// Value in ms to use for slow timers
        /// </summary>
        public readonly int SlowTimers;

        [OutputConstructor]
        private GetBfdResult(
            string? device,

            string id,

            ImmutableArray<Outputs.GetBfdIpv4BothVrfResult> ipv4BothVrfs,

            ImmutableArray<Outputs.GetBfdIpv4WithDstVrfResult> ipv4WithDstVrfs,

            ImmutableArray<Outputs.GetBfdIpv4WithSrcVrfResult> ipv4WithSrcVrfs,

            ImmutableArray<Outputs.GetBfdIpv4WithoutVrfResult> ipv4WithoutVrfs,

            ImmutableArray<Outputs.GetBfdIpv6WithBothVrfResult> ipv6WithBothVrfs,

            ImmutableArray<Outputs.GetBfdIpv6WithDstVrfResult> ipv6WithDstVrfs,

            ImmutableArray<Outputs.GetBfdIpv6WithSrcVrfResult> ipv6WithSrcVrfs,

            ImmutableArray<Outputs.GetBfdIpv6WithoutVrfResult> ipv6WithoutVrfs,

            int slowTimers)
        {
            Device = device;
            Id = id;
            Ipv4BothVrfs = ipv4BothVrfs;
            Ipv4WithDstVrfs = ipv4WithDstVrfs;
            Ipv4WithSrcVrfs = ipv4WithSrcVrfs;
            Ipv4WithoutVrfs = ipv4WithoutVrfs;
            Ipv6WithBothVrfs = ipv6WithBothVrfs;
            Ipv6WithDstVrfs = ipv6WithDstVrfs;
            Ipv6WithSrcVrfs = ipv6WithSrcVrfs;
            Ipv6WithoutVrfs = ipv6WithoutVrfs;
            SlowTimers = slowTimers;
        }
    }
}
