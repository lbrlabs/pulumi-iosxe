// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Iosxe
{
    public static class GetInterfaceOspfv3
    {
        /// <summary>
        /// This data source can read the Interface OSPFv3 configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetInterfaceOspfv3.Invoke(new()
        ///     {
        ///         Name = "1",
        ///         Type = "Loopback",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetInterfaceOspfv3Result> InvokeAsync(GetInterfaceOspfv3Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInterfaceOspfv3Result>("iosxe:index/getInterfaceOspfv3:getInterfaceOspfv3", args ?? new GetInterfaceOspfv3Args(), options.WithDefaults());

        /// <summary>
        /// This data source can read the Interface OSPFv3 configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Iosxe = Pulumi.Iosxe;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Iosxe.GetInterfaceOspfv3.Invoke(new()
        ///     {
        ///         Name = "1",
        ///         Type = "Loopback",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetInterfaceOspfv3Result> Invoke(GetInterfaceOspfv3InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInterfaceOspfv3Result>("iosxe:index/getInterfaceOspfv3:getInterfaceOspfv3", args ?? new GetInterfaceOspfv3InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInterfaceOspfv3Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public string? Device { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Interface type
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        public GetInterfaceOspfv3Args()
        {
        }
        public static new GetInterfaceOspfv3Args Empty => new GetInterfaceOspfv3Args();
    }

    public sealed class GetInterfaceOspfv3InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Interface type
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public GetInterfaceOspfv3InvokeArgs()
        {
        }
        public static new GetInterfaceOspfv3InvokeArgs Empty => new GetInterfaceOspfv3InvokeArgs();
    }


    [OutputType]
    public sealed class GetInterfaceOspfv3Result
    {
        /// <summary>
        /// Static route cost value of the interface
        /// </summary>
        public readonly int Cost;
        /// <summary>
        /// A device name from the provider configuration.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// The path of the retrieved object.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// Specify OSPF broadcast multi-access network
        /// </summary>
        public readonly bool NetworkTypeBroadcast;
        /// <summary>
        /// Specify OSPF NBMA network
        /// </summary>
        public readonly bool NetworkTypeNonBroadcast;
        /// <summary>
        /// Specify OSPF point-to-multipoint network
        /// </summary>
        public readonly bool NetworkTypePointToMultipoint;
        /// <summary>
        /// Specify OSPF point-to-point network
        /// </summary>
        public readonly bool NetworkTypePointToPoint;
        /// <summary>
        /// Interface type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetInterfaceOspfv3Result(
            int cost,

            string? device,

            string id,

            string name,

            bool networkTypeBroadcast,

            bool networkTypeNonBroadcast,

            bool networkTypePointToMultipoint,

            bool networkTypePointToPoint,

            string type)
        {
            Cost = cost;
            Device = device;
            Id = id;
            Name = name;
            NetworkTypeBroadcast = networkTypeBroadcast;
            NetworkTypeNonBroadcast = networkTypeNonBroadcast;
            NetworkTypePointToMultipoint = networkTypePointToMultipoint;
            NetworkTypePointToPoint = networkTypePointToPoint;
            Type = type;
        }
    }
}
