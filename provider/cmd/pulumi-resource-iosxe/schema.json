{
    "name": "iosxe",
    "displayName": "Cisco IOS XE",
    "description": "A Pulumi package for creating and managing Cisco IOS XE Devices.",
    "keywords": [
        "pulumi",
        "iosxe",
        "category/utility"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`iosxe` Terraform Provider](https://github.com/CiscoDevNet/terraform-provider-iosxe).",
    "repository": "https://github.com/lbrlabs/pulumi-iosxe",
    "pluginDownloadURL": "github://api.github.com/lbrlabs",
    "publisher": "lbrlabs",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "Lbrlabs.PulumiPackage"
        },
        "go": {
            "importBasePath": "github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageName": "@lbrlabs/pulumi-iosxe",
            "packageDescription": "A Pulumi package for creating and managing Cisco IOS XE Devices.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/CiscoDevNet/terraform-provider-iosxe)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-iosxe` repo](https://github.com/lbrlabs/pulumi-iosxe/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-iosxe` repo](https://github.com/CiscoDevNet/terraform-provider-iosxe/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "lbrlabs_pulumi_iosxe",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/CiscoDevNet/terraform-provider-iosxe)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-iosxe` repo](https://github.com/lbrlabs/pulumi-iosxe/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-iosxe` repo](https://github.com/CiscoDevNet/terraform-provider-iosxe/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "devices": {
                "type": "array",
                "items": {
                    "$ref": "#/types/iosxe:config/devices:devices"
                },
                "description": "This can be used to manage a list of devices from a single provider. All devices must use the same credentials. Each\nresource and data source has an optional attribute named `device`, which can then select a device by its name from this\nlist.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Allow insecure HTTPS client. This can also be set as the IOSXE_INSECURE environment variable. Defaults to `true`.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for the IOS-XE device. This can also be set as the IOSXE_PASSWORD environment variable.\n",
                "secret": true
            },
            "retries": {
                "type": "integer",
                "description": "Number of retries for REST API calls. This can also be set as the IOSXE_RETRIES environment variable. Defaults to `10`.\n"
            },
            "url": {
                "type": "string",
                "description": "URL of the Cisco IOS-XE device. Optionally a port can be added with `:12345`. The default port is `443`. This can also\nbe set as the IOSXE_URL environment variable.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for the IOS-XE device. This can also be set as the IOSXE_USERNAME environment variable.\n"
            }
        }
    },
    "types": {
        "iosxe:config/devices:devices": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/AaaAccountingExec:AaaAccountingExec": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "startStopGroup1": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/AaaAccountingNetwork:AaaAccountingNetwork": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "startStopGroup1": {
                    "type": "string"
                },
                "startStopGroup2": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "iosxe:index/AaaAuthenticationLogin:AaaAuthenticationLogin": {
            "properties": {
                "a1Enable": {
                    "type": "boolean"
                },
                "a1Group": {
                    "type": "string"
                },
                "a1Line": {
                    "type": "boolean"
                },
                "a1Local": {
                    "type": "boolean"
                },
                "a1None": {
                    "type": "boolean"
                },
                "a2Enable": {
                    "type": "boolean"
                },
                "a2Group": {
                    "type": "string"
                },
                "a2Line": {
                    "type": "boolean"
                },
                "a2Local": {
                    "type": "boolean"
                },
                "a2None": {
                    "type": "boolean"
                },
                "a3Enable": {
                    "type": "boolean"
                },
                "a3Group": {
                    "type": "string"
                },
                "a3Line": {
                    "type": "boolean"
                },
                "a3Local": {
                    "type": "boolean"
                },
                "a3None": {
                    "type": "boolean"
                },
                "a4Enable": {
                    "type": "boolean"
                },
                "a4Group": {
                    "type": "string"
                },
                "a4Line": {
                    "type": "boolean"
                },
                "a4Local": {
                    "type": "boolean"
                },
                "a4None": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/AaaAuthorizationExec:AaaAuthorizationExec": {
            "properties": {
                "a1Group": {
                    "type": "string"
                },
                "a1IfAuthenticated": {
                    "type": "boolean"
                },
                "a1Local": {
                    "type": "boolean"
                },
                "a2Local": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/AaaAuthorizationNetwork:AaaAuthorizationNetwork": {
            "properties": {
                "a1Group": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "iosxe:index/AaaGroupServerRadius:AaaGroupServerRadius": {
            "properties": {
                "ipRadiusSourceInterfaceLoopback": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "serverNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaGroupServerRadiusServerName:AaaGroupServerRadiusServerName"
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/AaaGroupServerRadiusServerName:AaaGroupServerRadiusServerName": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/AaaGroupServerTacacsplus:AaaGroupServerTacacsplus": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "serverNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaGroupServerTacacsplusServerName:AaaGroupServerTacacsplusServerName"
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/AaaGroupServerTacacsplusServerName:AaaGroupServerTacacsplusServerName": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/AaaServerRadiusDynamicAuthorClient:AaaServerRadiusDynamicAuthorClient": {
            "properties": {
                "ip": {
                    "type": "string"
                },
                "serverKey": {
                    "type": "string"
                },
                "serverKeyType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "iosxe:index/AccessListExtendedEntry:AccessListExtendedEntry": {
            "properties": {
                "aceRuleAction": {
                    "type": "string",
                    "description": "- Choices: `deny`, `permit`\n"
                },
                "aceRuleProtocol": {
                    "type": "string"
                },
                "ack": {
                    "type": "boolean",
                    "description": "Match on the ACK bit\n"
                },
                "destinationAny": {
                    "type": "boolean",
                    "description": "Any destination host\n"
                },
                "destinationHost": {
                    "type": "string",
                    "description": "A single destination host\n"
                },
                "destinationObjectGroup": {
                    "type": "string",
                    "description": "Destination network object group\n"
                },
                "destinationPortEqual": {
                    "type": "string",
                    "description": "Match only packets on a given port number up to 10 ports\n"
                },
                "destinationPortGreaterThan": {
                    "type": "string",
                    "description": "Match only packets with a greater port number\n"
                },
                "destinationPortLesserThan": {
                    "type": "string",
                    "description": "Match only packets with a lower port number\n"
                },
                "destinationPortRangeFrom": {
                    "type": "string",
                    "description": "Match only packets in the range of port numbers\n"
                },
                "destinationPortRangeTo": {
                    "type": "string",
                    "description": "Match only packets in the range of port numbers\n"
                },
                "destinationPrefix": {
                    "type": "string"
                },
                "destinationPrefixMask": {
                    "type": "string"
                },
                "dscp": {
                    "type": "string",
                    "description": "Match packets with given dscp value\n"
                },
                "established": {
                    "type": "boolean",
                    "description": "Match established connections\n"
                },
                "fin": {
                    "type": "boolean",
                    "description": "Match on the FIN bit\n"
                },
                "fragments": {
                    "type": "boolean",
                    "description": "Check non-initial fragments\n"
                },
                "log": {
                    "type": "boolean",
                    "description": "Log matches against this entry\n"
                },
                "logInput": {
                    "type": "boolean",
                    "description": "Log matches against this entry, including input interface\n"
                },
                "precedence": {
                    "type": "string",
                    "description": "Match packets with given precedence value\n"
                },
                "psh": {
                    "type": "boolean",
                    "description": "Match on the PSH bit\n"
                },
                "remark": {
                    "type": "string",
                    "description": "Access list entry comment\n"
                },
                "rst": {
                    "type": "boolean",
                    "description": "Match on the RST bit\n"
                },
                "sequence": {
                    "type": "integer",
                    "description": "- Range: `1`-`2147483647`\n"
                },
                "serviceObjectGroup": {
                    "type": "string",
                    "description": "Service object group name\n"
                },
                "sourceAny": {
                    "type": "boolean",
                    "description": "Any source host\n"
                },
                "sourceHost": {
                    "type": "string",
                    "description": "A single source host\n"
                },
                "sourceObjectGroup": {
                    "type": "string",
                    "description": "Source network object group\n"
                },
                "sourcePortEqual": {
                    "type": "string",
                    "description": "Match only packets on a given port number up to 10 ports\n"
                },
                "sourcePortGreaterThan": {
                    "type": "string",
                    "description": "Match only packets with a greater port number\n"
                },
                "sourcePortLesserThan": {
                    "type": "string",
                    "description": "Match only packets with a lower port number\n"
                },
                "sourcePortRangeFrom": {
                    "type": "string",
                    "description": "Match only packets in the range of port numbers\n"
                },
                "sourcePortRangeTo": {
                    "type": "string",
                    "description": "Match only packets in the range of port numbers\n"
                },
                "sourcePrefix": {
                    "type": "string"
                },
                "sourcePrefixMask": {
                    "type": "string"
                },
                "syn": {
                    "type": "boolean",
                    "description": "Match on the SYN bit\n"
                },
                "tos": {
                    "type": "string",
                    "description": "Match packets with given TOS value\n"
                },
                "urg": {
                    "type": "boolean",
                    "description": "Match on the URG bit\n"
                }
            },
            "type": "object",
            "required": [
                "sequence"
            ]
        },
        "iosxe:index/AccessListStandardEntry:AccessListStandardEntry": {
            "properties": {
                "denyAny": {
                    "type": "boolean",
                    "description": "Any source prefix\n"
                },
                "denyHost": {
                    "type": "string",
                    "description": "A single source host\n"
                },
                "denyLog": {
                    "type": "boolean",
                    "description": "Log matches against this entry\n"
                },
                "denyPrefix": {
                    "type": "string",
                    "description": "Network address prefix\n"
                },
                "denyPrefixMask": {
                    "type": "string",
                    "description": "Wildcard bits\n"
                },
                "permitAny": {
                    "type": "boolean",
                    "description": "Any source prefix\n"
                },
                "permitHost": {
                    "type": "string",
                    "description": "A single source host\n"
                },
                "permitLog": {
                    "type": "boolean",
                    "description": "Log matches against this entry\n"
                },
                "permitPrefix": {
                    "type": "string",
                    "description": "Network address prefix\n"
                },
                "permitPrefixMask": {
                    "type": "string",
                    "description": "Wildcard bits\n"
                },
                "remark": {
                    "type": "string",
                    "description": "Access list entry comment\n"
                },
                "sequence": {
                    "type": "integer",
                    "description": "- Range: `1`-`2147483647`\n"
                }
            },
            "type": "object",
            "required": [
                "sequence"
            ]
        },
        "iosxe:index/ArpInspectionFilter:ArpInspectionFilter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "vlans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/ArpInspectionFilterVlan:ArpInspectionFilterVlan"
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/ArpInspectionFilterVlan:ArpInspectionFilterVlan": {
            "properties": {
                "static": {
                    "type": "boolean"
                },
                "vlanRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "vlanRange"
            ]
        },
        "iosxe:index/BfdIpv4BothVrf:BfdIpv4BothVrf": {
            "properties": {
                "destIp": {
                    "type": "string"
                },
                "dstVrf": {
                    "type": "string"
                },
                "srcIp": {
                    "type": "string"
                },
                "srcVrf": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "dstVrf",
                "srcIp",
                "srcVrf",
                "templateName"
            ]
        },
        "iosxe:index/BfdIpv4WithDstVrf:BfdIpv4WithDstVrf": {
            "properties": {
                "destIp": {
                    "type": "string"
                },
                "dstVrf": {
                    "type": "string"
                },
                "srcIp": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "dstVrf",
                "srcIp",
                "templateName"
            ]
        },
        "iosxe:index/BfdIpv4WithSrcVrf:BfdIpv4WithSrcVrf": {
            "properties": {
                "destIp": {
                    "type": "string"
                },
                "srcIp": {
                    "type": "string"
                },
                "srcVrf": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "srcIp",
                "srcVrf",
                "templateName"
            ]
        },
        "iosxe:index/BfdIpv4WithoutVrf:BfdIpv4WithoutVrf": {
            "properties": {
                "destIp": {
                    "type": "string"
                },
                "srcIp": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "srcIp",
                "templateName"
            ]
        },
        "iosxe:index/BfdIpv6WithBothVrf:BfdIpv6WithBothVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string"
                },
                "dstVrf": {
                    "type": "string"
                },
                "srcIpv6": {
                    "type": "string"
                },
                "srcVrf": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "dstVrf",
                "srcIpv6",
                "srcVrf",
                "templateName"
            ]
        },
        "iosxe:index/BfdIpv6WithDstVrf:BfdIpv6WithDstVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string"
                },
                "dstVrf": {
                    "type": "string"
                },
                "srcIpv6": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "dstVrf",
                "srcIpv6",
                "templateName"
            ]
        },
        "iosxe:index/BfdIpv6WithSrcVrf:BfdIpv6WithSrcVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string"
                },
                "srcIpv6": {
                    "type": "string"
                },
                "srcVrf": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "srcIpv6",
                "srcVrf",
                "templateName"
            ]
        },
        "iosxe:index/BfdIpv6WithoutVrf:BfdIpv6WithoutVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string"
                },
                "srcIpv6": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "srcIpv6",
                "templateName"
            ]
        },
        "iosxe:index/BgpAddressFamilyIpv4Ipv4UnicastNetwork:BgpAddressFamilyIpv4Ipv4UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "iosxe:index/BgpAddressFamilyIpv4Ipv4UnicastNetworksMask:BgpAddressFamilyIpv4Ipv4UnicastNetworksMask": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "mask": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mask",
                "network"
            ]
        },
        "iosxe:index/BgpAddressFamilyIpv4VrfVrf:BgpAddressFamilyIpv4VrfVrf": {
            "properties": {
                "ipv4UnicastAdvertiseL2vpnEvpn": {
                    "type": "boolean"
                },
                "ipv4UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork:BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork"
                    }
                },
                "ipv4UnicastNetworksMasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask:BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask"
                    }
                },
                "ipv4UnicastRedistributeConnected": {
                    "type": "boolean"
                },
                "ipv4UnicastRedistributeStatic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork:BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "evpn": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "iosxe:index/BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask:BgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "evpn": {
                    "type": "boolean"
                },
                "mask": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mask",
                "network"
            ]
        },
        "iosxe:index/BgpAddressFamilyIpv6Ipv6UnicastNetwork:BgpAddressFamilyIpv6Ipv6UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "iosxe:index/BgpAddressFamilyIpv6VrfVrf:BgpAddressFamilyIpv6VrfVrf": {
            "properties": {
                "ipv6UnicastAdvertiseL2vpnEvpn": {
                    "type": "boolean"
                },
                "ipv6UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork:BgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork"
                    }
                },
                "ipv6UnicastRedistributeConnected": {
                    "type": "boolean"
                },
                "ipv6UnicastRedistributeStatic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/BgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork:BgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "evpn": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "iosxe:index/BgpIpv4UnicastNeighborRouteMap:BgpIpv4UnicastNeighborRouteMap": {
            "properties": {
                "inOut": {
                    "type": "string"
                },
                "routeMapName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "inOut",
                "routeMapName"
            ]
        },
        "iosxe:index/BgpIpv4UnicastVrfNeighborRouteMap:BgpIpv4UnicastVrfNeighborRouteMap": {
            "properties": {
                "inOut": {
                    "type": "string"
                },
                "routeMapName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "inOut",
                "routeMapName"
            ]
        },
        "iosxe:index/BgpIpv6UnicastNeighborRouteMap:BgpIpv6UnicastNeighborRouteMap": {
            "properties": {
                "inOut": {
                    "type": "string"
                },
                "routeMapName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "inOut",
                "routeMapName"
            ]
        },
        "iosxe:index/CdpTlvList:CdpTlvList": {
            "properties": {
                "cos": {
                    "type": "boolean"
                },
                "duplex": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "trust": {
                    "type": "boolean"
                },
                "version": {
                    "type": "boolean"
                },
                "vtpMgmtDomain": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/ClassMapMatchActivatedServiceTemplate:ClassMapMatchActivatedServiceTemplate": {
            "properties": {
                "serviceName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ]
        },
        "iosxe:index/CryptoIkev2KeyringPeer:CryptoIkev2KeyringPeer": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Specify a description of this peer\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Hostname of peer\n"
                },
                "identityAddress": {
                    "type": "string",
                    "description": "IP address\n"
                },
                "identityEmailDomain": {
                    "type": "string",
                    "description": "email Domain Name\n"
                },
                "identityEmailName": {
                    "type": "string",
                    "description": "Specify the name string\n"
                },
                "identityFqdnDomain": {
                    "type": "string",
                    "description": "email Domain Name\n"
                },
                "identityFqdnName": {
                    "type": "string",
                    "description": "Specify the name string\n"
                },
                "identityKeyId": {
                    "type": "string",
                    "description": "proprietary types of identification (ID KEY ID)\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4Mask": {
                    "type": "string"
                },
                "ipv6Prefix": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "preSharedKey": {
                    "type": "string"
                },
                "preSharedKeyEncryption": {
                    "type": "string",
                    "description": "- Choices: `0`, `6`\n"
                },
                "preSharedKeyLocal": {
                    "type": "string"
                },
                "preSharedKeyLocalEncryption": {
                    "type": "string",
                    "description": "- Choices: `0`, `6`\n"
                },
                "preSharedKeyRemote": {
                    "type": "string"
                },
                "preSharedKeyRemoteEncryption": {
                    "type": "string",
                    "description": "- Choices: `0`, `6`\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/CryptoIkev2PolicyProposal:CryptoIkev2PolicyProposal": {
            "properties": {
                "proposals": {
                    "type": "string",
                    "description": "Specify Proposal\n"
                }
            },
            "type": "object",
            "required": [
                "proposals"
            ]
        },
        "iosxe:index/CryptoIkev2ProfileMatchIdentityRemoteIpv4Address:CryptoIkev2ProfileMatchIdentityRemoteIpv4Address": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "mask": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "iosxe:index/DhcpSnoopingVlan:DhcpSnoopingVlan": {
            "properties": {
                "vlanId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "vlanId"
            ]
        },
        "iosxe:index/Dot1xCredential:Dot1xCredential": {
            "properties": {
                "anonymousId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordType": {
                    "type": "string"
                },
                "pkiTrustpoint": {
                    "type": "string"
                },
                "profileName": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "profileName"
            ]
        },
        "iosxe:index/InterfaceEthernetHelperAddress:InterfaceEthernetHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "iosxe:index/InterfaceEthernetIpv6Address:InterfaceEthernetIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "prefix"
            ]
        },
        "iosxe:index/InterfaceEthernetIpv6LinkLocalAddress:InterfaceEthernetIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "iosxe:index/InterfaceEthernetSourceTemplate:InterfaceEthernetSourceTemplate": {
            "properties": {
                "merge": {
                    "type": "boolean"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "templateName"
            ]
        },
        "iosxe:index/InterfaceLoopbackIpv6Address:InterfaceLoopbackIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "prefix"
            ]
        },
        "iosxe:index/InterfaceLoopbackIpv6LinkLocalAddress:InterfaceLoopbackIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "iosxe:index/InterfaceNveVni:InterfaceNveVni": {
            "properties": {
                "ingressReplication": {
                    "type": "boolean"
                },
                "ipv4MulticastGroup": {
                    "type": "string"
                },
                "vniRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "vniRange"
            ]
        },
        "iosxe:index/InterfaceNveVniVrf:InterfaceNveVniVrf": {
            "properties": {
                "vniRange": {
                    "type": "string"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "vniRange"
            ]
        },
        "iosxe:index/InterfaceOspfMessageDigestKey:InterfaceOspfMessageDigestKey": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "md5AuthKey": {
                    "type": "string"
                },
                "md5AuthType": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "iosxe:index/InterfaceOspfProcessId:InterfaceOspfProcessId": {
            "properties": {
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceOspfProcessIdArea:InterfaceOspfProcessIdArea"
                    }
                },
                "id": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "iosxe:index/InterfaceOspfProcessIdArea:InterfaceOspfProcessIdArea": {
            "properties": {
                "areaId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "areaId"
            ]
        },
        "iosxe:index/InterfacePortChannelHelperAddress:InterfacePortChannelHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "iosxe:index/InterfacePortChannelIpv6Address:InterfacePortChannelIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "prefix"
            ]
        },
        "iosxe:index/InterfacePortChannelIpv6LinkLocalAddress:InterfacePortChannelIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "iosxe:index/InterfacePortChannelSubinterfaceHelperAddress:InterfacePortChannelSubinterfaceHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "iosxe:index/InterfacePortChannelSubinterfaceIpv6Address:InterfacePortChannelSubinterfaceIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "prefix"
            ]
        },
        "iosxe:index/InterfacePortChannelSubinterfaceIpv6LinkLocalAddress:InterfacePortChannelSubinterfaceIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "iosxe:index/InterfaceTunnelHelperAddress:InterfaceTunnelHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "iosxe:index/InterfaceTunnelIpv6Address:InterfaceTunnelIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "prefix"
            ]
        },
        "iosxe:index/InterfaceTunnelIpv6LinkLocalAddress:InterfaceTunnelIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "iosxe:index/InterfaceVlanHelperAddress:InterfaceVlanHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "iosxe:index/InterfaceVlanIpv6Address:InterfaceVlanIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "prefix"
            ]
        },
        "iosxe:index/InterfaceVlanIpv6LinkLocalAddress:InterfaceVlanIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "iosxe:index/LineConsole:LineConsole": {
            "properties": {
                "execTimeoutMinutes": {
                    "type": "integer"
                },
                "execTimeoutSeconds": {
                    "type": "integer"
                },
                "first": {
                    "type": "string"
                },
                "loginAuthentication": {
                    "type": "string"
                },
                "loginLocal": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "passwordLevel": {
                    "type": "integer"
                },
                "passwordType": {
                    "type": "string"
                },
                "privilegeLevel": {
                    "type": "integer"
                },
                "stopbits": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "first"
            ]
        },
        "iosxe:index/LineVty:LineVty": {
            "properties": {
                "accessClasses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LineVtyAccessClass:LineVtyAccessClass"
                    }
                },
                "escapeCharacter": {
                    "type": "string"
                },
                "execTimeoutMinutes": {
                    "type": "integer"
                },
                "execTimeoutSeconds": {
                    "type": "integer"
                },
                "first": {
                    "type": "integer"
                },
                "last": {
                    "type": "integer"
                },
                "loginAuthentication": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordLevel": {
                    "type": "integer"
                },
                "passwordType": {
                    "type": "string"
                },
                "transportPreferredProtocol": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "first"
            ]
        },
        "iosxe:index/LineVtyAccessClass:LineVtyAccessClass": {
            "properties": {
                "accessList": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "vrfAlso": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "accessList",
                "direction"
            ]
        },
        "iosxe:index/LoggingIpv4Host:LoggingIpv4Host": {
            "properties": {
                "ipv4Host": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv4Host"
            ]
        },
        "iosxe:index/LoggingIpv4HostTransportTransportTcpPort:LoggingIpv4HostTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "iosxe:index/LoggingIpv4HostTransportTransportTlsPort:LoggingIpv4HostTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                },
                "profile": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "iosxe:index/LoggingIpv4HostTransportTransportUdpPort:LoggingIpv4HostTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "iosxe:index/LoggingIpv4HostVrfTransportTransportTcpPort:LoggingIpv4HostVrfTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "iosxe:index/LoggingIpv4HostVrfTransportTransportTlsPort:LoggingIpv4HostVrfTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                },
                "profile": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "iosxe:index/LoggingIpv4HostVrfTransportTransportUdpPort:LoggingIpv4HostVrfTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "iosxe:index/LoggingIpv4VrfHost:LoggingIpv4VrfHost": {
            "properties": {
                "ipv4Host": {
                    "type": "string"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv4Host",
                "vrf"
            ]
        },
        "iosxe:index/LoggingIpv6Host:LoggingIpv6Host": {
            "properties": {
                "ipv6Host": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv6Host"
            ]
        },
        "iosxe:index/LoggingIpv6HostTransportTransportTcpPort:LoggingIpv6HostTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "iosxe:index/LoggingIpv6HostTransportTransportTlsPort:LoggingIpv6HostTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                },
                "profile": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "iosxe:index/LoggingIpv6HostTransportTransportUdpPort:LoggingIpv6HostTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "iosxe:index/LoggingIpv6HostVrfTransportTransportTcpPort:LoggingIpv6HostVrfTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "iosxe:index/LoggingIpv6HostVrfTransportTransportTlsPort:LoggingIpv6HostVrfTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                },
                "profile": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "iosxe:index/LoggingIpv6HostVrfTransportTransportUdpPort:LoggingIpv6HostVrfTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ]
        },
        "iosxe:index/LoggingIpv6VrfHost:LoggingIpv6VrfHost": {
            "properties": {
                "ipv6Host": {
                    "type": "string"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv6Host",
                "vrf"
            ]
        },
        "iosxe:index/LoggingSourceInterfacesVrf:LoggingSourceInterfacesVrf": {
            "properties": {
                "interfaceName": {
                    "type": "string"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "interfaceName",
                "vrf"
            ]
        },
        "iosxe:index/MdtSubscriptionReceiver:MdtSubscriptionReceiver": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "port",
                "protocol"
            ]
        },
        "iosxe:index/MsdpPassword:MsdpPassword": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "encryption": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "addr",
                "password"
            ]
        },
        "iosxe:index/MsdpPeer:MsdpPeer": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "connectSourceLoopback": {
                    "type": "integer"
                },
                "remoteAs": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "addr"
            ]
        },
        "iosxe:index/MsdpVrfPassword:MsdpVrfPassword": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "encryption": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "addr",
                "password"
            ]
        },
        "iosxe:index/MsdpVrfPeer:MsdpVrfPeer": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "connectSourceLoopback": {
                    "type": "integer"
                },
                "remoteAs": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "addr"
            ]
        },
        "iosxe:index/NtpAuthenticationKey:NtpAuthenticationKey": {
            "properties": {
                "cmacAes128": {
                    "type": "string"
                },
                "encryptionType": {
                    "type": "integer"
                },
                "hmacSha1": {
                    "type": "string"
                },
                "hmacSha2256": {
                    "type": "string"
                },
                "md5": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "sha1": {
                    "type": "string"
                },
                "sha2": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "number"
            ]
        },
        "iosxe:index/NtpPeer:NtpPeer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer"
                },
                "prefer": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ]
        },
        "iosxe:index/NtpPeerVrf:NtpPeerVrf": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/NtpPeerVrfPeer:NtpPeerVrfPeer"
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/NtpPeerVrfPeer:NtpPeerVrfPeer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer"
                },
                "prefer": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ]
        },
        "iosxe:index/NtpServer:NtpServer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer"
                },
                "prefer": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ]
        },
        "iosxe:index/NtpServerVrf:NtpServerVrf": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/NtpServerVrfServer:NtpServerVrfServer"
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/NtpServerVrfServer:NtpServerVrfServer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer"
                },
                "prefer": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ]
        },
        "iosxe:index/OspfArea:OspfArea": {
            "properties": {
                "areaId": {
                    "type": "string"
                },
                "authenticationMessageDigest": {
                    "type": "boolean"
                },
                "nssa": {
                    "type": "boolean"
                },
                "nssaDefaultInformationOriginate": {
                    "type": "boolean"
                },
                "nssaDefaultInformationOriginateMetric": {
                    "type": "integer"
                },
                "nssaDefaultInformationOriginateMetricType": {
                    "type": "integer"
                },
                "nssaNoRedistribution": {
                    "type": "boolean"
                },
                "nssaNoSummary": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "areaId"
            ]
        },
        "iosxe:index/OspfNeighbor:OspfNeighbor": {
            "properties": {
                "cost": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "iosxe:index/OspfNetwork:OspfNetwork": {
            "properties": {
                "area": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "wildcard": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "iosxe:index/OspfSummaryAddress:OspfSummaryAddress": {
            "properties": {
                "ip": {
                    "type": "string"
                },
                "mask": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "iosxe:index/OspfVrfArea:OspfVrfArea": {
            "properties": {
                "areaId": {
                    "type": "string"
                },
                "authenticationMessageDigest": {
                    "type": "boolean"
                },
                "nssa": {
                    "type": "boolean"
                },
                "nssaDefaultInformationOriginate": {
                    "type": "boolean"
                },
                "nssaDefaultInformationOriginateMetric": {
                    "type": "integer"
                },
                "nssaDefaultInformationOriginateMetricType": {
                    "type": "integer"
                },
                "nssaNoRedistribution": {
                    "type": "boolean"
                },
                "nssaNoSummary": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "areaId"
            ]
        },
        "iosxe:index/OspfVrfNeighbor:OspfVrfNeighbor": {
            "properties": {
                "cost": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "iosxe:index/OspfVrfNetwork:OspfVrfNetwork": {
            "properties": {
                "area": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "wildcard": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "iosxe:index/OspfVrfSummaryAddress:OspfVrfSummaryAddress": {
            "properties": {
                "ip": {
                    "type": "string"
                },
                "mask": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "iosxe:index/PimRpAddress:PimRpAddress": {
            "properties": {
                "accessList": {
                    "type": "string"
                },
                "bidir": {
                    "type": "boolean"
                },
                "override": {
                    "type": "boolean"
                },
                "rpAddress": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessList"
            ]
        },
        "iosxe:index/PimRpCandidate:PimRpCandidate": {
            "properties": {
                "bidir": {
                    "type": "boolean"
                },
                "groupList": {
                    "type": "string"
                },
                "interface": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "interface"
            ]
        },
        "iosxe:index/PimVrfRpAddress:PimVrfRpAddress": {
            "properties": {
                "accessList": {
                    "type": "string"
                },
                "bidir": {
                    "type": "boolean"
                },
                "override": {
                    "type": "boolean"
                },
                "rpAddress": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessList"
            ]
        },
        "iosxe:index/PimVrfRpCandidate:PimVrfRpCandidate": {
            "properties": {
                "bidir": {
                    "type": "boolean"
                },
                "groupList": {
                    "type": "string"
                },
                "interface": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "interface"
            ]
        },
        "iosxe:index/PolicyMapEventClassNumber:PolicyMapEventClassNumber": {
            "properties": {
                "actionNumbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/PolicyMapEventClassNumberActionNumber:PolicyMapEventClassNumberActionNumber"
                    }
                },
                "class": {
                    "type": "string"
                },
                "executionType": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "number"
            ]
        },
        "iosxe:index/PolicyMapEventClassNumberActionNumber:PolicyMapEventClassNumberActionNumber": {
            "properties": {
                "activateServiceTemplateConfigServiceTemplate": {
                    "type": "string"
                },
                "authenticateUsingMethod": {
                    "type": "string"
                },
                "authenticateUsingPriority": {
                    "type": "integer"
                },
                "authenticateUsingRetries": {
                    "type": "integer"
                },
                "authenticateUsingRetryTime": {
                    "type": "integer"
                },
                "authorize": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer"
                },
                "pauseReauthentication": {
                    "type": "boolean"
                },
                "terminateConfig": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "number"
            ]
        },
        "iosxe:index/PrefixListPrefix:PrefixListPrefix": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "ge": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "le": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "seq": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "name",
                "seq"
            ]
        },
        "iosxe:index/ProviderDevice:ProviderDevice": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": []
                }
            }
        },
        "iosxe:index/RadiusServerAttribute:RadiusServerAttribute": {
            "properties": {
                "accessRequestInclude": {
                    "type": "boolean"
                },
                "attribute31Parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/RadiusServerAttributeAttribute31Parameter:RadiusServerAttributeAttribute31Parameter"
                    }
                },
                "number": {
                    "type": "string"
                },
                "sendAttributes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "number"
            ]
        },
        "iosxe:index/RadiusServerAttributeAttribute31Parameter:RadiusServerAttributeAttribute31Parameter": {
            "properties": {
                "callingStationId": {
                    "type": "string"
                },
                "idMacFormat": {
                    "type": "string"
                },
                "idMacLuCase": {
                    "type": "string"
                },
                "idSendMacOnly": {
                    "type": "boolean"
                },
                "idSendNasPortDetail": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "callingStationId"
            ]
        },
        "iosxe:index/RestconfList:RestconfList": {
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "List of maps of key-value pairs which represents the YANG leafs and its values.\n"
                },
                "key": {
                    "type": "string",
                    "description": "YANG list key attribute. In case of multiple keys, those should be separated by a comma (`,`).\n"
                },
                "name": {
                    "type": "string",
                    "description": "YANG list name.\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "YANG leaf-list values.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "name"
            ]
        },
        "iosxe:index/RouteMapEntry:RouteMapEntry": {
            "properties": {
                "continue": {
                    "type": "boolean"
                },
                "continueSequenceNumber": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "matchAsPaths": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchAsPathsLegacies": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchCommunityListExactMatch": {
                    "type": "boolean"
                },
                "matchCommunityLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchCommunityListsLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchExtcommunityLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchExtcommunityListsLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchInterfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpAddressAccessLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpAddressPrefixLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpNextHopAccessLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpNextHopPrefixLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpv6AddressAccessLists": {
                    "type": "string"
                },
                "matchIpv6AddressPrefixLists": {
                    "type": "string"
                },
                "matchIpv6NextHopAccessLists": {
                    "type": "string"
                },
                "matchIpv6NextHopPrefixLists": {
                    "type": "string"
                },
                "matchLocalPreferences": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchLocalPreferencesLegacies": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchRouteTypeExternal": {
                    "type": "boolean"
                },
                "matchRouteTypeExternalType1": {
                    "type": "boolean"
                },
                "matchRouteTypeExternalType2": {
                    "type": "boolean"
                },
                "matchRouteTypeInternal": {
                    "type": "boolean"
                },
                "matchRouteTypeLevel1": {
                    "type": "boolean"
                },
                "matchRouteTypeLevel2": {
                    "type": "boolean"
                },
                "matchRouteTypeLocal": {
                    "type": "boolean"
                },
                "matchSourceProtocolBgps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchSourceProtocolConnected": {
                    "type": "boolean"
                },
                "matchSourceProtocolEigrps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchSourceProtocolIsis": {
                    "type": "boolean"
                },
                "matchSourceProtocolLisp": {
                    "type": "boolean"
                },
                "matchSourceProtocolOspfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchSourceProtocolOspfv3s": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchSourceProtocolRip": {
                    "type": "boolean"
                },
                "matchSourceProtocolStatic": {
                    "type": "boolean"
                },
                "matchTags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchTrack": {
                    "type": "integer"
                },
                "operation": {
                    "type": "string"
                },
                "seq": {
                    "type": "integer"
                },
                "setAsPathPrependAs": {
                    "type": "string"
                },
                "setAsPathPrependAsLegacy": {
                    "type": "string"
                },
                "setAsPathPrependLastAs": {
                    "type": "integer"
                },
                "setAsPathPrependLastAsLegacy": {
                    "type": "integer"
                },
                "setAsPathTag": {
                    "type": "boolean"
                },
                "setAsPathTagLegacy": {
                    "type": "boolean"
                },
                "setCommunities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setCommunitiesAdditive": {
                    "type": "boolean"
                },
                "setCommunitiesAdditiveLegacy": {
                    "type": "boolean"
                },
                "setCommunitiesLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setCommunityListDelete": {
                    "type": "boolean"
                },
                "setCommunityListDeleteLegacy": {
                    "type": "boolean"
                },
                "setCommunityListExpanded": {
                    "type": "integer"
                },
                "setCommunityListExpandedLegacy": {
                    "type": "integer"
                },
                "setCommunityListName": {
                    "type": "string"
                },
                "setCommunityListNameLegacy": {
                    "type": "string"
                },
                "setCommunityListStandard": {
                    "type": "integer"
                },
                "setCommunityListStandardLegacy": {
                    "type": "integer"
                },
                "setCommunityNone": {
                    "type": "boolean"
                },
                "setCommunityNoneLegacy": {
                    "type": "boolean"
                },
                "setDefaultInterfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setExtcomunityRtLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setExtcomunityRts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setExtcomunitySoo": {
                    "type": "string"
                },
                "setExtcomunitySooLegacy": {
                    "type": "string"
                },
                "setExtcomunityVpnDistinguisher": {
                    "type": "string"
                },
                "setExtcomunityVpnDistinguisherAdditive": {
                    "type": "boolean"
                },
                "setExtcomunityVpnDistinguisherLegacy": {
                    "type": "string"
                },
                "setGlobal": {
                    "type": "boolean"
                },
                "setInterfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpAddress": {
                    "type": "string"
                },
                "setIpDefaultGlobalNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpDefaultNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpGlobalNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpNextHopSelf": {
                    "type": "boolean"
                },
                "setIpQosGroup": {
                    "type": "integer"
                },
                "setIpv6Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpv6DefaultGlobalNextHop": {
                    "type": "string"
                },
                "setIpv6DefaultNextHops": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpv6NextHops": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setLevel1": {
                    "type": "boolean"
                },
                "setLevel12": {
                    "type": "boolean"
                },
                "setLevel2": {
                    "type": "boolean"
                },
                "setLocalPreference": {
                    "type": "integer"
                },
                "setLocalPreferenceLegacy": {
                    "type": "integer"
                },
                "setMetricChange": {
                    "type": "string"
                },
                "setMetricDelay": {
                    "type": "string"
                },
                "setMetricLoading": {
                    "type": "integer"
                },
                "setMetricMtu": {
                    "type": "integer"
                },
                "setMetricReliability": {
                    "type": "integer"
                },
                "setMetricType": {
                    "type": "string"
                },
                "setMetricValue": {
                    "type": "integer"
                },
                "setTag": {
                    "type": "integer"
                },
                "setVrf": {
                    "type": "string"
                },
                "setWeight": {
                    "type": "integer"
                },
                "setWeightLegacy": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "seq"
            ]
        },
        "iosxe:index/ServiceTemplateAccessGroup:ServiceTemplateAccessGroup": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/ServiceTemplateInterfaceTemplate:ServiceTemplateInterfaceTemplate": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/ServiceTemplateTag:ServiceTemplateTag": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/SnmpServerContext:SnmpServerContext": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/SnmpServerGroupV3Security:SnmpServerGroupV3Security": {
            "properties": {
                "accessAclName": {
                    "type": "string"
                },
                "accessIpv6Acl": {
                    "type": "string"
                },
                "accessStandardAcl": {
                    "type": "integer"
                },
                "contextNode": {
                    "type": "string"
                },
                "matchNode": {
                    "type": "string"
                },
                "notifyNode": {
                    "type": "string"
                },
                "readNode": {
                    "type": "string"
                },
                "securityLevel": {
                    "type": "string"
                },
                "writeNode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "securityLevel"
            ]
        },
        "iosxe:index/SnmpServerHost:SnmpServerHost": {
            "properties": {
                "communityOrUser": {
                    "type": "string"
                },
                "encryption": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipAddress"
            ]
        },
        "iosxe:index/SnmpServerSnmpCommunity:SnmpServerSnmpCommunity": {
            "properties": {
                "accessListName": {
                    "type": "string"
                },
                "ipv6": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "view": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "iosxe:index/SnmpServerView:SnmpServerView": {
            "properties": {
                "incExl": {
                    "type": "string"
                },
                "mib": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mib",
                "name"
            ]
        },
        "iosxe:index/StaticRouteNextHop:StaticRouteNextHop": {
            "properties": {
                "global": {
                    "type": "boolean"
                },
                "metric": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nextHop": {
                    "type": "string"
                },
                "permanent": {
                    "type": "boolean"
                },
                "tag": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "nextHop"
            ]
        },
        "iosxe:index/StaticRouteVrfRoute:StaticRouteVrfRoute": {
            "properties": {
                "mask": {
                    "type": "string"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/StaticRouteVrfRouteNextHop:StaticRouteVrfRouteNextHop"
                    }
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mask",
                "prefix"
            ]
        },
        "iosxe:index/StaticRouteVrfRouteNextHop:StaticRouteVrfRouteNextHop": {
            "properties": {
                "global": {
                    "type": "boolean"
                },
                "metric": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nextHop": {
                    "type": "string"
                },
                "permanent": {
                    "type": "boolean"
                },
                "tag": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "nextHop"
            ]
        },
        "iosxe:index/SystemMulticastRoutingVrf:SystemMulticastRoutingVrf": {
            "properties": {
                "distributed": {
                    "type": "boolean"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "vrf"
            ]
        },
        "iosxe:index/TemplateDeviceTrackingAttachPolicy:TemplateDeviceTrackingAttachPolicy": {
            "properties": {
                "policyName": {
                    "type": "string"
                },
                "vlanRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "policyName"
            ]
        },
        "iosxe:index/TemplateIpAccessGroup:TemplateIpAccessGroup": {
            "properties": {
                "accessList": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "direction"
            ]
        },
        "iosxe:index/TemplateSwitchportPortSecurityMaximumRange:TemplateSwitchportPortSecurityMaximumRange": {
            "properties": {
                "range": {
                    "type": "integer"
                },
                "vlan": {
                    "type": "boolean"
                },
                "vlanAccess": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "range"
            ]
        },
        "iosxe:index/VrfIpv4RouteTargetExport:VrfIpv4RouteTargetExport": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "iosxe:index/VrfIpv4RouteTargetExportStitching:VrfIpv4RouteTargetExportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "stitching",
                        "value"
                    ]
                }
            }
        },
        "iosxe:index/VrfIpv4RouteTargetImport:VrfIpv4RouteTargetImport": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "iosxe:index/VrfIpv4RouteTargetImportStitching:VrfIpv4RouteTargetImportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "stitching",
                        "value"
                    ]
                }
            }
        },
        "iosxe:index/VrfIpv6RouteTargetExport:VrfIpv6RouteTargetExport": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "iosxe:index/VrfIpv6RouteTargetExportStitching:VrfIpv6RouteTargetExportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "stitching",
                        "value"
                    ]
                }
            }
        },
        "iosxe:index/VrfIpv6RouteTargetImport:VrfIpv6RouteTargetImport": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "iosxe:index/VrfIpv6RouteTargetImportStitching:VrfIpv6RouteTargetImportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "stitching",
                        "value"
                    ]
                }
            }
        },
        "iosxe:index/VrfRouteTargetExport:VrfRouteTargetExport": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "iosxe:index/VrfRouteTargetImport:VrfRouteTargetImport": {
            "properties": {
                "stitching": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "iosxe:index/getAaaAccountingExec:getAaaAccountingExec": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "startStopGroup1": {
                    "type": "string",
                    "description": "Use Server-group\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "startStopGroup1"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getAaaAccountingNetwork:getAaaAccountingNetwork": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The path of the retrieved object.\n"
                },
                "startStopGroup1": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "startStopGroup2": {
                    "type": "string",
                    "description": "Use Server-group\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "startStopGroup1",
                "startStopGroup2"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getAaaAuthenticationLogin:getAaaAuthenticationLogin": {
            "properties": {
                "a1Enable": {
                    "type": "boolean",
                    "description": "Use enable password for authentication.\n"
                },
                "a1Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "a1Line": {
                    "type": "boolean",
                    "description": "Use line password for authentication.\n"
                },
                "a1Local": {
                    "type": "boolean",
                    "description": "Use local username authentication.\n"
                },
                "a1None": {
                    "type": "boolean",
                    "description": "NO authentication.\n"
                },
                "a2Enable": {
                    "type": "boolean",
                    "description": "Use enable password for authentication.\n"
                },
                "a2Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "a2Line": {
                    "type": "boolean",
                    "description": "Use line password for authentication.\n"
                },
                "a2Local": {
                    "type": "boolean"
                },
                "a2None": {
                    "type": "boolean",
                    "description": "NO authentication.\n"
                },
                "a3Enable": {
                    "type": "boolean",
                    "description": "Use enable password for authentication.\n"
                },
                "a3Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "a3Line": {
                    "type": "boolean",
                    "description": "Use line password for authentication.\n"
                },
                "a3Local": {
                    "type": "boolean"
                },
                "a3None": {
                    "type": "boolean",
                    "description": "NO authentication.\n"
                },
                "a4Enable": {
                    "type": "boolean",
                    "description": "Use enable password for authentication.\n"
                },
                "a4Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "a4Line": {
                    "type": "boolean",
                    "description": "Use line password for authentication.\n"
                },
                "a4Local": {
                    "type": "boolean"
                },
                "a4None": {
                    "type": "boolean",
                    "description": "NO authentication.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "a1Enable",
                "a1Group",
                "a1Line",
                "a1Local",
                "a1None",
                "a2Enable",
                "a2Group",
                "a2Line",
                "a2Local",
                "a2None",
                "a3Enable",
                "a3Group",
                "a3Line",
                "a3Local",
                "a3None",
                "a4Enable",
                "a4Group",
                "a4Line",
                "a4Local",
                "a4None",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getAaaAuthorizationExec:getAaaAuthorizationExec": {
            "properties": {
                "a1Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "a1IfAuthenticated": {
                    "type": "boolean",
                    "description": "Succeed if user has authenticated.\n"
                },
                "a1Local": {
                    "type": "boolean",
                    "description": "Use local database\n"
                },
                "a2Local": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "a1Group",
                "a1IfAuthenticated",
                "a1Local",
                "a2Local",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getAaaAuthorizationNetwork:getAaaAuthorizationNetwork": {
            "properties": {
                "a1Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "id": {
                    "type": "string",
                    "description": "The path of the retrieved object.\n"
                }
            },
            "type": "object",
            "required": [
                "a1Group",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getAaaGroupServerRadius:getAaaGroupServerRadius": {
            "properties": {
                "ipRadiusSourceInterfaceLoopback": {
                    "type": "integer",
                    "description": "Loopback interface\n"
                },
                "name": {
                    "type": "string",
                    "description": "Radius Server-group name with max string length 32\n"
                },
                "serverNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/getAaaGroupServerRadiusServerName:getAaaGroupServerRadiusServerName"
                    },
                    "description": "Name of radius server\n"
                }
            },
            "type": "object",
            "required": [
                "ipRadiusSourceInterfaceLoopback",
                "name",
                "serverNames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getAaaGroupServerRadiusServerName:getAaaGroupServerRadiusServerName": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getAaaGroupServerTacacsplus:getAaaGroupServerTacacsplus": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Server-group name with max string length 32\n"
                },
                "serverNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/getAaaGroupServerTacacsplusServerName:getAaaGroupServerTacacsplusServerName"
                    },
                    "description": "Name of tacacs server\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "serverNames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getAaaGroupServerTacacsplusServerName:getAaaGroupServerTacacsplusServerName": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getAaaServerRadiusDynamicAuthorClient:getAaaServerRadiusDynamicAuthorClient": {
            "properties": {
                "ip": {
                    "type": "string"
                },
                "serverKey": {
                    "type": "string"
                },
                "serverKeyType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip",
                "serverKey",
                "serverKeyType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getAccessListExtendedEntry:getAccessListExtendedEntry": {
            "properties": {
                "aceRuleAction": {
                    "type": "string"
                },
                "aceRuleProtocol": {
                    "type": "string"
                },
                "ack": {
                    "type": "boolean",
                    "description": "Match on the ACK bit\n"
                },
                "destinationAny": {
                    "type": "boolean",
                    "description": "Any destination host\n"
                },
                "destinationHost": {
                    "type": "string",
                    "description": "A single destination host\n"
                },
                "destinationObjectGroup": {
                    "type": "string",
                    "description": "Destination network object group\n"
                },
                "destinationPortEqual": {
                    "type": "string",
                    "description": "Match only packets on a given port number up to 10 ports\n"
                },
                "destinationPortGreaterThan": {
                    "type": "string",
                    "description": "Match only packets with a greater port number\n"
                },
                "destinationPortLesserThan": {
                    "type": "string",
                    "description": "Match only packets with a lower port number\n"
                },
                "destinationPortRangeFrom": {
                    "type": "string",
                    "description": "Match only packets in the range of port numbers\n"
                },
                "destinationPortRangeTo": {
                    "type": "string",
                    "description": "Match only packets in the range of port numbers\n"
                },
                "destinationPrefix": {
                    "type": "string"
                },
                "destinationPrefixMask": {
                    "type": "string"
                },
                "dscp": {
                    "type": "string",
                    "description": "Match packets with given dscp value\n"
                },
                "established": {
                    "type": "boolean",
                    "description": "Match established connections\n"
                },
                "fin": {
                    "type": "boolean",
                    "description": "Match on the FIN bit\n"
                },
                "fragments": {
                    "type": "boolean",
                    "description": "Check non-initial fragments\n"
                },
                "log": {
                    "type": "boolean",
                    "description": "Log matches against this entry\n"
                },
                "logInput": {
                    "type": "boolean",
                    "description": "Log matches against this entry, including input interface\n"
                },
                "precedence": {
                    "type": "string",
                    "description": "Match packets with given precedence value\n"
                },
                "psh": {
                    "type": "boolean",
                    "description": "Match on the PSH bit\n"
                },
                "remark": {
                    "type": "string",
                    "description": "Access list entry comment\n"
                },
                "rst": {
                    "type": "boolean",
                    "description": "Match on the RST bit\n"
                },
                "sequence": {
                    "type": "integer"
                },
                "serviceObjectGroup": {
                    "type": "string",
                    "description": "Service object group name\n"
                },
                "sourceAny": {
                    "type": "boolean",
                    "description": "Any source host\n"
                },
                "sourceHost": {
                    "type": "string",
                    "description": "A single source host\n"
                },
                "sourceObjectGroup": {
                    "type": "string",
                    "description": "Source network object group\n"
                },
                "sourcePortEqual": {
                    "type": "string",
                    "description": "Match only packets on a given port number up to 10 ports\n"
                },
                "sourcePortGreaterThan": {
                    "type": "string",
                    "description": "Match only packets with a greater port number\n"
                },
                "sourcePortLesserThan": {
                    "type": "string",
                    "description": "Match only packets with a lower port number\n"
                },
                "sourcePortRangeFrom": {
                    "type": "string",
                    "description": "Match only packets in the range of port numbers\n"
                },
                "sourcePortRangeTo": {
                    "type": "string",
                    "description": "Match only packets in the range of port numbers\n"
                },
                "sourcePrefix": {
                    "type": "string"
                },
                "sourcePrefixMask": {
                    "type": "string"
                },
                "syn": {
                    "type": "boolean",
                    "description": "Match on the SYN bit\n"
                },
                "tos": {
                    "type": "string",
                    "description": "Match packets with given TOS value\n"
                },
                "urg": {
                    "type": "boolean",
                    "description": "Match on the URG bit\n"
                }
            },
            "type": "object",
            "required": [
                "aceRuleAction",
                "aceRuleProtocol",
                "ack",
                "destinationAny",
                "destinationHost",
                "destinationObjectGroup",
                "destinationPortEqual",
                "destinationPortGreaterThan",
                "destinationPortLesserThan",
                "destinationPortRangeFrom",
                "destinationPortRangeTo",
                "destinationPrefix",
                "destinationPrefixMask",
                "dscp",
                "established",
                "fin",
                "fragments",
                "log",
                "logInput",
                "precedence",
                "psh",
                "remark",
                "rst",
                "sequence",
                "serviceObjectGroup",
                "sourceAny",
                "sourceHost",
                "sourceObjectGroup",
                "sourcePortEqual",
                "sourcePortGreaterThan",
                "sourcePortLesserThan",
                "sourcePortRangeFrom",
                "sourcePortRangeTo",
                "sourcePrefix",
                "sourcePrefixMask",
                "syn",
                "tos",
                "urg"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getAccessListStandardEntry:getAccessListStandardEntry": {
            "properties": {
                "denyAny": {
                    "type": "boolean",
                    "description": "Any source prefix\n"
                },
                "denyHost": {
                    "type": "string",
                    "description": "A single source host\n"
                },
                "denyLog": {
                    "type": "boolean",
                    "description": "Log matches against this entry\n"
                },
                "denyPrefix": {
                    "type": "string",
                    "description": "Network address prefix\n"
                },
                "denyPrefixMask": {
                    "type": "string",
                    "description": "Wildcard bits\n"
                },
                "permitAny": {
                    "type": "boolean",
                    "description": "Any source prefix\n"
                },
                "permitHost": {
                    "type": "string",
                    "description": "A single source host\n"
                },
                "permitLog": {
                    "type": "boolean",
                    "description": "Log matches against this entry\n"
                },
                "permitPrefix": {
                    "type": "string",
                    "description": "Network address prefix\n"
                },
                "permitPrefixMask": {
                    "type": "string",
                    "description": "Wildcard bits\n"
                },
                "remark": {
                    "type": "string",
                    "description": "Access list entry comment\n"
                },
                "sequence": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "denyAny",
                "denyHost",
                "denyLog",
                "denyPrefix",
                "denyPrefixMask",
                "permitAny",
                "permitHost",
                "permitLog",
                "permitPrefix",
                "permitPrefixMask",
                "remark",
                "sequence"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getArpInspectionFilter:getArpInspectionFilter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "vlans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/getArpInspectionFilterVlan:getArpInspectionFilterVlan"
                    },
                    "description": "Vlans to apply the filter\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "vlans"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getArpInspectionFilterVlan:getArpInspectionFilterVlan": {
            "properties": {
                "static": {
                    "type": "boolean"
                },
                "vlanRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "static",
                "vlanRange"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBfdIpv4BothVrf:getBfdIpv4BothVrf": {
            "properties": {
                "destIp": {
                    "type": "string",
                    "description": "Destination IP prefix/len\n"
                },
                "dstVrf": {
                    "type": "string",
                    "description": "Destination VRF instance name\n"
                },
                "srcIp": {
                    "type": "string",
                    "description": "Source IP prefix/len\n"
                },
                "srcVrf": {
                    "type": "string",
                    "description": "source VRF instance name\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "BFD template name\n"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "dstVrf",
                "srcIp",
                "srcVrf",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBfdIpv4WithDstVrf:getBfdIpv4WithDstVrf": {
            "properties": {
                "destIp": {
                    "type": "string",
                    "description": "Destination IP prefix/len\n"
                },
                "dstVrf": {
                    "type": "string",
                    "description": "Destination VRF instance name\n"
                },
                "srcIp": {
                    "type": "string",
                    "description": "Source IP prefix/len\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "BFD template name\n"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "dstVrf",
                "srcIp",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBfdIpv4WithSrcVrf:getBfdIpv4WithSrcVrf": {
            "properties": {
                "destIp": {
                    "type": "string",
                    "description": "Destination IP prefix/len\n"
                },
                "srcIp": {
                    "type": "string",
                    "description": "Source IP prefix/len\n"
                },
                "srcVrf": {
                    "type": "string",
                    "description": "source VRF instance name\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "BFD template name\n"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "srcIp",
                "srcVrf",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBfdIpv4WithoutVrf:getBfdIpv4WithoutVrf": {
            "properties": {
                "destIp": {
                    "type": "string",
                    "description": "Destination IP prefix/len\n"
                },
                "srcIp": {
                    "type": "string",
                    "description": "Source IP prefix/len\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "BFD template name\n"
                }
            },
            "type": "object",
            "required": [
                "destIp",
                "srcIp",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBfdIpv6WithBothVrf:getBfdIpv6WithBothVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string",
                    "description": "Destination IPv6 prefix/len\n"
                },
                "dstVrf": {
                    "type": "string",
                    "description": "Destination VRF instance name\n"
                },
                "srcIpv6": {
                    "type": "string",
                    "description": "Source IPv6 prefix/len\n"
                },
                "srcVrf": {
                    "type": "string",
                    "description": "source VRF instance name\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "BFD template name\n"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "dstVrf",
                "srcIpv6",
                "srcVrf",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBfdIpv6WithDstVrf:getBfdIpv6WithDstVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string",
                    "description": "Destination IPv6 prefix/len\n"
                },
                "dstVrf": {
                    "type": "string",
                    "description": "Destination VRF instance name\n"
                },
                "srcIpv6": {
                    "type": "string",
                    "description": "Source IPv6 prefix/len\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "BFD template name\n"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "dstVrf",
                "srcIpv6",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBfdIpv6WithSrcVrf:getBfdIpv6WithSrcVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string",
                    "description": "Destination IPv6 prefix/len\n"
                },
                "srcIpv6": {
                    "type": "string",
                    "description": "Source IPv6 prefix/len\n"
                },
                "srcVrf": {
                    "type": "string",
                    "description": "source VRF instance name\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "BFD template name\n"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "srcIpv6",
                "srcVrf",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBfdIpv6WithoutVrf:getBfdIpv6WithoutVrf": {
            "properties": {
                "destIpv6": {
                    "type": "string",
                    "description": "Destination IPv6 prefix/len\n"
                },
                "srcIpv6": {
                    "type": "string",
                    "description": "Source IPv6 prefix/len\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "BFD template name\n"
                }
            },
            "type": "object",
            "required": [
                "destIpv6",
                "srcIpv6",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBgpAddressFamilyIpv4Ipv4UnicastNetwork:getBgpAddressFamilyIpv4Ipv4UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean",
                    "description": "Specify a BGP backdoor route\n"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string",
                    "description": "Route-map to modify the attributes\n"
                }
            },
            "type": "object",
            "required": [
                "backdoor",
                "network",
                "routeMap"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBgpAddressFamilyIpv4Ipv4UnicastNetworksMask:getBgpAddressFamilyIpv4Ipv4UnicastNetworksMask": {
            "properties": {
                "backdoor": {
                    "type": "boolean",
                    "description": "Specify a BGP backdoor route\n"
                },
                "mask": {
                    "type": "string",
                    "description": "Network mask\n"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string",
                    "description": "Route-map to modify the attributes\n"
                }
            },
            "type": "object",
            "required": [
                "backdoor",
                "mask",
                "network",
                "routeMap"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBgpAddressFamilyIpv4VrfVrf:getBgpAddressFamilyIpv4VrfVrf": {
            "properties": {
                "ipv4UnicastAdvertiseL2vpnEvpn": {
                    "type": "boolean",
                    "description": "Advertise/export prefixes to l2vpn evpn table\n"
                },
                "ipv4UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork:getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork"
                    },
                    "description": "Specify a network to announce via BGP\n"
                },
                "ipv4UnicastNetworksMasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask:getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask"
                    },
                    "description": "Specify a network to announce via BGP\n"
                },
                "ipv4UnicastRedistributeConnected": {
                    "type": "boolean",
                    "description": "Connected\n"
                },
                "ipv4UnicastRedistributeStatic": {
                    "type": "boolean",
                    "description": "Static routes\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv4UnicastAdvertiseL2vpnEvpn",
                "ipv4UnicastNetworks",
                "ipv4UnicastNetworksMasks",
                "ipv4UnicastRedistributeConnected",
                "ipv4UnicastRedistributeStatic",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork:getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "evpn": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "backdoor",
                "evpn",
                "network",
                "routeMap"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask:getBgpAddressFamilyIpv4VrfVrfIpv4UnicastNetworksMask": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "evpn": {
                    "type": "boolean"
                },
                "mask": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "backdoor",
                "evpn",
                "mask",
                "network",
                "routeMap"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBgpAddressFamilyIpv6Ipv6UnicastNetwork:getBgpAddressFamilyIpv6Ipv6UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean",
                    "description": "Specify a BGP backdoor route\n"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string",
                    "description": "Route-map to modify the attributes\n"
                }
            },
            "type": "object",
            "required": [
                "backdoor",
                "network",
                "routeMap"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBgpAddressFamilyIpv6VrfVrf:getBgpAddressFamilyIpv6VrfVrf": {
            "properties": {
                "ipv6UnicastAdvertiseL2vpnEvpn": {
                    "type": "boolean",
                    "description": "Advertise/export prefixes to l2vpn evpn table\n"
                },
                "ipv6UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/getBgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork:getBgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork"
                    },
                    "description": "Specify a network to announce via BGP\n"
                },
                "ipv6UnicastRedistributeConnected": {
                    "type": "boolean",
                    "description": "Connected\n"
                },
                "ipv6UnicastRedistributeStatic": {
                    "type": "boolean",
                    "description": "Static routes\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv6UnicastAdvertiseL2vpnEvpn",
                "ipv6UnicastNetworks",
                "ipv6UnicastRedistributeConnected",
                "ipv6UnicastRedistributeStatic",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork:getBgpAddressFamilyIpv6VrfVrfIpv6UnicastNetwork": {
            "properties": {
                "backdoor": {
                    "type": "boolean"
                },
                "evpn": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "routeMap": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "backdoor",
                "evpn",
                "network",
                "routeMap"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBgpIpv4UnicastNeighborRouteMap:getBgpIpv4UnicastNeighborRouteMap": {
            "properties": {
                "inOut": {
                    "type": "string"
                },
                "routeMapName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "inOut",
                "routeMapName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBgpIpv4UnicastVrfNeighborRouteMap:getBgpIpv4UnicastVrfNeighborRouteMap": {
            "properties": {
                "inOut": {
                    "type": "string"
                },
                "routeMapName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "inOut",
                "routeMapName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getBgpIpv6UnicastNeighborRouteMap:getBgpIpv6UnicastNeighborRouteMap": {
            "properties": {
                "inOut": {
                    "type": "string"
                },
                "routeMapName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "inOut",
                "routeMapName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getCdpTlvList:getCdpTlvList": {
            "properties": {
                "cos": {
                    "type": "boolean",
                    "description": "Select cos TLV\n"
                },
                "duplex": {
                    "type": "boolean",
                    "description": "Select duplex TLV\n"
                },
                "name": {
                    "type": "string",
                    "description": "Tlv-list\n"
                },
                "trust": {
                    "type": "boolean",
                    "description": "Select trust TLV\n"
                },
                "version": {
                    "type": "boolean",
                    "description": "Select version TLV\n"
                },
                "vtpMgmtDomain": {
                    "type": "boolean",
                    "description": "Select vtp mgmt domain TLV\n"
                }
            },
            "type": "object",
            "required": [
                "cos",
                "duplex",
                "name",
                "trust",
                "version",
                "vtpMgmtDomain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getClassMapMatchActivatedServiceTemplate:getClassMapMatchActivatedServiceTemplate": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "Enter service name\n"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getCryptoIkev2KeyringPeer:getCryptoIkev2KeyringPeer": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Specify a description of this peer\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Hostname of peer\n"
                },
                "identityAddress": {
                    "type": "string",
                    "description": "IP address\n"
                },
                "identityEmailDomain": {
                    "type": "string",
                    "description": "email Domain Name\n"
                },
                "identityEmailName": {
                    "type": "string",
                    "description": "Specify the name string\n"
                },
                "identityFqdnDomain": {
                    "type": "string",
                    "description": "email Domain Name\n"
                },
                "identityFqdnName": {
                    "type": "string",
                    "description": "Specify the name string\n"
                },
                "identityKeyId": {
                    "type": "string",
                    "description": "proprietary types of identification (ID KEY ID)\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4Mask": {
                    "type": "string"
                },
                "ipv6Prefix": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "preSharedKey": {
                    "type": "string"
                },
                "preSharedKeyEncryption": {
                    "type": "string"
                },
                "preSharedKeyLocal": {
                    "type": "string"
                },
                "preSharedKeyLocalEncryption": {
                    "type": "string"
                },
                "preSharedKeyRemote": {
                    "type": "string"
                },
                "preSharedKeyRemoteEncryption": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "hostname",
                "identityAddress",
                "identityEmailDomain",
                "identityEmailName",
                "identityFqdnDomain",
                "identityFqdnName",
                "identityKeyId",
                "ipv4Address",
                "ipv4Mask",
                "ipv6Prefix",
                "name",
                "preSharedKey",
                "preSharedKeyEncryption",
                "preSharedKeyLocal",
                "preSharedKeyLocalEncryption",
                "preSharedKeyRemote",
                "preSharedKeyRemoteEncryption"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getCryptoIkev2PolicyProposal:getCryptoIkev2PolicyProposal": {
            "properties": {
                "proposals": {
                    "type": "string",
                    "description": "Specify Proposal\n"
                }
            },
            "type": "object",
            "required": [
                "proposals"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getCryptoIkev2ProfileMatchIdentityRemoteIpv4Address:getCryptoIkev2ProfileMatchIdentityRemoteIpv4Address": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "mask": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "mask"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getDhcpSnoopingVlan:getDhcpSnoopingVlan": {
            "properties": {
                "vlanId": {
                    "type": "string",
                    "description": "DHCP Snooping vlan first number or vlan range,example: 1,3-5,7,9-11\n"
                }
            },
            "type": "object",
            "required": [
                "vlanId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getDot1xCredential:getDot1xCredential": {
            "properties": {
                "anonymousId": {
                    "type": "string",
                    "description": "Set the anonymous userid\n"
                },
                "description": {
                    "type": "string",
                    "description": "Provide a description for the credentials profile\n"
                },
                "password": {
                    "type": "string"
                },
                "passwordType": {
                    "type": "string"
                },
                "pkiTrustpoint": {
                    "type": "string",
                    "description": "Set the default pki trustpoint\n"
                },
                "profileName": {
                    "type": "string",
                    "description": "Specify a profile name\n"
                },
                "username": {
                    "type": "string",
                    "description": "Set the authentication userid\n"
                }
            },
            "type": "object",
            "required": [
                "anonymousId",
                "description",
                "password",
                "passwordType",
                "pkiTrustpoint",
                "profileName",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceEthernetHelperAddress:getInterfaceEthernetHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean",
                    "description": "Helper-address is global\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name for helper-address (if different from interface VRF)\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "global",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceEthernetIpv6Address:getInterfaceEthernetIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean",
                    "description": "Use eui-64 interface identifier\n"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "eui64",
                "prefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceEthernetIpv6LinkLocalAddress:getInterfaceEthernetIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean",
                    "description": "Use link-local address\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "linkLocal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceEthernetSourceTemplate:getInterfaceEthernetSourceTemplate": {
            "properties": {
                "merge": {
                    "type": "boolean",
                    "description": "merge option of binding\n"
                },
                "templateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "merge",
                "templateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceLoopbackIpv6Address:getInterfaceLoopbackIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean",
                    "description": "Use eui-64 interface identifier\n"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "eui64",
                "prefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceLoopbackIpv6LinkLocalAddress:getInterfaceLoopbackIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean",
                    "description": "Use link-local address\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "linkLocal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceNveVni:getInterfaceNveVni": {
            "properties": {
                "ingressReplication": {
                    "type": "boolean",
                    "description": "Ingress Replication control-plane (BGP) signaling\n"
                },
                "ipv4MulticastGroup": {
                    "type": "string",
                    "description": "Starting Multicast Group IPv4 Address\n"
                },
                "vniRange": {
                    "type": "string",
                    "description": "VNI range or instance between 4096-16777215, example: 6010-6030 or 7115\n"
                }
            },
            "type": "object",
            "required": [
                "ingressReplication",
                "ipv4MulticastGroup",
                "vniRange"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceNveVniVrf:getInterfaceNveVniVrf": {
            "properties": {
                "vniRange": {
                    "type": "string",
                    "description": "VNI range or instance between 4096-16777215, example: 6010-6030 or 7115\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "Specify a particular VRF\n"
                }
            },
            "type": "object",
            "required": [
                "vniRange",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceOspfMessageDigestKey:getInterfaceOspfMessageDigestKey": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Key ID\n"
                },
                "md5AuthKey": {
                    "type": "string",
                    "description": "The OSPF password (key) (only the first 16 characters are used)\n"
                },
                "md5AuthType": {
                    "type": "integer",
                    "description": "Encryption type (0 for not yet encrypted, 7 for proprietary)\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "md5AuthKey",
                "md5AuthType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceOspfProcessId:getInterfaceOspfProcessId": {
            "properties": {
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/getInterfaceOspfProcessIdArea:getInterfaceOspfProcessIdArea"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "Process ID\n"
                }
            },
            "type": "object",
            "required": [
                "areas",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceOspfProcessIdArea:getInterfaceOspfProcessIdArea": {
            "properties": {
                "areaId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "areaId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfacePortChannelHelperAddress:getInterfacePortChannelHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean",
                    "description": "Helper-address is global\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name for helper-address (if different from interface VRF)\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "global",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfacePortChannelIpv6Address:getInterfacePortChannelIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean",
                    "description": "Use eui-64 interface identifier\n"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "eui64",
                "prefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfacePortChannelIpv6LinkLocalAddress:getInterfacePortChannelIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean",
                    "description": "Use link-local address\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "linkLocal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfacePortChannelSubinterfaceHelperAddress:getInterfacePortChannelSubinterfaceHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean",
                    "description": "Helper-address is global\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name for helper-address (if different from interface VRF)\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "global",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfacePortChannelSubinterfaceIpv6Address:getInterfacePortChannelSubinterfaceIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean",
                    "description": "Use eui-64 interface identifier\n"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "eui64",
                "prefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfacePortChannelSubinterfaceIpv6LinkLocalAddress:getInterfacePortChannelSubinterfaceIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean",
                    "description": "Use link-local address\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "linkLocal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceTunnelHelperAddress:getInterfaceTunnelHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean",
                    "description": "Helper-address is global\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name for helper-address (if different from interface VRF)\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "global",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceTunnelIpv6Address:getInterfaceTunnelIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean",
                    "description": "Use eui-64 interface identifier\n"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "eui64",
                "prefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceTunnelIpv6LinkLocalAddress:getInterfaceTunnelIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean",
                    "description": "Use link-local address\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "linkLocal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceVlanHelperAddress:getInterfaceVlanHelperAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean",
                    "description": "Helper-address is global\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VRF name for helper-address (if different from interface VRF)\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "global",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceVlanIpv6Address:getInterfaceVlanIpv6Address": {
            "properties": {
                "eui64": {
                    "type": "boolean",
                    "description": "Use eui-64 interface identifier\n"
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "eui64",
                "prefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getInterfaceVlanIpv6LinkLocalAddress:getInterfaceVlanIpv6LinkLocalAddress": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "linkLocal": {
                    "type": "boolean",
                    "description": "Use link-local address\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "linkLocal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLineConsole:getLineConsole": {
            "properties": {
                "execTimeoutMinutes": {
                    "type": "integer",
                    "description": "\\n\\n;;Timeout in minutes\n"
                },
                "execTimeoutSeconds": {
                    "type": "integer",
                    "description": "\\n\\n;;Timeout in seconds\n"
                },
                "first": {
                    "type": "string"
                },
                "loginAuthentication": {
                    "type": "string"
                },
                "loginLocal": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "passwordLevel": {
                    "type": "integer",
                    "description": "Set exec level password\n"
                },
                "passwordType": {
                    "type": "string"
                },
                "privilegeLevel": {
                    "type": "integer"
                },
                "stopbits": {
                    "type": "string",
                    "description": "Set async line stop bits\n"
                }
            },
            "type": "object",
            "required": [
                "execTimeoutMinutes",
                "execTimeoutSeconds",
                "first",
                "loginAuthentication",
                "loginLocal",
                "password",
                "passwordLevel",
                "passwordType",
                "privilegeLevel",
                "stopbits"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLineVty:getLineVty": {
            "properties": {
                "accessClasses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/getLineVtyAccessClass:getLineVtyAccessClass"
                    }
                },
                "escapeCharacter": {
                    "type": "string"
                },
                "execTimeoutMinutes": {
                    "type": "integer",
                    "description": "\\n\\n;;Timeout in minutes\n"
                },
                "execTimeoutSeconds": {
                    "type": "integer",
                    "description": "\\n\\n;;Timeout in seconds\n"
                },
                "first": {
                    "type": "integer"
                },
                "last": {
                    "type": "integer"
                },
                "loginAuthentication": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordLevel": {
                    "type": "integer",
                    "description": "Set exec level password\n"
                },
                "passwordType": {
                    "type": "string"
                },
                "transportPreferredProtocol": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessClasses",
                "escapeCharacter",
                "execTimeoutMinutes",
                "execTimeoutSeconds",
                "first",
                "last",
                "loginAuthentication",
                "password",
                "passwordLevel",
                "passwordType",
                "transportPreferredProtocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLineVtyAccessClass:getLineVtyAccessClass": {
            "properties": {
                "accessList": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "vrfAlso": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "accessList",
                "direction",
                "vrfAlso"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv4Host:getLoggingIpv4Host": {
            "properties": {
                "ipv4Host": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv4Host"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv4HostTransportTransportTcpPort:getLoggingIpv4HostTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer",
                    "description": "Specify the TCP port number (default=601)\n"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv4HostTransportTransportTlsPort:getLoggingIpv4HostTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer",
                    "description": "Specify the TLS port number (default=6514)\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Specify the TLS profile\n"
                }
            },
            "type": "object",
            "required": [
                "portNumber",
                "profile"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv4HostTransportTransportUdpPort:getLoggingIpv4HostTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer",
                    "description": "Specify the UDP port number (default=514)\n"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv4HostVrfTransportTransportTcpPort:getLoggingIpv4HostVrfTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer",
                    "description": "Specify the TCP port number (default=601)\n"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv4HostVrfTransportTransportTlsPort:getLoggingIpv4HostVrfTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer",
                    "description": "Specify the TLS port number (default=6514)\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Specify the TLS profile\n"
                }
            },
            "type": "object",
            "required": [
                "portNumber",
                "profile"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv4HostVrfTransportTransportUdpPort:getLoggingIpv4HostVrfTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer",
                    "description": "Specify the UDP port number (default=514)\n"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv4VrfHost:getLoggingIpv4VrfHost": {
            "properties": {
                "ipv4Host": {
                    "type": "string"
                },
                "vrf": {
                    "type": "string",
                    "description": "Set VRF option\n"
                }
            },
            "type": "object",
            "required": [
                "ipv4Host",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv6Host:getLoggingIpv6Host": {
            "properties": {
                "ipv6Host": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ipv6Host"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv6HostTransportTransportTcpPort:getLoggingIpv6HostTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer",
                    "description": "Specify the TCP port number (default=601)\n"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv6HostTransportTransportTlsPort:getLoggingIpv6HostTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer",
                    "description": "Specify the TLS port number (default=6514)\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Specify the TLS profile\n"
                }
            },
            "type": "object",
            "required": [
                "portNumber",
                "profile"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv6HostTransportTransportUdpPort:getLoggingIpv6HostTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer",
                    "description": "Specify the UDP port number (default=514)\n"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv6HostVrfTransportTransportTcpPort:getLoggingIpv6HostVrfTransportTransportTcpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer",
                    "description": "Specify the TCP port number (default=601)\n"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv6HostVrfTransportTransportTlsPort:getLoggingIpv6HostVrfTransportTransportTlsPort": {
            "properties": {
                "portNumber": {
                    "type": "integer",
                    "description": "Specify the TLS port number (default=6514)\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Specify the TLS profile\n"
                }
            },
            "type": "object",
            "required": [
                "portNumber",
                "profile"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv6HostVrfTransportTransportUdpPort:getLoggingIpv6HostVrfTransportTransportUdpPort": {
            "properties": {
                "portNumber": {
                    "type": "integer",
                    "description": "Specify the UDP port number (default=514)\n"
                }
            },
            "type": "object",
            "required": [
                "portNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingIpv6VrfHost:getLoggingIpv6VrfHost": {
            "properties": {
                "ipv6Host": {
                    "type": "string"
                },
                "vrf": {
                    "type": "string",
                    "description": "Set VRF option\n"
                }
            },
            "type": "object",
            "required": [
                "ipv6Host",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getLoggingSourceInterfacesVrf:getLoggingSourceInterfacesVrf": {
            "properties": {
                "interfaceName": {
                    "type": "string"
                },
                "vrf": {
                    "type": "string",
                    "description": "Specify the vrf of source interface for logging transactions\n"
                }
            },
            "type": "object",
            "required": [
                "interfaceName",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getMdtSubscriptionReceiver:getMdtSubscriptionReceiver": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "IP address of the receiver\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Network port of the receiver\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Receiver transport protocol.\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "port",
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getMsdpPassword:getMsdpPassword": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "encryption": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "addr",
                "encryption",
                "password"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getMsdpPeer:getMsdpPeer": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "connectSourceLoopback": {
                    "type": "integer",
                    "description": "Loopback interface\n"
                },
                "remoteAs": {
                    "type": "integer",
                    "description": "Configured AS number\n"
                }
            },
            "type": "object",
            "required": [
                "addr",
                "connectSourceLoopback",
                "remoteAs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getMsdpVrfPassword:getMsdpVrfPassword": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "encryption": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "addr",
                "encryption",
                "password"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getMsdpVrfPeer:getMsdpVrfPeer": {
            "properties": {
                "addr": {
                    "type": "string"
                },
                "connectSourceLoopback": {
                    "type": "integer",
                    "description": "Loopback interface\n"
                },
                "remoteAs": {
                    "type": "integer",
                    "description": "Configured AS number\n"
                }
            },
            "type": "object",
            "required": [
                "addr",
                "connectSourceLoopback",
                "remoteAs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getNtpAuthenticationKey:getNtpAuthenticationKey": {
            "properties": {
                "cmacAes128": {
                    "type": "string",
                    "description": "CMAC-AES-128 (digest length = 128 bits,  key length = [16 or 32] bytes)\n"
                },
                "encryptionType": {
                    "type": "integer",
                    "description": "Authentication key encryption type\n"
                },
                "hmacSha1": {
                    "type": "string",
                    "description": "HMAC-SHA1 (digest length = 160 bits,  key length = [1-32] bytes)\n"
                },
                "hmacSha2256": {
                    "type": "string",
                    "description": "HMAC-SHA2-256 (digest length = 256 bits,  key length = [1-32] bytes)\n"
                },
                "md5": {
                    "type": "string",
                    "description": "MD5 authentication\n"
                },
                "number": {
                    "type": "integer"
                },
                "sha1": {
                    "type": "string",
                    "description": "SHA1 (digest length = 160 bits,  key length = [1-32] bytes)\n"
                },
                "sha2": {
                    "type": "string",
                    "description": "SHA-256 (digest length = 256 bits,  key length = [1-32] bytes)\n"
                }
            },
            "type": "object",
            "required": [
                "cmacAes128",
                "encryptionType",
                "hmacSha1",
                "hmacSha2256",
                "md5",
                "number",
                "sha1",
                "sha2"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getNtpPeer:getNtpPeer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer",
                    "description": "Configure peer authentication key\n"
                },
                "prefer": {
                    "type": "boolean",
                    "description": "Prefer this peer when possible\n"
                },
                "source": {
                    "type": "string",
                    "description": "Interface for source address\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Configure NTP version\n"
                }
            },
            "type": "object",
            "required": [
                "ipAddress",
                "key",
                "prefer",
                "source",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getNtpPeerVrf:getNtpPeerVrf": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/getNtpPeerVrfPeer:getNtpPeerVrfPeer"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "peers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getNtpPeerVrfPeer:getNtpPeerVrfPeer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer",
                    "description": "Configure peer authentication key\n"
                },
                "prefer": {
                    "type": "boolean",
                    "description": "Prefer this peer when possible\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Configure NTP version\n"
                }
            },
            "type": "object",
            "required": [
                "ipAddress",
                "key",
                "prefer",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getNtpServer:getNtpServer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer",
                    "description": "Configure peer authentication key\n"
                },
                "prefer": {
                    "type": "boolean",
                    "description": "Prefer this peer when possible\n"
                },
                "source": {
                    "type": "string",
                    "description": "Interface for source address\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Configure NTP version\n"
                }
            },
            "type": "object",
            "required": [
                "ipAddress",
                "key",
                "prefer",
                "source",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getNtpServerVrf:getNtpServerVrf": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/getNtpServerVrfServer:getNtpServerVrfServer"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "servers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getNtpServerVrfServer:getNtpServerVrfServer": {
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "key": {
                    "type": "integer",
                    "description": "Configure peer authentication key\n"
                },
                "prefer": {
                    "type": "boolean",
                    "description": "Prefer this peer when possible\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Configure NTP version\n"
                }
            },
            "type": "object",
            "required": [
                "ipAddress",
                "key",
                "prefer",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getOspfArea:getOspfArea": {
            "properties": {
                "areaId": {
                    "type": "string",
                    "description": "OSPF area ID\n"
                },
                "authenticationMessageDigest": {
                    "type": "boolean",
                    "description": "Use message-digest authentication\n"
                },
                "nssa": {
                    "type": "boolean",
                    "description": "Specify a NSSA area\n"
                },
                "nssaDefaultInformationOriginate": {
                    "type": "boolean",
                    "description": "Originate Type 7 default into NSSA area\n"
                },
                "nssaDefaultInformationOriginateMetric": {
                    "type": "integer",
                    "description": "OSPF default metric\n"
                },
                "nssaDefaultInformationOriginateMetricType": {
                    "type": "integer",
                    "description": "OSPF metric type for default routes\n"
                },
                "nssaNoRedistribution": {
                    "type": "boolean",
                    "description": "No redistribution into this NSSA area\n"
                },
                "nssaNoSummary": {
                    "type": "boolean",
                    "description": "Do not send summary LSA into NSSA\n"
                }
            },
            "type": "object",
            "required": [
                "areaId",
                "authenticationMessageDigest",
                "nssa",
                "nssaDefaultInformationOriginate",
                "nssaDefaultInformationOriginateMetric",
                "nssaDefaultInformationOriginateMetricType",
                "nssaNoRedistribution",
                "nssaNoSummary"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getOspfNeighbor:getOspfNeighbor": {
            "properties": {
                "cost": {
                    "type": "integer",
                    "description": "OSPF cost for point-to-multipoint neighbor\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Neighbor address\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "OSPF priority of non-broadcast neighbor\n"
                }
            },
            "type": "object",
            "required": [
                "cost",
                "ip",
                "priority"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getOspfNetwork:getOspfNetwork": {
            "properties": {
                "area": {
                    "type": "string",
                    "description": "Set the OSPF area ID\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Network number\n"
                },
                "wildcard": {
                    "type": "string",
                    "description": "OSPF wild card bits\n"
                }
            },
            "type": "object",
            "required": [
                "area",
                "ip",
                "wildcard"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getOspfSummaryAddress:getOspfSummaryAddress": {
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "IP summary address\n"
                },
                "mask": {
                    "type": "string",
                    "description": "Summary mask\n"
                }
            },
            "type": "object",
            "required": [
                "ip",
                "mask"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getOspfVrfArea:getOspfVrfArea": {
            "properties": {
                "areaId": {
                    "type": "string",
                    "description": "OSPF area ID\n"
                },
                "authenticationMessageDigest": {
                    "type": "boolean",
                    "description": "Use message-digest authentication\n"
                },
                "nssa": {
                    "type": "boolean",
                    "description": "Specify a NSSA area\n"
                },
                "nssaDefaultInformationOriginate": {
                    "type": "boolean",
                    "description": "Originate Type 7 default into NSSA area\n"
                },
                "nssaDefaultInformationOriginateMetric": {
                    "type": "integer",
                    "description": "OSPF default metric\n"
                },
                "nssaDefaultInformationOriginateMetricType": {
                    "type": "integer",
                    "description": "OSPF metric type for default routes\n"
                },
                "nssaNoRedistribution": {
                    "type": "boolean",
                    "description": "No redistribution into this NSSA area\n"
                },
                "nssaNoSummary": {
                    "type": "boolean",
                    "description": "Do not send summary LSA into NSSA\n"
                }
            },
            "type": "object",
            "required": [
                "areaId",
                "authenticationMessageDigest",
                "nssa",
                "nssaDefaultInformationOriginate",
                "nssaDefaultInformationOriginateMetric",
                "nssaDefaultInformationOriginateMetricType",
                "nssaNoRedistribution",
                "nssaNoSummary"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getOspfVrfNeighbor:getOspfVrfNeighbor": {
            "properties": {
                "cost": {
                    "type": "integer",
                    "description": "OSPF cost for point-to-multipoint neighbor\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Neighbor address\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "OSPF priority of non-broadcast neighbor\n"
                }
            },
            "type": "object",
            "required": [
                "cost",
                "ip",
                "priority"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getOspfVrfNetwork:getOspfVrfNetwork": {
            "properties": {
                "area": {
                    "type": "string",
                    "description": "Set the OSPF area ID\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Network number\n"
                },
                "wildcard": {
                    "type": "string",
                    "description": "OSPF wild card bits\n"
                }
            },
            "type": "object",
            "required": [
                "area",
                "ip",
                "wildcard"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getOspfVrfSummaryAddress:getOspfVrfSummaryAddress": {
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "IP summary address\n"
                },
                "mask": {
                    "type": "string",
                    "description": "Summary mask\n"
                }
            },
            "type": "object",
            "required": [
                "ip",
                "mask"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getPimRpAddress:getPimRpAddress": {
            "properties": {
                "accessList": {
                    "type": "string",
                    "description": "IP Access-list\n"
                },
                "bidir": {
                    "type": "boolean",
                    "description": "Group range treated in bidirectional shared-tree mode\n"
                },
                "override": {
                    "type": "boolean",
                    "description": "Overrides dynamically learnt RP mappings\n"
                },
                "rpAddress": {
                    "type": "string",
                    "description": "IP address of Rendezvous-point for group\n"
                }
            },
            "type": "object",
            "required": [
                "accessList",
                "bidir",
                "override",
                "rpAddress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getPimRpCandidate:getPimRpCandidate": {
            "properties": {
                "bidir": {
                    "type": "boolean",
                    "description": "Group range treated in bidirectional shared-tree mode\n"
                },
                "groupList": {
                    "type": "string",
                    "description": "IP Access list\n"
                },
                "interface": {
                    "type": "string",
                    "description": "Autonomic-Networking virtual interface\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "RP candidate advertisement interval\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "RP candidate priority\n"
                }
            },
            "type": "object",
            "required": [
                "bidir",
                "groupList",
                "interface",
                "interval",
                "priority"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getPimVrfRpAddress:getPimVrfRpAddress": {
            "properties": {
                "accessList": {
                    "type": "string",
                    "description": "IP Access-list\n"
                },
                "bidir": {
                    "type": "boolean",
                    "description": "Group range treated in bidirectional shared-tree mode\n"
                },
                "override": {
                    "type": "boolean",
                    "description": "Overrides dynamically learnt RP mappings\n"
                },
                "rpAddress": {
                    "type": "string",
                    "description": "IP address of Rendezvous-point for group\n"
                }
            },
            "type": "object",
            "required": [
                "accessList",
                "bidir",
                "override",
                "rpAddress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getPimVrfRpCandidate:getPimVrfRpCandidate": {
            "properties": {
                "bidir": {
                    "type": "boolean",
                    "description": "Group range treated in bidirectional shared-tree mode\n"
                },
                "groupList": {
                    "type": "string",
                    "description": "IP Access list\n"
                },
                "interface": {
                    "type": "string",
                    "description": "Autonomic-Networking virtual interface\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "RP candidate advertisement interval\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "RP candidate priority\n"
                }
            },
            "type": "object",
            "required": [
                "bidir",
                "groupList",
                "interface",
                "interval",
                "priority"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getPolicyMapEventClassNumber:getPolicyMapEventClassNumber": {
            "properties": {
                "actionNumbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/getPolicyMapEventClassNumberActionNumber:getPolicyMapEventClassNumberActionNumber"
                    },
                    "description": "action number, 1 for 1st class, 2 for 2nd...\n"
                },
                "class": {
                    "type": "string",
                    "description": "The class type this control policy-map triggers upon\n"
                },
                "executionType": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "actionNumbers",
                "class",
                "executionType",
                "number"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getPolicyMapEventClassNumberActionNumber:getPolicyMapEventClassNumberActionNumber": {
            "properties": {
                "activateServiceTemplateConfigServiceTemplate": {
                    "type": "string"
                },
                "authenticateUsingMethod": {
                    "type": "string"
                },
                "authenticateUsingPriority": {
                    "type": "integer"
                },
                "authenticateUsingRetries": {
                    "type": "integer"
                },
                "authenticateUsingRetryTime": {
                    "type": "integer"
                },
                "authorize": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer"
                },
                "pauseReauthentication": {
                    "type": "boolean"
                },
                "terminateConfig": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "activateServiceTemplateConfigServiceTemplate",
                "authenticateUsingMethod",
                "authenticateUsingPriority",
                "authenticateUsingRetries",
                "authenticateUsingRetryTime",
                "authorize",
                "number",
                "pauseReauthentication",
                "terminateConfig"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getPrefixListPrefix:getPrefixListPrefix": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Specify deny or permit action\n"
                },
                "ge": {
                    "type": "integer",
                    "description": "Minimum prefix length to be matched\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IPv4 Prefix\n"
                },
                "le": {
                    "type": "integer",
                    "description": "Maximum prefix length to be matched\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the prefix-list\n"
                },
                "seq": {
                    "type": "integer",
                    "description": "Seq Number of the prefix-list\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "ge",
                "ip",
                "le",
                "name",
                "seq"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getRadiusServerAttribute:getRadiusServerAttribute": {
            "properties": {
                "accessRequestInclude": {
                    "type": "boolean",
                    "description": "Include attribute\n"
                },
                "attribute31Parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/getRadiusServerAttributeAttribute31Parameter:getRadiusServerAttributeAttribute31Parameter"
                    }
                },
                "number": {
                    "type": "string"
                },
                "sendAttributes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "accessRequestInclude",
                "attribute31Parameters",
                "number",
                "sendAttributes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getRadiusServerAttributeAttribute31Parameter:getRadiusServerAttributeAttribute31Parameter": {
            "properties": {
                "callingStationId": {
                    "type": "string"
                },
                "idMacFormat": {
                    "type": "string"
                },
                "idMacLuCase": {
                    "type": "string"
                },
                "idSendMacOnly": {
                    "type": "boolean"
                },
                "idSendNasPortDetail": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "callingStationId",
                "idMacFormat",
                "idMacLuCase",
                "idSendMacOnly",
                "idSendNasPortDetail"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getRouteMapEntry:getRouteMapEntry": {
            "properties": {
                "continue": {
                    "type": "boolean",
                    "description": "Continue on a different entry within the route-map\n"
                },
                "continueSequenceNumber": {
                    "type": "integer",
                    "description": "Route-map entry sequence number\n"
                },
                "description": {
                    "type": "string",
                    "description": "Route-map comment\n"
                },
                "matchAsPaths": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "AS path access-list\n"
                },
                "matchAsPathsLegacies": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "AS path access-list (DEPRECATED - please use route-map configuration in Cisco-IOS-XE-bgp.yang)\n"
                },
                "matchCommunityListExactMatch": {
                    "type": "boolean",
                    "description": "Do exact matching of communities\n"
                },
                "matchCommunityLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Named Access List\n"
                },
                "matchCommunityListsLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Named Access List (DEPRECATED- please use community-list in Cisco-IOS-XE-bgp.yang)\n"
                },
                "matchExtcommunityLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Named Access List\n"
                },
                "matchExtcommunityListsLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Named Access List (DEPRECATED- please use extcommunity-list in Cisco-IOS-XE-bgp.yang)\n"
                },
                "matchInterfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpAddressAccessLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpAddressPrefixLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Match entries of prefix-lists\n"
                },
                "matchIpNextHopAccessLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpNextHopPrefixLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Match entries of prefix-lists\n"
                },
                "matchIpv6AddressAccessLists": {
                    "type": "string"
                },
                "matchIpv6AddressPrefixLists": {
                    "type": "string",
                    "description": "IPv6 prefix-list\n"
                },
                "matchIpv6NextHopAccessLists": {
                    "type": "string"
                },
                "matchIpv6NextHopPrefixLists": {
                    "type": "string",
                    "description": "IPv6 prefix-list\n"
                },
                "matchLocalPreferences": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchLocalPreferencesLegacies": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "matchRouteTypeExternal": {
                    "type": "boolean",
                    "description": "external route (BGP, EIGRP and OSPF type 1/2)\n"
                },
                "matchRouteTypeExternalType1": {
                    "type": "boolean",
                    "description": "OSPF external type 1 route\n"
                },
                "matchRouteTypeExternalType2": {
                    "type": "boolean",
                    "description": "OSPF external type 2 route\n"
                },
                "matchRouteTypeInternal": {
                    "type": "boolean",
                    "description": "internal route (including OSPF intra/inter area)\n"
                },
                "matchRouteTypeLevel1": {
                    "type": "boolean",
                    "description": "IS-IS level-1 route\n"
                },
                "matchRouteTypeLevel2": {
                    "type": "boolean",
                    "description": "IS-IS level-2 route\n"
                },
                "matchRouteTypeLocal": {
                    "type": "boolean",
                    "description": "locally generated route (DEPRECATED - please use route-map configuration in Cisco-IOS-XE-bgp.yang)\n"
                },
                "matchSourceProtocolBgps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Border Gateway Protocol (BGP)\n"
                },
                "matchSourceProtocolConnected": {
                    "type": "boolean",
                    "description": "Connected\n"
                },
                "matchSourceProtocolEigrps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Border Gateway Protocol (BGP)\n"
                },
                "matchSourceProtocolIsis": {
                    "type": "boolean",
                    "description": "ISO IS-IS\n"
                },
                "matchSourceProtocolLisp": {
                    "type": "boolean",
                    "description": "Locator ID Separation Protocol (LISP)\n"
                },
                "matchSourceProtocolOspfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Open Shortest Path First (OSPF)\n"
                },
                "matchSourceProtocolOspfv3s": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "OSPFv3\n"
                },
                "matchSourceProtocolRip": {
                    "type": "boolean",
                    "description": "Routing Information Protocol (RIP)\n"
                },
                "matchSourceProtocolStatic": {
                    "type": "boolean",
                    "description": "Static routes\n"
                },
                "matchTags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Tag value\n"
                },
                "matchTrack": {
                    "type": "integer",
                    "description": "tracking object\n"
                },
                "operation": {
                    "type": "string"
                },
                "seq": {
                    "type": "integer"
                },
                "setAsPathPrependAs": {
                    "type": "string",
                    "description": "\\n\\n;;AS number\n"
                },
                "setAsPathPrependAsLegacy": {
                    "type": "string",
                    "description": "\\n\\n;;AS number (DEPRECATED - please use route-map configuration in Cisco-IOS-XE-bgp.yang)\n"
                },
                "setAsPathPrependLastAs": {
                    "type": "integer"
                },
                "setAsPathPrependLastAsLegacy": {
                    "type": "integer"
                },
                "setAsPathTag": {
                    "type": "boolean",
                    "description": "Set the tag as an AS-path attribute\n"
                },
                "setAsPathTagLegacy": {
                    "type": "boolean",
                    "description": "Set the tag as an AS-path attribute (DEPRECATED - please use route-map configuration in Cisco-IOS-XE-bgp.yang)\n"
                },
                "setCommunities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setCommunitiesAdditive": {
                    "type": "boolean"
                },
                "setCommunitiesAdditiveLegacy": {
                    "type": "boolean"
                },
                "setCommunitiesLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setCommunityListDelete": {
                    "type": "boolean",
                    "description": "Delete matching communities\n"
                },
                "setCommunityListDeleteLegacy": {
                    "type": "boolean",
                    "description": "Delete matching communities (DEPRECATED - please use route-map configuration in Cisco-IOS-XE-bgp.yang)\n"
                },
                "setCommunityListExpanded": {
                    "type": "integer"
                },
                "setCommunityListExpandedLegacy": {
                    "type": "integer"
                },
                "setCommunityListName": {
                    "type": "string"
                },
                "setCommunityListNameLegacy": {
                    "type": "string"
                },
                "setCommunityListStandard": {
                    "type": "integer"
                },
                "setCommunityListStandardLegacy": {
                    "type": "integer"
                },
                "setCommunityNone": {
                    "type": "boolean",
                    "description": "No community attribute\n"
                },
                "setCommunityNoneLegacy": {
                    "type": "boolean",
                    "description": "No community attribute (DEPRECATED - please use route-map configuration in Cisco-IOS-XE-bgp.yang)\n"
                },
                "setDefaultInterfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SPAN source interface\n"
                },
                "setExtcomunityRtLegacies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setExtcomunityRts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setExtcomunitySoo": {
                    "type": "string"
                },
                "setExtcomunitySooLegacy": {
                    "type": "string"
                },
                "setExtcomunityVpnDistinguisher": {
                    "type": "string",
                    "description": "VPN Distinguisher Extended Community\n"
                },
                "setExtcomunityVpnDistinguisherAdditive": {
                    "type": "boolean"
                },
                "setExtcomunityVpnDistinguisherLegacy": {
                    "type": "string"
                },
                "setGlobal": {
                    "type": "boolean"
                },
                "setInterfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Interface specific information\n"
                },
                "setIpAddress": {
                    "type": "string",
                    "description": "Specify prefix-list\n"
                },
                "setIpDefaultGlobalNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpDefaultNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpGlobalNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpNextHopAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "setIpNextHopSelf": {
                    "type": "boolean",
                    "description": "Use self address (for BGP only)\n"
                },
                "setIpQosGroup": {
                    "type": "integer"
                },
                "setIpv6Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IPv6 prefix-list\n"
                },
                "setIpv6DefaultGlobalNextHop": {
                    "type": "string",
                    "description": "Next hop along path\n"
                },
                "setIpv6DefaultNextHops": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Default next hop IPv6 address\n"
                },
                "setIpv6NextHops": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Next hop IPv6 address\n"
                },
                "setLevel1": {
                    "type": "boolean",
                    "description": "Import into a level-1 area\n"
                },
                "setLevel12": {
                    "type": "boolean",
                    "description": "Import into level-1 and level-2\n"
                },
                "setLevel2": {
                    "type": "boolean",
                    "description": "Import into level-2 sub-domain\n"
                },
                "setLocalPreference": {
                    "type": "integer",
                    "description": "Preference value\n"
                },
                "setLocalPreferenceLegacy": {
                    "type": "integer",
                    "description": "Preference value (DEPRECATED - please use route-map configuration in Cisco-IOS-XE-bgp.yang)\n"
                },
                "setMetricChange": {
                    "type": "string",
                    "description": "+/-\\n\\n;;Add or subtract metric\n"
                },
                "setMetricDelay": {
                    "type": "string",
                    "description": "EIGRP delay metric, in 10 microsecond units\n"
                },
                "setMetricLoading": {
                    "type": "integer",
                    "description": "EIGRP Effective bandwidth metric (Loading) where 255 is 100% loaded\n"
                },
                "setMetricMtu": {
                    "type": "integer",
                    "description": "EIGRP MTU of the path\n"
                },
                "setMetricReliability": {
                    "type": "integer",
                    "description": "EIGRP reliability metric where 255 is 100% reliable\n"
                },
                "setMetricType": {
                    "type": "string",
                    "description": "Type of metric for destination routing protocol\n"
                },
                "setMetricValue": {
                    "type": "integer",
                    "description": "Metric value or Bandwidth in Kbits per second\n"
                },
                "setTag": {
                    "type": "integer",
                    "description": "Tag value\n"
                },
                "setVrf": {
                    "type": "string",
                    "description": "VPN Routing/Forwarding instance name\n"
                },
                "setWeight": {
                    "type": "integer",
                    "description": "BGP weight for routing table\n"
                },
                "setWeightLegacy": {
                    "type": "integer",
                    "description": "BGP weight for routing table (DEPRECATED - please use route-map configuration in Cisco-IOS-XE-bgp.yang)\n"
                }
            },
            "type": "object",
            "required": [
                "continue",
                "continueSequenceNumber",
                "description",
                "matchAsPaths",
                "matchAsPathsLegacies",
                "matchCommunityListExactMatch",
                "matchCommunityLists",
                "matchCommunityListsLegacies",
                "matchExtcommunityLists",
                "matchExtcommunityListsLegacies",
                "matchInterfaces",
                "matchIpAddressAccessLists",
                "matchIpAddressPrefixLists",
                "matchIpNextHopAccessLists",
                "matchIpNextHopPrefixLists",
                "matchIpv6AddressAccessLists",
                "matchIpv6AddressPrefixLists",
                "matchIpv6NextHopAccessLists",
                "matchIpv6NextHopPrefixLists",
                "matchLocalPreferences",
                "matchLocalPreferencesLegacies",
                "matchRouteTypeExternal",
                "matchRouteTypeExternalType1",
                "matchRouteTypeExternalType2",
                "matchRouteTypeInternal",
                "matchRouteTypeLevel1",
                "matchRouteTypeLevel2",
                "matchRouteTypeLocal",
                "matchSourceProtocolBgps",
                "matchSourceProtocolConnected",
                "matchSourceProtocolEigrps",
                "matchSourceProtocolIsis",
                "matchSourceProtocolLisp",
                "matchSourceProtocolOspfs",
                "matchSourceProtocolOspfv3s",
                "matchSourceProtocolRip",
                "matchSourceProtocolStatic",
                "matchTags",
                "matchTrack",
                "operation",
                "seq",
                "setAsPathPrependAs",
                "setAsPathPrependAsLegacy",
                "setAsPathPrependLastAs",
                "setAsPathPrependLastAsLegacy",
                "setAsPathTag",
                "setAsPathTagLegacy",
                "setCommunities",
                "setCommunitiesAdditive",
                "setCommunitiesAdditiveLegacy",
                "setCommunitiesLegacies",
                "setCommunityListDelete",
                "setCommunityListDeleteLegacy",
                "setCommunityListExpanded",
                "setCommunityListExpandedLegacy",
                "setCommunityListName",
                "setCommunityListNameLegacy",
                "setCommunityListStandard",
                "setCommunityListStandardLegacy",
                "setCommunityNone",
                "setCommunityNoneLegacy",
                "setDefaultInterfaces",
                "setExtcomunityRts",
                "setExtcomunityRtLegacies",
                "setExtcomunitySoo",
                "setExtcomunitySooLegacy",
                "setExtcomunityVpnDistinguisher",
                "setExtcomunityVpnDistinguisherAdditive",
                "setExtcomunityVpnDistinguisherLegacy",
                "setGlobal",
                "setInterfaces",
                "setIpAddress",
                "setIpDefaultGlobalNextHopAddresses",
                "setIpDefaultNextHopAddresses",
                "setIpGlobalNextHopAddresses",
                "setIpNextHopAddresses",
                "setIpNextHopSelf",
                "setIpQosGroup",
                "setIpv6Addresses",
                "setIpv6DefaultGlobalNextHop",
                "setIpv6DefaultNextHops",
                "setIpv6NextHops",
                "setLevel1",
                "setLevel12",
                "setLevel2",
                "setLocalPreference",
                "setLocalPreferenceLegacy",
                "setMetricChange",
                "setMetricDelay",
                "setMetricLoading",
                "setMetricMtu",
                "setMetricReliability",
                "setMetricType",
                "setMetricValue",
                "setTag",
                "setVrf",
                "setWeight",
                "setWeightLegacy"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getServiceTemplateAccessGroup:getServiceTemplateAccessGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Specify the access list name\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getServiceTemplateInterfaceTemplate:getServiceTemplateInterfaceTemplate": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Enter name of interface template\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getServiceTemplateTag:getServiceTemplateTag": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Specify the Tag name\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getSnmpServerContext:getSnmpServerContext": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getSnmpServerGroupV3Security:getSnmpServerGroupV3Security": {
            "properties": {
                "accessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "accessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "accessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string\n"
                },
                "contextNode": {
                    "type": "string",
                    "description": "specify a context to associate these views for the group\n"
                },
                "matchNode": {
                    "type": "string",
                    "description": "context name match criteria\n"
                },
                "notifyNode": {
                    "type": "string",
                    "description": "specify a notify view for the group\n"
                },
                "readNode": {
                    "type": "string",
                    "description": "specify a read view for the group\n"
                },
                "securityLevel": {
                    "type": "string",
                    "description": "security level type\n"
                },
                "writeNode": {
                    "type": "string",
                    "description": "specify a write view for the group\n"
                }
            },
            "type": "object",
            "required": [
                "accessAclName",
                "accessIpv6Acl",
                "accessStandardAcl",
                "contextNode",
                "matchNode",
                "notifyNode",
                "readNode",
                "securityLevel",
                "writeNode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getSnmpServerHost:getSnmpServerHost": {
            "properties": {
                "communityOrUser": {
                    "type": "string",
                    "description": "SNMPv1/v2c community string or SNMPv3 user name\n"
                },
                "encryption": {
                    "type": "string",
                    "description": "Specifies an encryption type for community string\n"
                },
                "ipAddress": {
                    "type": "string"
                },
                "version": {
                    "type": "string",
                    "description": "SNMP version to use for notification messages\n"
                }
            },
            "type": "object",
            "required": [
                "communityOrUser",
                "encryption",
                "ipAddress",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getSnmpServerSnmpCommunity:getSnmpServerSnmpCommunity": {
            "properties": {
                "accessListName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "ipv6": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "name": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "view": {
                    "type": "string",
                    "description": "Restrict this community to a named MIB view\n"
                }
            },
            "type": "object",
            "required": [
                "accessListName",
                "ipv6",
                "name",
                "permission",
                "view"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getSnmpServerView:getSnmpServerView": {
            "properties": {
                "incExl": {
                    "type": "string"
                },
                "mib": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "incExl",
                "mib",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getStaticRouteNextHop:getStaticRouteNextHop": {
            "properties": {
                "global": {
                    "type": "boolean",
                    "description": "Next hop address is global\n"
                },
                "metric": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "Specify name of the next hop\n"
                },
                "nextHop": {
                    "type": "string"
                },
                "permanent": {
                    "type": "boolean",
                    "description": "permanent route\n"
                },
                "tag": {
                    "type": "integer",
                    "description": "Set tag for this route\n"
                }
            },
            "type": "object",
            "required": [
                "global",
                "metric",
                "name",
                "nextHop",
                "permanent",
                "tag"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getStaticRouteVrfRoute:getStaticRouteVrfRoute": {
            "properties": {
                "mask": {
                    "type": "string"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/getStaticRouteVrfRouteNextHop:getStaticRouteVrfRouteNextHop"
                    }
                },
                "prefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mask",
                "nextHops",
                "prefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getStaticRouteVrfRouteNextHop:getStaticRouteVrfRouteNextHop": {
            "properties": {
                "global": {
                    "type": "boolean"
                },
                "metric": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nextHop": {
                    "type": "string"
                },
                "permanent": {
                    "type": "boolean"
                },
                "tag": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "global",
                "metric",
                "name",
                "nextHop",
                "permanent",
                "tag"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getSystemMulticastRoutingVrf:getSystemMulticastRoutingVrf": {
            "properties": {
                "distributed": {
                    "type": "boolean",
                    "description": "Distributed multicast switching\n"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "distributed",
                "vrf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getTemplateDeviceTrackingAttachPolicy:getTemplateDeviceTrackingAttachPolicy": {
            "properties": {
                "policyName": {
                    "type": "string"
                },
                "vlanRange": {
                    "type": "string",
                    "description": "VLAN IDs of the VLANs for which this policy applies\n"
                }
            },
            "type": "object",
            "required": [
                "policyName",
                "vlanRange"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getTemplateIpAccessGroup:getTemplateIpAccessGroup": {
            "properties": {
                "accessList": {
                    "type": "string",
                    "description": "Access control list name\n"
                },
                "direction": {
                    "type": "string",
                    "description": "packet flow direction\n"
                }
            },
            "type": "object",
            "required": [
                "accessList",
                "direction"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getTemplateSwitchportPortSecurityMaximumRange:getTemplateSwitchportPortSecurityMaximumRange": {
            "properties": {
                "range": {
                    "type": "integer",
                    "description": "Maximum addresses\n"
                },
                "vlan": {
                    "type": "boolean",
                    "description": "Max secure addresses per vlan\n"
                },
                "vlanAccess": {
                    "type": "boolean",
                    "description": "access vlan\n"
                }
            },
            "type": "object",
            "required": [
                "range",
                "vlan",
                "vlanAccess"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getVrfIpv4RouteTargetExport:getVrfIpv4RouteTargetExport": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "Value\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getVrfIpv4RouteTargetExportStitching:getVrfIpv4RouteTargetExportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean",
                    "description": "VXLAN route target set\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value\n"
                }
            },
            "type": "object",
            "required": [
                "stitching",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getVrfIpv4RouteTargetImport:getVrfIpv4RouteTargetImport": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "Value\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getVrfIpv4RouteTargetImportStitching:getVrfIpv4RouteTargetImportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean",
                    "description": "VXLAN route target set\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value\n"
                }
            },
            "type": "object",
            "required": [
                "stitching",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getVrfIpv6RouteTargetExport:getVrfIpv6RouteTargetExport": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "Value\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getVrfIpv6RouteTargetExportStitching:getVrfIpv6RouteTargetExportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean",
                    "description": "VXLAN route target set\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value\n"
                }
            },
            "type": "object",
            "required": [
                "stitching",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getVrfIpv6RouteTargetImport:getVrfIpv6RouteTargetImport": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "Value\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getVrfIpv6RouteTargetImportStitching:getVrfIpv6RouteTargetImportStitching": {
            "properties": {
                "stitching": {
                    "type": "boolean",
                    "description": "VXLAN route target set\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value\n"
                }
            },
            "type": "object",
            "required": [
                "stitching",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getVrfRouteTargetExport:getVrfRouteTargetExport": {
            "properties": {
                "stitching": {
                    "type": "boolean",
                    "description": "VXLAN route target set\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value\n"
                }
            },
            "type": "object",
            "required": [
                "stitching",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "iosxe:index/getVrfRouteTargetImport:getVrfRouteTargetImport": {
            "properties": {
                "stitching": {
                    "type": "boolean",
                    "description": "VXLAN route target set\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value\n"
                }
            },
            "type": "object",
            "required": [
                "stitching",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the iosxe package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "devices": {
                "type": "array",
                "items": {
                    "$ref": "#/types/iosxe:index/ProviderDevice:ProviderDevice"
                },
                "description": "This can be used to manage a list of devices from a single provider. All devices must use the same credentials. Each\nresource and data source has an optional attribute named `device`, which can then select a device by its name from this\nlist.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Allow insecure HTTPS client. This can also be set as the IOSXE_INSECURE environment variable. Defaults to `true`.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for the IOS-XE device. This can also be set as the IOSXE_PASSWORD environment variable.\n",
                "secret": true
            },
            "retries": {
                "type": "integer",
                "description": "Number of retries for REST API calls. This can also be set as the IOSXE_RETRIES environment variable. Defaults to `10`.\n"
            },
            "url": {
                "type": "string",
                "description": "URL of the Cisco IOS-XE device. Optionally a port can be added with `:12345`. The default port is `443`. This can also\nbe set as the IOSXE_URL environment variable.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for the IOS-XE device. This can also be set as the IOSXE_USERNAME environment variable.\n"
            }
        },
        "inputProperties": {
            "devices": {
                "type": "array",
                "items": {
                    "$ref": "#/types/iosxe:index/ProviderDevice:ProviderDevice"
                },
                "description": "This can be used to manage a list of devices from a single provider. All devices must use the same credentials. Each\nresource and data source has an optional attribute named `device`, which can then select a device by its name from this\nlist.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "Allow insecure HTTPS client. This can also be set as the IOSXE_INSECURE environment variable. Defaults to `true`.\n"
            },
            "password": {
                "type": "string",
                "description": "Password for the IOS-XE device. This can also be set as the IOSXE_PASSWORD environment variable.\n",
                "secret": true
            },
            "retries": {
                "type": "integer",
                "description": "Number of retries for REST API calls. This can also be set as the IOSXE_RETRIES environment variable. Defaults to `10`.\n"
            },
            "url": {
                "type": "string",
                "description": "URL of the Cisco IOS-XE device. Optionally a port can be added with `:12345`. The default port is `443`. This can also\nbe set as the IOSXE_URL environment variable.\n"
            },
            "username": {
                "type": "string",
                "description": "Username for the IOS-XE device. This can also be set as the IOSXE_USERNAME environment variable.\n"
            }
        }
    },
    "resources": {
        "iosxe:index/aaa:Aaa": {
            "description": "This resource can manage the AAA configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Aaa;\nimport com.pulumi.iosxe.AaaArgs;\nimport com.pulumi.iosxe.inputs.AaaGroupServerRadiusArgs;\nimport com.pulumi.iosxe.inputs.AaaGroupServerTacacsplusArgs;\nimport com.pulumi.iosxe.inputs.AaaServerRadiusDynamicAuthorClientArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Aaa(\"example\", AaaArgs.builder()        \n            .groupServerRadii(AaaGroupServerRadiusArgs.builder()\n                .ip_radius_source_interface_loopback(0)\n                .name(\"T-Group\")\n                .server_names(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                .build())\n            .groupServerTacacspluses(AaaGroupServerTacacsplusArgs.builder()\n                .name(\"tacacs-group\")\n                .server_names(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                .build())\n            .newModel(true)\n            .serverRadiusDynamicAuthor(true)\n            .serverRadiusDynamicAuthorClients(AaaServerRadiusDynamicAuthorClientArgs.builder()\n                .ip(\"11.1.1.1\")\n                .server_key(\"abcd123\")\n                .server_key_type(\"0\")\n                .build())\n            .sessionId(\"common\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Aaa\n    properties:\n      groupServerRadii:\n        - ip_radius_source_interface_loopback: 0\n          name: T-Group\n          server_names:\n            - name: TESTRADIUS\n      groupServerTacacspluses:\n        - name: tacacs-group\n          server_names:\n            - name: tacacs_10.10.15.12\n      newModel: true\n      serverRadiusDynamicAuthor: true\n      serverRadiusDynamicAuthorClients:\n        - ip: 11.1.1.1\n          server_key: abcd123\n          server_key_type: '0'\n      sessionId: common\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/aaa:Aaa example \"Cisco-IOS-XE-native:native/aaa\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "groupServerRadii": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaGroupServerRadius:AaaGroupServerRadius"
                    },
                    "description": "Radius server-group definition\n"
                },
                "groupServerTacacspluses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaGroupServerTacacsplus:AaaGroupServerTacacsplus"
                    },
                    "description": "Tacacs+ server-group definition\n"
                },
                "newModel": {
                    "type": "boolean",
                    "description": "Enable NEW access control commands and functions.(Disables OLD commands.)\n"
                },
                "serverRadiusDynamicAuthor": {
                    "type": "boolean",
                    "description": "Local server profile for RFC 3576 support\n"
                },
                "serverRadiusDynamicAuthorClients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaServerRadiusDynamicAuthorClient:AaaServerRadiusDynamicAuthorClient"
                    },
                    "description": "Specify a RADIUS client\n"
                },
                "sessionId": {
                    "type": "string",
                    "description": "AAA Session ID - Choices: `common`, `unique`\n"
                }
            },
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "groupServerRadii": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaGroupServerRadius:AaaGroupServerRadius"
                    },
                    "description": "Radius server-group definition\n"
                },
                "groupServerTacacspluses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaGroupServerTacacsplus:AaaGroupServerTacacsplus"
                    },
                    "description": "Tacacs+ server-group definition\n"
                },
                "newModel": {
                    "type": "boolean",
                    "description": "Enable NEW access control commands and functions.(Disables OLD commands.)\n"
                },
                "serverRadiusDynamicAuthor": {
                    "type": "boolean",
                    "description": "Local server profile for RFC 3576 support\n"
                },
                "serverRadiusDynamicAuthorClients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaServerRadiusDynamicAuthorClient:AaaServerRadiusDynamicAuthorClient"
                    },
                    "description": "Specify a RADIUS client\n"
                },
                "sessionId": {
                    "type": "string",
                    "description": "AAA Session ID - Choices: `common`, `unique`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Aaa resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "groupServerRadii": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/AaaGroupServerRadius:AaaGroupServerRadius"
                        },
                        "description": "Radius server-group definition\n"
                    },
                    "groupServerTacacspluses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/AaaGroupServerTacacsplus:AaaGroupServerTacacsplus"
                        },
                        "description": "Tacacs+ server-group definition\n"
                    },
                    "newModel": {
                        "type": "boolean",
                        "description": "Enable NEW access control commands and functions.(Disables OLD commands.)\n"
                    },
                    "serverRadiusDynamicAuthor": {
                        "type": "boolean",
                        "description": "Local server profile for RFC 3576 support\n"
                    },
                    "serverRadiusDynamicAuthorClients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/AaaServerRadiusDynamicAuthorClient:AaaServerRadiusDynamicAuthorClient"
                        },
                        "description": "Specify a RADIUS client\n"
                    },
                    "sessionId": {
                        "type": "string",
                        "description": "AAA Session ID - Choices: `common`, `unique`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/aaaAccounting:AaaAccounting": {
            "description": "This resource can manage the AAA Accounting configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.AaaAccounting;\nimport com.pulumi.iosxe.AaaAccountingArgs;\nimport com.pulumi.iosxe.inputs.AaaAccountingExecArgs;\nimport com.pulumi.iosxe.inputs.AaaAccountingNetworkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AaaAccounting(\"example\", AaaAccountingArgs.builder()        \n            .execs(AaaAccountingExecArgs.builder()\n                .name(\"default\")\n                .start_stop_group1(\"T-Group\")\n                .build())\n            .identityDefaultStartStopGroup1(\"RADIUS-GROUP\")\n            .identityDefaultStartStopGroup2(\"RADIUS-GROUP2\")\n            .identityDefaultStartStopGroup3(\"RADIUS-GROUP3\")\n            .identityDefaultStartStopGroup4(\"RADIUS-GROUP4\")\n            .networks(AaaAccountingNetworkArgs.builder()\n                .id(\"network1\")\n                .start_stop_group1(\"radius\")\n                .start_stop_group2(\"tacacs+\")\n                .build())\n            .systemGuaranteeFirst(false)\n            .updateNewinfoPeriodic(2880)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:AaaAccounting\n    properties:\n      execs:\n        - name: default\n          start_stop_group1: T-Group\n      identityDefaultStartStopGroup1: RADIUS-GROUP\n      identityDefaultStartStopGroup2: RADIUS-GROUP2\n      identityDefaultStartStopGroup3: RADIUS-GROUP3\n      identityDefaultStartStopGroup4: RADIUS-GROUP4\n      networks:\n        - id: network1\n          start_stop_group1: radius\n          start_stop_group2: tacacs+\n      systemGuaranteeFirst: false\n      updateNewinfoPeriodic: 2880\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/aaaAccounting:AaaAccounting example \"Cisco-IOS-XE-native:native/aaa/Cisco-IOS-XE-aaa:accounting\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "execs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaAccountingExec:AaaAccountingExec"
                    },
                    "description": "For starting an exec (shell).\n"
                },
                "identityDefaultStartStopGroup1": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "identityDefaultStartStopGroup2": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "identityDefaultStartStopGroup3": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "identityDefaultStartStopGroup4": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaAccountingNetwork:AaaAccountingNetwork"
                    },
                    "description": "For network services. (PPP, SLIP, ARAP)\n"
                },
                "systemGuaranteeFirst": {
                    "type": "boolean",
                    "description": "Guarantee system accounting as first record.\n"
                },
                "updateNewinfoPeriodic": {
                    "type": "integer",
                    "description": "Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "execs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaAccountingExec:AaaAccountingExec"
                    },
                    "description": "For starting an exec (shell).\n"
                },
                "identityDefaultStartStopGroup1": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "identityDefaultStartStopGroup2": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "identityDefaultStartStopGroup3": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "identityDefaultStartStopGroup4": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaAccountingNetwork:AaaAccountingNetwork"
                    },
                    "description": "For network services. (PPP, SLIP, ARAP)\n"
                },
                "systemGuaranteeFirst": {
                    "type": "boolean",
                    "description": "Guarantee system accounting as first record.\n"
                },
                "updateNewinfoPeriodic": {
                    "type": "integer",
                    "description": "Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AaaAccounting resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "execs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/AaaAccountingExec:AaaAccountingExec"
                        },
                        "description": "For starting an exec (shell).\n"
                    },
                    "identityDefaultStartStopGroup1": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "identityDefaultStartStopGroup2": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "identityDefaultStartStopGroup3": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "identityDefaultStartStopGroup4": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/AaaAccountingNetwork:AaaAccountingNetwork"
                        },
                        "description": "For network services. (PPP, SLIP, ARAP)\n"
                    },
                    "systemGuaranteeFirst": {
                        "type": "boolean",
                        "description": "Guarantee system accounting as first record.\n"
                    },
                    "updateNewinfoPeriodic": {
                        "type": "integer",
                        "description": "Periodic intervals to send accounting update records(in minutes) - Range: `1`-`71582`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/aaaAuthentication:AaaAuthentication": {
            "description": "This resource can manage the AAA Authentication configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.AaaAuthentication;\nimport com.pulumi.iosxe.AaaAuthenticationArgs;\nimport com.pulumi.iosxe.inputs.AaaAuthenticationLoginArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AaaAuthentication(\"example\", AaaAuthenticationArgs.builder()        \n            .dot1xDefaultA1Group(\"Radius-GROUP\")\n            .dot1xDefaultA2Group(\"Radius-GROUP2\")\n            .logins(AaaAuthenticationLoginArgs.builder()\n                .a1_group(\"Radius-GROUP\")\n                .a2_none(true)\n                .name(\"test\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:AaaAuthentication\n    properties:\n      dot1xDefaultA1Group: Radius-GROUP\n      dot1xDefaultA2Group: Radius-GROUP2\n      logins:\n        - a1_group: Radius-GROUP\n          a2_none: true\n          name: test\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/aaaAuthentication:AaaAuthentication example \"Cisco-IOS-XE-native:native/aaa/Cisco-IOS-XE-aaa:authentication\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dot1xDefaultA1Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA1Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "dot1xDefaultA2Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA2Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "dot1xDefaultA3Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA3Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "dot1xDefaultA4Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA4Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "logins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaAuthenticationLogin:AaaAuthenticationLogin"
                    },
                    "description": "Set authentication lists for logins.\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dot1xDefaultA1Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA1Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "dot1xDefaultA2Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA2Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "dot1xDefaultA3Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA3Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "dot1xDefaultA4Group": {
                    "type": "string",
                    "description": "Use Server-group\n"
                },
                "dot1xDefaultA4Local": {
                    "type": "boolean",
                    "description": "Use local username authentication\n"
                },
                "logins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaAuthenticationLogin:AaaAuthenticationLogin"
                    },
                    "description": "Set authentication lists for logins.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AaaAuthentication resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dot1xDefaultA1Group": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "dot1xDefaultA1Local": {
                        "type": "boolean",
                        "description": "Use local username authentication\n"
                    },
                    "dot1xDefaultA2Group": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "dot1xDefaultA2Local": {
                        "type": "boolean",
                        "description": "Use local username authentication\n"
                    },
                    "dot1xDefaultA3Group": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "dot1xDefaultA3Local": {
                        "type": "boolean",
                        "description": "Use local username authentication\n"
                    },
                    "dot1xDefaultA4Group": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "dot1xDefaultA4Local": {
                        "type": "boolean",
                        "description": "Use local username authentication\n"
                    },
                    "logins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/AaaAuthenticationLogin:AaaAuthenticationLogin"
                        },
                        "description": "Set authentication lists for logins.\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/aaaAuthorization:AaaAuthorization": {
            "description": "This resource can manage the AAA Authorization configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.AaaAuthorization;\nimport com.pulumi.iosxe.AaaAuthorizationArgs;\nimport com.pulumi.iosxe.inputs.AaaAuthorizationExecArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AaaAuthorization(\"example\", AaaAuthorizationArgs.builder()        \n            .execs(AaaAuthorizationExecArgs.builder()\n                .a1_group(\"GROUP1\")\n                .a1_if_authenticated(true)\n                .a1_local(false)\n                .name(\"TEST\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:AaaAuthorization\n    properties:\n      execs:\n        - a1_group: GROUP1\n          a1_if_authenticated: true\n          a1_local: false\n          name: TEST\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/aaaAuthorization:AaaAuthorization example \"Cisco-IOS-XE-native:native/aaa/Cisco-IOS-XE-aaa:authorization\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "execs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaAuthorizationExec:AaaAuthorizationExec"
                    },
                    "description": "For starting an exec (shell).\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaAuthorizationNetwork:AaaAuthorizationNetwork"
                    },
                    "description": "For network services. (PPP, SLIP, ARAP)\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "execs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaAuthorizationExec:AaaAuthorizationExec"
                    },
                    "description": "For starting an exec (shell).\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AaaAuthorizationNetwork:AaaAuthorizationNetwork"
                    },
                    "description": "For network services. (PPP, SLIP, ARAP)\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AaaAuthorization resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "execs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/AaaAuthorizationExec:AaaAuthorizationExec"
                        },
                        "description": "For starting an exec (shell).\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/AaaAuthorizationNetwork:AaaAuthorizationNetwork"
                        },
                        "description": "For network services. (PPP, SLIP, ARAP)\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/accessListExtended:AccessListExtended": {
            "description": "This resource can manage the Access List Extended configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.AccessListExtended;\nimport com.pulumi.iosxe.AccessListExtendedArgs;\nimport com.pulumi.iosxe.inputs.AccessListExtendedEntryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AccessListExtended(\"example\", AccessListExtendedArgs.builder()        \n            .entries(AccessListExtendedEntryArgs.builder()\n                .ace_rule_action(\"permit\")\n                .ace_rule_protocol(\"tcp\")\n                .ack(true)\n                .destination_host(\"10.1.1.1\")\n                .destination_port_range_from(\"1000\")\n                .destination_port_range_to(\"2000\")\n                .dscp(\"46\")\n                .fin(true)\n                .log(true)\n                .psh(true)\n                .remark(\"Description\")\n                .rst(true)\n                .sequence(10)\n                .source_port_equal(\"1000\")\n                .source_prefix(\"10.0.0.0\")\n                .source_prefix_mask(\"0.0.0.255\")\n                .syn(true)\n                .urg(true)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:AccessListExtended\n    properties:\n      entries:\n        - ace_rule_action: permit\n          ace_rule_protocol: tcp\n          ack: true\n          destination_host: 10.1.1.1\n          destination_port_range_from: '1000'\n          destination_port_range_to: '2000'\n          dscp: '46'\n          fin: true\n          log: true\n          psh: true\n          remark: Description\n          rst: true\n          sequence: 10\n          source_port_equal: '1000'\n          source_prefix: 10.0.0.0\n          source_prefix_mask: 0.0.0.255\n          syn: true\n          urg: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/accessListExtended:AccessListExtended example \"Cisco-IOS-XE-native:native/ip/access-list/Cisco-IOS-XE-acl:extended=EACL1\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AccessListExtendedEntry:AccessListExtendedEntry"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AccessListExtendedEntry:AccessListExtendedEntry"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessListExtended resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/AccessListExtendedEntry:AccessListExtendedEntry"
                        }
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/accessListStandard:AccessListStandard": {
            "description": "This resource can manage the Access List Standard configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.AccessListStandard;\nimport com.pulumi.iosxe.AccessListStandardArgs;\nimport com.pulumi.iosxe.inputs.AccessListStandardEntryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new AccessListStandard(\"example\", AccessListStandardArgs.builder()        \n            .entries(AccessListStandardEntryArgs.builder()\n                .deny_log(true)\n                .deny_prefix(\"10.0.0.0\")\n                .deny_prefix_mask(\"0.0.0.255\")\n                .remark(\"Description\")\n                .sequence(10)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:AccessListStandard\n    properties:\n      entries:\n        - deny_log: true\n          deny_prefix: 10.0.0.0\n          deny_prefix_mask: 0.0.0.255\n          remark: Description\n          sequence: 10\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/accessListStandard:AccessListStandard example \"Cisco-IOS-XE-native:native/ip/access-list/Cisco-IOS-XE-acl:standard=SACL1\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AccessListStandardEntry:AccessListStandardEntry"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/AccessListStandardEntry:AccessListStandardEntry"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessListStandard resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/AccessListStandardEntry:AccessListStandardEntry"
                        }
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/arp:Arp": {
            "description": "This resource can manage the ARP configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.Arp(\"example\", {\n    incompleteEntries: 10,\n    proxyDisable: true,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.Arp(\"example\",\n    incomplete_entries=10,\n    proxy_disable=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.Arp(\"example\", new()\n    {\n        IncompleteEntries = 10,\n        ProxyDisable = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewArp(ctx, \"example\", \u0026iosxe.ArpArgs{\n\t\t\tIncompleteEntries: pulumi.Int(10),\n\t\t\tProxyDisable:      pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Arp;\nimport com.pulumi.iosxe.ArpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Arp(\"example\", ArpArgs.builder()        \n            .incompleteEntries(10)\n            .proxyDisable(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Arp\n    properties:\n      incompleteEntries: 10\n      proxyDisable: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/arp:Arp example \"Cisco-IOS-XE-native:native/ip/arp\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entryLearn": {
                    "type": "integer",
                    "description": "Maximum learn entry limit - Range: `255`-`512000`\n"
                },
                "incompleteEntries": {
                    "type": "integer",
                    "description": "Specify the number of IP addresses to resolve - Range: `1`-`2147483647`\n"
                },
                "inspectionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/ArpInspectionFilter:ArpInspectionFilter"
                    },
                    "description": "Specify ARP acl to be applied\n"
                },
                "inspectionLogBufferEntries": {
                    "type": "integer",
                    "description": "Number of entries for log buffer - Range: `0`-`1024`\n"
                },
                "inspectionLogBufferLogsEntries": {
                    "type": "integer",
                    "description": "Number of entries for log buffer - Range: `0`-`1024`\n"
                },
                "inspectionLogBufferLogsInterval": {
                    "type": "integer",
                    "description": "Interval for controlling logging rate - Range: `0`-`86400`\n"
                },
                "inspectionValidateAllowZeros": {
                    "type": "boolean",
                    "description": "Allow 0.0.0.0 sender IP address\n"
                },
                "inspectionValidateDstMac": {
                    "type": "boolean",
                    "description": "Validate destination MAC address\n"
                },
                "inspectionValidateIp": {
                    "type": "boolean",
                    "description": "Validate IP addresses\n"
                },
                "inspectionValidateSrcMac": {
                    "type": "boolean",
                    "description": "Validate source MAC address\n"
                },
                "inspectionVlan": {
                    "type": "string",
                    "description": "Enable/Disable ARP Inspection on vlans\n"
                },
                "proxyDisable": {
                    "type": "boolean",
                    "description": "Disable proxy ARP on all interfaces\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entryLearn": {
                    "type": "integer",
                    "description": "Maximum learn entry limit - Range: `255`-`512000`\n"
                },
                "incompleteEntries": {
                    "type": "integer",
                    "description": "Specify the number of IP addresses to resolve - Range: `1`-`2147483647`\n"
                },
                "inspectionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/ArpInspectionFilter:ArpInspectionFilter"
                    },
                    "description": "Specify ARP acl to be applied\n"
                },
                "inspectionLogBufferEntries": {
                    "type": "integer",
                    "description": "Number of entries for log buffer - Range: `0`-`1024`\n"
                },
                "inspectionLogBufferLogsEntries": {
                    "type": "integer",
                    "description": "Number of entries for log buffer - Range: `0`-`1024`\n"
                },
                "inspectionLogBufferLogsInterval": {
                    "type": "integer",
                    "description": "Interval for controlling logging rate - Range: `0`-`86400`\n"
                },
                "inspectionValidateAllowZeros": {
                    "type": "boolean",
                    "description": "Allow 0.0.0.0 sender IP address\n"
                },
                "inspectionValidateDstMac": {
                    "type": "boolean",
                    "description": "Validate destination MAC address\n"
                },
                "inspectionValidateIp": {
                    "type": "boolean",
                    "description": "Validate IP addresses\n"
                },
                "inspectionValidateSrcMac": {
                    "type": "boolean",
                    "description": "Validate source MAC address\n"
                },
                "inspectionVlan": {
                    "type": "string",
                    "description": "Enable/Disable ARP Inspection on vlans\n"
                },
                "proxyDisable": {
                    "type": "boolean",
                    "description": "Disable proxy ARP on all interfaces\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Arp resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "entryLearn": {
                        "type": "integer",
                        "description": "Maximum learn entry limit - Range: `255`-`512000`\n"
                    },
                    "incompleteEntries": {
                        "type": "integer",
                        "description": "Specify the number of IP addresses to resolve - Range: `1`-`2147483647`\n"
                    },
                    "inspectionFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/ArpInspectionFilter:ArpInspectionFilter"
                        },
                        "description": "Specify ARP acl to be applied\n"
                    },
                    "inspectionLogBufferEntries": {
                        "type": "integer",
                        "description": "Number of entries for log buffer - Range: `0`-`1024`\n"
                    },
                    "inspectionLogBufferLogsEntries": {
                        "type": "integer",
                        "description": "Number of entries for log buffer - Range: `0`-`1024`\n"
                    },
                    "inspectionLogBufferLogsInterval": {
                        "type": "integer",
                        "description": "Interval for controlling logging rate - Range: `0`-`86400`\n"
                    },
                    "inspectionValidateAllowZeros": {
                        "type": "boolean",
                        "description": "Allow 0.0.0.0 sender IP address\n"
                    },
                    "inspectionValidateDstMac": {
                        "type": "boolean",
                        "description": "Validate destination MAC address\n"
                    },
                    "inspectionValidateIp": {
                        "type": "boolean",
                        "description": "Validate IP addresses\n"
                    },
                    "inspectionValidateSrcMac": {
                        "type": "boolean",
                        "description": "Validate source MAC address\n"
                    },
                    "inspectionVlan": {
                        "type": "string",
                        "description": "Enable/Disable ARP Inspection on vlans\n"
                    },
                    "proxyDisable": {
                        "type": "boolean",
                        "description": "Disable proxy ARP on all interfaces\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/banner:Banner": {
            "description": "This resource can manage the Banner configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.Banner(\"example\", {\n    execBanner: \"My Exec Banner\",\n    loginBanner: \"My Login Banner\",\n    motdBanner: \"My MOTD Banner\",\n    promptTimeoutBanner: \"My Prompt-Timeout Banner\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.Banner(\"example\",\n    exec_banner=\"My Exec Banner\",\n    login_banner=\"My Login Banner\",\n    motd_banner=\"My MOTD Banner\",\n    prompt_timeout_banner=\"My Prompt-Timeout Banner\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.Banner(\"example\", new()\n    {\n        ExecBanner = \"My Exec Banner\",\n        LoginBanner = \"My Login Banner\",\n        MotdBanner = \"My MOTD Banner\",\n        PromptTimeoutBanner = \"My Prompt-Timeout Banner\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewBanner(ctx, \"example\", \u0026iosxe.BannerArgs{\n\t\t\tExecBanner:          pulumi.String(\"My Exec Banner\"),\n\t\t\tLoginBanner:         pulumi.String(\"My Login Banner\"),\n\t\t\tMotdBanner:          pulumi.String(\"My MOTD Banner\"),\n\t\t\tPromptTimeoutBanner: pulumi.String(\"My Prompt-Timeout Banner\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Banner;\nimport com.pulumi.iosxe.BannerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Banner(\"example\", BannerArgs.builder()        \n            .execBanner(\"My Exec Banner\")\n            .loginBanner(\"My Login Banner\")\n            .motdBanner(\"My MOTD Banner\")\n            .promptTimeoutBanner(\"My Prompt-Timeout Banner\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Banner\n    properties:\n      execBanner: My Exec Banner\n      loginBanner: My Login Banner\n      motdBanner: My MOTD Banner\n      promptTimeoutBanner: My Prompt-Timeout Banner\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/banner:Banner example \"Cisco-IOS-XE-native:native/banner\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "execBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                },
                "loginBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                },
                "motdBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                },
                "promptTimeoutBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "execBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                },
                "loginBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                },
                "motdBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                },
                "promptTimeoutBanner": {
                    "type": "string",
                    "description": "Banner message\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Banner resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "execBanner": {
                        "type": "string",
                        "description": "Banner message\n"
                    },
                    "loginBanner": {
                        "type": "string",
                        "description": "Banner message\n"
                    },
                    "motdBanner": {
                        "type": "string",
                        "description": "Banner message\n"
                    },
                    "promptTimeoutBanner": {
                        "type": "string",
                        "description": "Banner message\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/bfd:Bfd": {
            "description": "This resource can manage the BFD configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Bfd;\nimport com.pulumi.iosxe.BfdArgs;\nimport com.pulumi.iosxe.inputs.BfdIpv4BothVrfArgs;\nimport com.pulumi.iosxe.inputs.BfdIpv4WithDstVrfArgs;\nimport com.pulumi.iosxe.inputs.BfdIpv4WithSrcVrfArgs;\nimport com.pulumi.iosxe.inputs.BfdIpv4WithoutVrfArgs;\nimport com.pulumi.iosxe.inputs.BfdIpv6WithBothVrfArgs;\nimport com.pulumi.iosxe.inputs.BfdIpv6WithDstVrfArgs;\nimport com.pulumi.iosxe.inputs.BfdIpv6WithSrcVrfArgs;\nimport com.pulumi.iosxe.inputs.BfdIpv6WithoutVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Bfd(\"example\", BfdArgs.builder()        \n            .ipv4BothVrfs(BfdIpv4BothVrfArgs.builder()\n                .dest_ip(\"1.2.3.4/4\")\n                .dst_vrf(\"dest_vrf1\")\n                .src_ip(\"11.22.33.44/12\")\n                .src_vrf(\"src_vrf1\")\n                .template_name(\"template1\")\n                .build())\n            .ipv4WithDstVrfs(BfdIpv4WithDstVrfArgs.builder()\n                .dest_ip(\"1.2.3.4/4\")\n                .dst_vrf(\"dest_vrf1\")\n                .src_ip(\"11.22.33.44/12\")\n                .template_name(\"template1\")\n                .build())\n            .ipv4WithSrcVrfs(BfdIpv4WithSrcVrfArgs.builder()\n                .dest_ip(\"1.2.3.4/4\")\n                .src_ip(\"11.22.33.44/12\")\n                .src_vrf(\"src_vrf1\")\n                .template_name(\"template1\")\n                .build())\n            .ipv4WithoutVrfs(BfdIpv4WithoutVrfArgs.builder()\n                .dest_ip(\"1.2.3.4/4\")\n                .src_ip(\"11.22.33.44/12\")\n                .template_name(\"template1\")\n                .build())\n            .ipv6WithBothVrfs(BfdIpv6WithBothVrfArgs.builder()\n                .dest_ipv6(\"2001:DB8:0:1::/64\")\n                .dst_vrf(\"dst_vrf1\")\n                .src_ipv6(\"2001:DB8:0:2::/64\")\n                .src_vrf(\"src_vrf1\")\n                .template_name(\"template1\")\n                .build())\n            .ipv6WithDstVrfs(BfdIpv6WithDstVrfArgs.builder()\n                .dest_ipv6(\"2001:DB8:0:1::/64\")\n                .dst_vrf(\"dst_vrf1\")\n                .src_ipv6(\"2001:DB8:0:2::/64\")\n                .template_name(\"template1\")\n                .build())\n            .ipv6WithSrcVrfs(BfdIpv6WithSrcVrfArgs.builder()\n                .dest_ipv6(\"2001:DB8:0:1::/64\")\n                .src_ipv6(\"2001:DB8:0:2::/64\")\n                .src_vrf(\"src_vrf1\")\n                .template_name(\"template1\")\n                .build())\n            .ipv6WithoutVrfs(BfdIpv6WithoutVrfArgs.builder()\n                .dest_ipv6(\"2001:DB8:0:1::/64\")\n                .src_ipv6(\"2001:DB8:0:2::/64\")\n                .template_name(\"template1\")\n                .build())\n            .slowTimers(1000)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Bfd\n    properties:\n      ipv4BothVrfs:\n        - dest_ip: 1.2.3.4/4\n          dst_vrf: dest_vrf1\n          src_ip: 11.22.33.44/12\n          src_vrf: src_vrf1\n          template_name: template1\n      ipv4WithDstVrfs:\n        - dest_ip: 1.2.3.4/4\n          dst_vrf: dest_vrf1\n          src_ip: 11.22.33.44/12\n          template_name: template1\n      ipv4WithSrcVrfs:\n        - dest_ip: 1.2.3.4/4\n          src_ip: 11.22.33.44/12\n          src_vrf: src_vrf1\n          template_name: template1\n      ipv4WithoutVrfs:\n        - dest_ip: 1.2.3.4/4\n          src_ip: 11.22.33.44/12\n          template_name: template1\n      ipv6WithBothVrfs:\n        - dest_ipv6: 2001:DB8:0:1::/64\n          dst_vrf: dst_vrf1\n          src_ipv6: 2001:DB8:0:2::/64\n          src_vrf: src_vrf1\n          template_name: template1\n      ipv6WithDstVrfs:\n        - dest_ipv6: 2001:DB8:0:1::/64\n          dst_vrf: dst_vrf1\n          src_ipv6: 2001:DB8:0:2::/64\n          template_name: template1\n      ipv6WithSrcVrfs:\n        - dest_ipv6: 2001:DB8:0:1::/64\n          src_ipv6: 2001:DB8:0:2::/64\n          src_vrf: src_vrf1\n          template_name: template1\n      ipv6WithoutVrfs:\n        - dest_ipv6: 2001:DB8:0:1::/64\n          src_ipv6: 2001:DB8:0:2::/64\n          template_name: template1\n      slowTimers: 1000\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/bfd:Bfd example \"Cisco-IOS-XE-native:native/bfd\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4BothVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv4BothVrf:BfdIpv4BothVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv4WithDstVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv4WithDstVrf:BfdIpv4WithDstVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv4WithSrcVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv4WithSrcVrf:BfdIpv4WithSrcVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv4WithoutVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv4WithoutVrf:BfdIpv4WithoutVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv6WithBothVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv6WithBothVrf:BfdIpv6WithBothVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "ipv6WithDstVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv6WithDstVrf:BfdIpv6WithDstVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "ipv6WithSrcVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv6WithSrcVrf:BfdIpv6WithSrcVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "ipv6WithoutVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv6WithoutVrf:BfdIpv6WithoutVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "slowTimers": {
                    "type": "integer",
                    "description": "Value in ms to use for slow timers - Range: `1000`-`30000`\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4BothVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv4BothVrf:BfdIpv4BothVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv4WithDstVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv4WithDstVrf:BfdIpv4WithDstVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv4WithSrcVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv4WithSrcVrf:BfdIpv4WithSrcVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv4WithoutVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv4WithoutVrf:BfdIpv4WithoutVrf"
                    },
                    "description": "IPv4 Address Family with vrf\n"
                },
                "ipv6WithBothVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv6WithBothVrf:BfdIpv6WithBothVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "ipv6WithDstVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv6WithDstVrf:BfdIpv6WithDstVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "ipv6WithSrcVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv6WithSrcVrf:BfdIpv6WithSrcVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "ipv6WithoutVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BfdIpv6WithoutVrf:BfdIpv6WithoutVrf"
                    },
                    "description": "IPv6 Address Family with vrf\n"
                },
                "slowTimers": {
                    "type": "integer",
                    "description": "Value in ms to use for slow timers - Range: `1000`-`30000`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Bfd resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv4BothVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BfdIpv4BothVrf:BfdIpv4BothVrf"
                        },
                        "description": "IPv4 Address Family with vrf\n"
                    },
                    "ipv4WithDstVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BfdIpv4WithDstVrf:BfdIpv4WithDstVrf"
                        },
                        "description": "IPv4 Address Family with vrf\n"
                    },
                    "ipv4WithSrcVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BfdIpv4WithSrcVrf:BfdIpv4WithSrcVrf"
                        },
                        "description": "IPv4 Address Family with vrf\n"
                    },
                    "ipv4WithoutVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BfdIpv4WithoutVrf:BfdIpv4WithoutVrf"
                        },
                        "description": "IPv4 Address Family with vrf\n"
                    },
                    "ipv6WithBothVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BfdIpv6WithBothVrf:BfdIpv6WithBothVrf"
                        },
                        "description": "IPv6 Address Family with vrf\n"
                    },
                    "ipv6WithDstVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BfdIpv6WithDstVrf:BfdIpv6WithDstVrf"
                        },
                        "description": "IPv6 Address Family with vrf\n"
                    },
                    "ipv6WithSrcVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BfdIpv6WithSrcVrf:BfdIpv6WithSrcVrf"
                        },
                        "description": "IPv6 Address Family with vrf\n"
                    },
                    "ipv6WithoutVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BfdIpv6WithoutVrf:BfdIpv6WithoutVrf"
                        },
                        "description": "IPv6 Address Family with vrf\n"
                    },
                    "slowTimers": {
                        "type": "integer",
                        "description": "Value in ms to use for slow timers - Range: `1000`-`30000`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/bfdTemplateMultiHop:BfdTemplateMultiHop": {
            "description": "This resource can manage the BFD Template Multi Hop configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.BfdTemplateMultiHop(\"example\", {\n    authenticationMd5Keychain: \"KEYNAME\",\n    dampeningHalfTime: 21,\n    dampeningMaxSuppressingTime: 70,\n    dampeningSuppressTime: 1900,\n    dampeningUnsuppressTime: 1800,\n    echo: true,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.BfdTemplateMultiHop(\"example\",\n    authentication_md5_keychain=\"KEYNAME\",\n    dampening_half_time=21,\n    dampening_max_suppressing_time=70,\n    dampening_suppress_time=1900,\n    dampening_unsuppress_time=1800,\n    echo=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.BfdTemplateMultiHop(\"example\", new()\n    {\n        AuthenticationMd5Keychain = \"KEYNAME\",\n        DampeningHalfTime = 21,\n        DampeningMaxSuppressingTime = 70,\n        DampeningSuppressTime = 1900,\n        DampeningUnsuppressTime = 1800,\n        Echo = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewBfdTemplateMultiHop(ctx, \"example\", \u0026iosxe.BfdTemplateMultiHopArgs{\n\t\t\tAuthenticationMd5Keychain:   pulumi.String(\"KEYNAME\"),\n\t\t\tDampeningHalfTime:           pulumi.Int(21),\n\t\t\tDampeningMaxSuppressingTime: pulumi.Int(70),\n\t\t\tDampeningSuppressTime:       pulumi.Int(1900),\n\t\t\tDampeningUnsuppressTime:     pulumi.Int(1800),\n\t\t\tEcho:                        pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.BfdTemplateMultiHop;\nimport com.pulumi.iosxe.BfdTemplateMultiHopArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BfdTemplateMultiHop(\"example\", BfdTemplateMultiHopArgs.builder()        \n            .authenticationMd5Keychain(\"KEYNAME\")\n            .dampeningHalfTime(21)\n            .dampeningMaxSuppressingTime(70)\n            .dampeningSuppressTime(1900)\n            .dampeningUnsuppressTime(1800)\n            .echo(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:BfdTemplateMultiHop\n    properties:\n      authenticationMd5Keychain: KEYNAME\n      dampeningHalfTime: 21\n      dampeningMaxSuppressingTime: 70\n      dampeningSuppressTime: 1900\n      dampeningUnsuppressTime: 1800\n      echo: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/bfdTemplateMultiHop:BfdTemplateMultiHop example \"Cisco-IOS-XE-native:native/bfd-template/Cisco-IOS-XE-bfd:multi-hop=T11\"\n```\n\n ",
            "properties": {
                "authenticationMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousSha1keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationSha1Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "dampeningDownMonitoring": {
                    "type": "boolean",
                    "description": "down monitoring\n"
                },
                "dampeningHalfTime": {
                    "type": "integer",
                    "description": "Half-life time for the penalty - Range: `1`-`30`\n"
                },
                "dampeningMaxSuppressingTime": {
                    "type": "integer",
                    "description": "Maximum duration to suppress a session - Range: `1`-`420`\n"
                },
                "dampeningSuppressTime": {
                    "type": "integer",
                    "description": "Value to start suppressing a session - Range: `1`-`18000`\n"
                },
                "dampeningThreshold": {
                    "type": "integer",
                    "description": "Stability threshold to enter dampening in down dampened state(seconds) - Range: `60`-`3600`\n"
                },
                "dampeningUnsuppressTime": {
                    "type": "integer",
                    "description": "Value to unsuppress a session - Range: `1`-`18000`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "echo": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "intervalMicroseconds": {
                    "type": "boolean",
                    "description": "Specify BFD timers in microseconds\n"
                },
                "intervalMicrosecondsBoth": {
                    "type": "integer",
                    "description": "Minimum transmit and receive interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "intervalMillisecondsBoth": {
                    "type": "integer",
                    "description": "Minimum transmit and receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "authenticationMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousSha1keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationSha1Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "dampeningDownMonitoring": {
                    "type": "boolean",
                    "description": "down monitoring\n"
                },
                "dampeningHalfTime": {
                    "type": "integer",
                    "description": "Half-life time for the penalty - Range: `1`-`30`\n"
                },
                "dampeningMaxSuppressingTime": {
                    "type": "integer",
                    "description": "Maximum duration to suppress a session - Range: `1`-`420`\n"
                },
                "dampeningSuppressTime": {
                    "type": "integer",
                    "description": "Value to start suppressing a session - Range: `1`-`18000`\n"
                },
                "dampeningThreshold": {
                    "type": "integer",
                    "description": "Stability threshold to enter dampening in down dampened state(seconds) - Range: `60`-`3600`\n"
                },
                "dampeningUnsuppressTime": {
                    "type": "integer",
                    "description": "Value to unsuppress a session - Range: `1`-`18000`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "echo": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "intervalMicroseconds": {
                    "type": "boolean",
                    "description": "Specify BFD timers in microseconds\n"
                },
                "intervalMicrosecondsBoth": {
                    "type": "integer",
                    "description": "Minimum transmit and receive interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "intervalMillisecondsBoth": {
                    "type": "integer",
                    "description": "Minimum transmit and receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BfdTemplateMultiHop resources.\n",
                "properties": {
                    "authenticationMd5Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationMeticulousMd5Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationMeticulousSha1keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationSha1Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "dampeningDownMonitoring": {
                        "type": "boolean",
                        "description": "down monitoring\n"
                    },
                    "dampeningHalfTime": {
                        "type": "integer",
                        "description": "Half-life time for the penalty - Range: `1`-`30`\n"
                    },
                    "dampeningMaxSuppressingTime": {
                        "type": "integer",
                        "description": "Maximum duration to suppress a session - Range: `1`-`420`\n"
                    },
                    "dampeningSuppressTime": {
                        "type": "integer",
                        "description": "Value to start suppressing a session - Range: `1`-`18000`\n"
                    },
                    "dampeningThreshold": {
                        "type": "integer",
                        "description": "Stability threshold to enter dampening in down dampened state(seconds) - Range: `60`-`3600`\n"
                    },
                    "dampeningUnsuppressTime": {
                        "type": "integer",
                        "description": "Value to unsuppress a session - Range: `1`-`18000`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "echo": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "intervalMicroseconds": {
                        "type": "boolean",
                        "description": "Specify BFD timers in microseconds\n"
                    },
                    "intervalMicrosecondsBoth": {
                        "type": "integer",
                        "description": "Minimum transmit and receive interval capability - Range: `3300`-`9999000`\n"
                    },
                    "intervalMicrosecondsMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `3300`-`9999000`\n"
                    },
                    "intervalMicrosecondsMinTx": {
                        "type": "integer",
                        "description": "Minimum transmit interval capability - Range: `3300`-`9999000`\n"
                    },
                    "intervalMicrosecondsMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "intervalMillisecondsBoth": {
                        "type": "integer",
                        "description": "Minimum transmit and receive interval capability - Range: `4`-`9999`\n"
                    },
                    "intervalMillisecondsMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `4`-`9999`\n"
                    },
                    "intervalMillisecondsMinTx": {
                        "type": "integer",
                        "description": "Minimum transmit interval capability - Range: `4`-`9999`\n"
                    },
                    "intervalMillisecondsMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/bfdTemplateSingleHop:BfdTemplateSingleHop": {
            "description": "This resource can manage the BFD Template Single Hop configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.BfdTemplateSingleHop(\"example\", {\n    authenticationMd5Keychain: \"KEYC1\",\n    dampeningHalfTime: 30,\n    dampeningMaxSuppressingTime: 60,\n    dampeningSuppressTime: 100,\n    dampeningUnsuppressTime: 30,\n    echo: true,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.BfdTemplateSingleHop(\"example\",\n    authentication_md5_keychain=\"KEYC1\",\n    dampening_half_time=30,\n    dampening_max_suppressing_time=60,\n    dampening_suppress_time=100,\n    dampening_unsuppress_time=30,\n    echo=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.BfdTemplateSingleHop(\"example\", new()\n    {\n        AuthenticationMd5Keychain = \"KEYC1\",\n        DampeningHalfTime = 30,\n        DampeningMaxSuppressingTime = 60,\n        DampeningSuppressTime = 100,\n        DampeningUnsuppressTime = 30,\n        Echo = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewBfdTemplateSingleHop(ctx, \"example\", \u0026iosxe.BfdTemplateSingleHopArgs{\n\t\t\tAuthenticationMd5Keychain:   pulumi.String(\"KEYC1\"),\n\t\t\tDampeningHalfTime:           pulumi.Int(30),\n\t\t\tDampeningMaxSuppressingTime: pulumi.Int(60),\n\t\t\tDampeningSuppressTime:       pulumi.Int(100),\n\t\t\tDampeningUnsuppressTime:     pulumi.Int(30),\n\t\t\tEcho:                        pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.BfdTemplateSingleHop;\nimport com.pulumi.iosxe.BfdTemplateSingleHopArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BfdTemplateSingleHop(\"example\", BfdTemplateSingleHopArgs.builder()        \n            .authenticationMd5Keychain(\"KEYC1\")\n            .dampeningHalfTime(30)\n            .dampeningMaxSuppressingTime(60)\n            .dampeningSuppressTime(100)\n            .dampeningUnsuppressTime(30)\n            .echo(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:BfdTemplateSingleHop\n    properties:\n      authenticationMd5Keychain: KEYC1\n      dampeningHalfTime: 30\n      dampeningMaxSuppressingTime: 60\n      dampeningSuppressTime: 100\n      dampeningUnsuppressTime: 30\n      echo: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/bfdTemplateSingleHop:BfdTemplateSingleHop example \"Cisco-IOS-XE-native:native/bfd-template/Cisco-IOS-XE-bfd:single-hop=SH-TEMPLATE-1\"\n```\n\n ",
            "properties": {
                "authenticationMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousSha1Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationSha1Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "dampeningHalfTime": {
                    "type": "integer",
                    "description": "Half-life time for the penalty - Range: `1`-`30`\n"
                },
                "dampeningMaxSuppressingTime": {
                    "type": "integer",
                    "description": "Maximum duration to suppress a session - Range: `1`-`420`\n"
                },
                "dampeningSuppressTime": {
                    "type": "integer",
                    "description": "Value to start suppressing a session - Range: `1`-`18000`\n"
                },
                "dampeningUnsuppressTime": {
                    "type": "integer",
                    "description": "Value to unsuppress a session - Range: `1`-`18000`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "echo": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "intervalMicrosecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMillisecondsBoth": {
                    "type": "integer",
                    "description": "Minimum transmit and receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "authenticationMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousMd5Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationMeticulousSha1Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "authenticationSha1Keychain": {
                    "type": "string",
                    "description": "keychain name\n"
                },
                "dampeningHalfTime": {
                    "type": "integer",
                    "description": "Half-life time for the penalty - Range: `1`-`30`\n"
                },
                "dampeningMaxSuppressingTime": {
                    "type": "integer",
                    "description": "Maximum duration to suppress a session - Range: `1`-`420`\n"
                },
                "dampeningSuppressTime": {
                    "type": "integer",
                    "description": "Value to start suppressing a session - Range: `1`-`18000`\n"
                },
                "dampeningUnsuppressTime": {
                    "type": "integer",
                    "description": "Value to unsuppress a session - Range: `1`-`18000`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "echo": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "intervalMicrosecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMicrosecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `3300`-`9999000`\n"
                },
                "intervalMillisecondsBoth": {
                    "type": "integer",
                    "description": "Minimum transmit and receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMinTx": {
                    "type": "integer",
                    "description": "Minimum transmit interval capability - Range: `4`-`9999`\n"
                },
                "intervalMillisecondsMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BfdTemplateSingleHop resources.\n",
                "properties": {
                    "authenticationMd5Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationMeticulousMd5Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationMeticulousSha1Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationSha1Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "dampeningHalfTime": {
                        "type": "integer",
                        "description": "Half-life time for the penalty - Range: `1`-`30`\n"
                    },
                    "dampeningMaxSuppressingTime": {
                        "type": "integer",
                        "description": "Maximum duration to suppress a session - Range: `1`-`420`\n"
                    },
                    "dampeningSuppressTime": {
                        "type": "integer",
                        "description": "Value to start suppressing a session - Range: `1`-`18000`\n"
                    },
                    "dampeningUnsuppressTime": {
                        "type": "integer",
                        "description": "Value to unsuppress a session - Range: `1`-`18000`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "echo": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "intervalMicrosecondsMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `3300`-`9999000`\n"
                    },
                    "intervalMicrosecondsMinTx": {
                        "type": "integer",
                        "description": "Minimum transmit interval capability - Range: `3300`-`9999000`\n"
                    },
                    "intervalMillisecondsBoth": {
                        "type": "integer",
                        "description": "Minimum transmit and receive interval capability - Range: `4`-`9999`\n"
                    },
                    "intervalMillisecondsMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `4`-`9999`\n"
                    },
                    "intervalMillisecondsMinTx": {
                        "type": "integer",
                        "description": "Minimum transmit interval capability - Range: `4`-`9999`\n"
                    },
                    "intervalMillisecondsMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/bgp:Bgp": {
            "description": "This resource can manage the BGP configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.Bgp(\"example\", {\n    asn: \"65000\",\n    defaultIpv4Unicast: false,\n    logNeighborChanges: true,\n    routerIdLoopback: 100,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.Bgp(\"example\",\n    asn=\"65000\",\n    default_ipv4_unicast=False,\n    log_neighbor_changes=True,\n    router_id_loopback=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.Bgp(\"example\", new()\n    {\n        Asn = \"65000\",\n        DefaultIpv4Unicast = false,\n        LogNeighborChanges = true,\n        RouterIdLoopback = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewBgp(ctx, \"example\", \u0026iosxe.BgpArgs{\n\t\t\tAsn:                pulumi.String(\"65000\"),\n\t\t\tDefaultIpv4Unicast: pulumi.Bool(false),\n\t\t\tLogNeighborChanges: pulumi.Bool(true),\n\t\t\tRouterIdLoopback:   pulumi.Int(100),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Bgp;\nimport com.pulumi.iosxe.BgpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Bgp(\"example\", BgpArgs.builder()        \n            .asn(\"65000\")\n            .defaultIpv4Unicast(false)\n            .logNeighborChanges(true)\n            .routerIdLoopback(100)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Bgp\n    properties:\n      asn: '65000'\n      defaultIpv4Unicast: false\n      logNeighborChanges: true\n      routerIdLoopback: 100\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/bgp:Bgp example \"Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000\"\n```\n\n ",
            "properties": {
                "asn": {
                    "type": "string"
                },
                "defaultIpv4Unicast": {
                    "type": "boolean",
                    "description": "Activate ipv4-unicast for a peer by default\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "logNeighborChanges": {
                    "type": "boolean",
                    "description": "Log neighbor up/down and reset reason\n"
                },
                "routerIdLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                }
            },
            "required": [
                "asn"
            ],
            "inputProperties": {
                "asn": {
                    "type": "string"
                },
                "defaultIpv4Unicast": {
                    "type": "boolean",
                    "description": "Activate ipv4-unicast for a peer by default\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "logNeighborChanges": {
                    "type": "boolean",
                    "description": "Log neighbor up/down and reset reason\n"
                },
                "routerIdLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                }
            },
            "requiredInputs": [
                "asn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Bgp resources.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "defaultIpv4Unicast": {
                        "type": "boolean",
                        "description": "Activate ipv4-unicast for a peer by default\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "logNeighborChanges": {
                        "type": "boolean",
                        "description": "Log neighbor up/down and reset reason\n"
                    },
                    "routerIdLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/bgpAddressFamilyIpv4:BgpAddressFamilyIpv4": {
            "description": "This resource can manage the BGP Address Family IPv4 configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.BgpAddressFamilyIpv4;\nimport com.pulumi.iosxe.BgpAddressFamilyIpv4Args;\nimport com.pulumi.iosxe.inputs.BgpAddressFamilyIpv4Ipv4UnicastNetworkArgs;\nimport com.pulumi.iosxe.inputs.BgpAddressFamilyIpv4Ipv4UnicastNetworksMaskArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpAddressFamilyIpv4(\"example\", BgpAddressFamilyIpv4Args.builder()        \n            .afName(\"unicast\")\n            .asn(\"65000\")\n            .ipv4UnicastNetworks(BgpAddressFamilyIpv4Ipv4UnicastNetworkArgs.builder()\n                .backdoor(true)\n                .network(\"13.0.0.0\")\n                .route_map(\"RM1\")\n                .build())\n            .ipv4UnicastNetworksMasks(BgpAddressFamilyIpv4Ipv4UnicastNetworksMaskArgs.builder()\n                .backdoor(true)\n                .mask(\"255.255.0.0\")\n                .network(\"12.0.0.0\")\n                .route_map(\"RM1\")\n                .build())\n            .ipv4UnicastRedistributeConnected(true)\n            .ipv4UnicastRedistributeStatic(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:BgpAddressFamilyIpv4\n    properties:\n      afName: unicast\n      asn: '65000'\n      ipv4UnicastNetworks:\n        - backdoor: true\n          network: 13.0.0.0\n          route_map: RM1\n      ipv4UnicastNetworksMasks:\n        - backdoor: true\n          mask: 255.255.0.0\n          network: 12.0.0.0\n          route_map: RM1\n      ipv4UnicastRedistributeConnected: true\n      ipv4UnicastRedistributeStatic: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/bgpAddressFamilyIpv4:BgpAddressFamilyIpv4 example \"Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000/address-family/no-vrf/ipv4=unicast\"\n```\n\n ",
            "properties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv4Ipv4UnicastNetwork:BgpAddressFamilyIpv4Ipv4UnicastNetwork"
                    },
                    "description": "Specify a network to announce via BGP\n"
                },
                "ipv4UnicastNetworksMasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv4Ipv4UnicastNetworksMask:BgpAddressFamilyIpv4Ipv4UnicastNetworksMask"
                    },
                    "description": "Specify a network to announce via BGP\n"
                },
                "ipv4UnicastRedistributeConnected": {
                    "type": "boolean",
                    "description": "Connected\n"
                },
                "ipv4UnicastRedistributeStatic": {
                    "type": "boolean",
                    "description": "Static routes\n"
                }
            },
            "required": [
                "afName",
                "asn"
            ],
            "inputProperties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv4Ipv4UnicastNetwork:BgpAddressFamilyIpv4Ipv4UnicastNetwork"
                    },
                    "description": "Specify a network to announce via BGP\n"
                },
                "ipv4UnicastNetworksMasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv4Ipv4UnicastNetworksMask:BgpAddressFamilyIpv4Ipv4UnicastNetworksMask"
                    },
                    "description": "Specify a network to announce via BGP\n"
                },
                "ipv4UnicastRedistributeConnected": {
                    "type": "boolean",
                    "description": "Connected\n"
                },
                "ipv4UnicastRedistributeStatic": {
                    "type": "boolean",
                    "description": "Static routes\n"
                }
            },
            "requiredInputs": [
                "afName",
                "asn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpAddressFamilyIpv4 resources.\n",
                "properties": {
                    "afName": {
                        "type": "string",
                        "description": "- Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv4UnicastNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv4Ipv4UnicastNetwork:BgpAddressFamilyIpv4Ipv4UnicastNetwork"
                        },
                        "description": "Specify a network to announce via BGP\n"
                    },
                    "ipv4UnicastNetworksMasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv4Ipv4UnicastNetworksMask:BgpAddressFamilyIpv4Ipv4UnicastNetworksMask"
                        },
                        "description": "Specify a network to announce via BGP\n"
                    },
                    "ipv4UnicastRedistributeConnected": {
                        "type": "boolean",
                        "description": "Connected\n"
                    },
                    "ipv4UnicastRedistributeStatic": {
                        "type": "boolean",
                        "description": "Static routes\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/bgpAddressFamilyIpv4Vrf:BgpAddressFamilyIpv4Vrf": {
            "description": "This resource can manage the BGP Address Family IPv4 VRF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.BgpAddressFamilyIpv4Vrf;\nimport com.pulumi.iosxe.BgpAddressFamilyIpv4VrfArgs;\nimport com.pulumi.iosxe.inputs.BgpAddressFamilyIpv4VrfVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpAddressFamilyIpv4Vrf(\"example\", BgpAddressFamilyIpv4VrfArgs.builder()        \n            .afName(\"unicast\")\n            .asn(\"65000\")\n            .vrfs(BgpAddressFamilyIpv4VrfVrfArgs.builder()\n                .ipv4_unicast_advertise_l2vpn_evpn(true)\n                .ipv4_unicast_networks(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                .ipv4_unicast_networks_mask(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                .ipv4_unicast_redistribute_connected(true)\n                .ipv4_unicast_redistribute_static(true)\n                .name(\"VRF1\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:BgpAddressFamilyIpv4Vrf\n    properties:\n      afName: unicast\n      asn: '65000'\n      vrfs:\n        - ipv4_unicast_advertise_l2vpn_evpn: true\n          ipv4_unicast_networks:\n            - backdoor: true\n              network: 13.0.0.0\n              routeMap: RM1\n          ipv4_unicast_networks_mask:\n            - backdoor: true\n              mask: 255.255.0.0\n              network: 12.0.0.0\n              routeMap: RM1\n          ipv4_unicast_redistribute_connected: true\n          ipv4_unicast_redistribute_static: true\n          name: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/bgpAddressFamilyIpv4Vrf:BgpAddressFamilyIpv4Vrf example \"Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000/address-family/with-vrf/ipv4=unicast\"\n```\n\n ",
            "properties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv4VrfVrf:BgpAddressFamilyIpv4VrfVrf"
                    }
                }
            },
            "required": [
                "afName",
                "asn"
            ],
            "inputProperties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv4VrfVrf:BgpAddressFamilyIpv4VrfVrf"
                    }
                }
            },
            "requiredInputs": [
                "afName",
                "asn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpAddressFamilyIpv4Vrf resources.\n",
                "properties": {
                    "afName": {
                        "type": "string",
                        "description": "- Choices: `flowspec`, `labeled-unicast`, `mdt`, `multicast`, `mvpn`, `sr-policy`, `tunnel`, `unicast`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv4VrfVrf:BgpAddressFamilyIpv4VrfVrf"
                        }
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/bgpAddressFamilyIpv6:BgpAddressFamilyIpv6": {
            "description": "This resource can manage the BGP Address Family IPv6 configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.BgpAddressFamilyIpv6;\nimport com.pulumi.iosxe.BgpAddressFamilyIpv6Args;\nimport com.pulumi.iosxe.inputs.BgpAddressFamilyIpv6Ipv6UnicastNetworkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpAddressFamilyIpv6(\"example\", BgpAddressFamilyIpv6Args.builder()        \n            .afName(\"unicast\")\n            .asn(\"65000\")\n            .ipv6UnicastNetworks(BgpAddressFamilyIpv6Ipv6UnicastNetworkArgs.builder()\n                .backdoor(true)\n                .network(\"2001:1234::/64\")\n                .route_map(\"RM1\")\n                .build())\n            .ipv6UnicastRedistributeConnected(true)\n            .ipv6UnicastRedistributeStatic(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:BgpAddressFamilyIpv6\n    properties:\n      afName: unicast\n      asn: '65000'\n      ipv6UnicastNetworks:\n        - backdoor: true\n          network: 2001:1234::/64\n          route_map: RM1\n      ipv6UnicastRedistributeConnected: true\n      ipv6UnicastRedistributeStatic: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/bgpAddressFamilyIpv6:BgpAddressFamilyIpv6 example \"Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000/address-family/no-vrf/ipv6=unicast\"\n```\n\n ",
            "properties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `mdt`, `multicast`, `mvpn`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv6UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv6Ipv6UnicastNetwork:BgpAddressFamilyIpv6Ipv6UnicastNetwork"
                    },
                    "description": "Specify a network to announce via BGP\n"
                },
                "ipv6UnicastRedistributeConnected": {
                    "type": "boolean",
                    "description": "Connected\n"
                },
                "ipv6UnicastRedistributeStatic": {
                    "type": "boolean",
                    "description": "Static routes\n"
                }
            },
            "required": [
                "afName",
                "asn"
            ],
            "inputProperties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `mdt`, `multicast`, `mvpn`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv6UnicastNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv6Ipv6UnicastNetwork:BgpAddressFamilyIpv6Ipv6UnicastNetwork"
                    },
                    "description": "Specify a network to announce via BGP\n"
                },
                "ipv6UnicastRedistributeConnected": {
                    "type": "boolean",
                    "description": "Connected\n"
                },
                "ipv6UnicastRedistributeStatic": {
                    "type": "boolean",
                    "description": "Static routes\n"
                }
            },
            "requiredInputs": [
                "afName",
                "asn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpAddressFamilyIpv6 resources.\n",
                "properties": {
                    "afName": {
                        "type": "string",
                        "description": "- Choices: `flowspec`, `mdt`, `multicast`, `mvpn`, `unicast`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv6UnicastNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv6Ipv6UnicastNetwork:BgpAddressFamilyIpv6Ipv6UnicastNetwork"
                        },
                        "description": "Specify a network to announce via BGP\n"
                    },
                    "ipv6UnicastRedistributeConnected": {
                        "type": "boolean",
                        "description": "Connected\n"
                    },
                    "ipv6UnicastRedistributeStatic": {
                        "type": "boolean",
                        "description": "Static routes\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/bgpAddressFamilyIpv6Vrf:BgpAddressFamilyIpv6Vrf": {
            "description": "This resource can manage the BGP Address Family IPv6 VRF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.BgpAddressFamilyIpv6Vrf;\nimport com.pulumi.iosxe.BgpAddressFamilyIpv6VrfArgs;\nimport com.pulumi.iosxe.inputs.BgpAddressFamilyIpv6VrfVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpAddressFamilyIpv6Vrf(\"example\", BgpAddressFamilyIpv6VrfArgs.builder()        \n            .afName(\"unicast\")\n            .asn(\"65000\")\n            .vrfs(BgpAddressFamilyIpv6VrfVrfArgs.builder()\n                .ipv6_unicast_advertise_l2vpn_evpn(true)\n                .ipv6_unicast_networks(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                .ipv6_unicast_redistribute_connected(true)\n                .ipv6_unicast_redistribute_static(true)\n                .name(\"VRF1\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:BgpAddressFamilyIpv6Vrf\n    properties:\n      afName: unicast\n      asn: '65000'\n      vrfs:\n        - ipv6_unicast_advertise_l2vpn_evpn: true\n          ipv6_unicast_networks:\n            - backdoor: true\n              evpn: false\n              network: 2001:1234::/64\n              routeMap: RM1\n          ipv6_unicast_redistribute_connected: true\n          ipv6_unicast_redistribute_static: true\n          name: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/bgpAddressFamilyIpv6Vrf:BgpAddressFamilyIpv6Vrf example \"Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000/address-family/with-vrf/ipv6=unicast\"\n```\n\n ",
            "properties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `mdt`, `multicast`, `mvpn`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv6VrfVrf:BgpAddressFamilyIpv6VrfVrf"
                    }
                }
            },
            "required": [
                "afName",
                "asn"
            ],
            "inputProperties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `flowspec`, `mdt`, `multicast`, `mvpn`, `unicast`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv6VrfVrf:BgpAddressFamilyIpv6VrfVrf"
                    }
                }
            },
            "requiredInputs": [
                "afName",
                "asn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpAddressFamilyIpv6Vrf resources.\n",
                "properties": {
                    "afName": {
                        "type": "string",
                        "description": "- Choices: `flowspec`, `mdt`, `multicast`, `mvpn`, `unicast`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BgpAddressFamilyIpv6VrfVrf:BgpAddressFamilyIpv6VrfVrf"
                        }
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/bgpAddressFamilyL2vpn:BgpAddressFamilyL2vpn": {
            "description": "This resource can manage the BGP Address Family L2VPN configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.BgpAddressFamilyL2vpn(\"example\", {\n    afName: \"evpn\",\n    asn: \"65000\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.BgpAddressFamilyL2vpn(\"example\",\n    af_name=\"evpn\",\n    asn=\"65000\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.BgpAddressFamilyL2vpn(\"example\", new()\n    {\n        AfName = \"evpn\",\n        Asn = \"65000\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewBgpAddressFamilyL2vpn(ctx, \"example\", \u0026iosxe.BgpAddressFamilyL2vpnArgs{\n\t\t\tAfName: pulumi.String(\"evpn\"),\n\t\t\tAsn:    pulumi.String(\"65000\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.BgpAddressFamilyL2vpn;\nimport com.pulumi.iosxe.BgpAddressFamilyL2vpnArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpAddressFamilyL2vpn(\"example\", BgpAddressFamilyL2vpnArgs.builder()        \n            .afName(\"evpn\")\n            .asn(\"65000\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:BgpAddressFamilyL2vpn\n    properties:\n      afName: evpn\n      asn: '65000'\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/bgpAddressFamilyL2vpn:BgpAddressFamilyL2vpn example \"Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000/address-family/no-vrf/l2vpn=evpn\"\n```\n\n ",
            "properties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `evpn`, `vpls`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "required": [
                "afName",
                "asn"
            ],
            "inputProperties": {
                "afName": {
                    "type": "string",
                    "description": "- Choices: `evpn`, `vpls`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "requiredInputs": [
                "afName",
                "asn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpAddressFamilyL2vpn resources.\n",
                "properties": {
                    "afName": {
                        "type": "string",
                        "description": "- Choices: `evpn`, `vpls`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/bgpIpv4UnicastNeighbor:BgpIpv4UnicastNeighbor": {
            "description": "This resource can manage the BGP IPv4 Unicast Neighbor configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.BgpIpv4UnicastNeighbor;\nimport com.pulumi.iosxe.BgpIpv4UnicastNeighborArgs;\nimport com.pulumi.iosxe.inputs.BgpIpv4UnicastNeighborRouteMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpIpv4UnicastNeighbor(\"example\", BgpIpv4UnicastNeighborArgs.builder()        \n            .activate(true)\n            .asn(\"65000\")\n            .ip(\"3.3.3.3\")\n            .routeMaps(BgpIpv4UnicastNeighborRouteMapArgs.builder()\n                .in_out(\"in\")\n                .route_map_name(\"RM1\")\n                .build())\n            .routeReflectorClient(false)\n            .sendCommunity(\"both\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:BgpIpv4UnicastNeighbor\n    properties:\n      activate: true\n      asn: '65000'\n      ip: 3.3.3.3\n      routeMaps:\n        - in_out: in\n          route_map_name: RM1\n      routeReflectorClient: false\n      sendCommunity: both\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/bgpIpv4UnicastNeighbor:BgpIpv4UnicastNeighbor example \"Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000/address-family/no-vrf/ipv4=unicast/ipv4-unicast/neighbor=3.3.3.3\"\n```\n\n ",
            "properties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "string"
                },
                "routeMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpIpv4UnicastNeighborRouteMap:BgpIpv4UnicastNeighborRouteMap"
                    },
                    "description": "Apply route map to neighbor\n"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                }
            },
            "required": [
                "activate",
                "asn",
                "ip"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "string"
                },
                "routeMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpIpv4UnicastNeighborRouteMap:BgpIpv4UnicastNeighborRouteMap"
                    },
                    "description": "Apply route map to neighbor\n"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                }
            },
            "requiredInputs": [
                "asn",
                "ip"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpIpv4UnicastNeighbor resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "Enable the address family for this neighbor - Default value: `true`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "routeMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BgpIpv4UnicastNeighborRouteMap:BgpIpv4UnicastNeighborRouteMap"
                        },
                        "description": "Apply route map to neighbor\n"
                    },
                    "routeReflectorClient": {
                        "type": "boolean",
                        "description": "Configure a neighbor as Route Reflector client\n"
                    },
                    "sendCommunity": {
                        "type": "string",
                        "description": "- Choices: `both`, `extended`, `standard`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/bgpIpv4UnicastVrfNeighbor:BgpIpv4UnicastVrfNeighbor": {
            "description": "This resource can manage the BGP IPv4 Unicast VRF Neighbor configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.BgpIpv4UnicastVrfNeighbor;\nimport com.pulumi.iosxe.BgpIpv4UnicastVrfNeighborArgs;\nimport com.pulumi.iosxe.inputs.BgpIpv4UnicastVrfNeighborRouteMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpIpv4UnicastVrfNeighbor(\"example\", BgpIpv4UnicastVrfNeighborArgs.builder()        \n            .activate(true)\n            .asn(\"65000\")\n            .clusterId(\"2.2.2.2\")\n            .description(\"BGP Neighbor Description\")\n            .fallOverBfdCheckControlPlaneFailure(true)\n            .fallOverBfdSingleHop(true)\n            .fallOverBfdStrictMode(true)\n            .fallOverDefaultRouteMap(\"RMAP\")\n            .fallOverMaximumMetricRouteMap(\"ROUTEMAP\")\n            .ip(\"3.3.3.3\")\n            .logNeighborChangesDisable(true)\n            .password(\"LINE\")\n            .passwordType(1)\n            .remoteAs(\"65000\")\n            .routeMaps(BgpIpv4UnicastVrfNeighborRouteMapArgs.builder()\n                .in_out(\"in\")\n                .route_map_name(\"RM1\")\n                .build())\n            .routeReflectorClient(false)\n            .sendCommunity(\"both\")\n            .shutdown(false)\n            .timersHoldtime(40)\n            .timersKeepaliveInterval(30)\n            .timersMinimumNeighborHold(30)\n            .updateSourceLoopback(\"100\")\n            .version(4)\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:BgpIpv4UnicastVrfNeighbor\n    properties:\n      activate: true\n      asn: '65000'\n      clusterId: 2.2.2.2\n      description: BGP Neighbor Description\n      fallOverBfdCheckControlPlaneFailure: true\n      fallOverBfdSingleHop: true\n      fallOverBfdStrictMode: true\n      fallOverDefaultRouteMap: RMAP\n      fallOverMaximumMetricRouteMap: ROUTEMAP\n      ip: 3.3.3.3\n      logNeighborChangesDisable: true\n      password: LINE\n      passwordType: 1\n      remoteAs: '65000'\n      routeMaps:\n        - in_out: in\n          route_map_name: RM1\n      routeReflectorClient: false\n      sendCommunity: both\n      shutdown: false\n      timersHoldtime: 40\n      timersKeepaliveInterval: 30\n      timersMinimumNeighborHold: 30\n      updateSourceLoopback: '100'\n      version: 4\n      vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/bgpIpv4UnicastVrfNeighbor:BgpIpv4UnicastVrfNeighbor example \"Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000/address-family/with-vrf/ipv4=unicast/vrf=VRF1/ipv4-unicast/neighbor=3.3.3.3\"\n```\n\n ",
            "properties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Neighbor specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "disableConnectedCheck": {
                    "type": "boolean",
                    "description": "one-hop away EBGP peer using loopback address\n"
                },
                "ebgpMultihop": {
                    "type": "boolean",
                    "description": "Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.\n"
                },
                "ebgpMultihopMaxHop": {
                    "type": "integer",
                    "description": "- Range: `2`-`255`\n"
                },
                "fallOverBfdCheckControlPlaneFailure": {
                    "type": "boolean",
                    "description": "Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation\n"
                },
                "fallOverBfdMultiHop": {
                    "type": "boolean",
                    "description": "Force BFD multi-hop to detect failure\n"
                },
                "fallOverBfdSingleHop": {
                    "type": "boolean",
                    "description": "Force BFD single-hop to detect failure\n"
                },
                "fallOverBfdStrictMode": {
                    "type": "boolean",
                    "description": "Enable BFD strict-mode\n"
                },
                "fallOverDefaultRouteMap": {
                    "type": "string"
                },
                "fallOverMaximumMetricRouteMap": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "localAs": {
                    "type": "string"
                },
                "localAsDualAs": {
                    "type": "boolean",
                    "description": "Accept either real AS or local AS from the ebgp peer\n"
                },
                "localAsNoPrepend": {
                    "type": "boolean",
                    "description": "Do not prepend local-as to updates from ebgp peers\n"
                },
                "localAsReplaceAs": {
                    "type": "boolean",
                    "description": "Replace real AS with local AS in the EBGP updates\n"
                },
                "logNeighborChangesDisable": {
                    "type": "boolean",
                    "description": "disable\n"
                },
                "password": {
                    "type": "string"
                },
                "passwordType": {
                    "type": "integer",
                    "description": "Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`\n"
                },
                "remoteAs": {
                    "type": "string",
                    "description": "Specify a BGP peer-group remote-as\n"
                },
                "routeMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpIpv4UnicastVrfNeighborRouteMap:BgpIpv4UnicastVrfNeighborRouteMap"
                    },
                    "description": "Apply route map to neighbor\n"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Administratively shut down this neighbor\n"
                },
                "timersHoldtime": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersKeepaliveInterval": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersMinimumNeighborHold": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "ttlSecurityHops": {
                    "type": "integer",
                    "description": "IP hops - Range: `1`-`254`\n"
                },
                "updateSourceLoopback": {
                    "type": "string",
                    "description": "Loopback interface\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Set the BGP version to match a neighbor - Range: `4`-`4`\n"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "required": [
                "activate",
                "asn",
                "ip",
                "vrf"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Neighbor specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "disableConnectedCheck": {
                    "type": "boolean",
                    "description": "one-hop away EBGP peer using loopback address\n"
                },
                "ebgpMultihop": {
                    "type": "boolean",
                    "description": "Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.\n"
                },
                "ebgpMultihopMaxHop": {
                    "type": "integer",
                    "description": "- Range: `2`-`255`\n"
                },
                "fallOverBfdCheckControlPlaneFailure": {
                    "type": "boolean",
                    "description": "Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation\n"
                },
                "fallOverBfdMultiHop": {
                    "type": "boolean",
                    "description": "Force BFD multi-hop to detect failure\n"
                },
                "fallOverBfdSingleHop": {
                    "type": "boolean",
                    "description": "Force BFD single-hop to detect failure\n"
                },
                "fallOverBfdStrictMode": {
                    "type": "boolean",
                    "description": "Enable BFD strict-mode\n"
                },
                "fallOverDefaultRouteMap": {
                    "type": "string"
                },
                "fallOverMaximumMetricRouteMap": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "localAs": {
                    "type": "string"
                },
                "localAsDualAs": {
                    "type": "boolean",
                    "description": "Accept either real AS or local AS from the ebgp peer\n"
                },
                "localAsNoPrepend": {
                    "type": "boolean",
                    "description": "Do not prepend local-as to updates from ebgp peers\n"
                },
                "localAsReplaceAs": {
                    "type": "boolean",
                    "description": "Replace real AS with local AS in the EBGP updates\n"
                },
                "logNeighborChangesDisable": {
                    "type": "boolean",
                    "description": "disable\n"
                },
                "password": {
                    "type": "string"
                },
                "passwordType": {
                    "type": "integer",
                    "description": "Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`\n"
                },
                "remoteAs": {
                    "type": "string",
                    "description": "Specify a BGP peer-group remote-as\n"
                },
                "routeMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpIpv4UnicastVrfNeighborRouteMap:BgpIpv4UnicastVrfNeighborRouteMap"
                    },
                    "description": "Apply route map to neighbor\n"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Administratively shut down this neighbor\n"
                },
                "timersHoldtime": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersKeepaliveInterval": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersMinimumNeighborHold": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "ttlSecurityHops": {
                    "type": "integer",
                    "description": "IP hops - Range: `1`-`254`\n"
                },
                "updateSourceLoopback": {
                    "type": "string",
                    "description": "Loopback interface\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Set the BGP version to match a neighbor - Range: `4`-`4`\n"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "asn",
                "ip",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpIpv4UnicastVrfNeighbor resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "Enable the address family for this neighbor - Default value: `true`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Neighbor specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "disableConnectedCheck": {
                        "type": "boolean",
                        "description": "one-hop away EBGP peer using loopback address\n"
                    },
                    "ebgpMultihop": {
                        "type": "boolean",
                        "description": "Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.\n"
                    },
                    "ebgpMultihopMaxHop": {
                        "type": "integer",
                        "description": "- Range: `2`-`255`\n"
                    },
                    "fallOverBfdCheckControlPlaneFailure": {
                        "type": "boolean",
                        "description": "Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation\n"
                    },
                    "fallOverBfdMultiHop": {
                        "type": "boolean",
                        "description": "Force BFD multi-hop to detect failure\n"
                    },
                    "fallOverBfdSingleHop": {
                        "type": "boolean",
                        "description": "Force BFD single-hop to detect failure\n"
                    },
                    "fallOverBfdStrictMode": {
                        "type": "boolean",
                        "description": "Enable BFD strict-mode\n"
                    },
                    "fallOverDefaultRouteMap": {
                        "type": "string"
                    },
                    "fallOverMaximumMetricRouteMap": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "localAs": {
                        "type": "string"
                    },
                    "localAsDualAs": {
                        "type": "boolean",
                        "description": "Accept either real AS or local AS from the ebgp peer\n"
                    },
                    "localAsNoPrepend": {
                        "type": "boolean",
                        "description": "Do not prepend local-as to updates from ebgp peers\n"
                    },
                    "localAsReplaceAs": {
                        "type": "boolean",
                        "description": "Replace real AS with local AS in the EBGP updates\n"
                    },
                    "logNeighborChangesDisable": {
                        "type": "boolean",
                        "description": "disable\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "passwordType": {
                        "type": "integer",
                        "description": "Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`\n"
                    },
                    "remoteAs": {
                        "type": "string",
                        "description": "Specify a BGP peer-group remote-as\n"
                    },
                    "routeMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BgpIpv4UnicastVrfNeighborRouteMap:BgpIpv4UnicastVrfNeighborRouteMap"
                        },
                        "description": "Apply route map to neighbor\n"
                    },
                    "routeReflectorClient": {
                        "type": "boolean",
                        "description": "Configure a neighbor as Route Reflector client\n"
                    },
                    "sendCommunity": {
                        "type": "string",
                        "description": "- Choices: `both`, `extended`, `standard`\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Administratively shut down this neighbor\n"
                    },
                    "timersHoldtime": {
                        "type": "integer",
                        "description": "- Range: `0`-`65535`\n"
                    },
                    "timersKeepaliveInterval": {
                        "type": "integer",
                        "description": "- Range: `0`-`65535`\n"
                    },
                    "timersMinimumNeighborHold": {
                        "type": "integer",
                        "description": "- Range: `0`-`65535`\n"
                    },
                    "ttlSecurityHops": {
                        "type": "integer",
                        "description": "IP hops - Range: `1`-`254`\n"
                    },
                    "updateSourceLoopback": {
                        "type": "string",
                        "description": "Loopback interface\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Set the BGP version to match a neighbor - Range: `4`-`4`\n"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/bgpIpv6UnicastNeighbor:BgpIpv6UnicastNeighbor": {
            "description": "This resource can manage the BGP IPv6 Unicast Neighbor configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.BgpIpv6UnicastNeighbor;\nimport com.pulumi.iosxe.BgpIpv6UnicastNeighborArgs;\nimport com.pulumi.iosxe.inputs.BgpIpv6UnicastNeighborRouteMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpIpv6UnicastNeighbor(\"example\", BgpIpv6UnicastNeighborArgs.builder()        \n            .activate(true)\n            .asn(\"65000\")\n            .ip(\"3.3.3.3\")\n            .routeMaps(BgpIpv6UnicastNeighborRouteMapArgs.builder()\n                .in_out(\"in\")\n                .route_map_name(\"RM1\")\n                .build())\n            .routeReflectorClient(false)\n            .sendCommunity(\"both\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:BgpIpv6UnicastNeighbor\n    properties:\n      activate: true\n      asn: '65000'\n      ip: 3.3.3.3\n      routeMaps:\n        - in_out: in\n          route_map_name: RM1\n      routeReflectorClient: false\n      sendCommunity: both\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/bgpIpv6UnicastNeighbor:BgpIpv6UnicastNeighbor example \"Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000/address-family/no-vrf/ipv6=unicast/ipv6-unicast/neighbor=3.3.3.3\"\n```\n\n ",
            "properties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "string"
                },
                "routeMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpIpv6UnicastNeighborRouteMap:BgpIpv6UnicastNeighborRouteMap"
                    },
                    "description": "Apply route map to neighbor\n"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                }
            },
            "required": [
                "activate",
                "asn",
                "ip"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "string"
                },
                "routeMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/BgpIpv6UnicastNeighborRouteMap:BgpIpv6UnicastNeighborRouteMap"
                    },
                    "description": "Apply route map to neighbor\n"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                }
            },
            "requiredInputs": [
                "asn",
                "ip"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpIpv6UnicastNeighbor resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "Enable the address family for this neighbor - Default value: `true`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "routeMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/BgpIpv6UnicastNeighborRouteMap:BgpIpv6UnicastNeighborRouteMap"
                        },
                        "description": "Apply route map to neighbor\n"
                    },
                    "routeReflectorClient": {
                        "type": "boolean",
                        "description": "Configure a neighbor as Route Reflector client\n"
                    },
                    "sendCommunity": {
                        "type": "string",
                        "description": "- Choices: `both`, `extended`, `standard`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/bgpL2vpnEvpnNeighbor:BgpL2vpnEvpnNeighbor": {
            "description": "This resource can manage the BGP L2VPN EVPN Neighbor configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.BgpL2vpnEvpnNeighbor(\"example\", {\n    activate: true,\n    asn: \"65000\",\n    ip: \"3.3.3.3\",\n    routeReflectorClient: false,\n    sendCommunity: \"both\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.BgpL2vpnEvpnNeighbor(\"example\",\n    activate=True,\n    asn=\"65000\",\n    ip=\"3.3.3.3\",\n    route_reflector_client=False,\n    send_community=\"both\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.BgpL2vpnEvpnNeighbor(\"example\", new()\n    {\n        Activate = true,\n        Asn = \"65000\",\n        Ip = \"3.3.3.3\",\n        RouteReflectorClient = false,\n        SendCommunity = \"both\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewBgpL2vpnEvpnNeighbor(ctx, \"example\", \u0026iosxe.BgpL2vpnEvpnNeighborArgs{\n\t\t\tActivate:             pulumi.Bool(true),\n\t\t\tAsn:                  pulumi.String(\"65000\"),\n\t\t\tIp:                   pulumi.String(\"3.3.3.3\"),\n\t\t\tRouteReflectorClient: pulumi.Bool(false),\n\t\t\tSendCommunity:        pulumi.String(\"both\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.BgpL2vpnEvpnNeighbor;\nimport com.pulumi.iosxe.BgpL2vpnEvpnNeighborArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpL2vpnEvpnNeighbor(\"example\", BgpL2vpnEvpnNeighborArgs.builder()        \n            .activate(true)\n            .asn(\"65000\")\n            .ip(\"3.3.3.3\")\n            .routeReflectorClient(false)\n            .sendCommunity(\"both\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:BgpL2vpnEvpnNeighbor\n    properties:\n      activate: true\n      asn: '65000'\n      ip: 3.3.3.3\n      routeReflectorClient: false\n      sendCommunity: both\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/bgpL2vpnEvpnNeighbor:BgpL2vpnEvpnNeighbor example \"Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000/address-family/no-vrf/l2vpn=evpn/l2vpn-evpn/neighbor=3.3.3.3\"\n```\n\n ",
            "properties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "string"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                }
            },
            "required": [
                "activate",
                "asn",
                "ip"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean",
                    "description": "Enable the address family for this neighbor - Default value: `true`\n"
                },
                "asn": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "string"
                },
                "routeReflectorClient": {
                    "type": "boolean",
                    "description": "Configure a neighbor as Route Reflector client\n"
                },
                "sendCommunity": {
                    "type": "string",
                    "description": "- Choices: `both`, `extended`, `standard`\n"
                }
            },
            "requiredInputs": [
                "asn",
                "ip"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpL2vpnEvpnNeighbor resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "Enable the address family for this neighbor - Default value: `true`\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "routeReflectorClient": {
                        "type": "boolean",
                        "description": "Configure a neighbor as Route Reflector client\n"
                    },
                    "sendCommunity": {
                        "type": "string",
                        "description": "- Choices: `both`, `extended`, `standard`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/bgpNeighbor:BgpNeighbor": {
            "description": "This resource can manage the BGP Neighbor configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.BgpNeighbor(\"example\", {\n    asn: \"65000\",\n    clusterId: \"1234\",\n    description: \"BGP Neighbor Description\",\n    disableConnectedCheck: false,\n    fallOverBfdCheckControlPlaneFailure: true,\n    fallOverBfdSingleHop: true,\n    fallOverBfdStrictMode: true,\n    fallOverDefaultEnable: false,\n    fallOverDefaultRouteMap: \"RMAP\",\n    fallOverMaximumMetricRouteMap: \"RMAP\",\n    ip: \"3.3.3.3\",\n    logNeighborChanges: true,\n    password: \"test1234\",\n    passwordType: 1,\n    remoteAs: \"65000\",\n    shutdown: false,\n    timersHoldtime: 866,\n    timersKeepaliveInterval: 655,\n    timersMinimumNeighborHold: 222,\n    updateSourceLoopback: \"100\",\n    version: 4,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.BgpNeighbor(\"example\",\n    asn=\"65000\",\n    cluster_id=\"1234\",\n    description=\"BGP Neighbor Description\",\n    disable_connected_check=False,\n    fall_over_bfd_check_control_plane_failure=True,\n    fall_over_bfd_single_hop=True,\n    fall_over_bfd_strict_mode=True,\n    fall_over_default_enable=False,\n    fall_over_default_route_map=\"RMAP\",\n    fall_over_maximum_metric_route_map=\"RMAP\",\n    ip=\"3.3.3.3\",\n    log_neighbor_changes=True,\n    password=\"test1234\",\n    password_type=1,\n    remote_as=\"65000\",\n    shutdown=False,\n    timers_holdtime=866,\n    timers_keepalive_interval=655,\n    timers_minimum_neighbor_hold=222,\n    update_source_loopback=\"100\",\n    version=4)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.BgpNeighbor(\"example\", new()\n    {\n        Asn = \"65000\",\n        ClusterId = \"1234\",\n        Description = \"BGP Neighbor Description\",\n        DisableConnectedCheck = false,\n        FallOverBfdCheckControlPlaneFailure = true,\n        FallOverBfdSingleHop = true,\n        FallOverBfdStrictMode = true,\n        FallOverDefaultEnable = false,\n        FallOverDefaultRouteMap = \"RMAP\",\n        FallOverMaximumMetricRouteMap = \"RMAP\",\n        Ip = \"3.3.3.3\",\n        LogNeighborChanges = true,\n        Password = \"test1234\",\n        PasswordType = 1,\n        RemoteAs = \"65000\",\n        Shutdown = false,\n        TimersHoldtime = 866,\n        TimersKeepaliveInterval = 655,\n        TimersMinimumNeighborHold = 222,\n        UpdateSourceLoopback = \"100\",\n        Version = 4,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewBgpNeighbor(ctx, \"example\", \u0026iosxe.BgpNeighborArgs{\n\t\t\tAsn:                                 pulumi.String(\"65000\"),\n\t\t\tClusterId:                           pulumi.String(\"1234\"),\n\t\t\tDescription:                         pulumi.String(\"BGP Neighbor Description\"),\n\t\t\tDisableConnectedCheck:               pulumi.Bool(false),\n\t\t\tFallOverBfdCheckControlPlaneFailure: pulumi.Bool(true),\n\t\t\tFallOverBfdSingleHop:                pulumi.Bool(true),\n\t\t\tFallOverBfdStrictMode:               pulumi.Bool(true),\n\t\t\tFallOverDefaultEnable:               pulumi.Bool(false),\n\t\t\tFallOverDefaultRouteMap:             pulumi.String(\"RMAP\"),\n\t\t\tFallOverMaximumMetricRouteMap:       pulumi.String(\"RMAP\"),\n\t\t\tIp:                                  pulumi.String(\"3.3.3.3\"),\n\t\t\tLogNeighborChanges:                  pulumi.Bool(true),\n\t\t\tPassword:                            pulumi.String(\"test1234\"),\n\t\t\tPasswordType:                        pulumi.Int(1),\n\t\t\tRemoteAs:                            pulumi.String(\"65000\"),\n\t\t\tShutdown:                            pulumi.Bool(false),\n\t\t\tTimersHoldtime:                      pulumi.Int(866),\n\t\t\tTimersKeepaliveInterval:             pulumi.Int(655),\n\t\t\tTimersMinimumNeighborHold:           pulumi.Int(222),\n\t\t\tUpdateSourceLoopback:                pulumi.String(\"100\"),\n\t\t\tVersion:                             pulumi.Int(4),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.BgpNeighbor;\nimport com.pulumi.iosxe.BgpNeighborArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new BgpNeighbor(\"example\", BgpNeighborArgs.builder()        \n            .asn(\"65000\")\n            .clusterId(\"1234\")\n            .description(\"BGP Neighbor Description\")\n            .disableConnectedCheck(false)\n            .fallOverBfdCheckControlPlaneFailure(true)\n            .fallOverBfdSingleHop(true)\n            .fallOverBfdStrictMode(true)\n            .fallOverDefaultEnable(false)\n            .fallOverDefaultRouteMap(\"RMAP\")\n            .fallOverMaximumMetricRouteMap(\"RMAP\")\n            .ip(\"3.3.3.3\")\n            .logNeighborChanges(true)\n            .password(\"test1234\")\n            .passwordType(1)\n            .remoteAs(\"65000\")\n            .shutdown(false)\n            .timersHoldtime(866)\n            .timersKeepaliveInterval(655)\n            .timersMinimumNeighborHold(222)\n            .updateSourceLoopback(\"100\")\n            .version(4)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:BgpNeighbor\n    properties:\n      asn: '65000'\n      clusterId: '1234'\n      description: BGP Neighbor Description\n      disableConnectedCheck: false\n      fallOverBfdCheckControlPlaneFailure: true\n      fallOverBfdSingleHop: true\n      fallOverBfdStrictMode: true\n      fallOverDefaultEnable: false\n      fallOverDefaultRouteMap: RMAP\n      fallOverMaximumMetricRouteMap: RMAP\n      ip: 3.3.3.3\n      logNeighborChanges: true\n      password: test1234\n      passwordType: 1\n      remoteAs: '65000'\n      shutdown: false\n      timersHoldtime: 866\n      timersKeepaliveInterval: 655\n      timersMinimumNeighborHold: 222\n      updateSourceLoopback: '100'\n      version: 4\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/bgpNeighbor:BgpNeighbor example \"Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-bgp:bgp=65000/neighbor=3.3.3.3\"\n```\n\n ",
            "properties": {
                "asn": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Neighbor specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "disableConnectedCheck": {
                    "type": "boolean",
                    "description": "one-hop away EBGP peer using loopback address\n"
                },
                "ebgpMultihop": {
                    "type": "boolean",
                    "description": "Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.\n"
                },
                "ebgpMultihopMaxHop": {
                    "type": "integer",
                    "description": "- Range: `2`-`255`\n"
                },
                "fallOverBfdCheckControlPlaneFailure": {
                    "type": "boolean",
                    "description": "Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation\n"
                },
                "fallOverBfdMultiHop": {
                    "type": "boolean",
                    "description": "Force BFD multi-hop to detect failure\n"
                },
                "fallOverBfdSingleHop": {
                    "type": "boolean",
                    "description": "Force BFD single-hop to detect failure\n"
                },
                "fallOverBfdStrictMode": {
                    "type": "boolean",
                    "description": "Enable BFD strict-mode\n"
                },
                "fallOverDefaultEnable": {
                    "type": "boolean"
                },
                "fallOverDefaultRouteMap": {
                    "type": "string"
                },
                "fallOverMaximumMetricRouteMap": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "localAs": {
                    "type": "string"
                },
                "localAsDualAs": {
                    "type": "boolean",
                    "description": "Accept either real AS or local AS from the ebgp peer\n"
                },
                "localAsNoPrepend": {
                    "type": "boolean",
                    "description": "Do not prepend local-as to updates from ebgp peers\n"
                },
                "localAsReplaceAs": {
                    "type": "boolean",
                    "description": "Replace real AS with local AS in the EBGP updates\n"
                },
                "logNeighborChanges": {
                    "type": "boolean",
                    "description": "Log neighbor up/down and reset reason\n"
                },
                "password": {
                    "type": "string"
                },
                "passwordType": {
                    "type": "integer",
                    "description": "Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`\n"
                },
                "remoteAs": {
                    "type": "string",
                    "description": "Specify a BGP peer-group remote-as\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Administratively shut down this neighbor\n"
                },
                "timersHoldtime": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersKeepaliveInterval": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersMinimumNeighborHold": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "ttlSecurityHops": {
                    "type": "integer",
                    "description": "IP hops - Range: `1`-`254`\n"
                },
                "updateSourceLoopback": {
                    "type": "string",
                    "description": "Loopback interface\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Set the BGP version to match a neighbor - Range: `4`-`4`\n"
                }
            },
            "required": [
                "asn",
                "ip"
            ],
            "inputProperties": {
                "asn": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Neighbor specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "disableConnectedCheck": {
                    "type": "boolean",
                    "description": "one-hop away EBGP peer using loopback address\n"
                },
                "ebgpMultihop": {
                    "type": "boolean",
                    "description": "Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.\n"
                },
                "ebgpMultihopMaxHop": {
                    "type": "integer",
                    "description": "- Range: `2`-`255`\n"
                },
                "fallOverBfdCheckControlPlaneFailure": {
                    "type": "boolean",
                    "description": "Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation\n"
                },
                "fallOverBfdMultiHop": {
                    "type": "boolean",
                    "description": "Force BFD multi-hop to detect failure\n"
                },
                "fallOverBfdSingleHop": {
                    "type": "boolean",
                    "description": "Force BFD single-hop to detect failure\n"
                },
                "fallOverBfdStrictMode": {
                    "type": "boolean",
                    "description": "Enable BFD strict-mode\n"
                },
                "fallOverDefaultEnable": {
                    "type": "boolean"
                },
                "fallOverDefaultRouteMap": {
                    "type": "string"
                },
                "fallOverMaximumMetricRouteMap": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "localAs": {
                    "type": "string"
                },
                "localAsDualAs": {
                    "type": "boolean",
                    "description": "Accept either real AS or local AS from the ebgp peer\n"
                },
                "localAsNoPrepend": {
                    "type": "boolean",
                    "description": "Do not prepend local-as to updates from ebgp peers\n"
                },
                "localAsReplaceAs": {
                    "type": "boolean",
                    "description": "Replace real AS with local AS in the EBGP updates\n"
                },
                "logNeighborChanges": {
                    "type": "boolean",
                    "description": "Log neighbor up/down and reset reason\n"
                },
                "password": {
                    "type": "string"
                },
                "passwordType": {
                    "type": "integer",
                    "description": "Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`\n"
                },
                "remoteAs": {
                    "type": "string",
                    "description": "Specify a BGP peer-group remote-as\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Administratively shut down this neighbor\n"
                },
                "timersHoldtime": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersKeepaliveInterval": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "timersMinimumNeighborHold": {
                    "type": "integer",
                    "description": "- Range: `0`-`65535`\n"
                },
                "ttlSecurityHops": {
                    "type": "integer",
                    "description": "IP hops - Range: `1`-`254`\n"
                },
                "updateSourceLoopback": {
                    "type": "string",
                    "description": "Loopback interface\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Set the BGP version to match a neighbor - Range: `4`-`4`\n"
                }
            },
            "requiredInputs": [
                "asn",
                "ip"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BgpNeighbor resources.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Neighbor specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "disableConnectedCheck": {
                        "type": "boolean",
                        "description": "one-hop away EBGP peer using loopback address\n"
                    },
                    "ebgpMultihop": {
                        "type": "boolean",
                        "description": "Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.\n"
                    },
                    "ebgpMultihopMaxHop": {
                        "type": "integer",
                        "description": "- Range: `2`-`255`\n"
                    },
                    "fallOverBfdCheckControlPlaneFailure": {
                        "type": "boolean",
                        "description": "Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation\n"
                    },
                    "fallOverBfdMultiHop": {
                        "type": "boolean",
                        "description": "Force BFD multi-hop to detect failure\n"
                    },
                    "fallOverBfdSingleHop": {
                        "type": "boolean",
                        "description": "Force BFD single-hop to detect failure\n"
                    },
                    "fallOverBfdStrictMode": {
                        "type": "boolean",
                        "description": "Enable BFD strict-mode\n"
                    },
                    "fallOverDefaultEnable": {
                        "type": "boolean"
                    },
                    "fallOverDefaultRouteMap": {
                        "type": "string"
                    },
                    "fallOverMaximumMetricRouteMap": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "localAs": {
                        "type": "string"
                    },
                    "localAsDualAs": {
                        "type": "boolean",
                        "description": "Accept either real AS or local AS from the ebgp peer\n"
                    },
                    "localAsNoPrepend": {
                        "type": "boolean",
                        "description": "Do not prepend local-as to updates from ebgp peers\n"
                    },
                    "localAsReplaceAs": {
                        "type": "boolean",
                        "description": "Replace real AS with local AS in the EBGP updates\n"
                    },
                    "logNeighborChanges": {
                        "type": "boolean",
                        "description": "Log neighbor up/down and reset reason\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "passwordType": {
                        "type": "integer",
                        "description": "Encryption type (0 to disable encryption, 7 for proprietary) - Range: `0`-`7`\n"
                    },
                    "remoteAs": {
                        "type": "string",
                        "description": "Specify a BGP peer-group remote-as\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Administratively shut down this neighbor\n"
                    },
                    "timersHoldtime": {
                        "type": "integer",
                        "description": "- Range: `0`-`65535`\n"
                    },
                    "timersKeepaliveInterval": {
                        "type": "integer",
                        "description": "- Range: `0`-`65535`\n"
                    },
                    "timersMinimumNeighborHold": {
                        "type": "integer",
                        "description": "- Range: `0`-`65535`\n"
                    },
                    "ttlSecurityHops": {
                        "type": "integer",
                        "description": "IP hops - Range: `1`-`254`\n"
                    },
                    "updateSourceLoopback": {
                        "type": "string",
                        "description": "Loopback interface\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Set the BGP version to match a neighbor - Range: `4`-`4`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/cdp:Cdp": {
            "description": "This resource can manage the CDP configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Cdp;\nimport com.pulumi.iosxe.CdpArgs;\nimport com.pulumi.iosxe.inputs.CdpTlvListArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Cdp(\"example\", CdpArgs.builder()        \n            .filterTlvList(\"TLIST\")\n            .holdtime(15)\n            .run(true)\n            .timer(5)\n            .tlvLists(CdpTlvListArgs.builder()\n                .cos(true)\n                .duplex(true)\n                .name(\"TLIST\")\n                .trust(true)\n                .version(true)\n                .vtp_mgmt_domain(true)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Cdp\n    properties:\n      filterTlvList: TLIST\n      holdtime: 15\n      run: true\n      timer: 5\n      tlvLists:\n        - cos: true\n          duplex: true\n          name: TLIST\n          trust: true\n          version: true\n          vtp_mgmt_domain: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/cdp:Cdp example \"Cisco-IOS-XE-native:native/cdp\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "filterTlvList": {
                    "type": "string",
                    "description": "Apply tlv-list globally\n"
                },
                "holdtime": {
                    "type": "integer",
                    "description": "Specify the holdtime (in sec) to be sent in packets - Range: `10`-`255`\n"
                },
                "run": {
                    "type": "boolean",
                    "description": "Enable CDP\n"
                },
                "timer": {
                    "type": "integer",
                    "description": "Specify the rate at which CDP packets are sent (in sec) - Range: `5`-`254`\n"
                },
                "tlvLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/CdpTlvList:CdpTlvList"
                    },
                    "description": "Configure tlv-list\n"
                }
            },
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "filterTlvList": {
                    "type": "string",
                    "description": "Apply tlv-list globally\n"
                },
                "holdtime": {
                    "type": "integer",
                    "description": "Specify the holdtime (in sec) to be sent in packets - Range: `10`-`255`\n"
                },
                "run": {
                    "type": "boolean",
                    "description": "Enable CDP\n"
                },
                "timer": {
                    "type": "integer",
                    "description": "Specify the rate at which CDP packets are sent (in sec) - Range: `5`-`254`\n"
                },
                "tlvLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/CdpTlvList:CdpTlvList"
                    },
                    "description": "Configure tlv-list\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cdp resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "filterTlvList": {
                        "type": "string",
                        "description": "Apply tlv-list globally\n"
                    },
                    "holdtime": {
                        "type": "integer",
                        "description": "Specify the holdtime (in sec) to be sent in packets - Range: `10`-`255`\n"
                    },
                    "run": {
                        "type": "boolean",
                        "description": "Enable CDP\n"
                    },
                    "timer": {
                        "type": "integer",
                        "description": "Specify the rate at which CDP packets are sent (in sec) - Range: `5`-`254`\n"
                    },
                    "tlvLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/CdpTlvList:CdpTlvList"
                        },
                        "description": "Configure tlv-list\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/classMap:ClassMap": {
            "description": "This resource can manage the Class Map configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.ClassMap;\nimport com.pulumi.iosxe.ClassMapArgs;\nimport com.pulumi.iosxe.inputs.ClassMapMatchActivatedServiceTemplateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ClassMap(\"example\", ClassMapArgs.builder()        \n            .matchActivatedServiceTemplates(ClassMapMatchActivatedServiceTemplateArgs.builder()\n                .service_name(\"CRITICAL_AUTH_ACCESS\")\n                .build())\n            .matchAuthorizationStatusAuthorized(true)\n            .matchAuthorizingMethodPriorityGreaterThans(20)\n            .matchMethodDot1x(true)\n            .matchMethodMab(true)\n            .matchResultTypeAaaTimeout(true)\n            .matchResultTypeMethodDot1xAgentNotFound(true)\n            .matchResultTypeMethodDot1xAuthoritative(true)\n            .matchResultTypeMethodDot1xMethodTimeout(true)\n            .matchResultTypeMethodMabAuthoritative(true)\n            .prematch(\"match-all\")\n            .subscriber(true)\n            .type(\"control\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:ClassMap\n    properties:\n      matchActivatedServiceTemplates:\n        - service_name: CRITICAL_AUTH_ACCESS\n      matchAuthorizationStatusAuthorized: true\n      matchAuthorizingMethodPriorityGreaterThans:\n        - 20\n      matchMethodDot1x: true\n      matchMethodMab: true\n      matchResultTypeAaaTimeout: true\n      matchResultTypeMethodDot1xAgentNotFound: true\n      matchResultTypeMethodDot1xAuthoritative: true\n      matchResultTypeMethodDot1xMethodTimeout: true\n      matchResultTypeMethodMabAuthoritative: true\n      prematch: match-all\n      subscriber: true\n      type: control\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/classMap:ClassMap example \"Cisco-IOS-XE-native:native/policy/Cisco-IOS-XE-policy:class-map=CM1\"\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Class-Map description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchActivatedServiceTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/ClassMapMatchActivatedServiceTemplate:ClassMapMatchActivatedServiceTemplate"
                    },
                    "description": "match name of service template activated on session\n"
                },
                "matchAuthorizationStatusAuthorized": {
                    "type": "boolean",
                    "description": "authorized\n"
                },
                "matchAuthorizationStatusUnauthorized": {
                    "type": "boolean",
                    "description": "unauthorized\n"
                },
                "matchAuthorizingMethodPriorityGreaterThans": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "greater than\n"
                },
                "matchMethodDot1x": {
                    "type": "boolean",
                    "description": "dot1x\n"
                },
                "matchMethodMab": {
                    "type": "boolean",
                    "description": "mab\n"
                },
                "matchResultTypeAaaTimeout": {
                    "type": "boolean",
                    "description": "aaa timeout type\n"
                },
                "matchResultTypeMethodDot1xAgentNotFound": {
                    "type": "boolean",
                    "description": "agent not found type\n"
                },
                "matchResultTypeMethodDot1xAuthoritative": {
                    "type": "boolean",
                    "description": "failure type\n"
                },
                "matchResultTypeMethodDot1xMethodTimeout": {
                    "type": "boolean",
                    "description": "method_timeout type\n"
                },
                "matchResultTypeMethodMabAuthoritative": {
                    "type": "boolean",
                    "description": "failure type\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the class map\n"
                },
                "prematch": {
                    "type": "string",
                    "description": "Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`\n"
                },
                "subscriber": {
                    "type": "boolean",
                    "description": "Domain name of the class map\n"
                },
                "type": {
                    "type": "string",
                    "description": "type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,\n`stack`, `traffic`\n"
                }
            },
            "required": [
                "name",
                "prematch"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Class-Map description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchActivatedServiceTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/ClassMapMatchActivatedServiceTemplate:ClassMapMatchActivatedServiceTemplate"
                    },
                    "description": "match name of service template activated on session\n"
                },
                "matchAuthorizationStatusAuthorized": {
                    "type": "boolean",
                    "description": "authorized\n"
                },
                "matchAuthorizationStatusUnauthorized": {
                    "type": "boolean",
                    "description": "unauthorized\n"
                },
                "matchAuthorizingMethodPriorityGreaterThans": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "greater than\n"
                },
                "matchMethodDot1x": {
                    "type": "boolean",
                    "description": "dot1x\n"
                },
                "matchMethodMab": {
                    "type": "boolean",
                    "description": "mab\n"
                },
                "matchResultTypeAaaTimeout": {
                    "type": "boolean",
                    "description": "aaa timeout type\n"
                },
                "matchResultTypeMethodDot1xAgentNotFound": {
                    "type": "boolean",
                    "description": "agent not found type\n"
                },
                "matchResultTypeMethodDot1xAuthoritative": {
                    "type": "boolean",
                    "description": "failure type\n"
                },
                "matchResultTypeMethodDot1xMethodTimeout": {
                    "type": "boolean",
                    "description": "method_timeout type\n"
                },
                "matchResultTypeMethodMabAuthoritative": {
                    "type": "boolean",
                    "description": "failure type\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the class map\n"
                },
                "prematch": {
                    "type": "string",
                    "description": "Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`\n"
                },
                "subscriber": {
                    "type": "boolean",
                    "description": "Domain name of the class map\n"
                },
                "type": {
                    "type": "string",
                    "description": "type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,\n`stack`, `traffic`\n"
                }
            },
            "requiredInputs": [
                "prematch"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClassMap resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Class-Map description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "matchActivatedServiceTemplates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/ClassMapMatchActivatedServiceTemplate:ClassMapMatchActivatedServiceTemplate"
                        },
                        "description": "match name of service template activated on session\n"
                    },
                    "matchAuthorizationStatusAuthorized": {
                        "type": "boolean",
                        "description": "authorized\n"
                    },
                    "matchAuthorizationStatusUnauthorized": {
                        "type": "boolean",
                        "description": "unauthorized\n"
                    },
                    "matchAuthorizingMethodPriorityGreaterThans": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "greater than\n"
                    },
                    "matchMethodDot1x": {
                        "type": "boolean",
                        "description": "dot1x\n"
                    },
                    "matchMethodMab": {
                        "type": "boolean",
                        "description": "mab\n"
                    },
                    "matchResultTypeAaaTimeout": {
                        "type": "boolean",
                        "description": "aaa timeout type\n"
                    },
                    "matchResultTypeMethodDot1xAgentNotFound": {
                        "type": "boolean",
                        "description": "agent not found type\n"
                    },
                    "matchResultTypeMethodDot1xAuthoritative": {
                        "type": "boolean",
                        "description": "failure type\n"
                    },
                    "matchResultTypeMethodDot1xMethodTimeout": {
                        "type": "boolean",
                        "description": "method_timeout type\n"
                    },
                    "matchResultTypeMethodMabAuthoritative": {
                        "type": "boolean",
                        "description": "failure type\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the class map\n"
                    },
                    "prematch": {
                        "type": "string",
                        "description": "Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`\n"
                    },
                    "subscriber": {
                        "type": "boolean",
                        "description": "Domain name of the class map\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,\n`stack`, `traffic`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/clock:Clock": {
            "description": "This resource can manage the Clock configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.Clock(\"example\", {\n    calendarValid: true,\n    summerTimeRecurring: true,\n    summerTimeRecurringEndMonth: \"Dec\",\n    summerTimeRecurringEndTime: \"00:00\",\n    summerTimeRecurringEndWeek: \"1\",\n    summerTimeRecurringEndWeekday: \"Mon\",\n    summerTimeRecurringOffset: 60,\n    summerTimeRecurringStartMonth: \"Jan\",\n    summerTimeRecurringStartTime: \"00:00\",\n    summerTimeRecurringStartWeek: \"1\",\n    summerTimeRecurringStartWeekday: \"Mon\",\n    summerTimeZone: \"CET\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.Clock(\"example\",\n    calendar_valid=True,\n    summer_time_recurring=True,\n    summer_time_recurring_end_month=\"Dec\",\n    summer_time_recurring_end_time=\"00:00\",\n    summer_time_recurring_end_week=\"1\",\n    summer_time_recurring_end_weekday=\"Mon\",\n    summer_time_recurring_offset=60,\n    summer_time_recurring_start_month=\"Jan\",\n    summer_time_recurring_start_time=\"00:00\",\n    summer_time_recurring_start_week=\"1\",\n    summer_time_recurring_start_weekday=\"Mon\",\n    summer_time_zone=\"CET\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.Clock(\"example\", new()\n    {\n        CalendarValid = true,\n        SummerTimeRecurring = true,\n        SummerTimeRecurringEndMonth = \"Dec\",\n        SummerTimeRecurringEndTime = \"00:00\",\n        SummerTimeRecurringEndWeek = \"1\",\n        SummerTimeRecurringEndWeekday = \"Mon\",\n        SummerTimeRecurringOffset = 60,\n        SummerTimeRecurringStartMonth = \"Jan\",\n        SummerTimeRecurringStartTime = \"00:00\",\n        SummerTimeRecurringStartWeek = \"1\",\n        SummerTimeRecurringStartWeekday = \"Mon\",\n        SummerTimeZone = \"CET\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewClock(ctx, \"example\", \u0026iosxe.ClockArgs{\n\t\t\tCalendarValid:                   pulumi.Bool(true),\n\t\t\tSummerTimeRecurring:             pulumi.Bool(true),\n\t\t\tSummerTimeRecurringEndMonth:     pulumi.String(\"Dec\"),\n\t\t\tSummerTimeRecurringEndTime:      pulumi.String(\"00:00\"),\n\t\t\tSummerTimeRecurringEndWeek:      pulumi.String(\"1\"),\n\t\t\tSummerTimeRecurringEndWeekday:   pulumi.String(\"Mon\"),\n\t\t\tSummerTimeRecurringOffset:       pulumi.Int(60),\n\t\t\tSummerTimeRecurringStartMonth:   pulumi.String(\"Jan\"),\n\t\t\tSummerTimeRecurringStartTime:    pulumi.String(\"00:00\"),\n\t\t\tSummerTimeRecurringStartWeek:    pulumi.String(\"1\"),\n\t\t\tSummerTimeRecurringStartWeekday: pulumi.String(\"Mon\"),\n\t\t\tSummerTimeZone:                  pulumi.String(\"CET\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Clock;\nimport com.pulumi.iosxe.ClockArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Clock(\"example\", ClockArgs.builder()        \n            .calendarValid(true)\n            .summerTimeRecurring(true)\n            .summerTimeRecurringEndMonth(\"Dec\")\n            .summerTimeRecurringEndTime(\"00:00\")\n            .summerTimeRecurringEndWeek(\"1\")\n            .summerTimeRecurringEndWeekday(\"Mon\")\n            .summerTimeRecurringOffset(60)\n            .summerTimeRecurringStartMonth(\"Jan\")\n            .summerTimeRecurringStartTime(\"00:00\")\n            .summerTimeRecurringStartWeek(\"1\")\n            .summerTimeRecurringStartWeekday(\"Mon\")\n            .summerTimeZone(\"CET\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Clock\n    properties:\n      calendarValid: true\n      summerTimeRecurring: true\n      summerTimeRecurringEndMonth: Dec\n      summerTimeRecurringEndTime: 00:00\n      summerTimeRecurringEndWeek: '1'\n      summerTimeRecurringEndWeekday: Mon\n      summerTimeRecurringOffset: 60\n      summerTimeRecurringStartMonth: Jan\n      summerTimeRecurringStartTime: 00:00\n      summerTimeRecurringStartWeek: '1'\n      summerTimeRecurringStartWeekday: Mon\n      summerTimeZone: CET\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/clock:Clock example \"Cisco-IOS-XE-native:native/clock\"\n```\n\n ",
            "properties": {
                "calendarValid": {
                    "type": "boolean",
                    "description": "Calendar time is authoritative\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "summerTimeDate": {
                    "type": "boolean",
                    "description": "Configure absolute summer time\n"
                },
                "summerTimeDateEndDay": {
                    "type": "integer",
                    "description": "- Range: `1`-`31`\n"
                },
                "summerTimeDateEndMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeDateEndTime": {
                    "type": "string"
                },
                "summerTimeDateEndYear": {
                    "type": "integer",
                    "description": "- Range: `1993`-`2035`\n"
                },
                "summerTimeDateOffset": {
                    "type": "integer",
                    "description": "- Range: `1`-`1440`\n"
                },
                "summerTimeDateStartDay": {
                    "type": "integer",
                    "description": "- Range: `1`-`31`\n"
                },
                "summerTimeDateStartMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeDateStartTime": {
                    "type": "string"
                },
                "summerTimeDateStartYear": {
                    "type": "integer",
                    "description": "- Range: `1993`-`2035`\n"
                },
                "summerTimeRecurring": {
                    "type": "boolean",
                    "description": "Configure recurring summer time\n"
                },
                "summerTimeRecurringEndMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeRecurringEndTime": {
                    "type": "string"
                },
                "summerTimeRecurringEndWeek": {
                    "type": "string"
                },
                "summerTimeRecurringEndWeekday": {
                    "type": "string",
                    "description": "- Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`\n"
                },
                "summerTimeRecurringOffset": {
                    "type": "integer",
                    "description": "- Range: `1`-`1440`\n"
                },
                "summerTimeRecurringStartMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeRecurringStartTime": {
                    "type": "string"
                },
                "summerTimeRecurringStartWeek": {
                    "type": "string"
                },
                "summerTimeRecurringStartWeekday": {
                    "type": "string",
                    "description": "- Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`\n"
                },
                "summerTimeZone": {
                    "type": "string",
                    "description": "Name of time zone in summer\n"
                }
            },
            "inputProperties": {
                "calendarValid": {
                    "type": "boolean",
                    "description": "Calendar time is authoritative\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "summerTimeDate": {
                    "type": "boolean",
                    "description": "Configure absolute summer time\n"
                },
                "summerTimeDateEndDay": {
                    "type": "integer",
                    "description": "- Range: `1`-`31`\n"
                },
                "summerTimeDateEndMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeDateEndTime": {
                    "type": "string"
                },
                "summerTimeDateEndYear": {
                    "type": "integer",
                    "description": "- Range: `1993`-`2035`\n"
                },
                "summerTimeDateOffset": {
                    "type": "integer",
                    "description": "- Range: `1`-`1440`\n"
                },
                "summerTimeDateStartDay": {
                    "type": "integer",
                    "description": "- Range: `1`-`31`\n"
                },
                "summerTimeDateStartMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeDateStartTime": {
                    "type": "string"
                },
                "summerTimeDateStartYear": {
                    "type": "integer",
                    "description": "- Range: `1993`-`2035`\n"
                },
                "summerTimeRecurring": {
                    "type": "boolean",
                    "description": "Configure recurring summer time\n"
                },
                "summerTimeRecurringEndMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeRecurringEndTime": {
                    "type": "string"
                },
                "summerTimeRecurringEndWeek": {
                    "type": "string"
                },
                "summerTimeRecurringEndWeekday": {
                    "type": "string",
                    "description": "- Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`\n"
                },
                "summerTimeRecurringOffset": {
                    "type": "integer",
                    "description": "- Range: `1`-`1440`\n"
                },
                "summerTimeRecurringStartMonth": {
                    "type": "string",
                    "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                },
                "summerTimeRecurringStartTime": {
                    "type": "string"
                },
                "summerTimeRecurringStartWeek": {
                    "type": "string"
                },
                "summerTimeRecurringStartWeekday": {
                    "type": "string",
                    "description": "- Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`\n"
                },
                "summerTimeZone": {
                    "type": "string",
                    "description": "Name of time zone in summer\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Clock resources.\n",
                "properties": {
                    "calendarValid": {
                        "type": "boolean",
                        "description": "Calendar time is authoritative\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "summerTimeDate": {
                        "type": "boolean",
                        "description": "Configure absolute summer time\n"
                    },
                    "summerTimeDateEndDay": {
                        "type": "integer",
                        "description": "- Range: `1`-`31`\n"
                    },
                    "summerTimeDateEndMonth": {
                        "type": "string",
                        "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                    },
                    "summerTimeDateEndTime": {
                        "type": "string"
                    },
                    "summerTimeDateEndYear": {
                        "type": "integer",
                        "description": "- Range: `1993`-`2035`\n"
                    },
                    "summerTimeDateOffset": {
                        "type": "integer",
                        "description": "- Range: `1`-`1440`\n"
                    },
                    "summerTimeDateStartDay": {
                        "type": "integer",
                        "description": "- Range: `1`-`31`\n"
                    },
                    "summerTimeDateStartMonth": {
                        "type": "string",
                        "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                    },
                    "summerTimeDateStartTime": {
                        "type": "string"
                    },
                    "summerTimeDateStartYear": {
                        "type": "integer",
                        "description": "- Range: `1993`-`2035`\n"
                    },
                    "summerTimeRecurring": {
                        "type": "boolean",
                        "description": "Configure recurring summer time\n"
                    },
                    "summerTimeRecurringEndMonth": {
                        "type": "string",
                        "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                    },
                    "summerTimeRecurringEndTime": {
                        "type": "string"
                    },
                    "summerTimeRecurringEndWeek": {
                        "type": "string"
                    },
                    "summerTimeRecurringEndWeekday": {
                        "type": "string",
                        "description": "- Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`\n"
                    },
                    "summerTimeRecurringOffset": {
                        "type": "integer",
                        "description": "- Range: `1`-`1440`\n"
                    },
                    "summerTimeRecurringStartMonth": {
                        "type": "string",
                        "description": "- Choices: `Apr`, `Aug`, `Dec`, `Feb`, `Jan`, `Jul`, `Jun`, `Mar`, `May`, `Nov`, `Oct`, `Sep`\n"
                    },
                    "summerTimeRecurringStartTime": {
                        "type": "string"
                    },
                    "summerTimeRecurringStartWeek": {
                        "type": "string"
                    },
                    "summerTimeRecurringStartWeekday": {
                        "type": "string",
                        "description": "- Choices: `Fri`, `Mon`, `Sat`, `Sun`, `Thu`, `Tue`, `Wed`\n"
                    },
                    "summerTimeZone": {
                        "type": "string",
                        "description": "Name of time zone in summer\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/cryptoIkev2:CryptoIkev2": {
            "description": "This resource can manage the Crypto IKEv2 configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.CryptoIkev2(\"example\", {\n    dpd: 10,\n    dpdQuery: \"periodic\",\n    dpdRetryInterval: 5,\n    natKeepalive: 20,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.CryptoIkev2(\"example\",\n    dpd=10,\n    dpd_query=\"periodic\",\n    dpd_retry_interval=5,\n    nat_keepalive=20)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.CryptoIkev2(\"example\", new()\n    {\n        Dpd = 10,\n        DpdQuery = \"periodic\",\n        DpdRetryInterval = 5,\n        NatKeepalive = 20,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewCryptoIkev2(ctx, \"example\", \u0026iosxe.CryptoIkev2Args{\n\t\t\tDpd:              pulumi.Int(10),\n\t\t\tDpdQuery:         pulumi.String(\"periodic\"),\n\t\t\tDpdRetryInterval: pulumi.Int(5),\n\t\t\tNatKeepalive:     pulumi.Int(20),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.CryptoIkev2;\nimport com.pulumi.iosxe.CryptoIkev2Args;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new CryptoIkev2(\"example\", CryptoIkev2Args.builder()        \n            .dpd(10)\n            .dpdQuery(\"periodic\")\n            .dpdRetryInterval(5)\n            .natKeepalive(20)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:CryptoIkev2\n    properties:\n      dpd: 10\n      dpdQuery: periodic\n      dpdRetryInterval: 5\n      natKeepalive: 20\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/cryptoIkev2:CryptoIkev2 example \"Cisco-IOS-XE-native:native/crypto/Cisco-IOS-XE-crypto:ikev2\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dpd": {
                    "type": "integer",
                    "description": "Enable IKE liveness check for peers - Range: `10`-`3600`\n"
                },
                "dpdQuery": {
                    "type": "string",
                    "description": "- Choices: `on-demand`, `periodic`\n"
                },
                "dpdRetryInterval": {
                    "type": "integer",
                    "description": "- Range: `2`-`60`\n"
                },
                "natKeepalive": {
                    "type": "integer",
                    "description": "Set NAT keepalive interval - Range: `5`-`3600`\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dpd": {
                    "type": "integer",
                    "description": "Enable IKE liveness check for peers - Range: `10`-`3600`\n"
                },
                "dpdQuery": {
                    "type": "string",
                    "description": "- Choices: `on-demand`, `periodic`\n"
                },
                "dpdRetryInterval": {
                    "type": "integer",
                    "description": "- Range: `2`-`60`\n"
                },
                "natKeepalive": {
                    "type": "integer",
                    "description": "Set NAT keepalive interval - Range: `5`-`3600`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CryptoIkev2 resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dpd": {
                        "type": "integer",
                        "description": "Enable IKE liveness check for peers - Range: `10`-`3600`\n"
                    },
                    "dpdQuery": {
                        "type": "string",
                        "description": "- Choices: `on-demand`, `periodic`\n"
                    },
                    "dpdRetryInterval": {
                        "type": "integer",
                        "description": "- Range: `2`-`60`\n"
                    },
                    "natKeepalive": {
                        "type": "integer",
                        "description": "Set NAT keepalive interval - Range: `5`-`3600`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/cryptoIkev2Keyring:CryptoIkev2Keyring": {
            "description": "This resource can manage the Crypto IKEv2 Keyring configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.CryptoIkev2Keyring;\nimport com.pulumi.iosxe.CryptoIkev2KeyringArgs;\nimport com.pulumi.iosxe.inputs.CryptoIkev2KeyringPeerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new CryptoIkev2Keyring(\"example\", CryptoIkev2KeyringArgs.builder()        \n            .peers(CryptoIkev2KeyringPeerArgs.builder()\n                .description(\"My description\")\n                .identity_key_id(\"key1\")\n                .ipv4_address(\"1.2.3.4\")\n                .ipv4_mask(\"255.255.255.248\")\n                .name(\"peer1\")\n                .pre_shared_key_local(\"cisco123\")\n                .pre_shared_key_local_encryption(\"6\")\n                .pre_shared_key_remote(\"cisco123\")\n                .pre_shared_key_remote_encryption(\"6\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:CryptoIkev2Keyring\n    properties:\n      peers:\n        - description: My description\n          identity_key_id: key1\n          ipv4_address: 1.2.3.4\n          ipv4_mask: 255.255.255.248\n          name: peer1\n          pre_shared_key_local: cisco123\n          pre_shared_key_local_encryption: '6'\n          pre_shared_key_remote: cisco123\n          pre_shared_key_remote_encryption: '6'\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/cryptoIkev2Keyring:CryptoIkev2Keyring example \"Cisco-IOS-XE-native:native/crypto/Cisco-IOS-XE-crypto:ikev2/keyring=keyring1\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/CryptoIkev2KeyringPeer:CryptoIkev2KeyringPeer"
                    },
                    "description": "Configure a Peer and associated keys\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/CryptoIkev2KeyringPeer:CryptoIkev2KeyringPeer"
                    },
                    "description": "Configure a Peer and associated keys\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CryptoIkev2Keyring resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/CryptoIkev2KeyringPeer:CryptoIkev2KeyringPeer"
                        },
                        "description": "Configure a Peer and associated keys\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/cryptoIkev2Policy:CryptoIkev2Policy": {
            "description": "This resource can manage the Crypto IKEv2 Policy configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.CryptoIkev2Policy(\"example\", {\n    matchAddressLocalIps: [\"1.2.3.4\"],\n    matchFvrfAny: true,\n    proposals: [{\n        proposals: \"proposal123\",\n    }],\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.CryptoIkev2Policy(\"example\",\n    match_address_local_ips=[\"1.2.3.4\"],\n    match_fvrf_any=True,\n    proposals=[iosxe.CryptoIkev2PolicyProposalArgs(\n        proposals=\"proposal123\",\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.CryptoIkev2Policy(\"example\", new()\n    {\n        MatchAddressLocalIps = new[]\n        {\n            \"1.2.3.4\",\n        },\n        MatchFvrfAny = true,\n        Proposals = new[]\n        {\n            new Iosxe.Inputs.CryptoIkev2PolicyProposalArgs\n            {\n                Proposals = \"proposal123\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewCryptoIkev2Policy(ctx, \"example\", \u0026iosxe.CryptoIkev2PolicyArgs{\n\t\t\tMatchAddressLocalIps: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"1.2.3.4\"),\n\t\t\t},\n\t\t\tMatchFvrfAny: pulumi.Bool(true),\n\t\t\tProposals: iosxe.CryptoIkev2PolicyProposalArray{\n\t\t\t\t\u0026iosxe.CryptoIkev2PolicyProposalArgs{\n\t\t\t\t\tProposals: pulumi.String(\"proposal123\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.CryptoIkev2Policy;\nimport com.pulumi.iosxe.CryptoIkev2PolicyArgs;\nimport com.pulumi.iosxe.inputs.CryptoIkev2PolicyProposalArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new CryptoIkev2Policy(\"example\", CryptoIkev2PolicyArgs.builder()        \n            .matchAddressLocalIps(\"1.2.3.4\")\n            .matchFvrfAny(true)\n            .proposals(CryptoIkev2PolicyProposalArgs.builder()\n                .proposals(\"proposal123\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:CryptoIkev2Policy\n    properties:\n      matchAddressLocalIps:\n        - 1.2.3.4\n      matchFvrfAny: true\n      proposals:\n        - proposals: proposal123\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/cryptoIkev2Policy:CryptoIkev2Policy example \"Cisco-IOS-XE-native:native/crypto/Cisco-IOS-XE-crypto:ikev2/policy=policy1\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchAddressLocalIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Local address\n"
                },
                "matchFvrf": {
                    "type": "string"
                },
                "matchFvrfAny": {
                    "type": "boolean",
                    "description": "Any fvrf\n"
                },
                "matchInboundOnly": {
                    "type": "boolean",
                    "description": "inbound only for controller\n"
                },
                "name": {
                    "type": "string"
                },
                "proposals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/CryptoIkev2PolicyProposal:CryptoIkev2PolicyProposal"
                    },
                    "description": "Specify Proposal\n"
                }
            },
            "required": [
                "name",
                "proposals"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchAddressLocalIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Local address\n"
                },
                "matchFvrf": {
                    "type": "string"
                },
                "matchFvrfAny": {
                    "type": "boolean",
                    "description": "Any fvrf\n"
                },
                "matchInboundOnly": {
                    "type": "boolean",
                    "description": "inbound only for controller\n"
                },
                "name": {
                    "type": "string"
                },
                "proposals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/CryptoIkev2PolicyProposal:CryptoIkev2PolicyProposal"
                    },
                    "description": "Specify Proposal\n"
                }
            },
            "requiredInputs": [
                "proposals"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CryptoIkev2Policy resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "matchAddressLocalIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Local address\n"
                    },
                    "matchFvrf": {
                        "type": "string"
                    },
                    "matchFvrfAny": {
                        "type": "boolean",
                        "description": "Any fvrf\n"
                    },
                    "matchInboundOnly": {
                        "type": "boolean",
                        "description": "inbound only for controller\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "proposals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/CryptoIkev2PolicyProposal:CryptoIkev2PolicyProposal"
                        },
                        "description": "Specify Proposal\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/cryptoIkev2Profile:CryptoIkev2Profile": {
            "description": "This resource can manage the Crypto IKEv2 Profile configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.CryptoIkev2Profile(\"example\", {\n    authenticationLocalPreShare: true,\n    authenticationRemotePreShare: true,\n    configExchangeRequest: false,\n    description: \"My description\",\n    dpdInterval: 10,\n    dpdQuery: \"periodic\",\n    dpdRetry: 2,\n    identityLocalKeyId: \"key1\",\n    keyringLocal: \"test\",\n    matchAddressLocalIp: \"1.2.3.4\",\n    matchFvrfAny: true,\n    matchIdentityRemoteIpv4Addresses: [{\n        address: \"1.2.3.4\",\n        mask: \"255.255.255.0\",\n    }],\n    matchIdentityRemoteKeys: [\"key1\"],\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.CryptoIkev2Profile(\"example\",\n    authentication_local_pre_share=True,\n    authentication_remote_pre_share=True,\n    config_exchange_request=False,\n    description=\"My description\",\n    dpd_interval=10,\n    dpd_query=\"periodic\",\n    dpd_retry=2,\n    identity_local_key_id=\"key1\",\n    keyring_local=\"test\",\n    match_address_local_ip=\"1.2.3.4\",\n    match_fvrf_any=True,\n    match_identity_remote_ipv4_addresses=[iosxe.CryptoIkev2ProfileMatchIdentityRemoteIpv4AddressArgs(\n        address=\"1.2.3.4\",\n        mask=\"255.255.255.0\",\n    )],\n    match_identity_remote_keys=[\"key1\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.CryptoIkev2Profile(\"example\", new()\n    {\n        AuthenticationLocalPreShare = true,\n        AuthenticationRemotePreShare = true,\n        ConfigExchangeRequest = false,\n        Description = \"My description\",\n        DpdInterval = 10,\n        DpdQuery = \"periodic\",\n        DpdRetry = 2,\n        IdentityLocalKeyId = \"key1\",\n        KeyringLocal = \"test\",\n        MatchAddressLocalIp = \"1.2.3.4\",\n        MatchFvrfAny = true,\n        MatchIdentityRemoteIpv4Addresses = new[]\n        {\n            new Iosxe.Inputs.CryptoIkev2ProfileMatchIdentityRemoteIpv4AddressArgs\n            {\n                Address = \"1.2.3.4\",\n                Mask = \"255.255.255.0\",\n            },\n        },\n        MatchIdentityRemoteKeys = new[]\n        {\n            \"key1\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewCryptoIkev2Profile(ctx, \"example\", \u0026iosxe.CryptoIkev2ProfileArgs{\n\t\t\tAuthenticationLocalPreShare:  pulumi.Bool(true),\n\t\t\tAuthenticationRemotePreShare: pulumi.Bool(true),\n\t\t\tConfigExchangeRequest:        pulumi.Bool(false),\n\t\t\tDescription:                  pulumi.String(\"My description\"),\n\t\t\tDpdInterval:                  pulumi.Int(10),\n\t\t\tDpdQuery:                     pulumi.String(\"periodic\"),\n\t\t\tDpdRetry:                     pulumi.Int(2),\n\t\t\tIdentityLocalKeyId:           pulumi.String(\"key1\"),\n\t\t\tKeyringLocal:                 pulumi.String(\"test\"),\n\t\t\tMatchAddressLocalIp:          pulumi.String(\"1.2.3.4\"),\n\t\t\tMatchFvrfAny:                 pulumi.Bool(true),\n\t\t\tMatchIdentityRemoteIpv4Addresses: iosxe.CryptoIkev2ProfileMatchIdentityRemoteIpv4AddressArray{\n\t\t\t\t\u0026iosxe.CryptoIkev2ProfileMatchIdentityRemoteIpv4AddressArgs{\n\t\t\t\t\tAddress: pulumi.String(\"1.2.3.4\"),\n\t\t\t\t\tMask:    pulumi.String(\"255.255.255.0\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tMatchIdentityRemoteKeys: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"key1\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.CryptoIkev2Profile;\nimport com.pulumi.iosxe.CryptoIkev2ProfileArgs;\nimport com.pulumi.iosxe.inputs.CryptoIkev2ProfileMatchIdentityRemoteIpv4AddressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new CryptoIkev2Profile(\"example\", CryptoIkev2ProfileArgs.builder()        \n            .authenticationLocalPreShare(true)\n            .authenticationRemotePreShare(true)\n            .configExchangeRequest(false)\n            .description(\"My description\")\n            .dpdInterval(10)\n            .dpdQuery(\"periodic\")\n            .dpdRetry(2)\n            .identityLocalKeyId(\"key1\")\n            .keyringLocal(\"test\")\n            .matchAddressLocalIp(\"1.2.3.4\")\n            .matchFvrfAny(true)\n            .matchIdentityRemoteIpv4Addresses(CryptoIkev2ProfileMatchIdentityRemoteIpv4AddressArgs.builder()\n                .address(\"1.2.3.4\")\n                .mask(\"255.255.255.0\")\n                .build())\n            .matchIdentityRemoteKeys(\"key1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:CryptoIkev2Profile\n    properties:\n      authenticationLocalPreShare: true\n      authenticationRemotePreShare: true\n      configExchangeRequest: false\n      description: My description\n      dpdInterval: 10\n      dpdQuery: periodic\n      dpdRetry: 2\n      identityLocalKeyId: key1\n      keyringLocal: test\n      matchAddressLocalIp: 1.2.3.4\n      matchFvrfAny: true\n      matchIdentityRemoteIpv4Addresses:\n        - address: 1.2.3.4\n          mask: 255.255.255.0\n      matchIdentityRemoteKeys:\n        - key1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/cryptoIkev2Profile:CryptoIkev2Profile example \"Cisco-IOS-XE-native:native/crypto/Cisco-IOS-XE-crypto:ikev2/profile=profile1\"\n```\n\n ",
            "properties": {
                "authenticationLocalPreShare": {
                    "type": "boolean",
                    "description": "Pre-Shared Key\n"
                },
                "authenticationRemotePreShare": {
                    "type": "boolean",
                    "description": "Pre-Shared Key\n"
                },
                "configExchangeRequest": {
                    "type": "boolean",
                    "description": "enable config-exchange request\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specify a description of this profile\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dpdInterval": {
                    "type": "integer",
                    "description": "- Range: `10`-`3600`\n"
                },
                "dpdQuery": {
                    "type": "string",
                    "description": "- Choices: `on-demand`, `periodic`\n"
                },
                "dpdRetry": {
                    "type": "integer",
                    "description": "- Range: `2`-`60`\n"
                },
                "identityLocalAddress": {
                    "type": "string",
                    "description": "address\n"
                },
                "identityLocalKeyId": {
                    "type": "string",
                    "description": "key-id opaque string - proprietary types of identification key-id string\n"
                },
                "keyringLocal": {
                    "type": "string",
                    "description": "Keyring name\n"
                },
                "matchAddressLocalIp": {
                    "type": "string"
                },
                "matchFvrf": {
                    "type": "string"
                },
                "matchFvrfAny": {
                    "type": "boolean",
                    "description": "Any fvrf\n"
                },
                "matchIdentityRemoteIpv4Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/CryptoIkev2ProfileMatchIdentityRemoteIpv4Address:CryptoIkev2ProfileMatchIdentityRemoteIpv4Address"
                    }
                },
                "matchIdentityRemoteIpv6Prefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIdentityRemoteKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "key-id opaque string\n"
                },
                "matchInboundOnly": {
                    "type": "boolean",
                    "description": "Match the profile for incoming connections only\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "authenticationLocalPreShare": {
                    "type": "boolean",
                    "description": "Pre-Shared Key\n"
                },
                "authenticationRemotePreShare": {
                    "type": "boolean",
                    "description": "Pre-Shared Key\n"
                },
                "configExchangeRequest": {
                    "type": "boolean",
                    "description": "enable config-exchange request\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specify a description of this profile\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dpdInterval": {
                    "type": "integer",
                    "description": "- Range: `10`-`3600`\n"
                },
                "dpdQuery": {
                    "type": "string",
                    "description": "- Choices: `on-demand`, `periodic`\n"
                },
                "dpdRetry": {
                    "type": "integer",
                    "description": "- Range: `2`-`60`\n"
                },
                "identityLocalAddress": {
                    "type": "string",
                    "description": "address\n"
                },
                "identityLocalKeyId": {
                    "type": "string",
                    "description": "key-id opaque string - proprietary types of identification key-id string\n"
                },
                "keyringLocal": {
                    "type": "string",
                    "description": "Keyring name\n"
                },
                "matchAddressLocalIp": {
                    "type": "string"
                },
                "matchFvrf": {
                    "type": "string"
                },
                "matchFvrfAny": {
                    "type": "boolean",
                    "description": "Any fvrf\n"
                },
                "matchIdentityRemoteIpv4Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/CryptoIkev2ProfileMatchIdentityRemoteIpv4Address:CryptoIkev2ProfileMatchIdentityRemoteIpv4Address"
                    }
                },
                "matchIdentityRemoteIpv6Prefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIdentityRemoteKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "key-id opaque string\n"
                },
                "matchInboundOnly": {
                    "type": "boolean",
                    "description": "Match the profile for incoming connections only\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CryptoIkev2Profile resources.\n",
                "properties": {
                    "authenticationLocalPreShare": {
                        "type": "boolean",
                        "description": "Pre-Shared Key\n"
                    },
                    "authenticationRemotePreShare": {
                        "type": "boolean",
                        "description": "Pre-Shared Key\n"
                    },
                    "configExchangeRequest": {
                        "type": "boolean",
                        "description": "enable config-exchange request\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Specify a description of this profile\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dpdInterval": {
                        "type": "integer",
                        "description": "- Range: `10`-`3600`\n"
                    },
                    "dpdQuery": {
                        "type": "string",
                        "description": "- Choices: `on-demand`, `periodic`\n"
                    },
                    "dpdRetry": {
                        "type": "integer",
                        "description": "- Range: `2`-`60`\n"
                    },
                    "identityLocalAddress": {
                        "type": "string",
                        "description": "address\n"
                    },
                    "identityLocalKeyId": {
                        "type": "string",
                        "description": "key-id opaque string - proprietary types of identification key-id string\n"
                    },
                    "keyringLocal": {
                        "type": "string",
                        "description": "Keyring name\n"
                    },
                    "matchAddressLocalIp": {
                        "type": "string"
                    },
                    "matchFvrf": {
                        "type": "string"
                    },
                    "matchFvrfAny": {
                        "type": "boolean",
                        "description": "Any fvrf\n"
                    },
                    "matchIdentityRemoteIpv4Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/CryptoIkev2ProfileMatchIdentityRemoteIpv4Address:CryptoIkev2ProfileMatchIdentityRemoteIpv4Address"
                        }
                    },
                    "matchIdentityRemoteIpv6Prefixes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "matchIdentityRemoteKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "key-id opaque string\n"
                    },
                    "matchInboundOnly": {
                        "type": "boolean",
                        "description": "Match the profile for incoming connections only\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/cryptoIkev2Proposal:CryptoIkev2Proposal": {
            "description": "This resource can manage the Crypto IKEv2 Proposal configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.CryptoIkev2Proposal(\"example\", {\n    encryptionAesGcm256: true,\n    groupFifteen: true,\n    groupFourteen: true,\n    groupNineteen: true,\n    groupOne: true,\n    groupSixteen: true,\n    groupTwenty: true,\n    groupTwentyFour: true,\n    groupTwentyOne: true,\n    groupTwo: true,\n    integritySha1: true,\n    prfSha1: true,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.CryptoIkev2Proposal(\"example\",\n    encryption_aes_gcm256=True,\n    group_fifteen=True,\n    group_fourteen=True,\n    group_nineteen=True,\n    group_one=True,\n    group_sixteen=True,\n    group_twenty=True,\n    group_twenty_four=True,\n    group_twenty_one=True,\n    group_two=True,\n    integrity_sha1=True,\n    prf_sha1=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.CryptoIkev2Proposal(\"example\", new()\n    {\n        EncryptionAesGcm256 = true,\n        GroupFifteen = true,\n        GroupFourteen = true,\n        GroupNineteen = true,\n        GroupOne = true,\n        GroupSixteen = true,\n        GroupTwenty = true,\n        GroupTwentyFour = true,\n        GroupTwentyOne = true,\n        GroupTwo = true,\n        IntegritySha1 = true,\n        PrfSha1 = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewCryptoIkev2Proposal(ctx, \"example\", \u0026iosxe.CryptoIkev2ProposalArgs{\n\t\t\tEncryptionAesGcm256: pulumi.Bool(true),\n\t\t\tGroupFifteen:        pulumi.Bool(true),\n\t\t\tGroupFourteen:       pulumi.Bool(true),\n\t\t\tGroupNineteen:       pulumi.Bool(true),\n\t\t\tGroupOne:            pulumi.Bool(true),\n\t\t\tGroupSixteen:        pulumi.Bool(true),\n\t\t\tGroupTwenty:         pulumi.Bool(true),\n\t\t\tGroupTwentyFour:     pulumi.Bool(true),\n\t\t\tGroupTwentyOne:      pulumi.Bool(true),\n\t\t\tGroupTwo:            pulumi.Bool(true),\n\t\t\tIntegritySha1:       pulumi.Bool(true),\n\t\t\tPrfSha1:             pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.CryptoIkev2Proposal;\nimport com.pulumi.iosxe.CryptoIkev2ProposalArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new CryptoIkev2Proposal(\"example\", CryptoIkev2ProposalArgs.builder()        \n            .encryptionAesGcm256(true)\n            .groupFifteen(true)\n            .groupFourteen(true)\n            .groupNineteen(true)\n            .groupOne(true)\n            .groupSixteen(true)\n            .groupTwenty(true)\n            .groupTwentyFour(true)\n            .groupTwentyOne(true)\n            .groupTwo(true)\n            .integritySha1(true)\n            .prfSha1(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:CryptoIkev2Proposal\n    properties:\n      encryptionAesGcm256: true\n      groupFifteen: true\n      groupFourteen: true\n      groupNineteen: true\n      groupOne: true\n      groupSixteen: true\n      groupTwenty: true\n      groupTwentyFour: true\n      groupTwentyOne: true\n      groupTwo: true\n      integritySha1: true\n      prfSha1: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/cryptoIkev2Proposal:CryptoIkev2Proposal example \"Cisco-IOS-XE-native:native/crypto/Cisco-IOS-XE-crypto:ikev2/proposal=PROPOSAL1\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encryptionAesCbc128": {
                    "type": "boolean",
                    "description": "AES-CBC-128\n"
                },
                "encryptionAesCbc192": {
                    "type": "boolean",
                    "description": "AES-CBC-192\n"
                },
                "encryptionAesCbc256": {
                    "type": "boolean",
                    "description": "AES-CBC-256\n"
                },
                "encryptionAesGcm128": {
                    "type": "boolean",
                    "description": "Combined-mode,128 bit key,16 byte ICV(Authentication Tag)\n"
                },
                "encryptionAesGcm256": {
                    "type": "boolean",
                    "description": "Combined-mode,256 bit key,16 byte ICV(Authentication Tag)\n"
                },
                "encryptionEn3des": {
                    "type": "boolean",
                    "description": "3DES\n"
                },
                "groupFifteen": {
                    "type": "boolean",
                    "description": "DH 3072 MODP\n"
                },
                "groupFourteen": {
                    "type": "boolean",
                    "description": "DH 2048 MODP\n"
                },
                "groupNineteen": {
                    "type": "boolean",
                    "description": "DH 256 ECP\n"
                },
                "groupOne": {
                    "type": "boolean",
                    "description": "DH 768 MODP\n"
                },
                "groupSixteen": {
                    "type": "boolean",
                    "description": "DH 4096 MODP\n"
                },
                "groupTwenty": {
                    "type": "boolean",
                    "description": "DH 384 ECP\n"
                },
                "groupTwentyFour": {
                    "type": "boolean",
                    "description": "DH 2048 (256 subgroup) MODP\n"
                },
                "groupTwentyOne": {
                    "type": "boolean",
                    "description": "DH 521 ECP\n"
                },
                "groupTwo": {
                    "type": "boolean",
                    "description": "DH 1024 MODP\n"
                },
                "integrityMd5": {
                    "type": "boolean",
                    "description": "Message Digest 5\n"
                },
                "integritySha1": {
                    "type": "boolean",
                    "description": "Secure Hash Standard\n"
                },
                "integritySha256": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (256 bit)\n"
                },
                "integritySha384": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (384 bit)\n"
                },
                "integritySha512": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (512 bit)\n"
                },
                "name": {
                    "type": "string"
                },
                "prfMd5": {
                    "type": "boolean",
                    "description": "Message Digest 5\n"
                },
                "prfSha1": {
                    "type": "boolean",
                    "description": "Secure Hash Standard\n"
                },
                "prfSha256": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (256 bit)\n"
                },
                "prfSha384": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (384 bit)\n"
                },
                "prfSha512": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (512 bit)\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encryptionAesCbc128": {
                    "type": "boolean",
                    "description": "AES-CBC-128\n"
                },
                "encryptionAesCbc192": {
                    "type": "boolean",
                    "description": "AES-CBC-192\n"
                },
                "encryptionAesCbc256": {
                    "type": "boolean",
                    "description": "AES-CBC-256\n"
                },
                "encryptionAesGcm128": {
                    "type": "boolean",
                    "description": "Combined-mode,128 bit key,16 byte ICV(Authentication Tag)\n"
                },
                "encryptionAesGcm256": {
                    "type": "boolean",
                    "description": "Combined-mode,256 bit key,16 byte ICV(Authentication Tag)\n"
                },
                "encryptionEn3des": {
                    "type": "boolean",
                    "description": "3DES\n"
                },
                "groupFifteen": {
                    "type": "boolean",
                    "description": "DH 3072 MODP\n"
                },
                "groupFourteen": {
                    "type": "boolean",
                    "description": "DH 2048 MODP\n"
                },
                "groupNineteen": {
                    "type": "boolean",
                    "description": "DH 256 ECP\n"
                },
                "groupOne": {
                    "type": "boolean",
                    "description": "DH 768 MODP\n"
                },
                "groupSixteen": {
                    "type": "boolean",
                    "description": "DH 4096 MODP\n"
                },
                "groupTwenty": {
                    "type": "boolean",
                    "description": "DH 384 ECP\n"
                },
                "groupTwentyFour": {
                    "type": "boolean",
                    "description": "DH 2048 (256 subgroup) MODP\n"
                },
                "groupTwentyOne": {
                    "type": "boolean",
                    "description": "DH 521 ECP\n"
                },
                "groupTwo": {
                    "type": "boolean",
                    "description": "DH 1024 MODP\n"
                },
                "integrityMd5": {
                    "type": "boolean",
                    "description": "Message Digest 5\n"
                },
                "integritySha1": {
                    "type": "boolean",
                    "description": "Secure Hash Standard\n"
                },
                "integritySha256": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (256 bit)\n"
                },
                "integritySha384": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (384 bit)\n"
                },
                "integritySha512": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (512 bit)\n"
                },
                "name": {
                    "type": "string"
                },
                "prfMd5": {
                    "type": "boolean",
                    "description": "Message Digest 5\n"
                },
                "prfSha1": {
                    "type": "boolean",
                    "description": "Secure Hash Standard\n"
                },
                "prfSha256": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (256 bit)\n"
                },
                "prfSha384": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (384 bit)\n"
                },
                "prfSha512": {
                    "type": "boolean",
                    "description": "Secure Hash Standard 2 (512 bit)\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CryptoIkev2Proposal resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encryptionAesCbc128": {
                        "type": "boolean",
                        "description": "AES-CBC-128\n"
                    },
                    "encryptionAesCbc192": {
                        "type": "boolean",
                        "description": "AES-CBC-192\n"
                    },
                    "encryptionAesCbc256": {
                        "type": "boolean",
                        "description": "AES-CBC-256\n"
                    },
                    "encryptionAesGcm128": {
                        "type": "boolean",
                        "description": "Combined-mode,128 bit key,16 byte ICV(Authentication Tag)\n"
                    },
                    "encryptionAesGcm256": {
                        "type": "boolean",
                        "description": "Combined-mode,256 bit key,16 byte ICV(Authentication Tag)\n"
                    },
                    "encryptionEn3des": {
                        "type": "boolean",
                        "description": "3DES\n"
                    },
                    "groupFifteen": {
                        "type": "boolean",
                        "description": "DH 3072 MODP\n"
                    },
                    "groupFourteen": {
                        "type": "boolean",
                        "description": "DH 2048 MODP\n"
                    },
                    "groupNineteen": {
                        "type": "boolean",
                        "description": "DH 256 ECP\n"
                    },
                    "groupOne": {
                        "type": "boolean",
                        "description": "DH 768 MODP\n"
                    },
                    "groupSixteen": {
                        "type": "boolean",
                        "description": "DH 4096 MODP\n"
                    },
                    "groupTwenty": {
                        "type": "boolean",
                        "description": "DH 384 ECP\n"
                    },
                    "groupTwentyFour": {
                        "type": "boolean",
                        "description": "DH 2048 (256 subgroup) MODP\n"
                    },
                    "groupTwentyOne": {
                        "type": "boolean",
                        "description": "DH 521 ECP\n"
                    },
                    "groupTwo": {
                        "type": "boolean",
                        "description": "DH 1024 MODP\n"
                    },
                    "integrityMd5": {
                        "type": "boolean",
                        "description": "Message Digest 5\n"
                    },
                    "integritySha1": {
                        "type": "boolean",
                        "description": "Secure Hash Standard\n"
                    },
                    "integritySha256": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (256 bit)\n"
                    },
                    "integritySha384": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (384 bit)\n"
                    },
                    "integritySha512": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (512 bit)\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "prfMd5": {
                        "type": "boolean",
                        "description": "Message Digest 5\n"
                    },
                    "prfSha1": {
                        "type": "boolean",
                        "description": "Secure Hash Standard\n"
                    },
                    "prfSha256": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (256 bit)\n"
                    },
                    "prfSha384": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (384 bit)\n"
                    },
                    "prfSha512": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (512 bit)\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/cryptoIpsecProfile:CryptoIpsecProfile": {
            "description": "This resource can manage the Crypto IPSec Profile configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.CryptoIpsecProfile(\"example\", {\n    setIsakmpProfileIkev2ProfileIkev2ProfileCaseIkev2Profile: \"vpn300\",\n    setTransformSets: [\"TS1\"],\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.CryptoIpsecProfile(\"example\",\n    set_isakmp_profile_ikev2_profile_ikev2_profile_case_ikev2_profile=\"vpn300\",\n    set_transform_sets=[\"TS1\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.CryptoIpsecProfile(\"example\", new()\n    {\n        SetIsakmpProfileIkev2ProfileIkev2ProfileCaseIkev2Profile = \"vpn300\",\n        SetTransformSets = new[]\n        {\n            \"TS1\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewCryptoIpsecProfile(ctx, \"example\", \u0026iosxe.CryptoIpsecProfileArgs{\n\t\t\tSetIsakmpProfileIkev2ProfileIkev2ProfileCaseIkev2Profile: pulumi.String(\"vpn300\"),\n\t\t\tSetTransformSets: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"TS1\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.CryptoIpsecProfile;\nimport com.pulumi.iosxe.CryptoIpsecProfileArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new CryptoIpsecProfile(\"example\", CryptoIpsecProfileArgs.builder()        \n            .setIsakmpProfileIkev2ProfileIkev2ProfileCaseIkev2Profile(\"vpn300\")\n            .setTransformSets(\"TS1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:CryptoIpsecProfile\n    properties:\n      setIsakmpProfileIkev2ProfileIkev2ProfileCaseIkev2Profile: vpn300\n      setTransformSets:\n        - TS1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/cryptoIpsecProfile:CryptoIpsecProfile example \"Cisco-IOS-XE-native:native/crypto/Cisco-IOS-XE-crypto:ipsec/profile=vpn200\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "setIsakmpProfileIkev2ProfileIkev2ProfileCaseIkev2Profile": {
                    "type": "string",
                    "description": "Specify ikev2 Profile\n"
                },
                "setIsakmpProfileIkev2ProfileIsakmpProfileCaseIsakmpProfile": {
                    "type": "string",
                    "description": "Specify isakmp Profile\n"
                },
                "setTransformSets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specify list of transform sets in priority order\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "setIsakmpProfileIkev2ProfileIkev2ProfileCaseIkev2Profile": {
                    "type": "string",
                    "description": "Specify ikev2 Profile\n"
                },
                "setIsakmpProfileIkev2ProfileIsakmpProfileCaseIsakmpProfile": {
                    "type": "string",
                    "description": "Specify isakmp Profile\n"
                },
                "setTransformSets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specify list of transform sets in priority order\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CryptoIpsecProfile resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "setIsakmpProfileIkev2ProfileIkev2ProfileCaseIkev2Profile": {
                        "type": "string",
                        "description": "Specify ikev2 Profile\n"
                    },
                    "setIsakmpProfileIkev2ProfileIsakmpProfileCaseIsakmpProfile": {
                        "type": "string",
                        "description": "Specify isakmp Profile\n"
                    },
                    "setTransformSets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specify list of transform sets in priority order\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/cryptoIpsecTransformSet:CryptoIpsecTransformSet": {
            "description": "This resource can manage the Crypto IPSec Transform Set configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.CryptoIpsecTransformSet(\"example\", {\n    esp: \"esp-aes\",\n    espHmac: \"esp-sha-hmac\",\n    modeTunnel: true,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.CryptoIpsecTransformSet(\"example\",\n    esp=\"esp-aes\",\n    esp_hmac=\"esp-sha-hmac\",\n    mode_tunnel=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.CryptoIpsecTransformSet(\"example\", new()\n    {\n        Esp = \"esp-aes\",\n        EspHmac = \"esp-sha-hmac\",\n        ModeTunnel = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewCryptoIpsecTransformSet(ctx, \"example\", \u0026iosxe.CryptoIpsecTransformSetArgs{\n\t\t\tEsp:        pulumi.String(\"esp-aes\"),\n\t\t\tEspHmac:    pulumi.String(\"esp-sha-hmac\"),\n\t\t\tModeTunnel: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.CryptoIpsecTransformSet;\nimport com.pulumi.iosxe.CryptoIpsecTransformSetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new CryptoIpsecTransformSet(\"example\", CryptoIpsecTransformSetArgs.builder()        \n            .esp(\"esp-aes\")\n            .espHmac(\"esp-sha-hmac\")\n            .modeTunnel(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:CryptoIpsecTransformSet\n    properties:\n      esp: esp-aes\n      espHmac: esp-sha-hmac\n      modeTunnel: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/cryptoIpsecTransformSet:CryptoIpsecTransformSet example \"Cisco-IOS-XE-native:native/crypto/Cisco-IOS-XE-crypto:ipsec/transform-set=TEST\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "esp": {
                    "type": "string",
                    "description": "- Choices: `esp-3des`, `esp-aes`, `esp-des`, `esp-gcm`, `esp-gmac`, `esp-null`, `esp-seal`\n"
                },
                "espHmac": {
                    "type": "string",
                    "description": "- Choices: `esp-md5-hmac`, `esp-sha-hmac`, `esp-sha256-hmac`, `esp-sha384-hmac`, `esp-sha512-hmac`\n"
                },
                "modeTunnel": {
                    "type": "boolean",
                    "description": "tunnel (datagram encapsulation) mode\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "esp",
                "espHmac",
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "esp": {
                    "type": "string",
                    "description": "- Choices: `esp-3des`, `esp-aes`, `esp-des`, `esp-gcm`, `esp-gmac`, `esp-null`, `esp-seal`\n"
                },
                "espHmac": {
                    "type": "string",
                    "description": "- Choices: `esp-md5-hmac`, `esp-sha-hmac`, `esp-sha256-hmac`, `esp-sha384-hmac`, `esp-sha512-hmac`\n"
                },
                "modeTunnel": {
                    "type": "boolean",
                    "description": "tunnel (datagram encapsulation) mode\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "esp",
                "espHmac"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CryptoIpsecTransformSet resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "esp": {
                        "type": "string",
                        "description": "- Choices: `esp-3des`, `esp-aes`, `esp-des`, `esp-gcm`, `esp-gmac`, `esp-null`, `esp-seal`\n"
                    },
                    "espHmac": {
                        "type": "string",
                        "description": "- Choices: `esp-md5-hmac`, `esp-sha-hmac`, `esp-sha256-hmac`, `esp-sha384-hmac`, `esp-sha512-hmac`\n"
                    },
                    "modeTunnel": {
                        "type": "boolean",
                        "description": "tunnel (datagram encapsulation) mode\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/cts:Cts": {
            "description": "This resource can manage the CTS configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.Cts(\"example\", {authorizationList: \"Tacacs-GROUP\"});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.Cts(\"example\", authorization_list=\"Tacacs-GROUP\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.Cts(\"example\", new()\n    {\n        AuthorizationList = \"Tacacs-GROUP\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewCts(ctx, \"example\", \u0026iosxe.CtsArgs{\n\t\t\tAuthorizationList: pulumi.String(\"Tacacs-GROUP\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Cts;\nimport com.pulumi.iosxe.CtsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Cts(\"example\", CtsArgs.builder()        \n            .authorizationList(\"Tacacs-GROUP\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Cts\n    properties:\n      authorizationList: Tacacs-GROUP\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/cts:Cts example \"Cisco-IOS-XE-native:native/cts\"\n```\n\n ",
            "properties": {
                "authorizationList": {
                    "type": "string",
                    "description": "Local authorization list to use for CTS\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "inputProperties": {
                "authorizationList": {
                    "type": "string",
                    "description": "Local authorization list to use for CTS\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cts resources.\n",
                "properties": {
                    "authorizationList": {
                        "type": "string",
                        "description": "Local authorization list to use for CTS\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/dhcp:Dhcp": {
            "description": "This resource can manage the DHCP configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Dhcp;\nimport com.pulumi.iosxe.DhcpArgs;\nimport com.pulumi.iosxe.inputs.DhcpSnoopingVlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Dhcp(\"example\", DhcpArgs.builder()        \n            .relayInformationOptionDefault(false)\n            .relayInformationOptionVpn(true)\n            .relayInformationTrustAll(false)\n            .snooping(true)\n            .snoopingVlans(DhcpSnoopingVlanArgs.builder()\n                .vlan_id(\"3-4\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Dhcp\n    properties:\n      relayInformationOptionDefault: false\n      relayInformationOptionVpn: true\n      relayInformationTrustAll: false\n      snooping: true\n      snoopingVlans:\n        - vlan_id: 3-4\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/dhcp:Dhcp example \"Cisco-IOS-XE-native:native/ip/dhcp\"\n```\n\n ",
            "properties": {
                "compatibilitySuboptionLinkSelection": {
                    "type": "string",
                    "description": "- Choices: `cisco`, `standard`\n"
                },
                "compatibilitySuboptionServerOverride": {
                    "type": "string",
                    "description": "- Choices: `cisco`, `standard`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "relayInformationOptionDefault": {
                    "type": "boolean",
                    "description": "Default option, no vpn\n"
                },
                "relayInformationOptionVpn": {
                    "type": "boolean",
                    "description": "Insert VPN sub-options and change the giaddr to the outgoing interface\n"
                },
                "relayInformationTrustAll": {
                    "type": "boolean",
                    "description": "Received DHCP packets may contain relay info option with zero giaddr\n"
                },
                "snooping": {
                    "type": "boolean",
                    "description": "DHCP Snooping\n"
                },
                "snoopingInformationOptionFormatRemoteIdHostname": {
                    "type": "boolean",
                    "description": "Use configured hostname for remote id\n"
                },
                "snoopingVlans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/DhcpSnoopingVlan:DhcpSnoopingVlan"
                    },
                    "description": "DHCP Snooping vlan\n"
                }
            },
            "inputProperties": {
                "compatibilitySuboptionLinkSelection": {
                    "type": "string",
                    "description": "- Choices: `cisco`, `standard`\n"
                },
                "compatibilitySuboptionServerOverride": {
                    "type": "string",
                    "description": "- Choices: `cisco`, `standard`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "relayInformationOptionDefault": {
                    "type": "boolean",
                    "description": "Default option, no vpn\n"
                },
                "relayInformationOptionVpn": {
                    "type": "boolean",
                    "description": "Insert VPN sub-options and change the giaddr to the outgoing interface\n"
                },
                "relayInformationTrustAll": {
                    "type": "boolean",
                    "description": "Received DHCP packets may contain relay info option with zero giaddr\n"
                },
                "snooping": {
                    "type": "boolean",
                    "description": "DHCP Snooping\n"
                },
                "snoopingInformationOptionFormatRemoteIdHostname": {
                    "type": "boolean",
                    "description": "Use configured hostname for remote id\n"
                },
                "snoopingVlans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/DhcpSnoopingVlan:DhcpSnoopingVlan"
                    },
                    "description": "DHCP Snooping vlan\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dhcp resources.\n",
                "properties": {
                    "compatibilitySuboptionLinkSelection": {
                        "type": "string",
                        "description": "- Choices: `cisco`, `standard`\n"
                    },
                    "compatibilitySuboptionServerOverride": {
                        "type": "string",
                        "description": "- Choices: `cisco`, `standard`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "relayInformationOptionDefault": {
                        "type": "boolean",
                        "description": "Default option, no vpn\n"
                    },
                    "relayInformationOptionVpn": {
                        "type": "boolean",
                        "description": "Insert VPN sub-options and change the giaddr to the outgoing interface\n"
                    },
                    "relayInformationTrustAll": {
                        "type": "boolean",
                        "description": "Received DHCP packets may contain relay info option with zero giaddr\n"
                    },
                    "snooping": {
                        "type": "boolean",
                        "description": "DHCP Snooping\n"
                    },
                    "snoopingInformationOptionFormatRemoteIdHostname": {
                        "type": "boolean",
                        "description": "Use configured hostname for remote id\n"
                    },
                    "snoopingVlans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/DhcpSnoopingVlan:DhcpSnoopingVlan"
                        },
                        "description": "DHCP Snooping vlan\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/dot1x:Dot1x": {
            "description": "This resource can manage the Dot1x configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Dot1x;\nimport com.pulumi.iosxe.Dot1xArgs;\nimport com.pulumi.iosxe.inputs.Dot1xCredentialArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Dot1x(\"example\", Dot1xArgs.builder()        \n            .authFailEapol(true)\n            .credentials(Dot1xCredentialArgs.builder()\n                .anonymous_id(\"1\")\n                .description(\"credential_profile_name\")\n                .password(\"password123\")\n                .password_type(\"0\")\n                .pki_trustpoint(\"trustpoint1\")\n                .profile_name(\"profile1\")\n                .username(\"username1\")\n                .build())\n            .criticalEapolConfigBlock(true)\n            .loggingVerbose(true)\n            .supplicantControlledTransient(true)\n            .supplicantForceMulticast(true)\n            .systemAuthControl(true)\n            .testTimeout(1000)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Dot1x\n    properties:\n      authFailEapol: true\n      credentials:\n        - anonymous_id: '1'\n          description: credential_profile_name\n          password: password123\n          password_type: '0'\n          pki_trustpoint: trustpoint1\n          profile_name: profile1\n          username: username1\n      criticalEapolConfigBlock: true\n      loggingVerbose: true\n      supplicantControlledTransient: true\n      supplicantForceMulticast: true\n      systemAuthControl: true\n      testTimeout: 1000\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/dot1x:Dot1x example \"Cisco-IOS-XE-native:native/dot1x\"\n```\n\n ",
            "properties": {
                "authFailEapol": {
                    "type": "boolean",
                    "description": "Send EAPOL-Success on successful auth-fail Authorization\n"
                },
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/Dot1xCredential:Dot1xCredential"
                    },
                    "description": "Configure 802.1X credentials profiles\n"
                },
                "criticalEapolConfigBlock": {
                    "type": "boolean",
                    "description": "Block all EAPoL transaction on Critical Authentication\n"
                },
                "criticalRecoveryDelay": {
                    "type": "integer",
                    "description": "Set 802.1x Critical Authentication Recovery Delay period - Range: `1`-`10000`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "loggingVerbose": {
                    "type": "boolean",
                    "description": "Show verbose messages in system logs\n"
                },
                "supplicantControlledTransient": {
                    "type": "boolean",
                    "description": "Controlled access is only applied during authentication\n"
                },
                "supplicantForceMulticast": {
                    "type": "boolean",
                    "description": "Force 802.1X supplicant to send multicast packets\n"
                },
                "systemAuthControl": {
                    "type": "boolean",
                    "description": "Enable or Disable SysAuthControl\n"
                },
                "testTimeout": {
                    "type": "integer",
                    "description": "Timeout for device EAPOL capabilities test in seconds - Range: `1`-`65535`\n"
                }
            },
            "inputProperties": {
                "authFailEapol": {
                    "type": "boolean",
                    "description": "Send EAPOL-Success on successful auth-fail Authorization\n"
                },
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/Dot1xCredential:Dot1xCredential"
                    },
                    "description": "Configure 802.1X credentials profiles\n"
                },
                "criticalEapolConfigBlock": {
                    "type": "boolean",
                    "description": "Block all EAPoL transaction on Critical Authentication\n"
                },
                "criticalRecoveryDelay": {
                    "type": "integer",
                    "description": "Set 802.1x Critical Authentication Recovery Delay period - Range: `1`-`10000`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "loggingVerbose": {
                    "type": "boolean",
                    "description": "Show verbose messages in system logs\n"
                },
                "supplicantControlledTransient": {
                    "type": "boolean",
                    "description": "Controlled access is only applied during authentication\n"
                },
                "supplicantForceMulticast": {
                    "type": "boolean",
                    "description": "Force 802.1X supplicant to send multicast packets\n"
                },
                "systemAuthControl": {
                    "type": "boolean",
                    "description": "Enable or Disable SysAuthControl\n"
                },
                "testTimeout": {
                    "type": "integer",
                    "description": "Timeout for device EAPOL capabilities test in seconds - Range: `1`-`65535`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dot1x resources.\n",
                "properties": {
                    "authFailEapol": {
                        "type": "boolean",
                        "description": "Send EAPOL-Success on successful auth-fail Authorization\n"
                    },
                    "credentials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/Dot1xCredential:Dot1xCredential"
                        },
                        "description": "Configure 802.1X credentials profiles\n"
                    },
                    "criticalEapolConfigBlock": {
                        "type": "boolean",
                        "description": "Block all EAPoL transaction on Critical Authentication\n"
                    },
                    "criticalRecoveryDelay": {
                        "type": "integer",
                        "description": "Set 802.1x Critical Authentication Recovery Delay period - Range: `1`-`10000`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "loggingVerbose": {
                        "type": "boolean",
                        "description": "Show verbose messages in system logs\n"
                    },
                    "supplicantControlledTransient": {
                        "type": "boolean",
                        "description": "Controlled access is only applied during authentication\n"
                    },
                    "supplicantForceMulticast": {
                        "type": "boolean",
                        "description": "Force 802.1X supplicant to send multicast packets\n"
                    },
                    "systemAuthControl": {
                        "type": "boolean",
                        "description": "Enable or Disable SysAuthControl\n"
                    },
                    "testTimeout": {
                        "type": "integer",
                        "description": "Timeout for device EAPOL capabilities test in seconds - Range: `1`-`65535`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/errdisable:Errdisable": {
            "description": "This resource can manage the Errdisable configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.Errdisable(\"example\", {\n    detectCauseAll: true,\n    detectCauseDhcpRateLimit: true,\n    detectCauseDtpFlap: true,\n    detectCauseL2ptguard: true,\n    detectCauseLinkFlap: true,\n    detectCausePppoeIaRateLimit: true,\n    flapSettingCauseDtpFlapMaxFlaps: 80,\n    flapSettingCauseDtpFlapTime: 90,\n    flapSettingCauseLinkFlapMaxFlaps: 80,\n    flapSettingCauseLinkFlapTime: 90,\n    flapSettingCausePagpFlapMaxFlaps: 80,\n    flapSettingCausePagpFlapTime: 90,\n    recoveryCauseAll: true,\n    recoveryCauseArpInspection: true,\n    recoveryCauseBpduguard: true,\n    recoveryCauseDhcpRateLimit: true,\n    recoveryCauseDtpFlap: true,\n    recoveryCauseL2ptguard: true,\n    recoveryCauseLinkFlap: true,\n    recoveryCausePortModeFailure: true,\n    recoveryCausePppoeIaRateLimit: true,\n    recoveryCausePsecureViolation: true,\n    recoveryCausePsp: true,\n    recoveryCauseSecurityViolation: true,\n    recoveryCauseUdld: true,\n    recoveryInterval: 855,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.Errdisable(\"example\",\n    detect_cause_all=True,\n    detect_cause_dhcp_rate_limit=True,\n    detect_cause_dtp_flap=True,\n    detect_cause_l2ptguard=True,\n    detect_cause_link_flap=True,\n    detect_cause_pppoe_ia_rate_limit=True,\n    flap_setting_cause_dtp_flap_max_flaps=80,\n    flap_setting_cause_dtp_flap_time=90,\n    flap_setting_cause_link_flap_max_flaps=80,\n    flap_setting_cause_link_flap_time=90,\n    flap_setting_cause_pagp_flap_max_flaps=80,\n    flap_setting_cause_pagp_flap_time=90,\n    recovery_cause_all=True,\n    recovery_cause_arp_inspection=True,\n    recovery_cause_bpduguard=True,\n    recovery_cause_dhcp_rate_limit=True,\n    recovery_cause_dtp_flap=True,\n    recovery_cause_l2ptguard=True,\n    recovery_cause_link_flap=True,\n    recovery_cause_port_mode_failure=True,\n    recovery_cause_pppoe_ia_rate_limit=True,\n    recovery_cause_psecure_violation=True,\n    recovery_cause_psp=True,\n    recovery_cause_security_violation=True,\n    recovery_cause_udld=True,\n    recovery_interval=855)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.Errdisable(\"example\", new()\n    {\n        DetectCauseAll = true,\n        DetectCauseDhcpRateLimit = true,\n        DetectCauseDtpFlap = true,\n        DetectCauseL2ptguard = true,\n        DetectCauseLinkFlap = true,\n        DetectCausePppoeIaRateLimit = true,\n        FlapSettingCauseDtpFlapMaxFlaps = 80,\n        FlapSettingCauseDtpFlapTime = 90,\n        FlapSettingCauseLinkFlapMaxFlaps = 80,\n        FlapSettingCauseLinkFlapTime = 90,\n        FlapSettingCausePagpFlapMaxFlaps = 80,\n        FlapSettingCausePagpFlapTime = 90,\n        RecoveryCauseAll = true,\n        RecoveryCauseArpInspection = true,\n        RecoveryCauseBpduguard = true,\n        RecoveryCauseDhcpRateLimit = true,\n        RecoveryCauseDtpFlap = true,\n        RecoveryCauseL2ptguard = true,\n        RecoveryCauseLinkFlap = true,\n        RecoveryCausePortModeFailure = true,\n        RecoveryCausePppoeIaRateLimit = true,\n        RecoveryCausePsecureViolation = true,\n        RecoveryCausePsp = true,\n        RecoveryCauseSecurityViolation = true,\n        RecoveryCauseUdld = true,\n        RecoveryInterval = 855,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewErrdisable(ctx, \"example\", \u0026iosxe.ErrdisableArgs{\n\t\t\tDetectCauseAll:                   pulumi.Bool(true),\n\t\t\tDetectCauseDhcpRateLimit:         pulumi.Bool(true),\n\t\t\tDetectCauseDtpFlap:               pulumi.Bool(true),\n\t\t\tDetectCauseL2ptguard:             pulumi.Bool(true),\n\t\t\tDetectCauseLinkFlap:              pulumi.Bool(true),\n\t\t\tDetectCausePppoeIaRateLimit:      pulumi.Bool(true),\n\t\t\tFlapSettingCauseDtpFlapMaxFlaps:  pulumi.Int(80),\n\t\t\tFlapSettingCauseDtpFlapTime:      pulumi.Int(90),\n\t\t\tFlapSettingCauseLinkFlapMaxFlaps: pulumi.Int(80),\n\t\t\tFlapSettingCauseLinkFlapTime:     pulumi.Int(90),\n\t\t\tFlapSettingCausePagpFlapMaxFlaps: pulumi.Int(80),\n\t\t\tFlapSettingCausePagpFlapTime:     pulumi.Int(90),\n\t\t\tRecoveryCauseAll:                 pulumi.Bool(true),\n\t\t\tRecoveryCauseArpInspection:       pulumi.Bool(true),\n\t\t\tRecoveryCauseBpduguard:           pulumi.Bool(true),\n\t\t\tRecoveryCauseDhcpRateLimit:       pulumi.Bool(true),\n\t\t\tRecoveryCauseDtpFlap:             pulumi.Bool(true),\n\t\t\tRecoveryCauseL2ptguard:           pulumi.Bool(true),\n\t\t\tRecoveryCauseLinkFlap:            pulumi.Bool(true),\n\t\t\tRecoveryCausePortModeFailure:     pulumi.Bool(true),\n\t\t\tRecoveryCausePppoeIaRateLimit:    pulumi.Bool(true),\n\t\t\tRecoveryCausePsecureViolation:    pulumi.Bool(true),\n\t\t\tRecoveryCausePsp:                 pulumi.Bool(true),\n\t\t\tRecoveryCauseSecurityViolation:   pulumi.Bool(true),\n\t\t\tRecoveryCauseUdld:                pulumi.Bool(true),\n\t\t\tRecoveryInterval:                 pulumi.Int(855),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Errdisable;\nimport com.pulumi.iosxe.ErrdisableArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Errdisable(\"example\", ErrdisableArgs.builder()        \n            .detectCauseAll(true)\n            .detectCauseDhcpRateLimit(true)\n            .detectCauseDtpFlap(true)\n            .detectCauseL2ptguard(true)\n            .detectCauseLinkFlap(true)\n            .detectCausePppoeIaRateLimit(true)\n            .flapSettingCauseDtpFlapMaxFlaps(80)\n            .flapSettingCauseDtpFlapTime(90)\n            .flapSettingCauseLinkFlapMaxFlaps(80)\n            .flapSettingCauseLinkFlapTime(90)\n            .flapSettingCausePagpFlapMaxFlaps(80)\n            .flapSettingCausePagpFlapTime(90)\n            .recoveryCauseAll(true)\n            .recoveryCauseArpInspection(true)\n            .recoveryCauseBpduguard(true)\n            .recoveryCauseDhcpRateLimit(true)\n            .recoveryCauseDtpFlap(true)\n            .recoveryCauseL2ptguard(true)\n            .recoveryCauseLinkFlap(true)\n            .recoveryCausePortModeFailure(true)\n            .recoveryCausePppoeIaRateLimit(true)\n            .recoveryCausePsecureViolation(true)\n            .recoveryCausePsp(true)\n            .recoveryCauseSecurityViolation(true)\n            .recoveryCauseUdld(true)\n            .recoveryInterval(855)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Errdisable\n    properties:\n      detectCauseAll: true\n      detectCauseDhcpRateLimit: true\n      detectCauseDtpFlap: true\n      detectCauseL2ptguard: true\n      detectCauseLinkFlap: true\n      detectCausePppoeIaRateLimit: true\n      flapSettingCauseDtpFlapMaxFlaps: 80\n      flapSettingCauseDtpFlapTime: 90\n      flapSettingCauseLinkFlapMaxFlaps: 80\n      flapSettingCauseLinkFlapTime: 90\n      flapSettingCausePagpFlapMaxFlaps: 80\n      flapSettingCausePagpFlapTime: 90\n      recoveryCauseAll: true\n      recoveryCauseArpInspection: true\n      recoveryCauseBpduguard: true\n      recoveryCauseDhcpRateLimit: true\n      recoveryCauseDtpFlap: true\n      recoveryCauseL2ptguard: true\n      recoveryCauseLinkFlap: true\n      recoveryCausePortModeFailure: true\n      recoveryCausePppoeIaRateLimit: true\n      recoveryCausePsecureViolation: true\n      recoveryCausePsp: true\n      recoveryCauseSecurityViolation: true\n      recoveryCauseUdld: true\n      recoveryInterval: 855\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/errdisable:Errdisable example \"Cisco-IOS-XE-native:native/errdisable\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "detectCauseAll": {
                    "type": "boolean",
                    "description": "Enable error detection on all cases\n"
                },
                "detectCauseArpInspection": {
                    "type": "boolean",
                    "description": "Enable error detection for arp inspection\n"
                },
                "detectCauseBpduguard": {
                    "type": "boolean",
                    "description": "Enable error detection on bpdu-guard\n"
                },
                "detectCauseDhcpRateLimit": {
                    "type": "boolean",
                    "description": "Enable error detection on dhcp-rate-limit\n"
                },
                "detectCauseDtpFlap": {
                    "type": "boolean",
                    "description": "Enable error detection on dtp-flapping\n"
                },
                "detectCauseGbicInvalid": {
                    "type": "boolean",
                    "description": "Enable error detection on gbic-invalid\n"
                },
                "detectCauseInlinePower": {
                    "type": "boolean",
                    "description": "Enable error detection for inline-power\n"
                },
                "detectCauseL2ptguard": {
                    "type": "boolean",
                    "description": "Enable timer to recover from l2protocol-tunnel error disable state\n"
                },
                "detectCauseLinkFlap": {
                    "type": "boolean",
                    "description": "Enable error detection on linkstate-flapping\n"
                },
                "detectCauseLoopback": {
                    "type": "boolean",
                    "description": "Enable error detection on loopback\n"
                },
                "detectCauseLoopdetect": {
                    "type": "boolean",
                    "description": "Enable error detection on loop detect\n"
                },
                "detectCauseMlacpMinlink": {
                    "type": "boolean"
                },
                "detectCausePagpFlap": {
                    "type": "boolean",
                    "description": "Enable error detection on pagp-flapping\n"
                },
                "detectCausePppoeIaRateLimit": {
                    "type": "boolean",
                    "description": "Enable error detection on PPPoE IA rate-limit\n"
                },
                "detectCauseSecurityViolationShutdownVlan": {
                    "type": "boolean",
                    "description": "Shutdown vlan on 802.1x-guard violation\n"
                },
                "detectCauseSfpConfigMismatch": {
                    "type": "boolean",
                    "description": "Enable error detection on SFP config mismatch\n"
                },
                "detectCauseSmallFrame": {
                    "type": "boolean",
                    "description": "Enable error detection on small_frame\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "flapSettingCauseDtpFlapMaxFlaps": {
                    "type": "integer",
                    "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                },
                "flapSettingCauseDtpFlapTime": {
                    "type": "integer",
                    "description": "time period the flaps are counted - Range: `1`-`120`\n"
                },
                "flapSettingCauseLinkFlapMaxFlaps": {
                    "type": "integer",
                    "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                },
                "flapSettingCauseLinkFlapTime": {
                    "type": "integer",
                    "description": "time period the flaps are counted - Range: `1`-`120`\n"
                },
                "flapSettingCausePagpFlapMaxFlaps": {
                    "type": "integer",
                    "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                },
                "flapSettingCausePagpFlapTime": {
                    "type": "integer",
                    "description": "time period the flaps are counted - Range: `1`-`120`\n"
                },
                "recoveryCauseAll": {
                    "type": "boolean",
                    "description": "Enable timer to recover from all error causes\n"
                },
                "recoveryCauseArpInspection": {
                    "type": "boolean",
                    "description": "Enable timer to recover from arp inspection error disable state\n"
                },
                "recoveryCauseBpduguard": {
                    "type": "boolean",
                    "description": "Enable timer to recover from BPDU Guard error\n"
                },
                "recoveryCauseChannelMisconfig": {
                    "type": "boolean",
                    "description": "(STP) Enable timer to recover from channel misconfiguration error\n"
                },
                "recoveryCauseDhcpRateLimit": {
                    "type": "boolean",
                    "description": "Enable timer to recover from dhcp-rate-limit error\n"
                },
                "recoveryCauseDtpFlap": {
                    "type": "boolean",
                    "description": "Enable timer to recover from dtp-flap error\n"
                },
                "recoveryCauseGbicInvalid": {
                    "type": "boolean",
                    "description": "Enable timer to recover from invalid GBIC error\n"
                },
                "recoveryCauseInlinePower": {
                    "type": "boolean",
                    "description": "Enable timer to recover from inline-power error\n"
                },
                "recoveryCauseL2ptguard": {
                    "type": "boolean",
                    "description": "Enable timer to recover from l2protocol-tunnel error disable state\n"
                },
                "recoveryCauseLinkFlap": {
                    "type": "boolean",
                    "description": "Enable timer to recover from link-flap error\n"
                },
                "recoveryCauseLinkMonitorFailure": {
                    "type": "boolean"
                },
                "recoveryCauseLoopback": {
                    "type": "boolean",
                    "description": "Enable timer to recover from loopback error\n"
                },
                "recoveryCauseLoopdetect": {
                    "type": "boolean",
                    "description": "Enable timer to recover from loop detect error\n"
                },
                "recoveryCauseMacLimit": {
                    "type": "boolean",
                    "description": "Enable timer to recover from mac limit disable state\n"
                },
                "recoveryCauseMlacpMinlink": {
                    "type": "boolean"
                },
                "recoveryCausePagpFlap": {
                    "type": "boolean",
                    "description": "Enable timer to recover from pagp-flap error\n"
                },
                "recoveryCausePortModeFailure": {
                    "type": "boolean",
                    "description": "Enable timer to recover from port mode change failure\n"
                },
                "recoveryCausePppoeIaRateLimit": {
                    "type": "boolean",
                    "description": "Enable timer to recover from PPPoE IA rate-limit error\n"
                },
                "recoveryCausePsecureViolation": {
                    "type": "boolean",
                    "description": "Enable timer to recover from psecure violation error\n"
                },
                "recoveryCausePsp": {
                    "type": "boolean"
                },
                "recoveryCauseSecurityViolation": {
                    "type": "boolean",
                    "description": "Enable timer to recover from 802.1x violation error\n"
                },
                "recoveryCauseSfpConfigMismatch": {
                    "type": "boolean",
                    "description": "Enable timer to recover from SFP config mismatch error\n"
                },
                "recoveryCauseSmallFrame": {
                    "type": "boolean",
                    "description": "Enable timer to recover from small frame error\n"
                },
                "recoveryCauseStormControl": {
                    "type": "boolean",
                    "description": "Enable timer to recover from storm-control error\n"
                },
                "recoveryCauseUdld": {
                    "type": "boolean",
                    "description": "Enable timer to recover from udld error\n"
                },
                "recoveryCauseUnicastFlood": {
                    "type": "boolean"
                },
                "recoveryCauseVmps": {
                    "type": "boolean",
                    "description": "Enable timer to recover from vmps shutdown error\n"
                },
                "recoveryInterval": {
                    "type": "integer",
                    "description": "Error disable recovery timer value - Range: `30`-`86400`\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "detectCauseAll": {
                    "type": "boolean",
                    "description": "Enable error detection on all cases\n"
                },
                "detectCauseArpInspection": {
                    "type": "boolean",
                    "description": "Enable error detection for arp inspection\n"
                },
                "detectCauseBpduguard": {
                    "type": "boolean",
                    "description": "Enable error detection on bpdu-guard\n"
                },
                "detectCauseDhcpRateLimit": {
                    "type": "boolean",
                    "description": "Enable error detection on dhcp-rate-limit\n"
                },
                "detectCauseDtpFlap": {
                    "type": "boolean",
                    "description": "Enable error detection on dtp-flapping\n"
                },
                "detectCauseGbicInvalid": {
                    "type": "boolean",
                    "description": "Enable error detection on gbic-invalid\n"
                },
                "detectCauseInlinePower": {
                    "type": "boolean",
                    "description": "Enable error detection for inline-power\n"
                },
                "detectCauseL2ptguard": {
                    "type": "boolean",
                    "description": "Enable timer to recover from l2protocol-tunnel error disable state\n"
                },
                "detectCauseLinkFlap": {
                    "type": "boolean",
                    "description": "Enable error detection on linkstate-flapping\n"
                },
                "detectCauseLoopback": {
                    "type": "boolean",
                    "description": "Enable error detection on loopback\n"
                },
                "detectCauseLoopdetect": {
                    "type": "boolean",
                    "description": "Enable error detection on loop detect\n"
                },
                "detectCauseMlacpMinlink": {
                    "type": "boolean"
                },
                "detectCausePagpFlap": {
                    "type": "boolean",
                    "description": "Enable error detection on pagp-flapping\n"
                },
                "detectCausePppoeIaRateLimit": {
                    "type": "boolean",
                    "description": "Enable error detection on PPPoE IA rate-limit\n"
                },
                "detectCauseSecurityViolationShutdownVlan": {
                    "type": "boolean",
                    "description": "Shutdown vlan on 802.1x-guard violation\n"
                },
                "detectCauseSfpConfigMismatch": {
                    "type": "boolean",
                    "description": "Enable error detection on SFP config mismatch\n"
                },
                "detectCauseSmallFrame": {
                    "type": "boolean",
                    "description": "Enable error detection on small_frame\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "flapSettingCauseDtpFlapMaxFlaps": {
                    "type": "integer",
                    "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                },
                "flapSettingCauseDtpFlapTime": {
                    "type": "integer",
                    "description": "time period the flaps are counted - Range: `1`-`120`\n"
                },
                "flapSettingCauseLinkFlapMaxFlaps": {
                    "type": "integer",
                    "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                },
                "flapSettingCauseLinkFlapTime": {
                    "type": "integer",
                    "description": "time period the flaps are counted - Range: `1`-`120`\n"
                },
                "flapSettingCausePagpFlapMaxFlaps": {
                    "type": "integer",
                    "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                },
                "flapSettingCausePagpFlapTime": {
                    "type": "integer",
                    "description": "time period the flaps are counted - Range: `1`-`120`\n"
                },
                "recoveryCauseAll": {
                    "type": "boolean",
                    "description": "Enable timer to recover from all error causes\n"
                },
                "recoveryCauseArpInspection": {
                    "type": "boolean",
                    "description": "Enable timer to recover from arp inspection error disable state\n"
                },
                "recoveryCauseBpduguard": {
                    "type": "boolean",
                    "description": "Enable timer to recover from BPDU Guard error\n"
                },
                "recoveryCauseChannelMisconfig": {
                    "type": "boolean",
                    "description": "(STP) Enable timer to recover from channel misconfiguration error\n"
                },
                "recoveryCauseDhcpRateLimit": {
                    "type": "boolean",
                    "description": "Enable timer to recover from dhcp-rate-limit error\n"
                },
                "recoveryCauseDtpFlap": {
                    "type": "boolean",
                    "description": "Enable timer to recover from dtp-flap error\n"
                },
                "recoveryCauseGbicInvalid": {
                    "type": "boolean",
                    "description": "Enable timer to recover from invalid GBIC error\n"
                },
                "recoveryCauseInlinePower": {
                    "type": "boolean",
                    "description": "Enable timer to recover from inline-power error\n"
                },
                "recoveryCauseL2ptguard": {
                    "type": "boolean",
                    "description": "Enable timer to recover from l2protocol-tunnel error disable state\n"
                },
                "recoveryCauseLinkFlap": {
                    "type": "boolean",
                    "description": "Enable timer to recover from link-flap error\n"
                },
                "recoveryCauseLinkMonitorFailure": {
                    "type": "boolean"
                },
                "recoveryCauseLoopback": {
                    "type": "boolean",
                    "description": "Enable timer to recover from loopback error\n"
                },
                "recoveryCauseLoopdetect": {
                    "type": "boolean",
                    "description": "Enable timer to recover from loop detect error\n"
                },
                "recoveryCauseMacLimit": {
                    "type": "boolean",
                    "description": "Enable timer to recover from mac limit disable state\n"
                },
                "recoveryCauseMlacpMinlink": {
                    "type": "boolean"
                },
                "recoveryCausePagpFlap": {
                    "type": "boolean",
                    "description": "Enable timer to recover from pagp-flap error\n"
                },
                "recoveryCausePortModeFailure": {
                    "type": "boolean",
                    "description": "Enable timer to recover from port mode change failure\n"
                },
                "recoveryCausePppoeIaRateLimit": {
                    "type": "boolean",
                    "description": "Enable timer to recover from PPPoE IA rate-limit error\n"
                },
                "recoveryCausePsecureViolation": {
                    "type": "boolean",
                    "description": "Enable timer to recover from psecure violation error\n"
                },
                "recoveryCausePsp": {
                    "type": "boolean"
                },
                "recoveryCauseSecurityViolation": {
                    "type": "boolean",
                    "description": "Enable timer to recover from 802.1x violation error\n"
                },
                "recoveryCauseSfpConfigMismatch": {
                    "type": "boolean",
                    "description": "Enable timer to recover from SFP config mismatch error\n"
                },
                "recoveryCauseSmallFrame": {
                    "type": "boolean",
                    "description": "Enable timer to recover from small frame error\n"
                },
                "recoveryCauseStormControl": {
                    "type": "boolean",
                    "description": "Enable timer to recover from storm-control error\n"
                },
                "recoveryCauseUdld": {
                    "type": "boolean",
                    "description": "Enable timer to recover from udld error\n"
                },
                "recoveryCauseUnicastFlood": {
                    "type": "boolean"
                },
                "recoveryCauseVmps": {
                    "type": "boolean",
                    "description": "Enable timer to recover from vmps shutdown error\n"
                },
                "recoveryInterval": {
                    "type": "integer",
                    "description": "Error disable recovery timer value - Range: `30`-`86400`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Errdisable resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "detectCauseAll": {
                        "type": "boolean",
                        "description": "Enable error detection on all cases\n"
                    },
                    "detectCauseArpInspection": {
                        "type": "boolean",
                        "description": "Enable error detection for arp inspection\n"
                    },
                    "detectCauseBpduguard": {
                        "type": "boolean",
                        "description": "Enable error detection on bpdu-guard\n"
                    },
                    "detectCauseDhcpRateLimit": {
                        "type": "boolean",
                        "description": "Enable error detection on dhcp-rate-limit\n"
                    },
                    "detectCauseDtpFlap": {
                        "type": "boolean",
                        "description": "Enable error detection on dtp-flapping\n"
                    },
                    "detectCauseGbicInvalid": {
                        "type": "boolean",
                        "description": "Enable error detection on gbic-invalid\n"
                    },
                    "detectCauseInlinePower": {
                        "type": "boolean",
                        "description": "Enable error detection for inline-power\n"
                    },
                    "detectCauseL2ptguard": {
                        "type": "boolean",
                        "description": "Enable timer to recover from l2protocol-tunnel error disable state\n"
                    },
                    "detectCauseLinkFlap": {
                        "type": "boolean",
                        "description": "Enable error detection on linkstate-flapping\n"
                    },
                    "detectCauseLoopback": {
                        "type": "boolean",
                        "description": "Enable error detection on loopback\n"
                    },
                    "detectCauseLoopdetect": {
                        "type": "boolean",
                        "description": "Enable error detection on loop detect\n"
                    },
                    "detectCauseMlacpMinlink": {
                        "type": "boolean"
                    },
                    "detectCausePagpFlap": {
                        "type": "boolean",
                        "description": "Enable error detection on pagp-flapping\n"
                    },
                    "detectCausePppoeIaRateLimit": {
                        "type": "boolean",
                        "description": "Enable error detection on PPPoE IA rate-limit\n"
                    },
                    "detectCauseSecurityViolationShutdownVlan": {
                        "type": "boolean",
                        "description": "Shutdown vlan on 802.1x-guard violation\n"
                    },
                    "detectCauseSfpConfigMismatch": {
                        "type": "boolean",
                        "description": "Enable error detection on SFP config mismatch\n"
                    },
                    "detectCauseSmallFrame": {
                        "type": "boolean",
                        "description": "Enable error detection on small_frame\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "flapSettingCauseDtpFlapMaxFlaps": {
                        "type": "integer",
                        "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                    },
                    "flapSettingCauseDtpFlapTime": {
                        "type": "integer",
                        "description": "time period the flaps are counted - Range: `1`-`120`\n"
                    },
                    "flapSettingCauseLinkFlapMaxFlaps": {
                        "type": "integer",
                        "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                    },
                    "flapSettingCauseLinkFlapTime": {
                        "type": "integer",
                        "description": "time period the flaps are counted - Range: `1`-`120`\n"
                    },
                    "flapSettingCausePagpFlapMaxFlaps": {
                        "type": "integer",
                        "description": "maximum flaps allowed before setting to errdisable - Range: `1`-`100`\n"
                    },
                    "flapSettingCausePagpFlapTime": {
                        "type": "integer",
                        "description": "time period the flaps are counted - Range: `1`-`120`\n"
                    },
                    "recoveryCauseAll": {
                        "type": "boolean",
                        "description": "Enable timer to recover from all error causes\n"
                    },
                    "recoveryCauseArpInspection": {
                        "type": "boolean",
                        "description": "Enable timer to recover from arp inspection error disable state\n"
                    },
                    "recoveryCauseBpduguard": {
                        "type": "boolean",
                        "description": "Enable timer to recover from BPDU Guard error\n"
                    },
                    "recoveryCauseChannelMisconfig": {
                        "type": "boolean",
                        "description": "(STP) Enable timer to recover from channel misconfiguration error\n"
                    },
                    "recoveryCauseDhcpRateLimit": {
                        "type": "boolean",
                        "description": "Enable timer to recover from dhcp-rate-limit error\n"
                    },
                    "recoveryCauseDtpFlap": {
                        "type": "boolean",
                        "description": "Enable timer to recover from dtp-flap error\n"
                    },
                    "recoveryCauseGbicInvalid": {
                        "type": "boolean",
                        "description": "Enable timer to recover from invalid GBIC error\n"
                    },
                    "recoveryCauseInlinePower": {
                        "type": "boolean",
                        "description": "Enable timer to recover from inline-power error\n"
                    },
                    "recoveryCauseL2ptguard": {
                        "type": "boolean",
                        "description": "Enable timer to recover from l2protocol-tunnel error disable state\n"
                    },
                    "recoveryCauseLinkFlap": {
                        "type": "boolean",
                        "description": "Enable timer to recover from link-flap error\n"
                    },
                    "recoveryCauseLinkMonitorFailure": {
                        "type": "boolean"
                    },
                    "recoveryCauseLoopback": {
                        "type": "boolean",
                        "description": "Enable timer to recover from loopback error\n"
                    },
                    "recoveryCauseLoopdetect": {
                        "type": "boolean",
                        "description": "Enable timer to recover from loop detect error\n"
                    },
                    "recoveryCauseMacLimit": {
                        "type": "boolean",
                        "description": "Enable timer to recover from mac limit disable state\n"
                    },
                    "recoveryCauseMlacpMinlink": {
                        "type": "boolean"
                    },
                    "recoveryCausePagpFlap": {
                        "type": "boolean",
                        "description": "Enable timer to recover from pagp-flap error\n"
                    },
                    "recoveryCausePortModeFailure": {
                        "type": "boolean",
                        "description": "Enable timer to recover from port mode change failure\n"
                    },
                    "recoveryCausePppoeIaRateLimit": {
                        "type": "boolean",
                        "description": "Enable timer to recover from PPPoE IA rate-limit error\n"
                    },
                    "recoveryCausePsecureViolation": {
                        "type": "boolean",
                        "description": "Enable timer to recover from psecure violation error\n"
                    },
                    "recoveryCausePsp": {
                        "type": "boolean"
                    },
                    "recoveryCauseSecurityViolation": {
                        "type": "boolean",
                        "description": "Enable timer to recover from 802.1x violation error\n"
                    },
                    "recoveryCauseSfpConfigMismatch": {
                        "type": "boolean",
                        "description": "Enable timer to recover from SFP config mismatch error\n"
                    },
                    "recoveryCauseSmallFrame": {
                        "type": "boolean",
                        "description": "Enable timer to recover from small frame error\n"
                    },
                    "recoveryCauseStormControl": {
                        "type": "boolean",
                        "description": "Enable timer to recover from storm-control error\n"
                    },
                    "recoveryCauseUdld": {
                        "type": "boolean",
                        "description": "Enable timer to recover from udld error\n"
                    },
                    "recoveryCauseUnicastFlood": {
                        "type": "boolean"
                    },
                    "recoveryCauseVmps": {
                        "type": "boolean",
                        "description": "Enable timer to recover from vmps shutdown error\n"
                    },
                    "recoveryInterval": {
                        "type": "integer",
                        "description": "Error disable recovery timer value - Range: `30`-`86400`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/evpn:Evpn": {
            "description": "This resource can manage the EVPN configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.Evpn(\"example\", {\n    defaultGatewayAdvertise: true,\n    ipDuplicationLimit: 10,\n    ipDuplicationTime: 100,\n    loggingPeerState: true,\n    macDuplicationLimit: 10,\n    macDuplicationTime: 100,\n    replicationTypeIngress: false,\n    replicationTypeMp2mp: false,\n    replicationTypeP2mp: false,\n    replicationTypeStatic: true,\n    routeTargetAutoVni: true,\n    routerIdLoopback: 100,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.Evpn(\"example\",\n    default_gateway_advertise=True,\n    ip_duplication_limit=10,\n    ip_duplication_time=100,\n    logging_peer_state=True,\n    mac_duplication_limit=10,\n    mac_duplication_time=100,\n    replication_type_ingress=False,\n    replication_type_mp2mp=False,\n    replication_type_p2mp=False,\n    replication_type_static=True,\n    route_target_auto_vni=True,\n    router_id_loopback=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.Evpn(\"example\", new()\n    {\n        DefaultGatewayAdvertise = true,\n        IpDuplicationLimit = 10,\n        IpDuplicationTime = 100,\n        LoggingPeerState = true,\n        MacDuplicationLimit = 10,\n        MacDuplicationTime = 100,\n        ReplicationTypeIngress = false,\n        ReplicationTypeMp2mp = false,\n        ReplicationTypeP2mp = false,\n        ReplicationTypeStatic = true,\n        RouteTargetAutoVni = true,\n        RouterIdLoopback = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewEvpn(ctx, \"example\", \u0026iosxe.EvpnArgs{\n\t\t\tDefaultGatewayAdvertise: pulumi.Bool(true),\n\t\t\tIpDuplicationLimit:      pulumi.Int(10),\n\t\t\tIpDuplicationTime:       pulumi.Int(100),\n\t\t\tLoggingPeerState:        pulumi.Bool(true),\n\t\t\tMacDuplicationLimit:     pulumi.Int(10),\n\t\t\tMacDuplicationTime:      pulumi.Int(100),\n\t\t\tReplicationTypeIngress:  pulumi.Bool(false),\n\t\t\tReplicationTypeMp2mp:    pulumi.Bool(false),\n\t\t\tReplicationTypeP2mp:     pulumi.Bool(false),\n\t\t\tReplicationTypeStatic:   pulumi.Bool(true),\n\t\t\tRouteTargetAutoVni:      pulumi.Bool(true),\n\t\t\tRouterIdLoopback:        pulumi.Int(100),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Evpn;\nimport com.pulumi.iosxe.EvpnArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Evpn(\"example\", EvpnArgs.builder()        \n            .defaultGatewayAdvertise(true)\n            .ipDuplicationLimit(10)\n            .ipDuplicationTime(100)\n            .loggingPeerState(true)\n            .macDuplicationLimit(10)\n            .macDuplicationTime(100)\n            .replicationTypeIngress(false)\n            .replicationTypeMp2mp(false)\n            .replicationTypeP2mp(false)\n            .replicationTypeStatic(true)\n            .routeTargetAutoVni(true)\n            .routerIdLoopback(100)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Evpn\n    properties:\n      defaultGatewayAdvertise: true\n      ipDuplicationLimit: 10\n      ipDuplicationTime: 100\n      loggingPeerState: true\n      macDuplicationLimit: 10\n      macDuplicationTime: 100\n      replicationTypeIngress: false\n      replicationTypeMp2mp: false\n      replicationTypeP2mp: false\n      replicationTypeStatic: true\n      routeTargetAutoVni: true\n      routerIdLoopback: 100\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/evpn:Evpn example \"Cisco-IOS-XE-native:native/l2vpn/Cisco-IOS-XE-l2vpn:evpn_cont/evpn\"\n```\n\n ",
            "properties": {
                "defaultGatewayAdvertise": {
                    "type": "boolean",
                    "description": "Advertise Default Gateway MAC/IP routes\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipDuplicationLimit": {
                    "type": "integer",
                    "description": "Number of IP moves within specified time interval - Range: `2`-`1000`\n"
                },
                "ipDuplicationTime": {
                    "type": "integer",
                    "description": "IP duplication timer - Range: `10`-`36000`\n"
                },
                "loggingPeerState": {
                    "type": "boolean",
                    "description": "Peer state transition logging\n"
                },
                "macDuplicationLimit": {
                    "type": "integer",
                    "description": "Number of MAC moves within specified time interval - Range: `2`-`1000`\n"
                },
                "macDuplicationTime": {
                    "type": "integer",
                    "description": "MAC duplication timer - Range: `10`-`36000`\n"
                },
                "replicationTypeIngress": {
                    "type": "boolean",
                    "description": "Ingress replication\n"
                },
                "replicationTypeMp2mp": {
                    "type": "boolean",
                    "description": "mp2mp replication\n"
                },
                "replicationTypeP2mp": {
                    "type": "boolean",
                    "description": "p2mp replication\n"
                },
                "replicationTypeStatic": {
                    "type": "boolean",
                    "description": "Static replication\n"
                },
                "routeTargetAutoVni": {
                    "type": "boolean",
                    "description": "Set vni-based route-target\n"
                },
                "routerIdLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                }
            },
            "inputProperties": {
                "defaultGatewayAdvertise": {
                    "type": "boolean",
                    "description": "Advertise Default Gateway MAC/IP routes\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipDuplicationLimit": {
                    "type": "integer",
                    "description": "Number of IP moves within specified time interval - Range: `2`-`1000`\n"
                },
                "ipDuplicationTime": {
                    "type": "integer",
                    "description": "IP duplication timer - Range: `10`-`36000`\n"
                },
                "loggingPeerState": {
                    "type": "boolean",
                    "description": "Peer state transition logging\n"
                },
                "macDuplicationLimit": {
                    "type": "integer",
                    "description": "Number of MAC moves within specified time interval - Range: `2`-`1000`\n"
                },
                "macDuplicationTime": {
                    "type": "integer",
                    "description": "MAC duplication timer - Range: `10`-`36000`\n"
                },
                "replicationTypeIngress": {
                    "type": "boolean",
                    "description": "Ingress replication\n"
                },
                "replicationTypeMp2mp": {
                    "type": "boolean",
                    "description": "mp2mp replication\n"
                },
                "replicationTypeP2mp": {
                    "type": "boolean",
                    "description": "p2mp replication\n"
                },
                "replicationTypeStatic": {
                    "type": "boolean",
                    "description": "Static replication\n"
                },
                "routeTargetAutoVni": {
                    "type": "boolean",
                    "description": "Set vni-based route-target\n"
                },
                "routerIdLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Evpn resources.\n",
                "properties": {
                    "defaultGatewayAdvertise": {
                        "type": "boolean",
                        "description": "Advertise Default Gateway MAC/IP routes\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipDuplicationLimit": {
                        "type": "integer",
                        "description": "Number of IP moves within specified time interval - Range: `2`-`1000`\n"
                    },
                    "ipDuplicationTime": {
                        "type": "integer",
                        "description": "IP duplication timer - Range: `10`-`36000`\n"
                    },
                    "loggingPeerState": {
                        "type": "boolean",
                        "description": "Peer state transition logging\n"
                    },
                    "macDuplicationLimit": {
                        "type": "integer",
                        "description": "Number of MAC moves within specified time interval - Range: `2`-`1000`\n"
                    },
                    "macDuplicationTime": {
                        "type": "integer",
                        "description": "MAC duplication timer - Range: `10`-`36000`\n"
                    },
                    "replicationTypeIngress": {
                        "type": "boolean",
                        "description": "Ingress replication\n"
                    },
                    "replicationTypeMp2mp": {
                        "type": "boolean",
                        "description": "mp2mp replication\n"
                    },
                    "replicationTypeP2mp": {
                        "type": "boolean",
                        "description": "p2mp replication\n"
                    },
                    "replicationTypeStatic": {
                        "type": "boolean",
                        "description": "Static replication\n"
                    },
                    "routeTargetAutoVni": {
                        "type": "boolean",
                        "description": "Set vni-based route-target\n"
                    },
                    "routerIdLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/evpnInstance:EvpnInstance": {
            "description": "This resource can manage the EVPN Instance configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.EvpnInstance(\"example\", {\n    evpnInstanceNum: 10,\n    vlanBasedAutoRouteTarget: false,\n    vlanBasedDefaultGatewayAdvertise: \"enable\",\n    vlanBasedEncapsulation: \"vxlan\",\n    vlanBasedIpLocalLearningDisable: false,\n    vlanBasedIpLocalLearningEnable: true,\n    vlanBasedRd: \"10:10\",\n    vlanBasedReOriginateRouteType5: true,\n    vlanBasedReplicationTypeIngress: false,\n    vlanBasedReplicationTypeMp2mp: false,\n    vlanBasedReplicationTypeP2mp: false,\n    vlanBasedReplicationTypeStatic: true,\n    vlanBasedRouteTarget: \"10:10\",\n    vlanBasedRouteTargetBoth: \"10:10\",\n    vlanBasedRouteTargetExport: \"10:10\",\n    vlanBasedRouteTargetImport: \"10:10\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.EvpnInstance(\"example\",\n    evpn_instance_num=10,\n    vlan_based_auto_route_target=False,\n    vlan_based_default_gateway_advertise=\"enable\",\n    vlan_based_encapsulation=\"vxlan\",\n    vlan_based_ip_local_learning_disable=False,\n    vlan_based_ip_local_learning_enable=True,\n    vlan_based_rd=\"10:10\",\n    vlan_based_re_originate_route_type5=True,\n    vlan_based_replication_type_ingress=False,\n    vlan_based_replication_type_mp2mp=False,\n    vlan_based_replication_type_p2mp=False,\n    vlan_based_replication_type_static=True,\n    vlan_based_route_target=\"10:10\",\n    vlan_based_route_target_both=\"10:10\",\n    vlan_based_route_target_export=\"10:10\",\n    vlan_based_route_target_import=\"10:10\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.EvpnInstance(\"example\", new()\n    {\n        EvpnInstanceNum = 10,\n        VlanBasedAutoRouteTarget = false,\n        VlanBasedDefaultGatewayAdvertise = \"enable\",\n        VlanBasedEncapsulation = \"vxlan\",\n        VlanBasedIpLocalLearningDisable = false,\n        VlanBasedIpLocalLearningEnable = true,\n        VlanBasedRd = \"10:10\",\n        VlanBasedReOriginateRouteType5 = true,\n        VlanBasedReplicationTypeIngress = false,\n        VlanBasedReplicationTypeMp2mp = false,\n        VlanBasedReplicationTypeP2mp = false,\n        VlanBasedReplicationTypeStatic = true,\n        VlanBasedRouteTarget = \"10:10\",\n        VlanBasedRouteTargetBoth = \"10:10\",\n        VlanBasedRouteTargetExport = \"10:10\",\n        VlanBasedRouteTargetImport = \"10:10\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewEvpnInstance(ctx, \"example\", \u0026iosxe.EvpnInstanceArgs{\n\t\t\tEvpnInstanceNum:                  pulumi.Int(10),\n\t\t\tVlanBasedAutoRouteTarget:         pulumi.Bool(false),\n\t\t\tVlanBasedDefaultGatewayAdvertise: pulumi.String(\"enable\"),\n\t\t\tVlanBasedEncapsulation:           pulumi.String(\"vxlan\"),\n\t\t\tVlanBasedIpLocalLearningDisable:  pulumi.Bool(false),\n\t\t\tVlanBasedIpLocalLearningEnable:   pulumi.Bool(true),\n\t\t\tVlanBasedRd:                      pulumi.String(\"10:10\"),\n\t\t\tVlanBasedReOriginateRouteType5:   pulumi.Bool(true),\n\t\t\tVlanBasedReplicationTypeIngress:  pulumi.Bool(false),\n\t\t\tVlanBasedReplicationTypeMp2mp:    pulumi.Bool(false),\n\t\t\tVlanBasedReplicationTypeP2mp:     pulumi.Bool(false),\n\t\t\tVlanBasedReplicationTypeStatic:   pulumi.Bool(true),\n\t\t\tVlanBasedRouteTarget:             pulumi.String(\"10:10\"),\n\t\t\tVlanBasedRouteTargetBoth:         pulumi.String(\"10:10\"),\n\t\t\tVlanBasedRouteTargetExport:       pulumi.String(\"10:10\"),\n\t\t\tVlanBasedRouteTargetImport:       pulumi.String(\"10:10\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.EvpnInstance;\nimport com.pulumi.iosxe.EvpnInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new EvpnInstance(\"example\", EvpnInstanceArgs.builder()        \n            .evpnInstanceNum(10)\n            .vlanBasedAutoRouteTarget(false)\n            .vlanBasedDefaultGatewayAdvertise(\"enable\")\n            .vlanBasedEncapsulation(\"vxlan\")\n            .vlanBasedIpLocalLearningDisable(false)\n            .vlanBasedIpLocalLearningEnable(true)\n            .vlanBasedRd(\"10:10\")\n            .vlanBasedReOriginateRouteType5(true)\n            .vlanBasedReplicationTypeIngress(false)\n            .vlanBasedReplicationTypeMp2mp(false)\n            .vlanBasedReplicationTypeP2mp(false)\n            .vlanBasedReplicationTypeStatic(true)\n            .vlanBasedRouteTarget(\"10:10\")\n            .vlanBasedRouteTargetBoth(\"10:10\")\n            .vlanBasedRouteTargetExport(\"10:10\")\n            .vlanBasedRouteTargetImport(\"10:10\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:EvpnInstance\n    properties:\n      evpnInstanceNum: 10\n      vlanBasedAutoRouteTarget: false\n      vlanBasedDefaultGatewayAdvertise: enable\n      vlanBasedEncapsulation: vxlan\n      vlanBasedIpLocalLearningDisable: false\n      vlanBasedIpLocalLearningEnable: true\n      vlanBasedRd: 10:10\n      vlanBasedReOriginateRouteType5: true\n      vlanBasedReplicationTypeIngress: false\n      vlanBasedReplicationTypeMp2mp: false\n      vlanBasedReplicationTypeP2mp: false\n      vlanBasedReplicationTypeStatic: true\n      vlanBasedRouteTarget: 10:10\n      vlanBasedRouteTargetBoth: 10:10\n      vlanBasedRouteTargetExport: 10:10\n      vlanBasedRouteTargetImport: 10:10\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/evpnInstance:EvpnInstance example \"Cisco-IOS-XE-native:native/l2vpn/Cisco-IOS-XE-l2vpn:evpn_cont/evpn-instance/evpn/instance/instance=10\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "evpnInstanceNum": {
                    "type": "integer",
                    "description": "evpn instance number - Range: `1`-`65535`\n"
                },
                "vlanBasedAutoRouteTarget": {
                    "type": "boolean",
                    "description": "Automatically set a route-target\n"
                },
                "vlanBasedDefaultGatewayAdvertise": {
                    "type": "string",
                    "description": "Advertise Default Gateway MAC/IP routes - Choices: `disable`, `enable`\n"
                },
                "vlanBasedEncapsulation": {
                    "type": "string",
                    "description": "Data encapsulation method - Choices: `mpls`, `vxlan`\n"
                },
                "vlanBasedIpLocalLearningDisable": {
                    "type": "boolean",
                    "description": "Disable IP local learning from dataplane\n"
                },
                "vlanBasedIpLocalLearningEnable": {
                    "type": "boolean",
                    "description": "Enable IP local learning from dataplane\n"
                },
                "vlanBasedRd": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn\n"
                },
                "vlanBasedReOriginateRouteType5": {
                    "type": "boolean",
                    "description": "Re-originate route-type 5\n"
                },
                "vlanBasedReplicationTypeIngress": {
                    "type": "boolean",
                    "description": "Ingress replication\n"
                },
                "vlanBasedReplicationTypeMp2mp": {
                    "type": "boolean",
                    "description": "mp2mp replication\n"
                },
                "vlanBasedReplicationTypeP2mp": {
                    "type": "boolean",
                    "description": "p2mp replication\n"
                },
                "vlanBasedReplicationTypeStatic": {
                    "type": "boolean",
                    "description": "Static replication\n"
                },
                "vlanBasedRouteTarget": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn\n"
                },
                "vlanBasedRouteTargetBoth": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn\n"
                },
                "vlanBasedRouteTargetExport": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)\n"
                },
                "vlanBasedRouteTargetImport": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)\n"
                }
            },
            "required": [
                "evpnInstanceNum"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "evpnInstanceNum": {
                    "type": "integer",
                    "description": "evpn instance number - Range: `1`-`65535`\n"
                },
                "vlanBasedAutoRouteTarget": {
                    "type": "boolean",
                    "description": "Automatically set a route-target\n"
                },
                "vlanBasedDefaultGatewayAdvertise": {
                    "type": "string",
                    "description": "Advertise Default Gateway MAC/IP routes - Choices: `disable`, `enable`\n"
                },
                "vlanBasedEncapsulation": {
                    "type": "string",
                    "description": "Data encapsulation method - Choices: `mpls`, `vxlan`\n"
                },
                "vlanBasedIpLocalLearningDisable": {
                    "type": "boolean",
                    "description": "Disable IP local learning from dataplane\n"
                },
                "vlanBasedIpLocalLearningEnable": {
                    "type": "boolean",
                    "description": "Enable IP local learning from dataplane\n"
                },
                "vlanBasedRd": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn\n"
                },
                "vlanBasedReOriginateRouteType5": {
                    "type": "boolean",
                    "description": "Re-originate route-type 5\n"
                },
                "vlanBasedReplicationTypeIngress": {
                    "type": "boolean",
                    "description": "Ingress replication\n"
                },
                "vlanBasedReplicationTypeMp2mp": {
                    "type": "boolean",
                    "description": "mp2mp replication\n"
                },
                "vlanBasedReplicationTypeP2mp": {
                    "type": "boolean",
                    "description": "p2mp replication\n"
                },
                "vlanBasedReplicationTypeStatic": {
                    "type": "boolean",
                    "description": "Static replication\n"
                },
                "vlanBasedRouteTarget": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn\n"
                },
                "vlanBasedRouteTargetBoth": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn\n"
                },
                "vlanBasedRouteTargetExport": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)\n"
                },
                "vlanBasedRouteTargetImport": {
                    "type": "string",
                    "description": "ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)\n"
                }
            },
            "requiredInputs": [
                "evpnInstanceNum"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EvpnInstance resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "evpnInstanceNum": {
                        "type": "integer",
                        "description": "evpn instance number - Range: `1`-`65535`\n"
                    },
                    "vlanBasedAutoRouteTarget": {
                        "type": "boolean",
                        "description": "Automatically set a route-target\n"
                    },
                    "vlanBasedDefaultGatewayAdvertise": {
                        "type": "string",
                        "description": "Advertise Default Gateway MAC/IP routes - Choices: `disable`, `enable`\n"
                    },
                    "vlanBasedEncapsulation": {
                        "type": "string",
                        "description": "Data encapsulation method - Choices: `mpls`, `vxlan`\n"
                    },
                    "vlanBasedIpLocalLearningDisable": {
                        "type": "boolean",
                        "description": "Disable IP local learning from dataplane\n"
                    },
                    "vlanBasedIpLocalLearningEnable": {
                        "type": "boolean",
                        "description": "Enable IP local learning from dataplane\n"
                    },
                    "vlanBasedRd": {
                        "type": "string",
                        "description": "ASN:nn or IP-address:nn\n"
                    },
                    "vlanBasedReOriginateRouteType5": {
                        "type": "boolean",
                        "description": "Re-originate route-type 5\n"
                    },
                    "vlanBasedReplicationTypeIngress": {
                        "type": "boolean",
                        "description": "Ingress replication\n"
                    },
                    "vlanBasedReplicationTypeMp2mp": {
                        "type": "boolean",
                        "description": "mp2mp replication\n"
                    },
                    "vlanBasedReplicationTypeP2mp": {
                        "type": "boolean",
                        "description": "p2mp replication\n"
                    },
                    "vlanBasedReplicationTypeStatic": {
                        "type": "boolean",
                        "description": "Static replication\n"
                    },
                    "vlanBasedRouteTarget": {
                        "type": "string",
                        "description": "ASN:nn or IP-address:nn\n"
                    },
                    "vlanBasedRouteTargetBoth": {
                        "type": "string",
                        "description": "ASN:nn or IP-address:nn\n"
                    },
                    "vlanBasedRouteTargetExport": {
                        "type": "string",
                        "description": "ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)\n"
                    },
                    "vlanBasedRouteTargetImport": {
                        "type": "string",
                        "description": "ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/interfaceEthernet:InterfaceEthernet": {
            "description": "This resource can manage the Interface Ethernet configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.InterfaceEthernet;\nimport com.pulumi.iosxe.InterfaceEthernetArgs;\nimport com.pulumi.iosxe.inputs.InterfaceEthernetHelperAddressArgs;\nimport com.pulumi.iosxe.inputs.InterfaceEthernetIpv6AddressArgs;\nimport com.pulumi.iosxe.inputs.InterfaceEthernetIpv6LinkLocalAddressArgs;\nimport com.pulumi.iosxe.inputs.InterfaceEthernetSourceTemplateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new InterfaceEthernet(\"example\", InterfaceEthernetArgs.builder()        \n            .arpTimeout(300)\n            .description(\"My Interface Description\")\n            .helperAddresses(InterfaceEthernetHelperAddressArgs.builder()\n                .address(\"10.10.10.10\")\n                .global(false)\n                .vrf(\"VRF1\")\n                .build())\n            .ipAccessGroupIn(\"1\")\n            .ipAccessGroupInEnable(true)\n            .ipAccessGroupOut(\"1\")\n            .ipAccessGroupOutEnable(true)\n            .ipDhcpRelaySourceInterface(\"Loopback100\")\n            .ipProxyArp(false)\n            .ipRedirects(false)\n            .ipUnreachables(false)\n            .ipv4Address(\"15.1.1.1\")\n            .ipv4AddressMask(\"255.255.255.252\")\n            .ipv6AddressDhcp(true)\n            .ipv6Addresses(InterfaceEthernetIpv6AddressArgs.builder()\n                .eui_64(true)\n                .prefix(\"2001:DB8::/32\")\n                .build())\n            .ipv6Enable(true)\n            .ipv6LinkLocalAddresses(InterfaceEthernetIpv6LinkLocalAddressArgs.builder()\n                .address(\"fe80::9656:d028:8652:66b6\")\n                .link_local(true)\n                .build())\n            .ipv6Mtu(1300)\n            .ipv6NdRaSuppressAll(true)\n            .shutdown(false)\n            .sourceTemplates(InterfaceEthernetSourceTemplateArgs.builder()\n                .merge(false)\n                .template_name(\"TEMP1\")\n                .build())\n            .spanningTreeLinkType(\"point-to-point\")\n            .type(\"GigabitEthernet\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:InterfaceEthernet\n    properties:\n      arpTimeout: 300\n      description: My Interface Description\n      helperAddresses:\n        - address: 10.10.10.10\n          global: false\n          vrf: VRF1\n      ipAccessGroupIn: '1'\n      ipAccessGroupInEnable: true\n      ipAccessGroupOut: '1'\n      ipAccessGroupOutEnable: true\n      ipDhcpRelaySourceInterface: Loopback100\n      ipProxyArp: false\n      ipRedirects: false\n      ipUnreachables: false\n      ipv4Address: 15.1.1.1\n      ipv4AddressMask: 255.255.255.252\n      ipv6AddressDhcp: true\n      ipv6Addresses:\n        - eui_64: true\n          prefix: 2001:DB8::/32\n      ipv6Enable: true\n      ipv6LinkLocalAddresses:\n        - address: fe80::9656:d028:8652:66b6\n          link_local: true\n      ipv6Mtu: 1300\n      ipv6NdRaSuppressAll: true\n      shutdown: false\n      sourceTemplates:\n        - merge: false\n          template_name: TEMP1\n      spanningTreeLinkType: point-to-point\n      type: GigabitEthernet\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/interfaceEthernet:InterfaceEthernet example \"Cisco-IOS-XE-native:native/interface/GigabitEthernet=3\"\n```\n\n ",
            "properties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "autoQosClassify": {
                    "type": "boolean",
                    "description": "Configure classification for untrusted devices\n"
                },
                "autoQosClassifyPolice": {
                    "type": "boolean",
                    "description": "Configure QoS policing for untrusted devices\n"
                },
                "autoQosTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "autoQosTrustCos": {
                    "type": "boolean",
                    "description": "Trust the CoS marking\n"
                },
                "autoQosTrustDscp": {
                    "type": "boolean",
                    "description": "Trust the DSCP marking\n"
                },
                "autoQosVideoCts": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                },
                "autoQosVideoIpCamera": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                },
                "autoQosVideoMediaPlayer": {
                    "type": "boolean",
                    "description": "Trust the Qos marking of the Cisco Media Player\n"
                },
                "autoQosVoip": {
                    "type": "boolean",
                    "description": "Configure AutoQoS for VoIP\n"
                },
                "autoQosVoipCiscoPhone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP Phone\n"
                },
                "autoQosVoipCiscoSoftphone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                },
                "autoQosVoipTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "channelGroupMode": {
                    "type": "string",
                    "description": "Etherchannel Mode of the interface - Choices: `active`, `auto`, `desirable`, `on`, `passive`\n"
                },
                "channelGroupNumber": {
                    "type": "integer",
                    "description": "- Range: `1`-`512`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encapsulationDot1qVlanId": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceEthernetHelperAddress:InterfaceEthernetHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipArpInspectionLimitRate": {
                    "type": "integer",
                    "description": "Rate Limit - Range: `0`-`4294967295`\n"
                },
                "ipArpInspectionTrust": {
                    "type": "boolean",
                    "description": "Configure Trust state\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipDhcpSnoopingTrust": {
                    "type": "boolean",
                    "description": "DHCP Snooping trust config\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceEthernetIpv6Address:InterfaceEthernetIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceEthernetIpv6LinkLocalAddress:InterfaceEthernetIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "mediaType": {
                    "type": "string",
                    "description": "Media type - Choices: `auto-select`, `rj45`, `sfp`\n"
                },
                "name": {
                    "type": "string"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "sourceTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceEthernetSourceTemplate:InterfaceEthernetSourceTemplate"
                    }
                },
                "spanningTreeGuard": {
                    "type": "string",
                    "description": "Change an interface's spanning tree guard mode - Choices: `loop`, `none`, `root`\n"
                },
                "spanningTreeLinkType": {
                    "type": "string",
                    "description": "Specify a link type for spanning tree tree protocol use - Choices: `point-to-point`, `shared`\n"
                },
                "spanningTreePortfastTrunk": {
                    "type": "boolean",
                    "description": "Enable portfast on the interface even in trunk mode\n"
                },
                "switchport": {
                    "type": "boolean"
                },
                "trustDevice": {
                    "type": "string",
                    "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "Enable IP processing without an explicit address\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "autoQosClassify": {
                    "type": "boolean",
                    "description": "Configure classification for untrusted devices\n"
                },
                "autoQosClassifyPolice": {
                    "type": "boolean",
                    "description": "Configure QoS policing for untrusted devices\n"
                },
                "autoQosTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "autoQosTrustCos": {
                    "type": "boolean",
                    "description": "Trust the CoS marking\n"
                },
                "autoQosTrustDscp": {
                    "type": "boolean",
                    "description": "Trust the DSCP marking\n"
                },
                "autoQosVideoCts": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                },
                "autoQosVideoIpCamera": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                },
                "autoQosVideoMediaPlayer": {
                    "type": "boolean",
                    "description": "Trust the Qos marking of the Cisco Media Player\n"
                },
                "autoQosVoip": {
                    "type": "boolean",
                    "description": "Configure AutoQoS for VoIP\n"
                },
                "autoQosVoipCiscoPhone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP Phone\n"
                },
                "autoQosVoipCiscoSoftphone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                },
                "autoQosVoipTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "channelGroupMode": {
                    "type": "string",
                    "description": "Etherchannel Mode of the interface - Choices: `active`, `auto`, `desirable`, `on`, `passive`\n"
                },
                "channelGroupNumber": {
                    "type": "integer",
                    "description": "- Range: `1`-`512`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encapsulationDot1qVlanId": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceEthernetHelperAddress:InterfaceEthernetHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipArpInspectionLimitRate": {
                    "type": "integer",
                    "description": "Rate Limit - Range: `0`-`4294967295`\n"
                },
                "ipArpInspectionTrust": {
                    "type": "boolean",
                    "description": "Configure Trust state\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipDhcpSnoopingTrust": {
                    "type": "boolean",
                    "description": "DHCP Snooping trust config\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceEthernetIpv6Address:InterfaceEthernetIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceEthernetIpv6LinkLocalAddress:InterfaceEthernetIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "mediaType": {
                    "type": "string",
                    "description": "Media type - Choices: `auto-select`, `rj45`, `sfp`\n"
                },
                "name": {
                    "type": "string"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "sourceTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceEthernetSourceTemplate:InterfaceEthernetSourceTemplate"
                    }
                },
                "spanningTreeGuard": {
                    "type": "string",
                    "description": "Change an interface's spanning tree guard mode - Choices: `loop`, `none`, `root`\n"
                },
                "spanningTreeLinkType": {
                    "type": "string",
                    "description": "Specify a link type for spanning tree tree protocol use - Choices: `point-to-point`, `shared`\n"
                },
                "spanningTreePortfastTrunk": {
                    "type": "boolean",
                    "description": "Enable portfast on the interface even in trunk mode\n"
                },
                "switchport": {
                    "type": "boolean"
                },
                "trustDevice": {
                    "type": "string",
                    "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "Enable IP processing without an explicit address\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceEthernet resources.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer",
                        "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                    },
                    "autoQosClassify": {
                        "type": "boolean",
                        "description": "Configure classification for untrusted devices\n"
                    },
                    "autoQosClassifyPolice": {
                        "type": "boolean",
                        "description": "Configure QoS policing for untrusted devices\n"
                    },
                    "autoQosTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "autoQosTrustCos": {
                        "type": "boolean",
                        "description": "Trust the CoS marking\n"
                    },
                    "autoQosTrustDscp": {
                        "type": "boolean",
                        "description": "Trust the DSCP marking\n"
                    },
                    "autoQosVideoCts": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                    },
                    "autoQosVideoIpCamera": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                    },
                    "autoQosVideoMediaPlayer": {
                        "type": "boolean",
                        "description": "Trust the Qos marking of the Cisco Media Player\n"
                    },
                    "autoQosVoip": {
                        "type": "boolean",
                        "description": "Configure AutoQoS for VoIP\n"
                    },
                    "autoQosVoipCiscoPhone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP Phone\n"
                    },
                    "autoQosVoipCiscoSoftphone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                    },
                    "autoQosVoipTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "bfdEcho": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "bfdEnable": {
                        "type": "boolean",
                        "description": "Enable BFD under the interface\n"
                    },
                    "bfdInterval": {
                        "type": "integer",
                        "description": "- Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "bfdLocalAddress": {
                        "type": "string",
                        "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                    },
                    "bfdTemplate": {
                        "type": "string",
                        "description": "BFD template\n"
                    },
                    "channelGroupMode": {
                        "type": "string",
                        "description": "Etherchannel Mode of the interface - Choices: `active`, `auto`, `desirable`, `on`, `passive`\n"
                    },
                    "channelGroupNumber": {
                        "type": "integer",
                        "description": "- Range: `1`-`512`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encapsulationDot1qVlanId": {
                        "type": "integer",
                        "description": "- Range: `1`-`4094`\n"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceEthernetHelperAddress:InterfaceEthernetHelperAddress"
                        },
                        "description": "Specify a destination address for UDP broadcasts\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipArpInspectionLimitRate": {
                        "type": "integer",
                        "description": "Rate Limit - Range: `0`-`4294967295`\n"
                    },
                    "ipArpInspectionTrust": {
                        "type": "boolean",
                        "description": "Configure Trust state\n"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string",
                        "description": "Set source interface for relayed messages\n"
                    },
                    "ipDhcpSnoopingTrust": {
                        "type": "boolean",
                        "description": "DHCP Snooping trust config\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceEthernetIpv6Address:InterfaceEthernetIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceEthernetIpv6LinkLocalAddress:InterfaceEthernetIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "mediaType": {
                        "type": "string",
                        "description": "Media type - Choices: `auto-select`, `rj45`, `sfp`\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "sourceTemplates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceEthernetSourceTemplate:InterfaceEthernetSourceTemplate"
                        }
                    },
                    "spanningTreeGuard": {
                        "type": "string",
                        "description": "Change an interface's spanning tree guard mode - Choices: `loop`, `none`, `root`\n"
                    },
                    "spanningTreeLinkType": {
                        "type": "string",
                        "description": "Specify a link type for spanning tree tree protocol use - Choices: `point-to-point`, `shared`\n"
                    },
                    "spanningTreePortfastTrunk": {
                        "type": "boolean",
                        "description": "Enable portfast on the interface even in trunk mode\n"
                    },
                    "switchport": {
                        "type": "boolean"
                    },
                    "trustDevice": {
                        "type": "string",
                        "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`\n"
                    },
                    "unnumbered": {
                        "type": "string",
                        "description": "Enable IP processing without an explicit address\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/interfaceLoopback:InterfaceLoopback": {
            "description": "This resource can manage the Interface Loopback configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.InterfaceLoopback;\nimport com.pulumi.iosxe.InterfaceLoopbackArgs;\nimport com.pulumi.iosxe.inputs.InterfaceLoopbackIpv6AddressArgs;\nimport com.pulumi.iosxe.inputs.InterfaceLoopbackIpv6LinkLocalAddressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new InterfaceLoopback(\"example\", InterfaceLoopbackArgs.builder()        \n            .arpTimeout(2147)\n            .description(\"My Interface Description\")\n            .ipAccessGroupIn(\"1\")\n            .ipAccessGroupInEnable(true)\n            .ipAccessGroupOut(\"1\")\n            .ipAccessGroupOutEnable(true)\n            .ipProxyArp(false)\n            .ipRedirects(false)\n            .ipUnreachables(false)\n            .ipv4Address(\"200.1.1.1\")\n            .ipv4AddressMask(\"255.255.255.255\")\n            .ipv6AddressDhcp(true)\n            .ipv6Addresses(InterfaceLoopbackIpv6AddressArgs.builder()\n                .eui_64(true)\n                .prefix(\"2002:DB8::/32\")\n                .build())\n            .ipv6Enable(true)\n            .ipv6LinkLocalAddresses(InterfaceLoopbackIpv6LinkLocalAddressArgs.builder()\n                .address(\"fe80::9656:d028:8652:66b7\")\n                .link_local(true)\n                .build())\n            .ipv6Mtu(1300)\n            .shutdown(false)\n            .vrfForwarding(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:InterfaceLoopback\n    properties:\n      arpTimeout: 2147\n      description: My Interface Description\n      ipAccessGroupIn: '1'\n      ipAccessGroupInEnable: true\n      ipAccessGroupOut: '1'\n      ipAccessGroupOutEnable: true\n      ipProxyArp: false\n      ipRedirects: false\n      ipUnreachables: false\n      ipv4Address: 200.1.1.1\n      ipv4AddressMask: 255.255.255.255\n      ipv6AddressDhcp: true\n      ipv6Addresses:\n        - eui_64: true\n          prefix: 2002:DB8::/32\n      ipv6Enable: true\n      ipv6LinkLocalAddresses:\n        - address: fe80::9656:d028:8652:66b7\n          link_local: true\n      ipv6Mtu: 1300\n      shutdown: false\n      vrfForwarding: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/interfaceLoopback:InterfaceLoopback example \"Cisco-IOS-XE-native:native/interface/Loopback=100\"\n```\n\n ",
            "properties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceLoopbackIpv6Address:InterfaceLoopbackIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceLoopbackIpv6LinkLocalAddress:InterfaceLoopbackIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `0`-`2147483647`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceLoopbackIpv6Address:InterfaceLoopbackIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceLoopbackIpv6LinkLocalAddress:InterfaceLoopbackIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `0`-`2147483647`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceLoopback resources.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer",
                        "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceLoopbackIpv6Address:InterfaceLoopbackIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceLoopbackIpv6LinkLocalAddress:InterfaceLoopbackIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "name": {
                        "type": "integer",
                        "description": "- Range: `0`-`2147483647`\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/interfaceMpls:InterfaceMpls": {
            "description": "This resource can manage the Interface MPLS configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.InterfaceMpls(\"example\", {\n    ip: true,\n    mtu: \"1200\",\n    type: \"Loopback\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.InterfaceMpls(\"example\",\n    ip=True,\n    mtu=\"1200\",\n    type=\"Loopback\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.InterfaceMpls(\"example\", new()\n    {\n        Ip = true,\n        Mtu = \"1200\",\n        Type = \"Loopback\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewInterfaceMpls(ctx, \"example\", \u0026iosxe.InterfaceMplsArgs{\n\t\t\tIp:   pulumi.Bool(true),\n\t\t\tMtu:  pulumi.String(\"1200\"),\n\t\t\tType: pulumi.String(\"Loopback\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.InterfaceMpls;\nimport com.pulumi.iosxe.InterfaceMplsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new InterfaceMpls(\"example\", InterfaceMplsArgs.builder()        \n            .ip(true)\n            .mtu(\"1200\")\n            .type(\"Loopback\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:InterfaceMpls\n    properties:\n      ip: true\n      mtu: '1200'\n      type: Loopback\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/interfaceMpls:InterfaceMpls example \"Cisco-IOS-XE-native:native/interface/Loopback=1/mpls\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "boolean",
                    "description": "Configure dynamic MPLS forwarding for IP\n"
                },
                "mtu": {
                    "type": "string",
                    "description": "Set MPLS Maximum Transmission Unit\n"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ip": {
                    "type": "boolean",
                    "description": "Configure dynamic MPLS forwarding for IP\n"
                },
                "mtu": {
                    "type": "string",
                    "description": "Set MPLS Maximum Transmission Unit\n"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceMpls resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ip": {
                        "type": "boolean",
                        "description": "Configure dynamic MPLS forwarding for IP\n"
                    },
                    "mtu": {
                        "type": "string",
                        "description": "Set MPLS Maximum Transmission Unit\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/interfaceNve:InterfaceNve": {
            "description": "This resource can manage the Interface NVE configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.InterfaceNve;\nimport com.pulumi.iosxe.InterfaceNveArgs;\nimport com.pulumi.iosxe.inputs.InterfaceNveVniArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new InterfaceNve(\"example\", InterfaceNveArgs.builder()        \n            .description(\"My Interface Description\")\n            .hostReachabilityProtocolBgp(true)\n            .shutdown(false)\n            .sourceInterfaceLoopback(100)\n            .vnis(InterfaceNveVniArgs.builder()\n                .ipv4_multicast_group(\"225.1.1.1\")\n                .vni_range(\"10000\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:InterfaceNve\n    properties:\n      description: My Interface Description\n      hostReachabilityProtocolBgp: true\n      shutdown: false\n      sourceInterfaceLoopback: 100\n      vnis:\n        - ipv4_multicast_group: 225.1.1.1\n          vni_range: '10000'\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/interfaceNve:InterfaceNve example \"Cisco-IOS-XE-native:native/interface/nve=1\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "hostReachabilityProtocolBgp": {
                    "type": "boolean"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `1`-`4096`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "sourceInterfaceLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "vniVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceNveVniVrf:InterfaceNveVniVrf"
                    },
                    "description": "Configure VNI information\n"
                },
                "vnis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceNveVni:InterfaceNveVni"
                    },
                    "description": "Configure VNI information\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "hostReachabilityProtocolBgp": {
                    "type": "boolean"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `1`-`4096`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "sourceInterfaceLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "vniVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceNveVniVrf:InterfaceNveVniVrf"
                    },
                    "description": "Configure VNI information\n"
                },
                "vnis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceNveVni:InterfaceNveVni"
                    },
                    "description": "Configure VNI information\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceNve resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "hostReachabilityProtocolBgp": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "integer",
                        "description": "- Range: `1`-`4096`\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "sourceInterfaceLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    },
                    "vniVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceNveVniVrf:InterfaceNveVniVrf"
                        },
                        "description": "Configure VNI information\n"
                    },
                    "vnis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceNveVni:InterfaceNveVni"
                        },
                        "description": "Configure VNI information\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/interfaceOspf:InterfaceOspf": {
            "description": "This resource can manage the Interface OSPF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.InterfaceOspf;\nimport com.pulumi.iosxe.InterfaceOspfArgs;\nimport com.pulumi.iosxe.inputs.InterfaceOspfMessageDigestKeyArgs;\nimport com.pulumi.iosxe.inputs.InterfaceOspfProcessIdArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new InterfaceOspf(\"example\", InterfaceOspfArgs.builder()        \n            .cost(10)\n            .deadInterval(30)\n            .helloInterval(5)\n            .messageDigestKeys(InterfaceOspfMessageDigestKeyArgs.builder()\n                .id(1)\n                .md5_auth_key(\"mykey\")\n                .md5_auth_type(0)\n                .build())\n            .mtuIgnore(false)\n            .networkTypeBroadcast(false)\n            .networkTypeNonBroadcast(false)\n            .networkTypePointToMultipoint(false)\n            .networkTypePointToPoint(true)\n            .priority(10)\n            .processIds(InterfaceOspfProcessIdArgs.builder()\n                .areas(InterfaceOspfProcessIdAreaArgs.builder()\n                    .areaId(\"0\")\n                    .build())\n                .id(1)\n                .build())\n            .ttlSecurityHops(2)\n            .type(\"Loopback\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:InterfaceOspf\n    properties:\n      cost: 10\n      deadInterval: 30\n      helloInterval: 5\n      messageDigestKeys:\n        - id: 1\n          md5_auth_key: mykey\n          md5_auth_type: 0\n      mtuIgnore: false\n      networkTypeBroadcast: false\n      networkTypeNonBroadcast: false\n      networkTypePointToMultipoint: false\n      networkTypePointToPoint: true\n      priority: 10\n      processIds:\n        - areas:\n            - areaId: '0'\n          id: 1\n      ttlSecurityHops: 2\n      type: Loopback\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/interfaceOspf:InterfaceOspf example \"Cisco-IOS-XE-native:native/interface/Loopback=1/ip/Cisco-IOS-XE-ospf:router-ospf/ospf\"\n```\n\n ",
            "properties": {
                "cost": {
                    "type": "integer",
                    "description": "Route cost of this interface - Range: `1`-`65535`\n"
                },
                "deadInterval": {
                    "type": "integer",
                    "description": "Interval after which a neighbor is declared dead - Range: `1`-`65535`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helloInterval": {
                    "type": "integer",
                    "description": "Time between HELLO packets - Range: `1`-`65535`\n"
                },
                "messageDigestKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceOspfMessageDigestKey:InterfaceOspfMessageDigestKey"
                    },
                    "description": "Message digest authentication password (key)\n"
                },
                "mtuIgnore": {
                    "type": "boolean",
                    "description": "Ignores the MTU in DBD packets\n"
                },
                "name": {
                    "type": "string"
                },
                "networkTypeBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF broadcast multi-access network\n"
                },
                "networkTypeNonBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF NBMA network\n"
                },
                "networkTypePointToMultipoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-multipoint network\n"
                },
                "networkTypePointToPoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-point network\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Router priority - Range: `0`-`255`\n"
                },
                "processIds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceOspfProcessId:InterfaceOspfProcessId"
                    }
                },
                "ttlSecurityHops": {
                    "type": "integer",
                    "description": "IP hops - Range: `1`-`254`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "cost": {
                    "type": "integer",
                    "description": "Route cost of this interface - Range: `1`-`65535`\n"
                },
                "deadInterval": {
                    "type": "integer",
                    "description": "Interval after which a neighbor is declared dead - Range: `1`-`65535`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helloInterval": {
                    "type": "integer",
                    "description": "Time between HELLO packets - Range: `1`-`65535`\n"
                },
                "messageDigestKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceOspfMessageDigestKey:InterfaceOspfMessageDigestKey"
                    },
                    "description": "Message digest authentication password (key)\n"
                },
                "mtuIgnore": {
                    "type": "boolean",
                    "description": "Ignores the MTU in DBD packets\n"
                },
                "name": {
                    "type": "string"
                },
                "networkTypeBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF broadcast multi-access network\n"
                },
                "networkTypeNonBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF NBMA network\n"
                },
                "networkTypePointToMultipoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-multipoint network\n"
                },
                "networkTypePointToPoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-point network\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Router priority - Range: `0`-`255`\n"
                },
                "processIds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceOspfProcessId:InterfaceOspfProcessId"
                    }
                },
                "ttlSecurityHops": {
                    "type": "integer",
                    "description": "IP hops - Range: `1`-`254`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceOspf resources.\n",
                "properties": {
                    "cost": {
                        "type": "integer",
                        "description": "Route cost of this interface - Range: `1`-`65535`\n"
                    },
                    "deadInterval": {
                        "type": "integer",
                        "description": "Interval after which a neighbor is declared dead - Range: `1`-`65535`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helloInterval": {
                        "type": "integer",
                        "description": "Time between HELLO packets - Range: `1`-`65535`\n"
                    },
                    "messageDigestKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceOspfMessageDigestKey:InterfaceOspfMessageDigestKey"
                        },
                        "description": "Message digest authentication password (key)\n"
                    },
                    "mtuIgnore": {
                        "type": "boolean",
                        "description": "Ignores the MTU in DBD packets\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkTypeBroadcast": {
                        "type": "boolean",
                        "description": "Specify OSPF broadcast multi-access network\n"
                    },
                    "networkTypeNonBroadcast": {
                        "type": "boolean",
                        "description": "Specify OSPF NBMA network\n"
                    },
                    "networkTypePointToMultipoint": {
                        "type": "boolean",
                        "description": "Specify OSPF point-to-multipoint network\n"
                    },
                    "networkTypePointToPoint": {
                        "type": "boolean",
                        "description": "Specify OSPF point-to-point network\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Router priority - Range: `0`-`255`\n"
                    },
                    "processIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceOspfProcessId:InterfaceOspfProcessId"
                        }
                    },
                    "ttlSecurityHops": {
                        "type": "integer",
                        "description": "IP hops - Range: `1`-`254`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/interfaceOspfv3:InterfaceOspfv3": {
            "description": "This resource can manage the Interface OSPFv3 configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.InterfaceOspfv3(\"example\", {\n    cost: 1000,\n    networkTypeBroadcast: false,\n    networkTypeNonBroadcast: false,\n    networkTypePointToMultipoint: false,\n    networkTypePointToPoint: true,\n    type: \"Loopback\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.InterfaceOspfv3(\"example\",\n    cost=1000,\n    network_type_broadcast=False,\n    network_type_non_broadcast=False,\n    network_type_point_to_multipoint=False,\n    network_type_point_to_point=True,\n    type=\"Loopback\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.InterfaceOspfv3(\"example\", new()\n    {\n        Cost = 1000,\n        NetworkTypeBroadcast = false,\n        NetworkTypeNonBroadcast = false,\n        NetworkTypePointToMultipoint = false,\n        NetworkTypePointToPoint = true,\n        Type = \"Loopback\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewInterfaceOspfv3(ctx, \"example\", \u0026iosxe.InterfaceOspfv3Args{\n\t\t\tCost:                         pulumi.Int(1000),\n\t\t\tNetworkTypeBroadcast:         pulumi.Bool(false),\n\t\t\tNetworkTypeNonBroadcast:      pulumi.Bool(false),\n\t\t\tNetworkTypePointToMultipoint: pulumi.Bool(false),\n\t\t\tNetworkTypePointToPoint:      pulumi.Bool(true),\n\t\t\tType:                         pulumi.String(\"Loopback\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.InterfaceOspfv3;\nimport com.pulumi.iosxe.InterfaceOspfv3Args;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new InterfaceOspfv3(\"example\", InterfaceOspfv3Args.builder()        \n            .cost(1000)\n            .networkTypeBroadcast(false)\n            .networkTypeNonBroadcast(false)\n            .networkTypePointToMultipoint(false)\n            .networkTypePointToPoint(true)\n            .type(\"Loopback\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:InterfaceOspfv3\n    properties:\n      cost: 1000\n      networkTypeBroadcast: false\n      networkTypeNonBroadcast: false\n      networkTypePointToMultipoint: false\n      networkTypePointToPoint: true\n      type: Loopback\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/interfaceOspfv3:InterfaceOspfv3 example \"Cisco-IOS-XE-native:native/interface/Loopback=1/Cisco-IOS-XE-ospfv3:ospfv3\"\n```\n\n ",
            "properties": {
                "cost": {
                    "type": "integer",
                    "description": "Static route cost value of the interface - Range: `1`-`65535`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "networkTypeBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF broadcast multi-access network\n"
                },
                "networkTypeNonBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF NBMA network\n"
                },
                "networkTypePointToMultipoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-multipoint network\n"
                },
                "networkTypePointToPoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-point network\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "cost": {
                    "type": "integer",
                    "description": "Static route cost value of the interface - Range: `1`-`65535`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "networkTypeBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF broadcast multi-access network\n"
                },
                "networkTypeNonBroadcast": {
                    "type": "boolean",
                    "description": "Specify OSPF NBMA network\n"
                },
                "networkTypePointToMultipoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-multipoint network\n"
                },
                "networkTypePointToPoint": {
                    "type": "boolean",
                    "description": "Specify OSPF point-to-point network\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceOspfv3 resources.\n",
                "properties": {
                    "cost": {
                        "type": "integer",
                        "description": "Static route cost value of the interface - Range: `1`-`65535`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkTypeBroadcast": {
                        "type": "boolean",
                        "description": "Specify OSPF broadcast multi-access network\n"
                    },
                    "networkTypeNonBroadcast": {
                        "type": "boolean",
                        "description": "Specify OSPF NBMA network\n"
                    },
                    "networkTypePointToMultipoint": {
                        "type": "boolean",
                        "description": "Specify OSPF point-to-multipoint network\n"
                    },
                    "networkTypePointToPoint": {
                        "type": "boolean",
                        "description": "Specify OSPF point-to-point network\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/interfacePim:InterfacePim": {
            "description": "This resource can manage the Interface PIM configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.InterfacePim(\"example\", {\n    bfd: false,\n    border: false,\n    bsrBorder: false,\n    denseMode: false,\n    drPriority: 10,\n    passive: false,\n    sparseDenseMode: false,\n    sparseMode: true,\n    type: \"Loopback\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.InterfacePim(\"example\",\n    bfd=False,\n    border=False,\n    bsr_border=False,\n    dense_mode=False,\n    dr_priority=10,\n    passive=False,\n    sparse_dense_mode=False,\n    sparse_mode=True,\n    type=\"Loopback\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.InterfacePim(\"example\", new()\n    {\n        Bfd = false,\n        Border = false,\n        BsrBorder = false,\n        DenseMode = false,\n        DrPriority = 10,\n        Passive = false,\n        SparseDenseMode = false,\n        SparseMode = true,\n        Type = \"Loopback\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewInterfacePim(ctx, \"example\", \u0026iosxe.InterfacePimArgs{\n\t\t\tBfd:             pulumi.Bool(false),\n\t\t\tBorder:          pulumi.Bool(false),\n\t\t\tBsrBorder:       pulumi.Bool(false),\n\t\t\tDenseMode:       pulumi.Bool(false),\n\t\t\tDrPriority:      pulumi.Int(10),\n\t\t\tPassive:         pulumi.Bool(false),\n\t\t\tSparseDenseMode: pulumi.Bool(false),\n\t\t\tSparseMode:      pulumi.Bool(true),\n\t\t\tType:            pulumi.String(\"Loopback\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.InterfacePim;\nimport com.pulumi.iosxe.InterfacePimArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new InterfacePim(\"example\", InterfacePimArgs.builder()        \n            .bfd(false)\n            .border(false)\n            .bsrBorder(false)\n            .denseMode(false)\n            .drPriority(10)\n            .passive(false)\n            .sparseDenseMode(false)\n            .sparseMode(true)\n            .type(\"Loopback\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:InterfacePim\n    properties:\n      bfd: false\n      border: false\n      bsrBorder: false\n      denseMode: false\n      drPriority: 10\n      passive: false\n      sparseDenseMode: false\n      sparseMode: true\n      type: Loopback\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/interfacePim:InterfacePim example \"Cisco-IOS-XE-native:native/interface/Loopback=100/ip/pim\"\n```\n\n ",
            "properties": {
                "bfd": {
                    "type": "boolean",
                    "description": "Configure BFD\n"
                },
                "border": {
                    "type": "boolean",
                    "description": "Border of PIM domain\n"
                },
                "bsrBorder": {
                    "type": "boolean",
                    "description": "Border of PIM domain\n"
                },
                "denseMode": {
                    "type": "boolean",
                    "description": "Enable PIM dense-mode operation\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "drPriority": {
                    "type": "integer",
                    "description": "PIM router DR priority - Range: `0`-`4294967295`\n"
                },
                "name": {
                    "type": "string"
                },
                "passive": {
                    "type": "boolean",
                    "description": "Enable PIM passive interface operation\n"
                },
                "sparseDenseMode": {
                    "type": "boolean",
                    "description": "Enable PIM sparse-dense-mode operation\n"
                },
                "sparseMode": {
                    "type": "boolean",
                    "description": "Enable PIM sparse-mode operation\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "bfd": {
                    "type": "boolean",
                    "description": "Configure BFD\n"
                },
                "border": {
                    "type": "boolean",
                    "description": "Border of PIM domain\n"
                },
                "bsrBorder": {
                    "type": "boolean",
                    "description": "Border of PIM domain\n"
                },
                "denseMode": {
                    "type": "boolean",
                    "description": "Enable PIM dense-mode operation\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "drPriority": {
                    "type": "integer",
                    "description": "PIM router DR priority - Range: `0`-`4294967295`\n"
                },
                "name": {
                    "type": "string"
                },
                "passive": {
                    "type": "boolean",
                    "description": "Enable PIM passive interface operation\n"
                },
                "sparseDenseMode": {
                    "type": "boolean",
                    "description": "Enable PIM sparse-dense-mode operation\n"
                },
                "sparseMode": {
                    "type": "boolean",
                    "description": "Enable PIM sparse-mode operation\n"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfacePim resources.\n",
                "properties": {
                    "bfd": {
                        "type": "boolean",
                        "description": "Configure BFD\n"
                    },
                    "border": {
                        "type": "boolean",
                        "description": "Border of PIM domain\n"
                    },
                    "bsrBorder": {
                        "type": "boolean",
                        "description": "Border of PIM domain\n"
                    },
                    "denseMode": {
                        "type": "boolean",
                        "description": "Enable PIM dense-mode operation\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "drPriority": {
                        "type": "integer",
                        "description": "PIM router DR priority - Range: `0`-`4294967295`\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "passive": {
                        "type": "boolean",
                        "description": "Enable PIM passive interface operation\n"
                    },
                    "sparseDenseMode": {
                        "type": "boolean",
                        "description": "Enable PIM sparse-dense-mode operation\n"
                    },
                    "sparseMode": {
                        "type": "boolean",
                        "description": "Enable PIM sparse-mode operation\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,\n`Port-channel`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/interfacePortChannel:InterfacePortChannel": {
            "description": "This resource can manage the Interface Port Channel configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.InterfacePortChannel;\nimport com.pulumi.iosxe.InterfacePortChannelArgs;\nimport com.pulumi.iosxe.inputs.InterfacePortChannelHelperAddressArgs;\nimport com.pulumi.iosxe.inputs.InterfacePortChannelIpv6AddressArgs;\nimport com.pulumi.iosxe.inputs.InterfacePortChannelIpv6LinkLocalAddressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new InterfacePortChannel(\"example\", InterfacePortChannelArgs.builder()        \n            .arpTimeout(2147)\n            .description(\"My Interface Description\")\n            .helperAddresses(InterfacePortChannelHelperAddressArgs.builder()\n                .address(\"10.10.10.10\")\n                .global(false)\n                .build())\n            .ipAccessGroupIn(\"1\")\n            .ipAccessGroupInEnable(true)\n            .ipAccessGroupOut(\"1\")\n            .ipAccessGroupOutEnable(true)\n            .ipDhcpRelaySourceInterface(\"Loopback100\")\n            .ipv4Address(\"192.0.2.1\")\n            .ipv4AddressMask(\"255.255.255.0\")\n            .ipv6AddressDhcp(true)\n            .ipv6Addresses(InterfacePortChannelIpv6AddressArgs.builder()\n                .eui_64(true)\n                .prefix(\"2224:DB8::/32\")\n                .build())\n            .ipv6Enable(true)\n            .ipv6LinkLocalAddresses(InterfacePortChannelIpv6LinkLocalAddressArgs.builder()\n                .address(\"fe80::64\")\n                .link_local(true)\n                .build())\n            .ipv6Mtu(1300)\n            .ipv6NdRaSuppressAll(true)\n            .shutdown(false)\n            .vrfForwarding(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:InterfacePortChannel\n    properties:\n      arpTimeout: 2147\n      description: My Interface Description\n      helperAddresses:\n        - address: 10.10.10.10\n          global: false\n      ipAccessGroupIn: '1'\n      ipAccessGroupInEnable: true\n      ipAccessGroupOut: '1'\n      ipAccessGroupOutEnable: true\n      ipDhcpRelaySourceInterface: Loopback100\n      ipv4Address: 192.0.2.1\n      ipv4AddressMask: 255.255.255.0\n      ipv6AddressDhcp: true\n      ipv6Addresses:\n        - eui_64: true\n          prefix: 2224:DB8::/32\n      ipv6Enable: true\n      ipv6LinkLocalAddresses:\n        - address: fe80::64\n          link_local: true\n      ipv6Mtu: 1300\n      ipv6NdRaSuppressAll: true\n      shutdown: false\n      vrfForwarding: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/interfacePortChannel:InterfacePortChannel example \"Cisco-IOS-XE-native:native/interface/Port-channel=10\"\n```\n\n ",
            "properties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "autoQosClassify": {
                    "type": "boolean",
                    "description": "Configure classification for untrusted devices\n"
                },
                "autoQosClassifyPolice": {
                    "type": "boolean",
                    "description": "Configure QoS policing for untrusted devices\n"
                },
                "autoQosTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "autoQosTrustCos": {
                    "type": "boolean",
                    "description": "Trust the CoS marking\n"
                },
                "autoQosTrustDscp": {
                    "type": "boolean",
                    "description": "Trust the DSCP marking\n"
                },
                "autoQosVideoCts": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                },
                "autoQosVideoIpCamera": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                },
                "autoQosVideoMediaPlayer": {
                    "type": "boolean",
                    "description": "Trust the Qos marking of the Cisco Media Player\n"
                },
                "autoQosVoip": {
                    "type": "boolean",
                    "description": "Configure AutoQoS for VoIP\n"
                },
                "autoQosVoipCiscoPhone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP Phone\n"
                },
                "autoQosVoipCiscoSoftphone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                },
                "autoQosVoipTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfacePortChannelHelperAddress:InterfacePortChannelHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipArpInspectionLimitRate": {
                    "type": "integer",
                    "description": "Rate Limit - Range: `0`-`4294967295`\n"
                },
                "ipArpInspectionTrust": {
                    "type": "boolean",
                    "description": "Configure Trust state\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipDhcpSnoopingTrust": {
                    "type": "boolean",
                    "description": "DHCP Snooping trust config\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfacePortChannelIpv6Address:InterfacePortChannelIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfacePortChannelIpv6LinkLocalAddress:InterfacePortChannelIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `1`-`512`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "spanningTreeGuard": {
                    "type": "string",
                    "description": "Change an interface's spanning tree guard mode - Choices: `loop`, `none`, `root`\n"
                },
                "spanningTreeLinkType": {
                    "type": "string",
                    "description": "Specify a link type for spanning tree tree protocol use - Choices: `point-to-point`, `shared`\n"
                },
                "switchport": {
                    "type": "boolean"
                },
                "trustDevice": {
                    "type": "string",
                    "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "autoQosClassify": {
                    "type": "boolean",
                    "description": "Configure classification for untrusted devices\n"
                },
                "autoQosClassifyPolice": {
                    "type": "boolean",
                    "description": "Configure QoS policing for untrusted devices\n"
                },
                "autoQosTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "autoQosTrustCos": {
                    "type": "boolean",
                    "description": "Trust the CoS marking\n"
                },
                "autoQosTrustDscp": {
                    "type": "boolean",
                    "description": "Trust the DSCP marking\n"
                },
                "autoQosVideoCts": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                },
                "autoQosVideoIpCamera": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                },
                "autoQosVideoMediaPlayer": {
                    "type": "boolean",
                    "description": "Trust the Qos marking of the Cisco Media Player\n"
                },
                "autoQosVoip": {
                    "type": "boolean",
                    "description": "Configure AutoQoS for VoIP\n"
                },
                "autoQosVoipCiscoPhone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP Phone\n"
                },
                "autoQosVoipCiscoSoftphone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                },
                "autoQosVoipTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfacePortChannelHelperAddress:InterfacePortChannelHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipArpInspectionLimitRate": {
                    "type": "integer",
                    "description": "Rate Limit - Range: `0`-`4294967295`\n"
                },
                "ipArpInspectionTrust": {
                    "type": "boolean",
                    "description": "Configure Trust state\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipDhcpSnoopingTrust": {
                    "type": "boolean",
                    "description": "DHCP Snooping trust config\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfacePortChannelIpv6Address:InterfacePortChannelIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfacePortChannelIpv6LinkLocalAddress:InterfacePortChannelIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `1`-`512`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "spanningTreeGuard": {
                    "type": "string",
                    "description": "Change an interface's spanning tree guard mode - Choices: `loop`, `none`, `root`\n"
                },
                "spanningTreeLinkType": {
                    "type": "string",
                    "description": "Specify a link type for spanning tree tree protocol use - Choices: `point-to-point`, `shared`\n"
                },
                "switchport": {
                    "type": "boolean"
                },
                "trustDevice": {
                    "type": "string",
                    "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfacePortChannel resources.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer",
                        "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                    },
                    "autoQosClassify": {
                        "type": "boolean",
                        "description": "Configure classification for untrusted devices\n"
                    },
                    "autoQosClassifyPolice": {
                        "type": "boolean",
                        "description": "Configure QoS policing for untrusted devices\n"
                    },
                    "autoQosTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "autoQosTrustCos": {
                        "type": "boolean",
                        "description": "Trust the CoS marking\n"
                    },
                    "autoQosTrustDscp": {
                        "type": "boolean",
                        "description": "Trust the DSCP marking\n"
                    },
                    "autoQosVideoCts": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                    },
                    "autoQosVideoIpCamera": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                    },
                    "autoQosVideoMediaPlayer": {
                        "type": "boolean",
                        "description": "Trust the Qos marking of the Cisco Media Player\n"
                    },
                    "autoQosVoip": {
                        "type": "boolean",
                        "description": "Configure AutoQoS for VoIP\n"
                    },
                    "autoQosVoipCiscoPhone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP Phone\n"
                    },
                    "autoQosVoipCiscoSoftphone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                    },
                    "autoQosVoipTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "bfdEcho": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "bfdEnable": {
                        "type": "boolean",
                        "description": "Enable BFD under the interface\n"
                    },
                    "bfdInterval": {
                        "type": "integer",
                        "description": "- Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "bfdLocalAddress": {
                        "type": "string",
                        "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                    },
                    "bfdTemplate": {
                        "type": "string",
                        "description": "BFD template\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfacePortChannelHelperAddress:InterfacePortChannelHelperAddress"
                        },
                        "description": "Specify a destination address for UDP broadcasts\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipArpInspectionLimitRate": {
                        "type": "integer",
                        "description": "Rate Limit - Range: `0`-`4294967295`\n"
                    },
                    "ipArpInspectionTrust": {
                        "type": "boolean",
                        "description": "Configure Trust state\n"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string",
                        "description": "Set source interface for relayed messages\n"
                    },
                    "ipDhcpSnoopingTrust": {
                        "type": "boolean",
                        "description": "DHCP Snooping trust config\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfacePortChannelIpv6Address:InterfacePortChannelIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfacePortChannelIpv6LinkLocalAddress:InterfacePortChannelIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "name": {
                        "type": "integer",
                        "description": "- Range: `1`-`512`\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "spanningTreeGuard": {
                        "type": "string",
                        "description": "Change an interface's spanning tree guard mode - Choices: `loop`, `none`, `root`\n"
                    },
                    "spanningTreeLinkType": {
                        "type": "string",
                        "description": "Specify a link type for spanning tree tree protocol use - Choices: `point-to-point`, `shared`\n"
                    },
                    "switchport": {
                        "type": "boolean"
                    },
                    "trustDevice": {
                        "type": "string",
                        "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/interfacePortChannelSubinterface:InterfacePortChannelSubinterface": {
            "description": "This resource can manage the Interface Port Channel Subinterface configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.InterfacePortChannelSubinterface;\nimport com.pulumi.iosxe.InterfacePortChannelSubinterfaceArgs;\nimport com.pulumi.iosxe.inputs.InterfacePortChannelSubinterfaceHelperAddressArgs;\nimport com.pulumi.iosxe.inputs.InterfacePortChannelSubinterfaceIpv6AddressArgs;\nimport com.pulumi.iosxe.inputs.InterfacePortChannelSubinterfaceIpv6LinkLocalAddressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new InterfacePortChannelSubinterface(\"example\", InterfacePortChannelSubinterfaceArgs.builder()        \n            .arpTimeout(2147)\n            .description(\"My Interface Description\")\n            .encapsulationDot1qVlanId(666)\n            .helperAddresses(InterfacePortChannelSubinterfaceHelperAddressArgs.builder()\n                .address(\"10.10.10.10\")\n                .global(false)\n                .build())\n            .ipAccessGroupIn(\"1\")\n            .ipAccessGroupInEnable(true)\n            .ipAccessGroupOut(\"1\")\n            .ipAccessGroupOutEnable(true)\n            .ipProxyArp(false)\n            .ipRedirects(false)\n            .ipUnreachables(false)\n            .ipv4Address(\"192.0.2.2\")\n            .ipv4AddressMask(\"255.255.255.0\")\n            .ipv6AddressDhcp(true)\n            .ipv6Addresses(InterfacePortChannelSubinterfaceIpv6AddressArgs.builder()\n                .eui_64(true)\n                .prefix(\"2003:DB8::/32\")\n                .build())\n            .ipv6Enable(true)\n            .ipv6LinkLocalAddresses(InterfacePortChannelSubinterfaceIpv6LinkLocalAddressArgs.builder()\n                .address(\"fe80::9656:d028:8652:66b8\")\n                .link_local(true)\n                .build())\n            .ipv6Mtu(1300)\n            .ipv6NdRaSuppressAll(true)\n            .shutdown(false)\n            .vrfForwarding(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:InterfacePortChannelSubinterface\n    properties:\n      arpTimeout: 2147\n      description: My Interface Description\n      encapsulationDot1qVlanId: 666\n      helperAddresses:\n        - address: 10.10.10.10\n          global: false\n      ipAccessGroupIn: '1'\n      ipAccessGroupInEnable: true\n      ipAccessGroupOut: '1'\n      ipAccessGroupOutEnable: true\n      ipProxyArp: false\n      ipRedirects: false\n      ipUnreachables: false\n      ipv4Address: 192.0.2.2\n      ipv4AddressMask: 255.255.255.0\n      ipv6AddressDhcp: true\n      ipv6Addresses:\n        - eui_64: true\n          prefix: 2003:DB8::/32\n      ipv6Enable: true\n      ipv6LinkLocalAddresses:\n        - address: fe80::9656:d028:8652:66b8\n          link_local: true\n      ipv6Mtu: 1300\n      ipv6NdRaSuppressAll: true\n      shutdown: false\n      vrfForwarding: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/interfacePortChannelSubinterface:InterfacePortChannelSubinterface example \"Cisco-IOS-XE-native:native/interface/Port-channel-subinterface/Port-channel=10.666\"\n```\n\n ",
            "properties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "autoQosClassify": {
                    "type": "boolean",
                    "description": "Configure classification for untrusted devices\n"
                },
                "autoQosClassifyPolice": {
                    "type": "boolean",
                    "description": "Configure QoS policing for untrusted devices\n"
                },
                "autoQosTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "autoQosTrustCos": {
                    "type": "boolean",
                    "description": "Trust the CoS marking\n"
                },
                "autoQosTrustDscp": {
                    "type": "boolean",
                    "description": "Trust the DSCP marking\n"
                },
                "autoQosVideoCts": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                },
                "autoQosVideoIpCamera": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                },
                "autoQosVideoMediaPlayer": {
                    "type": "boolean",
                    "description": "Trust the Qos marking of the Cisco Media Player\n"
                },
                "autoQosVoip": {
                    "type": "boolean",
                    "description": "Configure AutoQoS for VoIP\n"
                },
                "autoQosVoipCiscoPhone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP Phone\n"
                },
                "autoQosVoipCiscoSoftphone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                },
                "autoQosVoipTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encapsulationDot1qVlanId": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfacePortChannelSubinterfaceHelperAddress:InterfacePortChannelSubinterfaceHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipArpInspectionLimitRate": {
                    "type": "integer",
                    "description": "Rate Limit - Range: `0`-`4294967295`\n"
                },
                "ipArpInspectionTrust": {
                    "type": "boolean",
                    "description": "Configure Trust state\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfacePortChannelSubinterfaceIpv6Address:InterfacePortChannelSubinterfaceIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfacePortChannelSubinterfaceIpv6LinkLocalAddress:InterfacePortChannelSubinterfaceIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "string"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "trustDevice": {
                    "type": "string",
                    "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "autoQosClassify": {
                    "type": "boolean",
                    "description": "Configure classification for untrusted devices\n"
                },
                "autoQosClassifyPolice": {
                    "type": "boolean",
                    "description": "Configure QoS policing for untrusted devices\n"
                },
                "autoQosTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "autoQosTrustCos": {
                    "type": "boolean",
                    "description": "Trust the CoS marking\n"
                },
                "autoQosTrustDscp": {
                    "type": "boolean",
                    "description": "Trust the DSCP marking\n"
                },
                "autoQosVideoCts": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                },
                "autoQosVideoIpCamera": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                },
                "autoQosVideoMediaPlayer": {
                    "type": "boolean",
                    "description": "Trust the Qos marking of the Cisco Media Player\n"
                },
                "autoQosVoip": {
                    "type": "boolean",
                    "description": "Configure AutoQoS for VoIP\n"
                },
                "autoQosVoipCiscoPhone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP Phone\n"
                },
                "autoQosVoipCiscoSoftphone": {
                    "type": "boolean",
                    "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                },
                "autoQosVoipTrust": {
                    "type": "boolean",
                    "description": "Trust the DSCP/CoS marking\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encapsulationDot1qVlanId": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfacePortChannelSubinterfaceHelperAddress:InterfacePortChannelSubinterfaceHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipArpInspectionLimitRate": {
                    "type": "integer",
                    "description": "Rate Limit - Range: `0`-`4294967295`\n"
                },
                "ipArpInspectionTrust": {
                    "type": "boolean",
                    "description": "Configure Trust state\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfacePortChannelSubinterfaceIpv6Address:InterfacePortChannelSubinterfaceIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfacePortChannelSubinterfaceIpv6LinkLocalAddress:InterfacePortChannelSubinterfaceIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "string"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "trustDevice": {
                    "type": "string",
                    "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfacePortChannelSubinterface resources.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer",
                        "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                    },
                    "autoQosClassify": {
                        "type": "boolean",
                        "description": "Configure classification for untrusted devices\n"
                    },
                    "autoQosClassifyPolice": {
                        "type": "boolean",
                        "description": "Configure QoS policing for untrusted devices\n"
                    },
                    "autoQosTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "autoQosTrustCos": {
                        "type": "boolean",
                        "description": "Trust the CoS marking\n"
                    },
                    "autoQosTrustDscp": {
                        "type": "boolean",
                        "description": "Trust the DSCP marking\n"
                    },
                    "autoQosVideoCts": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                    },
                    "autoQosVideoIpCamera": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                    },
                    "autoQosVideoMediaPlayer": {
                        "type": "boolean",
                        "description": "Trust the Qos marking of the Cisco Media Player\n"
                    },
                    "autoQosVoip": {
                        "type": "boolean",
                        "description": "Configure AutoQoS for VoIP\n"
                    },
                    "autoQosVoipCiscoPhone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP Phone\n"
                    },
                    "autoQosVoipCiscoSoftphone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                    },
                    "autoQosVoipTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "bfdEcho": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "bfdEnable": {
                        "type": "boolean",
                        "description": "Enable BFD under the interface\n"
                    },
                    "bfdInterval": {
                        "type": "integer",
                        "description": "- Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "bfdLocalAddress": {
                        "type": "string",
                        "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                    },
                    "bfdTemplate": {
                        "type": "string",
                        "description": "BFD template\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encapsulationDot1qVlanId": {
                        "type": "integer",
                        "description": "- Range: `1`-`4094`\n"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfacePortChannelSubinterfaceHelperAddress:InterfacePortChannelSubinterfaceHelperAddress"
                        },
                        "description": "Specify a destination address for UDP broadcasts\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipArpInspectionLimitRate": {
                        "type": "integer",
                        "description": "Rate Limit - Range: `0`-`4294967295`\n"
                    },
                    "ipArpInspectionTrust": {
                        "type": "boolean",
                        "description": "Configure Trust state\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfacePortChannelSubinterfaceIpv6Address:InterfacePortChannelSubinterfaceIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfacePortChannelSubinterfaceIpv6LinkLocalAddress:InterfacePortChannelSubinterfaceIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "trustDevice": {
                        "type": "string",
                        "description": "trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/interfaceSwitchport:InterfaceSwitchport": {
            "description": "This resource can manage the Interface Switchport configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.InterfaceSwitchport(\"example\", {\n    accessVlan: \"100\",\n    host: false,\n    modeAccess: false,\n    modeDot1qTunnel: false,\n    modePrivateVlanHost: false,\n    modePrivateVlanPromiscuous: false,\n    modePrivateVlanTrunk: false,\n    modeTrunk: true,\n    nonegotiate: false,\n    trunkAllowedVlans: \"100,101\",\n    trunkNativeVlan: 100,\n    type: \"GigabitEthernet\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.InterfaceSwitchport(\"example\",\n    access_vlan=\"100\",\n    host=False,\n    mode_access=False,\n    mode_dot1q_tunnel=False,\n    mode_private_vlan_host=False,\n    mode_private_vlan_promiscuous=False,\n    mode_private_vlan_trunk=False,\n    mode_trunk=True,\n    nonegotiate=False,\n    trunk_allowed_vlans=\"100,101\",\n    trunk_native_vlan=100,\n    type=\"GigabitEthernet\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.InterfaceSwitchport(\"example\", new()\n    {\n        AccessVlan = \"100\",\n        Host = false,\n        ModeAccess = false,\n        ModeDot1qTunnel = false,\n        ModePrivateVlanHost = false,\n        ModePrivateVlanPromiscuous = false,\n        ModePrivateVlanTrunk = false,\n        ModeTrunk = true,\n        Nonegotiate = false,\n        TrunkAllowedVlans = \"100,101\",\n        TrunkNativeVlan = 100,\n        Type = \"GigabitEthernet\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewInterfaceSwitchport(ctx, \"example\", \u0026iosxe.InterfaceSwitchportArgs{\n\t\t\tAccessVlan:                 pulumi.String(\"100\"),\n\t\t\tHost:                       pulumi.Bool(false),\n\t\t\tModeAccess:                 pulumi.Bool(false),\n\t\t\tModeDot1qTunnel:            pulumi.Bool(false),\n\t\t\tModePrivateVlanHost:        pulumi.Bool(false),\n\t\t\tModePrivateVlanPromiscuous: pulumi.Bool(false),\n\t\t\tModePrivateVlanTrunk:       pulumi.Bool(false),\n\t\t\tModeTrunk:                  pulumi.Bool(true),\n\t\t\tNonegotiate:                pulumi.Bool(false),\n\t\t\tTrunkAllowedVlans:          pulumi.String(\"100,101\"),\n\t\t\tTrunkNativeVlan:            pulumi.Int(100),\n\t\t\tType:                       pulumi.String(\"GigabitEthernet\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.InterfaceSwitchport;\nimport com.pulumi.iosxe.InterfaceSwitchportArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new InterfaceSwitchport(\"example\", InterfaceSwitchportArgs.builder()        \n            .accessVlan(\"100\")\n            .host(false)\n            .modeAccess(false)\n            .modeDot1qTunnel(false)\n            .modePrivateVlanHost(false)\n            .modePrivateVlanPromiscuous(false)\n            .modePrivateVlanTrunk(false)\n            .modeTrunk(true)\n            .nonegotiate(false)\n            .trunkAllowedVlans(\"100,101\")\n            .trunkNativeVlan(100)\n            .type(\"GigabitEthernet\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:InterfaceSwitchport\n    properties:\n      accessVlan: '100'\n      host: false\n      modeAccess: false\n      modeDot1qTunnel: false\n      modePrivateVlanHost: false\n      modePrivateVlanPromiscuous: false\n      modePrivateVlanTrunk: false\n      modeTrunk: true\n      nonegotiate: false\n      trunkAllowedVlans: 100,101\n      trunkNativeVlan: 100\n      type: GigabitEthernet\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/interfaceSwitchport:InterfaceSwitchport example \"Cisco-IOS-XE-native:native/interface/GigabitEthernet=1/0/3/switchport-config/switchport\"\n```\n\n ",
            "properties": {
                "accessVlan": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "host": {
                    "type": "boolean",
                    "description": "Set port host\n"
                },
                "modeAccess": {
                    "type": "boolean",
                    "description": "Set trunking mode to ACCESS unconditionally\n"
                },
                "modeDot1qTunnel": {
                    "type": "boolean",
                    "description": "set trunking mode to TUNNEL unconditionally\n"
                },
                "modePrivateVlanHost": {
                    "type": "boolean",
                    "description": "Set the mode to private-vlan host\n"
                },
                "modePrivateVlanPromiscuous": {
                    "type": "boolean",
                    "description": "Set the mode to private-vlan promiscuous\n"
                },
                "modePrivateVlanTrunk": {
                    "type": "boolean",
                    "description": "Set the mode to private-vlan trunk\n"
                },
                "modeTrunk": {
                    "type": "boolean",
                    "description": "Set trunking mode to TRUNK unconditionally\n"
                },
                "name": {
                    "type": "string"
                },
                "nonegotiate": {
                    "type": "boolean",
                    "description": "Device will not engage in negotiation protocol on this interface\n"
                },
                "trunkAllowedVlans": {
                    "type": "string"
                },
                "trunkAllowedVlansNone": {
                    "type": "boolean",
                    "description": "no VLANs\n"
                },
                "trunkNativeVlan": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "trunkNativeVlanTag": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Port-channel`\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "accessVlan": {
                    "type": "string"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "host": {
                    "type": "boolean",
                    "description": "Set port host\n"
                },
                "modeAccess": {
                    "type": "boolean",
                    "description": "Set trunking mode to ACCESS unconditionally\n"
                },
                "modeDot1qTunnel": {
                    "type": "boolean",
                    "description": "set trunking mode to TUNNEL unconditionally\n"
                },
                "modePrivateVlanHost": {
                    "type": "boolean",
                    "description": "Set the mode to private-vlan host\n"
                },
                "modePrivateVlanPromiscuous": {
                    "type": "boolean",
                    "description": "Set the mode to private-vlan promiscuous\n"
                },
                "modePrivateVlanTrunk": {
                    "type": "boolean",
                    "description": "Set the mode to private-vlan trunk\n"
                },
                "modeTrunk": {
                    "type": "boolean",
                    "description": "Set trunking mode to TRUNK unconditionally\n"
                },
                "name": {
                    "type": "string"
                },
                "nonegotiate": {
                    "type": "boolean",
                    "description": "Device will not engage in negotiation protocol on this interface\n"
                },
                "trunkAllowedVlans": {
                    "type": "string"
                },
                "trunkAllowedVlansNone": {
                    "type": "boolean",
                    "description": "no VLANs\n"
                },
                "trunkNativeVlan": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "trunkNativeVlanTag": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Port-channel`\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceSwitchport resources.\n",
                "properties": {
                    "accessVlan": {
                        "type": "string"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "host": {
                        "type": "boolean",
                        "description": "Set port host\n"
                    },
                    "modeAccess": {
                        "type": "boolean",
                        "description": "Set trunking mode to ACCESS unconditionally\n"
                    },
                    "modeDot1qTunnel": {
                        "type": "boolean",
                        "description": "set trunking mode to TUNNEL unconditionally\n"
                    },
                    "modePrivateVlanHost": {
                        "type": "boolean",
                        "description": "Set the mode to private-vlan host\n"
                    },
                    "modePrivateVlanPromiscuous": {
                        "type": "boolean",
                        "description": "Set the mode to private-vlan promiscuous\n"
                    },
                    "modePrivateVlanTrunk": {
                        "type": "boolean",
                        "description": "Set the mode to private-vlan trunk\n"
                    },
                    "modeTrunk": {
                        "type": "boolean",
                        "description": "Set trunking mode to TRUNK unconditionally\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nonegotiate": {
                        "type": "boolean",
                        "description": "Device will not engage in negotiation protocol on this interface\n"
                    },
                    "trunkAllowedVlans": {
                        "type": "string"
                    },
                    "trunkAllowedVlansNone": {
                        "type": "boolean",
                        "description": "no VLANs\n"
                    },
                    "trunkNativeVlan": {
                        "type": "integer",
                        "description": "- Range: `1`-`4094`\n"
                    },
                    "trunkNativeVlanTag": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,\n`TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Port-channel`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/interfaceTunnel:InterfaceTunnel": {
            "description": "This resource can manage the Interface Tunnel configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.InterfaceTunnel;\nimport com.pulumi.iosxe.InterfaceTunnelArgs;\nimport com.pulumi.iosxe.inputs.InterfaceTunnelHelperAddressArgs;\nimport com.pulumi.iosxe.inputs.InterfaceTunnelIpv6AddressArgs;\nimport com.pulumi.iosxe.inputs.InterfaceTunnelIpv6LinkLocalAddressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new InterfaceTunnel(\"example\", InterfaceTunnelArgs.builder()        \n            .arpTimeout(300)\n            .cryptoIpsecDfBit(\"clear\")\n            .description(\"My Interface Description\")\n            .helperAddresses(InterfaceTunnelHelperAddressArgs.builder()\n                .address(\"10.10.10.10\")\n                .global(false)\n                .vrf(\"VRF1\")\n                .build())\n            .ipAccessGroupIn(\"1\")\n            .ipAccessGroupInEnable(true)\n            .ipAccessGroupOut(\"1\")\n            .ipAccessGroupOutEnable(true)\n            .ipDhcpRelaySourceInterface(\"Loopback100\")\n            .ipProxyArp(false)\n            .ipRedirects(false)\n            .ipUnreachables(false)\n            .ipv4Address(\"10.1.1.1\")\n            .ipv4AddressMask(\"255.255.255.0\")\n            .ipv6AddressDhcp(true)\n            .ipv6Addresses(InterfaceTunnelIpv6AddressArgs.builder()\n                .eui_64(true)\n                .prefix(\"2005:DB8::/32\")\n                .build())\n            .ipv6Enable(true)\n            .ipv6LinkLocalAddresses(InterfaceTunnelIpv6LinkLocalAddressArgs.builder()\n                .address(\"fe80::9656:d028:8652:66ba\")\n                .link_local(true)\n                .build())\n            .ipv6Mtu(1300)\n            .ipv6NdRaSuppressAll(true)\n            .shutdown(false)\n            .tunnelDestinationIpv4(\"2.2.2.2\")\n            .vrfForwarding(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:InterfaceTunnel\n    properties:\n      arpTimeout: 300\n      cryptoIpsecDfBit: clear\n      description: My Interface Description\n      helperAddresses:\n        - address: 10.10.10.10\n          global: false\n          vrf: VRF1\n      ipAccessGroupIn: '1'\n      ipAccessGroupInEnable: true\n      ipAccessGroupOut: '1'\n      ipAccessGroupOutEnable: true\n      ipDhcpRelaySourceInterface: Loopback100\n      ipProxyArp: false\n      ipRedirects: false\n      ipUnreachables: false\n      ipv4Address: 10.1.1.1\n      ipv4AddressMask: 255.255.255.0\n      ipv6AddressDhcp: true\n      ipv6Addresses:\n        - eui_64: true\n          prefix: 2005:DB8::/32\n      ipv6Enable: true\n      ipv6LinkLocalAddresses:\n        - address: fe80::9656:d028:8652:66ba\n          link_local: true\n      ipv6Mtu: 1300\n      ipv6NdRaSuppressAll: true\n      shutdown: false\n      tunnelDestinationIpv4: 2.2.2.2\n      vrfForwarding: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/interfaceTunnel:InterfaceTunnel example \"Cisco-IOS-XE-native:native/interface/Tunnel=90\"\n```\n\n ",
            "properties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "cryptoIpsecDfBit": {
                    "type": "string",
                    "description": "Handling of encapsulated DF bit. - Choices: `clear`, `copy`, `set`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceTunnelHelperAddress:InterfaceTunnelHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceTunnelIpv6Address:InterfaceTunnelIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceTunnelIpv6LinkLocalAddress:InterfaceTunnelIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `0`-`4294967295`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "tunnelDestinationIpv4": {
                    "type": "string",
                    "description": "ip address or host name\n"
                },
                "tunnelModeIpsecIpv4": {
                    "type": "boolean",
                    "description": "over IPv4\n"
                },
                "tunnelProtectionIpsecProfile": {
                    "type": "string",
                    "description": "Determine the ipsec policy profile to use.\n"
                },
                "tunnelSource": {
                    "type": "string",
                    "description": "source of tunnel packets\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "Enable IP processing without an explicit address\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "arpTimeout": {
                    "type": "integer",
                    "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "cryptoIpsecDfBit": {
                    "type": "string",
                    "description": "Handling of encapsulated DF bit. - Choices: `clear`, `copy`, `set`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceTunnelHelperAddress:InterfaceTunnelHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceTunnelIpv6Address:InterfaceTunnelIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceTunnelIpv6LinkLocalAddress:InterfaceTunnelIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `0`-`4294967295`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "tunnelDestinationIpv4": {
                    "type": "string",
                    "description": "ip address or host name\n"
                },
                "tunnelModeIpsecIpv4": {
                    "type": "boolean",
                    "description": "over IPv4\n"
                },
                "tunnelProtectionIpsecProfile": {
                    "type": "string",
                    "description": "Determine the ipsec policy profile to use.\n"
                },
                "tunnelSource": {
                    "type": "string",
                    "description": "source of tunnel packets\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "Enable IP processing without an explicit address\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceTunnel resources.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer",
                        "description": "Set ARP cache timeout - Range: `0`-`2147483`\n"
                    },
                    "bfdEcho": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "bfdEnable": {
                        "type": "boolean",
                        "description": "Enable BFD under the interface\n"
                    },
                    "bfdInterval": {
                        "type": "integer",
                        "description": "- Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "bfdLocalAddress": {
                        "type": "string",
                        "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                    },
                    "bfdTemplate": {
                        "type": "string",
                        "description": "BFD template\n"
                    },
                    "cryptoIpsecDfBit": {
                        "type": "string",
                        "description": "Handling of encapsulated DF bit. - Choices: `clear`, `copy`, `set`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceTunnelHelperAddress:InterfaceTunnelHelperAddress"
                        },
                        "description": "Specify a destination address for UDP broadcasts\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string",
                        "description": "Set source interface for relayed messages\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceTunnelIpv6Address:InterfaceTunnelIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceTunnelIpv6LinkLocalAddress:InterfaceTunnelIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "name": {
                        "type": "integer",
                        "description": "- Range: `0`-`4294967295`\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "tunnelDestinationIpv4": {
                        "type": "string",
                        "description": "ip address or host name\n"
                    },
                    "tunnelModeIpsecIpv4": {
                        "type": "boolean",
                        "description": "over IPv4\n"
                    },
                    "tunnelProtectionIpsecProfile": {
                        "type": "string",
                        "description": "Determine the ipsec policy profile to use.\n"
                    },
                    "tunnelSource": {
                        "type": "string",
                        "description": "source of tunnel packets\n"
                    },
                    "unnumbered": {
                        "type": "string",
                        "description": "Enable IP processing without an explicit address\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/interfaceVlan:InterfaceVlan": {
            "description": "This resource can manage the Interface VLAN configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.InterfaceVlan;\nimport com.pulumi.iosxe.InterfaceVlanArgs;\nimport com.pulumi.iosxe.inputs.InterfaceVlanHelperAddressArgs;\nimport com.pulumi.iosxe.inputs.InterfaceVlanIpv6AddressArgs;\nimport com.pulumi.iosxe.inputs.InterfaceVlanIpv6LinkLocalAddressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new InterfaceVlan(\"example\", InterfaceVlanArgs.builder()        \n            .autostate(false)\n            .bfdEnable(true)\n            .bfdLocalAddress(\"1.2.3.4\")\n            .bfdTemplate(\"bfd_template1\")\n            .description(\"My Interface Description\")\n            .helperAddresses(InterfaceVlanHelperAddressArgs.builder()\n                .address(\"10.10.10.10\")\n                .global(false)\n                .vrf(\"VRF1\")\n                .build())\n            .ipAccessGroupIn(\"1\")\n            .ipAccessGroupInEnable(true)\n            .ipAccessGroupOut(\"1\")\n            .ipAccessGroupOutEnable(true)\n            .ipDhcpRelaySourceInterface(\"Loopback100\")\n            .ipProxyArp(false)\n            .ipRedirects(false)\n            .ipUnreachables(false)\n            .ipv4Address(\"10.1.1.1\")\n            .ipv4AddressMask(\"255.255.255.0\")\n            .ipv6AddressDhcp(true)\n            .ipv6Addresses(InterfaceVlanIpv6AddressArgs.builder()\n                .eui_64(true)\n                .prefix(\"2006:DB8::/32\")\n                .build())\n            .ipv6Enable(true)\n            .ipv6LinkLocalAddresses(InterfaceVlanIpv6LinkLocalAddressArgs.builder()\n                .address(\"fe80::9656:d028:8652:66bb\")\n                .link_local(true)\n                .build())\n            .ipv6Mtu(1300)\n            .ipv6NdRaSuppressAll(true)\n            .shutdown(false)\n            .vrfForwarding(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:InterfaceVlan\n    properties:\n      autostate: false\n      bfdEnable: true\n      bfdLocalAddress: 1.2.3.4\n      bfdTemplate: bfd_template1\n      description: My Interface Description\n      helperAddresses:\n        - address: 10.10.10.10\n          global: false\n          vrf: VRF1\n      ipAccessGroupIn: '1'\n      ipAccessGroupInEnable: true\n      ipAccessGroupOut: '1'\n      ipAccessGroupOutEnable: true\n      ipDhcpRelaySourceInterface: Loopback100\n      ipProxyArp: false\n      ipRedirects: false\n      ipUnreachables: false\n      ipv4Address: 10.1.1.1\n      ipv4AddressMask: 255.255.255.0\n      ipv6AddressDhcp: true\n      ipv6Addresses:\n        - eui_64: true\n          prefix: 2006:DB8::/32\n      ipv6Enable: true\n      ipv6LinkLocalAddresses:\n        - address: fe80::9656:d028:8652:66bb\n          link_local: true\n      ipv6Mtu: 1300\n      ipv6NdRaSuppressAll: true\n      shutdown: false\n      vrfForwarding: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/interfaceVlan:InterfaceVlan example \"Cisco-IOS-XE-native:native/interface/Vlan=10\"\n```\n\n ",
            "properties": {
                "autostate": {
                    "type": "boolean",
                    "description": "Enable auto-state determination for VLAN\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceVlanHelperAddress:InterfaceVlanHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceVlanIpv6Address:InterfaceVlanIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceVlanIpv6LinkLocalAddress:InterfaceVlanIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "Enable IP processing without an explicit address\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "autostate": {
                    "type": "boolean",
                    "description": "Enable auto-state determination for VLAN\n"
                },
                "bfdEcho": {
                    "type": "boolean",
                    "description": "Use echo adjunct as bfd detection mechanism\n"
                },
                "bfdEnable": {
                    "type": "boolean",
                    "description": "Enable BFD under the interface\n"
                },
                "bfdInterval": {
                    "type": "integer",
                    "description": "- Range: `50`-`9999`\n"
                },
                "bfdIntervalMinRx": {
                    "type": "integer",
                    "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                },
                "bfdIntervalMultiplier": {
                    "type": "integer",
                    "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                },
                "bfdLocalAddress": {
                    "type": "string",
                    "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                },
                "bfdTemplate": {
                    "type": "string",
                    "description": "BFD template\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Interface specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "helperAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceVlanHelperAddress:InterfaceVlanHelperAddress"
                    },
                    "description": "Specify a destination address for UDP broadcasts\n"
                },
                "ipAccessGroupIn": {
                    "type": "string"
                },
                "ipAccessGroupInEnable": {
                    "type": "boolean",
                    "description": "inbound packets\n"
                },
                "ipAccessGroupOut": {
                    "type": "string"
                },
                "ipAccessGroupOutEnable": {
                    "type": "boolean",
                    "description": "outbound packets\n"
                },
                "ipDhcpRelaySourceInterface": {
                    "type": "string",
                    "description": "Set source interface for relayed messages\n"
                },
                "ipProxyArp": {
                    "type": "boolean",
                    "description": "Enable proxy ARP\n"
                },
                "ipRedirects": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Redirect messages\n"
                },
                "ipUnreachables": {
                    "type": "boolean",
                    "description": "Enable sending ICMP Unreachable messages\n"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4AddressMask": {
                    "type": "string"
                },
                "ipv6AddressAutoconfigDefault": {
                    "type": "boolean",
                    "description": "Insert default route\n"
                },
                "ipv6AddressDhcp": {
                    "type": "boolean",
                    "description": "Obtain IPv6 address from DHCP server\n"
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceVlanIpv6Address:InterfaceVlanIpv6Address"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Enable IPv6 on interface\n"
                },
                "ipv6LinkLocalAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/InterfaceVlanIpv6LinkLocalAddress:InterfaceVlanIpv6LinkLocalAddress"
                    }
                },
                "ipv6Mtu": {
                    "type": "integer",
                    "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                },
                "ipv6NdRaSuppressAll": {
                    "type": "boolean",
                    "description": "Suppress all IPv6 RA\n"
                },
                "name": {
                    "type": "integer",
                    "description": "- Range: `1`-`4094`\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the selected interface\n"
                },
                "unnumbered": {
                    "type": "string",
                    "description": "Enable IP processing without an explicit address\n"
                },
                "vrfForwarding": {
                    "type": "string",
                    "description": "Configure forwarding table\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceVlan resources.\n",
                "properties": {
                    "autostate": {
                        "type": "boolean",
                        "description": "Enable auto-state determination for VLAN\n"
                    },
                    "bfdEcho": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "bfdEnable": {
                        "type": "boolean",
                        "description": "Enable BFD under the interface\n"
                    },
                    "bfdInterval": {
                        "type": "integer",
                        "description": "- Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability - Range: `50`-`9999`\n"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown - Range: `3`-`50`\n"
                    },
                    "bfdLocalAddress": {
                        "type": "string",
                        "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                    },
                    "bfdTemplate": {
                        "type": "string",
                        "description": "BFD template\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceVlanHelperAddress:InterfaceVlanHelperAddress"
                        },
                        "description": "Specify a destination address for UDP broadcasts\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string",
                        "description": "Set source interface for relayed messages\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceVlanIpv6Address:InterfaceVlanIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/InterfaceVlanIpv6LinkLocalAddress:InterfaceVlanIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "name": {
                        "type": "integer",
                        "description": "- Range: `1`-`4094`\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "unnumbered": {
                        "type": "string",
                        "description": "Enable IP processing without an explicit address\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/line:Line": {
            "description": "This resource can manage the Line configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Line;\nimport com.pulumi.iosxe.LineArgs;\nimport com.pulumi.iosxe.inputs.LineConsoleArgs;\nimport com.pulumi.iosxe.inputs.LineVtyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Line(\"example\", LineArgs.builder()        \n            .consoles(LineConsoleArgs.builder()\n                .exec_timeout_minutes(45)\n                .exec_timeout_seconds(25)\n                .first(\"0\")\n                .password(\"testpasswd\")\n                .password_type(\"0\")\n                .privilege_level(15)\n                .stopbits(\"1\")\n                .build())\n            .vties(LineVtyArgs.builder()\n                .access_classes(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                .escape_character(\"27\")\n                .exec_timeout_minutes(45)\n                .exec_timeout_seconds(25)\n                .first(10)\n                .last(27)\n                .password(\"testpasswd\")\n                .password_type(\"0\")\n                .transport_preferred_protocol(\"none\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Line\n    properties:\n      consoles:\n        - exec_timeout_minutes: 45\n          exec_timeout_seconds: 25\n          first: '0'\n          password: testpasswd\n          password_type: '0'\n          privilege_level: 15\n          stopbits: '1'\n      vties:\n        - access_classes:\n            - accessList: '2'\n              direction: in\n              vrfAlso: true\n          escape_character: '27'\n          exec_timeout_minutes: 45\n          exec_timeout_seconds: 25\n          first: 10\n          last: 27\n          password: testpasswd\n          password_type: '0'\n          transport_preferred_protocol: none\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/line:Line example \"Cisco-IOS-XE-native:native/line\"\n```\n\n ",
            "properties": {
                "consoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LineConsole:LineConsole"
                    },
                    "description": "Primary terminal line\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LineVty:LineVty"
                    },
                    "description": "Virtual terminal\n"
                }
            },
            "inputProperties": {
                "consoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LineConsole:LineConsole"
                    },
                    "description": "Primary terminal line\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "vties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LineVty:LineVty"
                    },
                    "description": "Virtual terminal\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Line resources.\n",
                "properties": {
                    "consoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LineConsole:LineConsole"
                        },
                        "description": "Primary terminal line\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LineVty:LineVty"
                        },
                        "description": "Virtual terminal\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/logging:Logging": {
            "description": "This resource can manage the Logging configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Logging;\nimport com.pulumi.iosxe.LoggingArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv4HostArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv4VrfHostArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv6HostArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv6VrfHostArgs;\nimport com.pulumi.iosxe.inputs.LoggingSourceInterfacesVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Logging(\"example\", LoggingArgs.builder()        \n            .bufferedSeverity(\"informational\")\n            .bufferedSize(16000)\n            .consoleSeverity(\"informational\")\n            .facility(\"local0\")\n            .historySeverity(\"informational\")\n            .historySize(100)\n            .ipv4Hosts(LoggingIpv4HostArgs.builder()\n                .ipv4_host(\"1.1.1.1\")\n                .build())\n            .ipv4VrfHosts(LoggingIpv4VrfHostArgs.builder()\n                .ipv4_host(\"1.1.1.1\")\n                .vrf(\"VRF1\")\n                .build())\n            .ipv6Hosts(LoggingIpv6HostArgs.builder()\n                .ipv6_host(\"2001::1\")\n                .build())\n            .ipv6VrfHosts(LoggingIpv6VrfHostArgs.builder()\n                .ipv6_host(\"2001::1\")\n                .vrf(\"VRF1\")\n                .build())\n            .monitorSeverity(\"informational\")\n            .originIdType(\"hostname\")\n            .sourceInterface(\"Loopback0\")\n            .sourceInterfacesVrves(LoggingSourceInterfacesVrfArgs.builder()\n                .interface_name(\"Loopback100\")\n                .vrf(\"VRF1\")\n                .build())\n            .trap(true)\n            .trapSeverity(\"informational\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Logging\n    properties:\n      bufferedSeverity: informational\n      bufferedSize: 16000\n      consoleSeverity: informational\n      facility: local0\n      historySeverity: informational\n      historySize: 100\n      ipv4Hosts:\n        - ipv4_host: 1.1.1.1\n      ipv4VrfHosts:\n        - ipv4_host: 1.1.1.1\n          vrf: VRF1\n      ipv6Hosts:\n        - ipv6_host: 2001::1\n      ipv6VrfHosts:\n        - ipv6_host: 2001::1\n          vrf: VRF1\n      monitorSeverity: informational\n      originIdType: hostname\n      sourceInterface: Loopback0\n      sourceInterfacesVrves:\n        - interface_name: Loopback100\n          vrf: VRF1\n      trap: true\n      trapSeverity: informational\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/logging:Logging example \"Cisco-IOS-XE-native:native/logging\"\n```\n\n ",
            "properties": {
                "bufferedSeverity": {
                    "type": "string",
                    "description": "Logging severity level\n"
                },
                "bufferedSize": {
                    "type": "integer",
                    "description": "Logging buffer size - Range: `4096`-`2147483647`\n"
                },
                "consoleSeverity": {
                    "type": "string"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "facility": {
                    "type": "string",
                    "description": "Facility parameter for syslog messages - Choices: `auth`, `cron`, `daemon`, `kern`, `local0`, `local1`, `local2`,\n`local3`, `local4`, `local5`, `local6`, `local7`, `lpr`, `mail`, `news`, `sys10`, `sys11`, `sys12`, `sys13`, `sys14`,\n`sys9`, `syslog`, `user`, `uucp`\n"
                },
                "fileMaxSize": {
                    "type": "integer",
                    "description": "- Range: `0`-`4294967295`\n"
                },
                "fileMinSize": {
                    "type": "integer",
                    "description": "- Range: `0`-`4294967295`\n"
                },
                "fileName": {
                    "type": "string"
                },
                "fileSeverity": {
                    "type": "string"
                },
                "historySeverity": {
                    "type": "string"
                },
                "historySize": {
                    "type": "integer",
                    "description": "Set history table size - Range: `0`-`65535`\n"
                },
                "ipv4Hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4Host:LoggingIpv4Host"
                    }
                },
                "ipv4VrfHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4VrfHost:LoggingIpv4VrfHost"
                    }
                },
                "ipv6Hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6Host:LoggingIpv6Host"
                    }
                },
                "ipv6VrfHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6VrfHost:LoggingIpv6VrfHost"
                    }
                },
                "monitorSeverity": {
                    "type": "string"
                },
                "originIdName": {
                    "type": "string",
                    "description": "Define a unique text string as ID\n"
                },
                "originIdType": {
                    "type": "string",
                    "description": "Use origin hostname/ip/ipv6 as ID - Choices: `hostname`, `ip`, `ipv6`\n"
                },
                "sourceInterface": {
                    "type": "string"
                },
                "sourceInterfacesVrves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingSourceInterfacesVrf:LoggingSourceInterfacesVrf"
                    },
                    "description": "Specify interface and vrf for source address in logging transactions\n"
                },
                "trap": {
                    "type": "boolean",
                    "description": "Set trap server logging level\n"
                },
                "trapSeverity": {
                    "type": "string"
                }
            },
            "inputProperties": {
                "bufferedSeverity": {
                    "type": "string",
                    "description": "Logging severity level\n"
                },
                "bufferedSize": {
                    "type": "integer",
                    "description": "Logging buffer size - Range: `4096`-`2147483647`\n"
                },
                "consoleSeverity": {
                    "type": "string"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "facility": {
                    "type": "string",
                    "description": "Facility parameter for syslog messages - Choices: `auth`, `cron`, `daemon`, `kern`, `local0`, `local1`, `local2`,\n`local3`, `local4`, `local5`, `local6`, `local7`, `lpr`, `mail`, `news`, `sys10`, `sys11`, `sys12`, `sys13`, `sys14`,\n`sys9`, `syslog`, `user`, `uucp`\n"
                },
                "fileMaxSize": {
                    "type": "integer",
                    "description": "- Range: `0`-`4294967295`\n"
                },
                "fileMinSize": {
                    "type": "integer",
                    "description": "- Range: `0`-`4294967295`\n"
                },
                "fileName": {
                    "type": "string"
                },
                "fileSeverity": {
                    "type": "string"
                },
                "historySeverity": {
                    "type": "string"
                },
                "historySize": {
                    "type": "integer",
                    "description": "Set history table size - Range: `0`-`65535`\n"
                },
                "ipv4Hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4Host:LoggingIpv4Host"
                    }
                },
                "ipv4VrfHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4VrfHost:LoggingIpv4VrfHost"
                    }
                },
                "ipv6Hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6Host:LoggingIpv6Host"
                    }
                },
                "ipv6VrfHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6VrfHost:LoggingIpv6VrfHost"
                    }
                },
                "monitorSeverity": {
                    "type": "string"
                },
                "originIdName": {
                    "type": "string",
                    "description": "Define a unique text string as ID\n"
                },
                "originIdType": {
                    "type": "string",
                    "description": "Use origin hostname/ip/ipv6 as ID - Choices: `hostname`, `ip`, `ipv6`\n"
                },
                "sourceInterface": {
                    "type": "string"
                },
                "sourceInterfacesVrves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingSourceInterfacesVrf:LoggingSourceInterfacesVrf"
                    },
                    "description": "Specify interface and vrf for source address in logging transactions\n"
                },
                "trap": {
                    "type": "boolean",
                    "description": "Set trap server logging level\n"
                },
                "trapSeverity": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Logging resources.\n",
                "properties": {
                    "bufferedSeverity": {
                        "type": "string",
                        "description": "Logging severity level\n"
                    },
                    "bufferedSize": {
                        "type": "integer",
                        "description": "Logging buffer size - Range: `4096`-`2147483647`\n"
                    },
                    "consoleSeverity": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "facility": {
                        "type": "string",
                        "description": "Facility parameter for syslog messages - Choices: `auth`, `cron`, `daemon`, `kern`, `local0`, `local1`, `local2`,\n`local3`, `local4`, `local5`, `local6`, `local7`, `lpr`, `mail`, `news`, `sys10`, `sys11`, `sys12`, `sys13`, `sys14`,\n`sys9`, `syslog`, `user`, `uucp`\n"
                    },
                    "fileMaxSize": {
                        "type": "integer",
                        "description": "- Range: `0`-`4294967295`\n"
                    },
                    "fileMinSize": {
                        "type": "integer",
                        "description": "- Range: `0`-`4294967295`\n"
                    },
                    "fileName": {
                        "type": "string"
                    },
                    "fileSeverity": {
                        "type": "string"
                    },
                    "historySeverity": {
                        "type": "string"
                    },
                    "historySize": {
                        "type": "integer",
                        "description": "Set history table size - Range: `0`-`65535`\n"
                    },
                    "ipv4Hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv4Host:LoggingIpv4Host"
                        }
                    },
                    "ipv4VrfHosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv4VrfHost:LoggingIpv4VrfHost"
                        }
                    },
                    "ipv6Hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv6Host:LoggingIpv6Host"
                        }
                    },
                    "ipv6VrfHosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv6VrfHost:LoggingIpv6VrfHost"
                        }
                    },
                    "monitorSeverity": {
                        "type": "string"
                    },
                    "originIdName": {
                        "type": "string",
                        "description": "Define a unique text string as ID\n"
                    },
                    "originIdType": {
                        "type": "string",
                        "description": "Use origin hostname/ip/ipv6 as ID - Choices: `hostname`, `ip`, `ipv6`\n"
                    },
                    "sourceInterface": {
                        "type": "string"
                    },
                    "sourceInterfacesVrves": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingSourceInterfacesVrf:LoggingSourceInterfacesVrf"
                        },
                        "description": "Specify interface and vrf for source address in logging transactions\n"
                    },
                    "trap": {
                        "type": "boolean",
                        "description": "Set trap server logging level\n"
                    },
                    "trapSeverity": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/loggingIpv4HostTransport:LoggingIpv4HostTransport": {
            "description": "This resource can manage the Logging IPv4 Host Transport configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.LoggingIpv4HostTransport;\nimport com.pulumi.iosxe.LoggingIpv4HostTransportArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv4HostTransportTransportTcpPortArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv4HostTransportTransportTlsPortArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv4HostTransportTransportUdpPortArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new LoggingIpv4HostTransport(\"example\", LoggingIpv4HostTransportArgs.builder()        \n            .ipv4Host(\"2.2.2.2\")\n            .transportTcpPorts(LoggingIpv4HostTransportTransportTcpPortArgs.builder()\n                .port_number(10001)\n                .build())\n            .transportTlsPorts(LoggingIpv4HostTransportTransportTlsPortArgs.builder()\n                .port_number(10002)\n                .build())\n            .transportUdpPorts(LoggingIpv4HostTransportTransportUdpPortArgs.builder()\n                .port_number(10000)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:LoggingIpv4HostTransport\n    properties:\n      ipv4Host: 2.2.2.2\n      transportTcpPorts:\n        - port_number: 10001\n      transportTlsPorts:\n        - port_number: 10002\n      transportUdpPorts:\n        - port_number: 10000\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/loggingIpv4HostTransport:LoggingIpv4HostTransport example \"Cisco-IOS-XE-native:native/logging/host/ipv4-host-transport-list=2.2.2.2\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4HostTransportTransportTcpPort:LoggingIpv4HostTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4HostTransportTransportTlsPort:LoggingIpv4HostTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4HostTransportTransportUdpPort:LoggingIpv4HostTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                }
            },
            "required": [
                "ipv4Host"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4HostTransportTransportTcpPort:LoggingIpv4HostTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4HostTransportTransportTlsPort:LoggingIpv4HostTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4HostTransportTransportUdpPort:LoggingIpv4HostTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                }
            },
            "requiredInputs": [
                "ipv4Host"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoggingIpv4HostTransport resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv4Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv4HostTransportTransportTcpPort:LoggingIpv4HostTransportTransportTcpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv4HostTransportTransportTlsPort:LoggingIpv4HostTransportTransportTlsPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv4HostTransportTransportUdpPort:LoggingIpv4HostTransportTransportUdpPort"
                        },
                        "description": "Port Number List\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/loggingIpv4HostVrfTransport:LoggingIpv4HostVrfTransport": {
            "description": "This resource can manage the Logging IPv4 Host VRF Transport configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.LoggingIpv4HostVrfTransport;\nimport com.pulumi.iosxe.LoggingIpv4HostVrfTransportArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv4HostVrfTransportTransportTcpPortArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv4HostVrfTransportTransportTlsPortArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv4HostVrfTransportTransportUdpPortArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new LoggingIpv4HostVrfTransport(\"example\", LoggingIpv4HostVrfTransportArgs.builder()        \n            .ipv4Host(\"2.2.2.2\")\n            .transportTcpPorts(LoggingIpv4HostVrfTransportTransportTcpPortArgs.builder()\n                .port_number(10001)\n                .build())\n            .transportTlsPorts(LoggingIpv4HostVrfTransportTransportTlsPortArgs.builder()\n                .port_number(10002)\n                .build())\n            .transportUdpPorts(LoggingIpv4HostVrfTransportTransportUdpPortArgs.builder()\n                .port_number(10000)\n                .build())\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:LoggingIpv4HostVrfTransport\n    properties:\n      ipv4Host: 2.2.2.2\n      transportTcpPorts:\n        - port_number: 10001\n      transportTlsPorts:\n        - port_number: 10002\n      transportUdpPorts:\n        - port_number: 10000\n      vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/loggingIpv4HostVrfTransport:LoggingIpv4HostVrfTransport example \"Cisco-IOS-XE-native:native/logging/host/ipv4-host-vrf-transport-list=2.2.2.2,VRF1\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4HostVrfTransportTransportTcpPort:LoggingIpv4HostVrfTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4HostVrfTransportTransportTlsPort:LoggingIpv4HostVrfTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4HostVrfTransportTransportUdpPort:LoggingIpv4HostVrfTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "Set VRF option\n"
                }
            },
            "required": [
                "ipv4Host",
                "vrf"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4HostVrfTransportTransportTcpPort:LoggingIpv4HostVrfTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4HostVrfTransportTransportTlsPort:LoggingIpv4HostVrfTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv4HostVrfTransportTransportUdpPort:LoggingIpv4HostVrfTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "Set VRF option\n"
                }
            },
            "requiredInputs": [
                "ipv4Host",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoggingIpv4HostVrfTransport resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv4Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv4HostVrfTransportTransportTcpPort:LoggingIpv4HostVrfTransportTransportTcpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv4HostVrfTransportTransportTlsPort:LoggingIpv4HostVrfTransportTransportTlsPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv4HostVrfTransportTransportUdpPort:LoggingIpv4HostVrfTransportTransportUdpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "Set VRF option\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/loggingIpv6HostTransport:LoggingIpv6HostTransport": {
            "description": "This resource can manage the Logging IPv6 Host Transport configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.LoggingIpv6HostTransport;\nimport com.pulumi.iosxe.LoggingIpv6HostTransportArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv6HostTransportTransportTcpPortArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv6HostTransportTransportTlsPortArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv6HostTransportTransportUdpPortArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new LoggingIpv6HostTransport(\"example\", LoggingIpv6HostTransportArgs.builder()        \n            .ipv6Host(\"2001::1\")\n            .transportTcpPorts(LoggingIpv6HostTransportTransportTcpPortArgs.builder()\n                .port_number(10001)\n                .build())\n            .transportTlsPorts(LoggingIpv6HostTransportTransportTlsPortArgs.builder()\n                .port_number(10002)\n                .build())\n            .transportUdpPorts(LoggingIpv6HostTransportTransportUdpPortArgs.builder()\n                .port_number(10000)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:LoggingIpv6HostTransport\n    properties:\n      ipv6Host: 2001::1\n      transportTcpPorts:\n        - port_number: 10001\n      transportTlsPorts:\n        - port_number: 10002\n      transportUdpPorts:\n        - port_number: 10000\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/loggingIpv6HostTransport:LoggingIpv6HostTransport example \"Cisco-IOS-XE-native:native/logging/host/ipv6/ipv6-host-transport-list=2001::1\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv6Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6HostTransportTransportTcpPort:LoggingIpv6HostTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6HostTransportTransportTlsPort:LoggingIpv6HostTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6HostTransportTransportUdpPort:LoggingIpv6HostTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                }
            },
            "required": [
                "ipv6Host"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv6Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6HostTransportTransportTcpPort:LoggingIpv6HostTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6HostTransportTransportTlsPort:LoggingIpv6HostTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6HostTransportTransportUdpPort:LoggingIpv6HostTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                }
            },
            "requiredInputs": [
                "ipv6Host"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoggingIpv6HostTransport resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv6Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv6HostTransportTransportTcpPort:LoggingIpv6HostTransportTransportTcpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv6HostTransportTransportTlsPort:LoggingIpv6HostTransportTransportTlsPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv6HostTransportTransportUdpPort:LoggingIpv6HostTransportTransportUdpPort"
                        },
                        "description": "Port Number List\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/loggingIpv6HostVrfTransport:LoggingIpv6HostVrfTransport": {
            "description": "This resource can manage the Logging IPv6 Host VRF Transport configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.LoggingIpv6HostVrfTransport;\nimport com.pulumi.iosxe.LoggingIpv6HostVrfTransportArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv6HostVrfTransportTransportTcpPortArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv6HostVrfTransportTransportTlsPortArgs;\nimport com.pulumi.iosxe.inputs.LoggingIpv6HostVrfTransportTransportUdpPortArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new LoggingIpv6HostVrfTransport(\"example\", LoggingIpv6HostVrfTransportArgs.builder()        \n            .ipv6Host(\"2001::1\")\n            .transportTcpPorts(LoggingIpv6HostVrfTransportTransportTcpPortArgs.builder()\n                .port_number(10001)\n                .build())\n            .transportTlsPorts(LoggingIpv6HostVrfTransportTransportTlsPortArgs.builder()\n                .port_number(10002)\n                .build())\n            .transportUdpPorts(LoggingIpv6HostVrfTransportTransportUdpPortArgs.builder()\n                .port_number(10000)\n                .build())\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:LoggingIpv6HostVrfTransport\n    properties:\n      ipv6Host: 2001::1\n      transportTcpPorts:\n        - port_number: 10001\n      transportTlsPorts:\n        - port_number: 10002\n      transportUdpPorts:\n        - port_number: 10000\n      vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/loggingIpv6HostVrfTransport:LoggingIpv6HostVrfTransport example \"Cisco-IOS-XE-native:native/logging/host/ipv6/ipv6-host-vrf-transport-list=2001::1,VRF1\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv6Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6HostVrfTransportTransportTcpPort:LoggingIpv6HostVrfTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6HostVrfTransportTransportTlsPort:LoggingIpv6HostVrfTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6HostVrfTransportTransportUdpPort:LoggingIpv6HostVrfTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "Set VRF option\n"
                }
            },
            "required": [
                "ipv6Host",
                "vrf"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv6Host": {
                    "type": "string"
                },
                "transportTcpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6HostVrfTransportTransportTcpPort:LoggingIpv6HostVrfTransportTransportTcpPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportTlsPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6HostVrfTransportTransportTlsPort:LoggingIpv6HostVrfTransportTransportTlsPort"
                    },
                    "description": "Port Number List\n"
                },
                "transportUdpPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/LoggingIpv6HostVrfTransportTransportUdpPort:LoggingIpv6HostVrfTransportTransportUdpPort"
                    },
                    "description": "Port Number List\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "Set VRF option\n"
                }
            },
            "requiredInputs": [
                "ipv6Host",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoggingIpv6HostVrfTransport resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv6Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv6HostVrfTransportTransportTcpPort:LoggingIpv6HostVrfTransportTransportTcpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv6HostVrfTransportTransportTlsPort:LoggingIpv6HostVrfTransportTransportTlsPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/LoggingIpv6HostVrfTransportTransportUdpPort:LoggingIpv6HostVrfTransportTransportUdpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "Set VRF option\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/mdtSubscription:MdtSubscription": {
            "description": "This resource can manage the MDT Subscription configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.MdtSubscription(\"example\", {\n    encoding: \"encode-kvgpb\",\n    filterXpath: \"/ios-events-ios-xe-oper:ospf-neighbor-state-change\",\n    receivers: [{\n        address: \"5.6.7.8\",\n        port: 57600,\n        protocol: \"grpc-tcp\",\n    }],\n    sourceAddress: \"1.2.3.4\",\n    sourceVrf: \"Mgmt-vrf\",\n    stream: \"yang-notif-native\",\n    subscriptionId: 101,\n    updatePolicyOnChange: true,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.MdtSubscription(\"example\",\n    encoding=\"encode-kvgpb\",\n    filter_xpath=\"/ios-events-ios-xe-oper:ospf-neighbor-state-change\",\n    receivers=[iosxe.MdtSubscriptionReceiverArgs(\n        address=\"5.6.7.8\",\n        port=57600,\n        protocol=\"grpc-tcp\",\n    )],\n    source_address=\"1.2.3.4\",\n    source_vrf=\"Mgmt-vrf\",\n    stream=\"yang-notif-native\",\n    subscription_id=101,\n    update_policy_on_change=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.MdtSubscription(\"example\", new()\n    {\n        Encoding = \"encode-kvgpb\",\n        FilterXpath = \"/ios-events-ios-xe-oper:ospf-neighbor-state-change\",\n        Receivers = new[]\n        {\n            new Iosxe.Inputs.MdtSubscriptionReceiverArgs\n            {\n                Address = \"5.6.7.8\",\n                Port = 57600,\n                Protocol = \"grpc-tcp\",\n            },\n        },\n        SourceAddress = \"1.2.3.4\",\n        SourceVrf = \"Mgmt-vrf\",\n        Stream = \"yang-notif-native\",\n        SubscriptionId = 101,\n        UpdatePolicyOnChange = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewMdtSubscription(ctx, \"example\", \u0026iosxe.MdtSubscriptionArgs{\n\t\t\tEncoding:    pulumi.String(\"encode-kvgpb\"),\n\t\t\tFilterXpath: pulumi.String(\"/ios-events-ios-xe-oper:ospf-neighbor-state-change\"),\n\t\t\tReceivers: iosxe.MdtSubscriptionReceiverArray{\n\t\t\t\t\u0026iosxe.MdtSubscriptionReceiverArgs{\n\t\t\t\t\tAddress:  pulumi.String(\"5.6.7.8\"),\n\t\t\t\t\tPort:     pulumi.Int(57600),\n\t\t\t\t\tProtocol: pulumi.String(\"grpc-tcp\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tSourceAddress:        pulumi.String(\"1.2.3.4\"),\n\t\t\tSourceVrf:            pulumi.String(\"Mgmt-vrf\"),\n\t\t\tStream:               pulumi.String(\"yang-notif-native\"),\n\t\t\tSubscriptionId:       pulumi.Int(101),\n\t\t\tUpdatePolicyOnChange: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.MdtSubscription;\nimport com.pulumi.iosxe.MdtSubscriptionArgs;\nimport com.pulumi.iosxe.inputs.MdtSubscriptionReceiverArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new MdtSubscription(\"example\", MdtSubscriptionArgs.builder()        \n            .encoding(\"encode-kvgpb\")\n            .filterXpath(\"/ios-events-ios-xe-oper:ospf-neighbor-state-change\")\n            .receivers(MdtSubscriptionReceiverArgs.builder()\n                .address(\"5.6.7.8\")\n                .port(57600)\n                .protocol(\"grpc-tcp\")\n                .build())\n            .sourceAddress(\"1.2.3.4\")\n            .sourceVrf(\"Mgmt-vrf\")\n            .stream(\"yang-notif-native\")\n            .subscriptionId(101)\n            .updatePolicyOnChange(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:MdtSubscription\n    properties:\n      encoding: encode-kvgpb\n      filterXpath: /ios-events-ios-xe-oper:ospf-neighbor-state-change\n      receivers:\n        - address: 5.6.7.8\n          port: 57600\n          protocol: grpc-tcp\n      sourceAddress: 1.2.3.4\n      sourceVrf: Mgmt-vrf\n      stream: yang-notif-native\n      subscriptionId: 101\n      updatePolicyOnChange: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/mdtSubscription:MdtSubscription example \"Cisco-IOS-XE-mdt-cfg:mdt-config-data/mdt-subscription=101\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "Update notification encoding\n"
                },
                "filterXpath": {
                    "type": "string",
                    "description": "XPath expression describing the set of objects wanted as part of the subscription\n"
                },
                "receivers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/MdtSubscriptionReceiver:MdtSubscriptionReceiver"
                    },
                    "description": "Configuration of receivers of configured subscriptions. Use of this is deprecated. Use mdt-receiver-names instead.\n"
                },
                "sourceAddress": {
                    "type": "string",
                    "description": "The source address for the notifications\n"
                },
                "sourceVrf": {
                    "type": "string",
                    "description": "Network instance name for the VRF\n"
                },
                "stream": {
                    "type": "string",
                    "description": "The name of the event stream being subscribed to\n"
                },
                "subscriptionId": {
                    "type": "integer",
                    "description": "Unique subscription identifier. - Range: `0`-`2147483647`\n"
                },
                "updatePolicyOnChange": {
                    "type": "boolean",
                    "description": "If true, there is no initial update notification with the current value of all the data. NOT CURRENTLY SUPPORTED. If\nspecified, must be false\n"
                },
                "updatePolicyPeriodic": {
                    "type": "integer",
                    "description": "Period of update notifications in hundredths of a second - Range: `0`-`4294967295`\n"
                }
            },
            "required": [
                "subscriptionId"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "encoding": {
                    "type": "string",
                    "description": "Update notification encoding\n"
                },
                "filterXpath": {
                    "type": "string",
                    "description": "XPath expression describing the set of objects wanted as part of the subscription\n"
                },
                "receivers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/MdtSubscriptionReceiver:MdtSubscriptionReceiver"
                    },
                    "description": "Configuration of receivers of configured subscriptions. Use of this is deprecated. Use mdt-receiver-names instead.\n"
                },
                "sourceAddress": {
                    "type": "string",
                    "description": "The source address for the notifications\n"
                },
                "sourceVrf": {
                    "type": "string",
                    "description": "Network instance name for the VRF\n"
                },
                "stream": {
                    "type": "string",
                    "description": "The name of the event stream being subscribed to\n"
                },
                "subscriptionId": {
                    "type": "integer",
                    "description": "Unique subscription identifier. - Range: `0`-`2147483647`\n"
                },
                "updatePolicyOnChange": {
                    "type": "boolean",
                    "description": "If true, there is no initial update notification with the current value of all the data. NOT CURRENTLY SUPPORTED. If\nspecified, must be false\n"
                },
                "updatePolicyPeriodic": {
                    "type": "integer",
                    "description": "Period of update notifications in hundredths of a second - Range: `0`-`4294967295`\n"
                }
            },
            "requiredInputs": [
                "subscriptionId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MdtSubscription resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encoding": {
                        "type": "string",
                        "description": "Update notification encoding\n"
                    },
                    "filterXpath": {
                        "type": "string",
                        "description": "XPath expression describing the set of objects wanted as part of the subscription\n"
                    },
                    "receivers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/MdtSubscriptionReceiver:MdtSubscriptionReceiver"
                        },
                        "description": "Configuration of receivers of configured subscriptions. Use of this is deprecated. Use mdt-receiver-names instead.\n"
                    },
                    "sourceAddress": {
                        "type": "string",
                        "description": "The source address for the notifications\n"
                    },
                    "sourceVrf": {
                        "type": "string",
                        "description": "Network instance name for the VRF\n"
                    },
                    "stream": {
                        "type": "string",
                        "description": "The name of the event stream being subscribed to\n"
                    },
                    "subscriptionId": {
                        "type": "integer",
                        "description": "Unique subscription identifier. - Range: `0`-`2147483647`\n"
                    },
                    "updatePolicyOnChange": {
                        "type": "boolean",
                        "description": "If true, there is no initial update notification with the current value of all the data. NOT CURRENTLY SUPPORTED. If\nspecified, must be false\n"
                    },
                    "updatePolicyPeriodic": {
                        "type": "integer",
                        "description": "Period of update notifications in hundredths of a second - Range: `0`-`4294967295`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/msdp:Msdp": {
            "description": "This resource can manage the MSDP configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Msdp;\nimport com.pulumi.iosxe.MsdpArgs;\nimport com.pulumi.iosxe.inputs.MsdpPasswordArgs;\nimport com.pulumi.iosxe.inputs.MsdpPeerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Msdp(\"example\", MsdpArgs.builder()        \n            .originatorId(\"Loopback100\")\n            .passwords(MsdpPasswordArgs.builder()\n                .addr(\"10.1.1.1\")\n                .encryption(0)\n                .password(\"Cisco123\")\n                .build())\n            .peers(MsdpPeerArgs.builder()\n                .addr(\"10.1.1.1\")\n                .connect_source_loopback(100)\n                .remote_as(65000)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Msdp\n    properties:\n      originatorId: Loopback100\n      passwords:\n        - addr: 10.1.1.1\n          encryption: 0\n          password: Cisco123\n      peers:\n        - addr: 10.1.1.1\n          connect_source_loopback: 100\n          remote_as: 65000\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/msdp:Msdp example \"Cisco-IOS-XE-native:native/ip/Cisco-IOS-XE-multicast:msdp\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "originatorId": {
                    "type": "string",
                    "description": "Configure MSDP Originator ID\n"
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/MsdpPassword:MsdpPassword"
                    },
                    "description": "MSDP peer on which the password is to be set\n"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/MsdpPeer:MsdpPeer"
                    },
                    "description": "Configure an MSDP peer\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "originatorId": {
                    "type": "string",
                    "description": "Configure MSDP Originator ID\n"
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/MsdpPassword:MsdpPassword"
                    },
                    "description": "MSDP peer on which the password is to be set\n"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/MsdpPeer:MsdpPeer"
                    },
                    "description": "Configure an MSDP peer\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Msdp resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "originatorId": {
                        "type": "string",
                        "description": "Configure MSDP Originator ID\n"
                    },
                    "passwords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/MsdpPassword:MsdpPassword"
                        },
                        "description": "MSDP peer on which the password is to be set\n"
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/MsdpPeer:MsdpPeer"
                        },
                        "description": "Configure an MSDP peer\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/msdpVrf:MsdpVrf": {
            "description": "This resource can manage the MSDP VRF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.MsdpVrf;\nimport com.pulumi.iosxe.MsdpVrfArgs;\nimport com.pulumi.iosxe.inputs.MsdpVrfPasswordArgs;\nimport com.pulumi.iosxe.inputs.MsdpVrfPeerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new MsdpVrf(\"example\", MsdpVrfArgs.builder()        \n            .originatorId(\"Loopback100\")\n            .passwords(MsdpVrfPasswordArgs.builder()\n                .addr(\"10.1.1.1\")\n                .encryption(0)\n                .password(\"Cisco123\")\n                .build())\n            .peers(MsdpVrfPeerArgs.builder()\n                .addr(\"10.1.1.1\")\n                .connect_source_loopback(100)\n                .remote_as(65000)\n                .build())\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:MsdpVrf\n    properties:\n      originatorId: Loopback100\n      passwords:\n        - addr: 10.1.1.1\n          encryption: 0\n          password: Cisco123\n      peers:\n        - addr: 10.1.1.1\n          connect_source_loopback: 100\n          remote_as: 65000\n      vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/msdpVrf:MsdpVrf example \"Cisco-IOS-XE-native:native/ip/Cisco-IOS-XE-multicast:msdp/vrf=VRF1\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "originatorId": {
                    "type": "string",
                    "description": "Configure MSDP Originator ID\n"
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/MsdpVrfPassword:MsdpVrfPassword"
                    },
                    "description": "MSDP peer on which the password is to be set\n"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/MsdpVrfPeer:MsdpVrfPeer"
                    },
                    "description": "Configure an MSDP peer\n"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "required": [
                "vrf"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "originatorId": {
                    "type": "string",
                    "description": "Configure MSDP Originator ID\n"
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/MsdpVrfPassword:MsdpVrfPassword"
                    },
                    "description": "MSDP peer on which the password is to be set\n"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/MsdpVrfPeer:MsdpVrfPeer"
                    },
                    "description": "Configure an MSDP peer\n"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MsdpVrf resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "originatorId": {
                        "type": "string",
                        "description": "Configure MSDP Originator ID\n"
                    },
                    "passwords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/MsdpVrfPassword:MsdpVrfPassword"
                        },
                        "description": "MSDP peer on which the password is to be set\n"
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/MsdpVrfPeer:MsdpVrfPeer"
                        },
                        "description": "Configure an MSDP peer\n"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/ntp:Ntp": {
            "description": "This resource can manage the NTP configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Ntp;\nimport com.pulumi.iosxe.NtpArgs;\nimport com.pulumi.iosxe.inputs.NtpAuthenticationKeyArgs;\nimport com.pulumi.iosxe.inputs.NtpPeerVrfArgs;\nimport com.pulumi.iosxe.inputs.NtpPeerArgs;\nimport com.pulumi.iosxe.inputs.NtpServerVrfArgs;\nimport com.pulumi.iosxe.inputs.NtpServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ntp(\"example\", NtpArgs.builder()        \n            .accessGroupPeerAcl(\"SACL1\")\n            .accessGroupQueryOnlyAcl(\"SACL1\")\n            .accessGroupServeAcl(\"SACL1\")\n            .accessGroupServeOnlyAcl(\"SACL1\")\n            .authenticate(true)\n            .authenticationKeys(NtpAuthenticationKeyArgs.builder()\n                .encryption_type(7)\n                .md5(\"060506324F41584B564347\")\n                .number(1)\n                .build())\n            .logging(false)\n            .master(true)\n            .masterStratum(5)\n            .passive(false)\n            .peerVrfs(NtpPeerVrfArgs.builder()\n                .name(\"VRF1\")\n                .peers(NtpPeerVrfPeerArgs.builder()\n                    .ipAddress(\"5.4.5.6\")\n                    .key(1)\n                    .prefer(true)\n                    .version(2)\n                    .build())\n                .build())\n            .peers(NtpPeerArgs.builder()\n                .ip_address(\"5.2.3.4\")\n                .key(1)\n                .prefer(true)\n                .source(\"Loopback1\")\n                .version(2)\n                .build())\n            .serverVrfs(NtpServerVrfArgs.builder()\n                .name(\"VRF1\")\n                .servers(NtpServerVrfServerArgs.builder()\n                    .ipAddress(\"3.4.5.6\")\n                    .key(1)\n                    .prefer(true)\n                    .version(2)\n                    .build())\n                .build())\n            .servers(NtpServerArgs.builder()\n                .ip_address(\"1.2.3.4\")\n                .key(1)\n                .prefer(true)\n                .source(\"Loopback1\")\n                .version(2)\n                .build())\n            .trapSourceLoopback(1)\n            .updateCalendar(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Ntp\n    properties:\n      accessGroupPeerAcl: SACL1\n      accessGroupQueryOnlyAcl: SACL1\n      accessGroupServeAcl: SACL1\n      accessGroupServeOnlyAcl: SACL1\n      authenticate: true\n      authenticationKeys:\n        - encryption_type: 7\n          md5: 060506324F41584B564347\n          number: 1\n      logging: false\n      master: true\n      masterStratum: 5\n      passive: false\n      peerVrfs:\n        - name: VRF1\n          peers:\n            - ipAddress: 5.4.5.6\n              key: 1\n              prefer: true\n              version: 2\n      peers:\n        - ip_address: 5.2.3.4\n          key: 1\n          prefer: true\n          source: Loopback1\n          version: 2\n      serverVrfs:\n        - name: VRF1\n          servers:\n            - ipAddress: 3.4.5.6\n              key: 1\n              prefer: true\n              version: 2\n      servers:\n        - ip_address: 1.2.3.4\n          key: 1\n          prefer: true\n          source: Loopback1\n          version: 2\n      trapSourceLoopback: 1\n      updateCalendar: false\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/ntp:Ntp example \"Cisco-IOS-XE-native:native/ntp\"\n```\n\n ",
            "properties": {
                "accessGroupPeerAcl": {
                    "type": "string"
                },
                "accessGroupQueryOnlyAcl": {
                    "type": "string"
                },
                "accessGroupServeAcl": {
                    "type": "string"
                },
                "accessGroupServeOnlyAcl": {
                    "type": "string"
                },
                "authenticate": {
                    "type": "boolean",
                    "description": "Authenticate time sources\n"
                },
                "authenticationKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/NtpAuthenticationKey:NtpAuthenticationKey"
                    },
                    "description": "Authentication key for trusted time sources\n"
                },
                "clockPeriod": {
                    "type": "integer",
                    "description": "Length of hardware clock tick - Range: `0`-`4294967295`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "logging": {
                    "type": "boolean",
                    "description": "Enable NTP message logging\n"
                },
                "master": {
                    "type": "boolean",
                    "description": "Act as NTP master clock\n"
                },
                "masterStratum": {
                    "type": "integer",
                    "description": "- Range: `1`-`15`\n"
                },
                "passive": {
                    "type": "boolean",
                    "description": "NTP passive mode\n"
                },
                "peerVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/NtpPeerVrf:NtpPeerVrf"
                    },
                    "description": "VPN Routing/Forwarding Information\n"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/NtpPeer:NtpPeer"
                    }
                },
                "serverVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/NtpServerVrf:NtpServerVrf"
                    },
                    "description": "VPN Routing/Forwarding Information\n"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/NtpServer:NtpServer"
                    }
                },
                "trapSourceFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "trapSourceGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "trapSourceHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "trapSourceLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "trapSourcePortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "trapSourcePortChannelSubinterface": {
                    "type": "string"
                },
                "trapSourceTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "trapSourceVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "updateCalendar": {
                    "type": "boolean",
                    "description": "Periodically update calendar with NTP time\n"
                }
            },
            "inputProperties": {
                "accessGroupPeerAcl": {
                    "type": "string"
                },
                "accessGroupQueryOnlyAcl": {
                    "type": "string"
                },
                "accessGroupServeAcl": {
                    "type": "string"
                },
                "accessGroupServeOnlyAcl": {
                    "type": "string"
                },
                "authenticate": {
                    "type": "boolean",
                    "description": "Authenticate time sources\n"
                },
                "authenticationKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/NtpAuthenticationKey:NtpAuthenticationKey"
                    },
                    "description": "Authentication key for trusted time sources\n"
                },
                "clockPeriod": {
                    "type": "integer",
                    "description": "Length of hardware clock tick - Range: `0`-`4294967295`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "logging": {
                    "type": "boolean",
                    "description": "Enable NTP message logging\n"
                },
                "master": {
                    "type": "boolean",
                    "description": "Act as NTP master clock\n"
                },
                "masterStratum": {
                    "type": "integer",
                    "description": "- Range: `1`-`15`\n"
                },
                "passive": {
                    "type": "boolean",
                    "description": "NTP passive mode\n"
                },
                "peerVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/NtpPeerVrf:NtpPeerVrf"
                    },
                    "description": "VPN Routing/Forwarding Information\n"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/NtpPeer:NtpPeer"
                    }
                },
                "serverVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/NtpServerVrf:NtpServerVrf"
                    },
                    "description": "VPN Routing/Forwarding Information\n"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/NtpServer:NtpServer"
                    }
                },
                "trapSourceFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "trapSourceGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "trapSourceHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "trapSourceLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "trapSourcePortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "trapSourcePortChannelSubinterface": {
                    "type": "string"
                },
                "trapSourceTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "trapSourceVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "updateCalendar": {
                    "type": "boolean",
                    "description": "Periodically update calendar with NTP time\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ntp resources.\n",
                "properties": {
                    "accessGroupPeerAcl": {
                        "type": "string"
                    },
                    "accessGroupQueryOnlyAcl": {
                        "type": "string"
                    },
                    "accessGroupServeAcl": {
                        "type": "string"
                    },
                    "accessGroupServeOnlyAcl": {
                        "type": "string"
                    },
                    "authenticate": {
                        "type": "boolean",
                        "description": "Authenticate time sources\n"
                    },
                    "authenticationKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/NtpAuthenticationKey:NtpAuthenticationKey"
                        },
                        "description": "Authentication key for trusted time sources\n"
                    },
                    "clockPeriod": {
                        "type": "integer",
                        "description": "Length of hardware clock tick - Range: `0`-`4294967295`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "logging": {
                        "type": "boolean",
                        "description": "Enable NTP message logging\n"
                    },
                    "master": {
                        "type": "boolean",
                        "description": "Act as NTP master clock\n"
                    },
                    "masterStratum": {
                        "type": "integer",
                        "description": "- Range: `1`-`15`\n"
                    },
                    "passive": {
                        "type": "boolean",
                        "description": "NTP passive mode\n"
                    },
                    "peerVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/NtpPeerVrf:NtpPeerVrf"
                        },
                        "description": "VPN Routing/Forwarding Information\n"
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/NtpPeer:NtpPeer"
                        }
                    },
                    "serverVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/NtpServerVrf:NtpServerVrf"
                        },
                        "description": "VPN Routing/Forwarding Information\n"
                    },
                    "servers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/NtpServer:NtpServer"
                        }
                    },
                    "trapSourceFortyGigabitEthernet": {
                        "type": "string",
                        "description": "Forty GigabitEthernet\n"
                    },
                    "trapSourceGigabitEthernet": {
                        "type": "string",
                        "description": "GigabitEthernet IEEE 802.3z\n"
                    },
                    "trapSourceHundredGigE": {
                        "type": "string",
                        "description": "Hundred GigabitEthernet\n"
                    },
                    "trapSourceLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    },
                    "trapSourcePortChannel": {
                        "type": "integer",
                        "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                    },
                    "trapSourcePortChannelSubinterface": {
                        "type": "string"
                    },
                    "trapSourceTenGigabitEthernet": {
                        "type": "string",
                        "description": "Ten Gigabit Ethernet\n"
                    },
                    "trapSourceVlan": {
                        "type": "integer",
                        "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                    },
                    "updateCalendar": {
                        "type": "boolean",
                        "description": "Periodically update calendar with NTP time\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/ospf:Ospf": {
            "description": "This resource can manage the OSPF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Ospf;\nimport com.pulumi.iosxe.OspfArgs;\nimport com.pulumi.iosxe.inputs.OspfAreaArgs;\nimport com.pulumi.iosxe.inputs.OspfNeighborArgs;\nimport com.pulumi.iosxe.inputs.OspfNetworkArgs;\nimport com.pulumi.iosxe.inputs.OspfSummaryAddressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Ospf(\"example\", OspfArgs.builder()        \n            .areas(OspfAreaArgs.builder()\n                .area_id(\"5\")\n                .authentication_message_digest(true)\n                .nssa(true)\n                .nssa_default_information_originate(true)\n                .nssa_default_information_originate_metric(100)\n                .nssa_default_information_originate_metric_type(1)\n                .nssa_no_redistribution(true)\n                .nssa_no_summary(true)\n                .build())\n            .bfdAllInterfaces(true)\n            .defaultInformationOriginate(true)\n            .defaultInformationOriginateAlways(true)\n            .defaultMetric(21)\n            .distance(120)\n            .domainTag(10)\n            .neighbors(OspfNeighborArgs.builder()\n                .cost(100)\n                .ip(\"2.2.2.2\")\n                .priority(10)\n                .build())\n            .networks(OspfNetworkArgs.builder()\n                .area(\"0\")\n                .ip(\"3.3.3.0\")\n                .wildcard(\"0.0.0.255\")\n                .build())\n            .passiveInterfaceDefault(true)\n            .priority(100)\n            .processId(1)\n            .routerId(\"1.2.3.4\")\n            .shutdown(false)\n            .summaryAddresses(OspfSummaryAddressArgs.builder()\n                .ip(\"3.3.3.0\")\n                .mask(\"255.255.255.0\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Ospf\n    properties:\n      areas:\n        - area_id: '5'\n          authentication_message_digest: true\n          nssa: true\n          nssa_default_information_originate: true\n          nssa_default_information_originate_metric: 100\n          nssa_default_information_originate_metric_type: 1\n          nssa_no_redistribution: true\n          nssa_no_summary: true\n      bfdAllInterfaces: true\n      defaultInformationOriginate: true\n      defaultInformationOriginateAlways: true\n      defaultMetric: 21\n      distance: 120\n      domainTag: 10\n      neighbors:\n        - cost: 100\n          ip: 2.2.2.2\n          priority: 10\n      networks:\n        - area: '0'\n          ip: 3.3.3.0\n          wildcard: 0.0.0.255\n      passiveInterfaceDefault: true\n      priority: 100\n      processId: 1\n      routerId: 1.2.3.4\n      shutdown: false\n      summaryAddresses:\n        - ip: 3.3.3.0\n          mask: 255.255.255.0\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/ospf:Ospf example \"Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-ospf:router-ospf/ospf/process-id=1\"\n```\n\n ",
            "properties": {
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfArea:OspfArea"
                    },
                    "description": "OSPF area parameters\n"
                },
                "bfdAllInterfaces": {
                    "type": "boolean",
                    "description": "Enable BFD on all interfaces\n"
                },
                "defaultInformationOriginate": {
                    "type": "boolean",
                    "description": "Distribute a default route\n"
                },
                "defaultInformationOriginateAlways": {
                    "type": "boolean",
                    "description": "Always advertise default route\n"
                },
                "defaultMetric": {
                    "type": "integer",
                    "description": "Set metric of redistributed routes - Range: `1`-`16777214`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "distance": {
                    "type": "integer",
                    "description": "Administrative distance - Range: `1`-`255`\n"
                },
                "domainTag": {
                    "type": "integer",
                    "description": "OSPF domain-tag - Range: `1`-`4294967295`\n"
                },
                "mplsLdpAutoconfig": {
                    "type": "boolean",
                    "description": "Configure LDP automatic configuration\n"
                },
                "mplsLdpSync": {
                    "type": "boolean",
                    "description": "Configure LDP-IGP Synchronization\n"
                },
                "neighbors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfNeighbor:OspfNeighbor"
                    },
                    "description": "Specify a neighbor router\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfNetwork:OspfNetwork"
                    },
                    "description": "Enable routing on an IP network\n"
                },
                "passiveInterfaceDefault": {
                    "type": "boolean",
                    "description": "Suppress routing updates on all interfaces\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "OSPF topology priority - Range: `0`-`127`\n"
                },
                "processId": {
                    "type": "integer",
                    "description": "Process ID - Range: `1`-`65535`\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Override configured router identifier (peers will reset)\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the OSPF protocol under the current instance\n"
                },
                "summaryAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfSummaryAddress:OspfSummaryAddress"
                    },
                    "description": "Configure IP address summaries\n"
                }
            },
            "required": [
                "processId"
            ],
            "inputProperties": {
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfArea:OspfArea"
                    },
                    "description": "OSPF area parameters\n"
                },
                "bfdAllInterfaces": {
                    "type": "boolean",
                    "description": "Enable BFD on all interfaces\n"
                },
                "defaultInformationOriginate": {
                    "type": "boolean",
                    "description": "Distribute a default route\n"
                },
                "defaultInformationOriginateAlways": {
                    "type": "boolean",
                    "description": "Always advertise default route\n"
                },
                "defaultMetric": {
                    "type": "integer",
                    "description": "Set metric of redistributed routes - Range: `1`-`16777214`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "distance": {
                    "type": "integer",
                    "description": "Administrative distance - Range: `1`-`255`\n"
                },
                "domainTag": {
                    "type": "integer",
                    "description": "OSPF domain-tag - Range: `1`-`4294967295`\n"
                },
                "mplsLdpAutoconfig": {
                    "type": "boolean",
                    "description": "Configure LDP automatic configuration\n"
                },
                "mplsLdpSync": {
                    "type": "boolean",
                    "description": "Configure LDP-IGP Synchronization\n"
                },
                "neighbors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfNeighbor:OspfNeighbor"
                    },
                    "description": "Specify a neighbor router\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfNetwork:OspfNetwork"
                    },
                    "description": "Enable routing on an IP network\n"
                },
                "passiveInterfaceDefault": {
                    "type": "boolean",
                    "description": "Suppress routing updates on all interfaces\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "OSPF topology priority - Range: `0`-`127`\n"
                },
                "processId": {
                    "type": "integer",
                    "description": "Process ID - Range: `1`-`65535`\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Override configured router identifier (peers will reset)\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the OSPF protocol under the current instance\n"
                },
                "summaryAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfSummaryAddress:OspfSummaryAddress"
                    },
                    "description": "Configure IP address summaries\n"
                }
            },
            "requiredInputs": [
                "processId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ospf resources.\n",
                "properties": {
                    "areas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/OspfArea:OspfArea"
                        },
                        "description": "OSPF area parameters\n"
                    },
                    "bfdAllInterfaces": {
                        "type": "boolean",
                        "description": "Enable BFD on all interfaces\n"
                    },
                    "defaultInformationOriginate": {
                        "type": "boolean",
                        "description": "Distribute a default route\n"
                    },
                    "defaultInformationOriginateAlways": {
                        "type": "boolean",
                        "description": "Always advertise default route\n"
                    },
                    "defaultMetric": {
                        "type": "integer",
                        "description": "Set metric of redistributed routes - Range: `1`-`16777214`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "distance": {
                        "type": "integer",
                        "description": "Administrative distance - Range: `1`-`255`\n"
                    },
                    "domainTag": {
                        "type": "integer",
                        "description": "OSPF domain-tag - Range: `1`-`4294967295`\n"
                    },
                    "mplsLdpAutoconfig": {
                        "type": "boolean",
                        "description": "Configure LDP automatic configuration\n"
                    },
                    "mplsLdpSync": {
                        "type": "boolean",
                        "description": "Configure LDP-IGP Synchronization\n"
                    },
                    "neighbors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/OspfNeighbor:OspfNeighbor"
                        },
                        "description": "Specify a neighbor router\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/OspfNetwork:OspfNetwork"
                        },
                        "description": "Enable routing on an IP network\n"
                    },
                    "passiveInterfaceDefault": {
                        "type": "boolean",
                        "description": "Suppress routing updates on all interfaces\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "OSPF topology priority - Range: `0`-`127`\n"
                    },
                    "processId": {
                        "type": "integer",
                        "description": "Process ID - Range: `1`-`65535`\n"
                    },
                    "routerId": {
                        "type": "string",
                        "description": "Override configured router identifier (peers will reset)\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the OSPF protocol under the current instance\n"
                    },
                    "summaryAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/OspfSummaryAddress:OspfSummaryAddress"
                        },
                        "description": "Configure IP address summaries\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/ospfVrf:OspfVrf": {
            "description": "This resource can manage the OSPF VRF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.OspfVrf;\nimport com.pulumi.iosxe.OspfVrfArgs;\nimport com.pulumi.iosxe.inputs.OspfVrfAreaArgs;\nimport com.pulumi.iosxe.inputs.OspfVrfNeighborArgs;\nimport com.pulumi.iosxe.inputs.OspfVrfNetworkArgs;\nimport com.pulumi.iosxe.inputs.OspfVrfSummaryAddressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new OspfVrf(\"example\", OspfVrfArgs.builder()        \n            .areas(OspfVrfAreaArgs.builder()\n                .area_id(\"5\")\n                .authentication_message_digest(true)\n                .nssa(true)\n                .nssa_default_information_originate(true)\n                .nssa_default_information_originate_metric(100)\n                .nssa_default_information_originate_metric_type(1)\n                .nssa_no_redistribution(true)\n                .nssa_no_summary(true)\n                .build())\n            .bfdAllInterfaces(true)\n            .defaultInformationOriginate(true)\n            .defaultInformationOriginateAlways(true)\n            .defaultMetric(21)\n            .distance(120)\n            .domainTag(10)\n            .neighbors(OspfVrfNeighborArgs.builder()\n                .cost(100)\n                .ip(\"2.2.2.2\")\n                .priority(10)\n                .build())\n            .networks(OspfVrfNetworkArgs.builder()\n                .area(\"0\")\n                .ip(\"3.3.3.0\")\n                .wildcard(\"0.0.0.255\")\n                .build())\n            .passiveInterfaceDefault(true)\n            .priority(100)\n            .processId(2)\n            .routerId(\"1.2.3.4\")\n            .shutdown(false)\n            .summaryAddresses(OspfVrfSummaryAddressArgs.builder()\n                .ip(\"3.3.3.0\")\n                .mask(\"255.255.255.0\")\n                .build())\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:OspfVrf\n    properties:\n      areas:\n        - area_id: '5'\n          authentication_message_digest: true\n          nssa: true\n          nssa_default_information_originate: true\n          nssa_default_information_originate_metric: 100\n          nssa_default_information_originate_metric_type: 1\n          nssa_no_redistribution: true\n          nssa_no_summary: true\n      bfdAllInterfaces: true\n      defaultInformationOriginate: true\n      defaultInformationOriginateAlways: true\n      defaultMetric: 21\n      distance: 120\n      domainTag: 10\n      neighbors:\n        - cost: 100\n          ip: 2.2.2.2\n          priority: 10\n      networks:\n        - area: '0'\n          ip: 3.3.3.0\n          wildcard: 0.0.0.255\n      passiveInterfaceDefault: true\n      priority: 100\n      processId: 2\n      routerId: 1.2.3.4\n      shutdown: false\n      summaryAddresses:\n        - ip: 3.3.3.0\n          mask: 255.255.255.0\n      vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/ospfVrf:OspfVrf example \"Cisco-IOS-XE-native:native/router/Cisco-IOS-XE-ospf:router-ospf/ospf/process-id-vrf=2,VRF1\"\n```\n\n ",
            "properties": {
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfVrfArea:OspfVrfArea"
                    },
                    "description": "OSPF area parameters\n"
                },
                "bfdAllInterfaces": {
                    "type": "boolean",
                    "description": "Enable BFD on all interfaces\n"
                },
                "defaultInformationOriginate": {
                    "type": "boolean",
                    "description": "Distribute a default route\n"
                },
                "defaultInformationOriginateAlways": {
                    "type": "boolean",
                    "description": "Always advertise default route\n"
                },
                "defaultMetric": {
                    "type": "integer",
                    "description": "Set metric of redistributed routes - Range: `1`-`16777214`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "distance": {
                    "type": "integer",
                    "description": "Administrative distance - Range: `1`-`255`\n"
                },
                "domainTag": {
                    "type": "integer",
                    "description": "OSPF domain-tag - Range: `1`-`4294967295`\n"
                },
                "mplsLdpAutoconfig": {
                    "type": "boolean",
                    "description": "Configure LDP automatic configuration\n"
                },
                "mplsLdpSync": {
                    "type": "boolean",
                    "description": "Configure LDP-IGP Synchronization\n"
                },
                "neighbors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfVrfNeighbor:OspfVrfNeighbor"
                    },
                    "description": "Specify a neighbor router\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfVrfNetwork:OspfVrfNetwork"
                    },
                    "description": "Enable routing on an IP network\n"
                },
                "passiveInterfaceDefault": {
                    "type": "boolean",
                    "description": "Suppress routing updates on all interfaces\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "OSPF topology priority - Range: `0`-`127`\n"
                },
                "processId": {
                    "type": "integer",
                    "description": "Process ID - Range: `1`-`65535`\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Override configured router identifier (peers will reset)\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the OSPF protocol under the current instance\n"
                },
                "summaryAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfVrfSummaryAddress:OspfVrfSummaryAddress"
                    },
                    "description": "Configure IP address summaries\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VPN Routing/Forwarding Instance\n"
                }
            },
            "required": [
                "processId",
                "vrf"
            ],
            "inputProperties": {
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfVrfArea:OspfVrfArea"
                    },
                    "description": "OSPF area parameters\n"
                },
                "bfdAllInterfaces": {
                    "type": "boolean",
                    "description": "Enable BFD on all interfaces\n"
                },
                "defaultInformationOriginate": {
                    "type": "boolean",
                    "description": "Distribute a default route\n"
                },
                "defaultInformationOriginateAlways": {
                    "type": "boolean",
                    "description": "Always advertise default route\n"
                },
                "defaultMetric": {
                    "type": "integer",
                    "description": "Set metric of redistributed routes - Range: `1`-`16777214`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "distance": {
                    "type": "integer",
                    "description": "Administrative distance - Range: `1`-`255`\n"
                },
                "domainTag": {
                    "type": "integer",
                    "description": "OSPF domain-tag - Range: `1`-`4294967295`\n"
                },
                "mplsLdpAutoconfig": {
                    "type": "boolean",
                    "description": "Configure LDP automatic configuration\n"
                },
                "mplsLdpSync": {
                    "type": "boolean",
                    "description": "Configure LDP-IGP Synchronization\n"
                },
                "neighbors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfVrfNeighbor:OspfVrfNeighbor"
                    },
                    "description": "Specify a neighbor router\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfVrfNetwork:OspfVrfNetwork"
                    },
                    "description": "Enable routing on an IP network\n"
                },
                "passiveInterfaceDefault": {
                    "type": "boolean",
                    "description": "Suppress routing updates on all interfaces\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "OSPF topology priority - Range: `0`-`127`\n"
                },
                "processId": {
                    "type": "integer",
                    "description": "Process ID - Range: `1`-`65535`\n"
                },
                "routerId": {
                    "type": "string",
                    "description": "Override configured router identifier (peers will reset)\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown the OSPF protocol under the current instance\n"
                },
                "summaryAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/OspfVrfSummaryAddress:OspfVrfSummaryAddress"
                    },
                    "description": "Configure IP address summaries\n"
                },
                "vrf": {
                    "type": "string",
                    "description": "VPN Routing/Forwarding Instance\n"
                }
            },
            "requiredInputs": [
                "processId",
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OspfVrf resources.\n",
                "properties": {
                    "areas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/OspfVrfArea:OspfVrfArea"
                        },
                        "description": "OSPF area parameters\n"
                    },
                    "bfdAllInterfaces": {
                        "type": "boolean",
                        "description": "Enable BFD on all interfaces\n"
                    },
                    "defaultInformationOriginate": {
                        "type": "boolean",
                        "description": "Distribute a default route\n"
                    },
                    "defaultInformationOriginateAlways": {
                        "type": "boolean",
                        "description": "Always advertise default route\n"
                    },
                    "defaultMetric": {
                        "type": "integer",
                        "description": "Set metric of redistributed routes - Range: `1`-`16777214`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "distance": {
                        "type": "integer",
                        "description": "Administrative distance - Range: `1`-`255`\n"
                    },
                    "domainTag": {
                        "type": "integer",
                        "description": "OSPF domain-tag - Range: `1`-`4294967295`\n"
                    },
                    "mplsLdpAutoconfig": {
                        "type": "boolean",
                        "description": "Configure LDP automatic configuration\n"
                    },
                    "mplsLdpSync": {
                        "type": "boolean",
                        "description": "Configure LDP-IGP Synchronization\n"
                    },
                    "neighbors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/OspfVrfNeighbor:OspfVrfNeighbor"
                        },
                        "description": "Specify a neighbor router\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/OspfVrfNetwork:OspfVrfNetwork"
                        },
                        "description": "Enable routing on an IP network\n"
                    },
                    "passiveInterfaceDefault": {
                        "type": "boolean",
                        "description": "Suppress routing updates on all interfaces\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "OSPF topology priority - Range: `0`-`127`\n"
                    },
                    "processId": {
                        "type": "integer",
                        "description": "Process ID - Range: `1`-`65535`\n"
                    },
                    "routerId": {
                        "type": "string",
                        "description": "Override configured router identifier (peers will reset)\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the OSPF protocol under the current instance\n"
                    },
                    "summaryAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/OspfVrfSummaryAddress:OspfVrfSummaryAddress"
                        },
                        "description": "Configure IP address summaries\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VPN Routing/Forwarding Instance\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/pim:Pim": {
            "description": "This resource can manage the PIM configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Pim;\nimport com.pulumi.iosxe.PimArgs;\nimport com.pulumi.iosxe.inputs.PimRpAddressArgs;\nimport com.pulumi.iosxe.inputs.PimRpCandidateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Pim(\"example\", PimArgs.builder()        \n            .autorp(false)\n            .autorpListener(false)\n            .bsrCandidateLoopback(100)\n            .bsrCandidateMask(30)\n            .bsrCandidatePriority(10)\n            .rpAddress(\"9.9.9.9\")\n            .rpAddressBidir(false)\n            .rpAddressOverride(false)\n            .rpAddresses(PimRpAddressArgs.builder()\n                .access_list(\"10\")\n                .bidir(false)\n                .override(false)\n                .rp_address(\"10.10.10.10\")\n                .build())\n            .rpCandidates(PimRpCandidateArgs.builder()\n                .bidir(false)\n                .interface_(\"Loopback100\")\n                .interval(100)\n                .priority(10)\n                .build())\n            .ssmDefault(false)\n            .ssmRange(\"10\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Pim\n    properties:\n      autorp: false\n      autorpListener: false\n      bsrCandidateLoopback: 100\n      bsrCandidateMask: 30\n      bsrCandidatePriority: 10\n      rpAddress: 9.9.9.9\n      rpAddressBidir: false\n      rpAddressOverride: false\n      rpAddresses:\n        - access_list: '10'\n          bidir: false\n          override: false\n          rp_address: 10.10.10.10\n      rpCandidates:\n        - bidir: false\n          interface: Loopback100\n          interval: 100\n          priority: 10\n      ssmDefault: false\n      ssmRange: '10'\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/pim:Pim example \"Cisco-IOS-XE-native:native/ip/pim\"\n```\n\n ",
            "properties": {
                "autorp": {
                    "type": "boolean",
                    "description": "Configure AutoRP global operations\n"
                },
                "autorpListener": {
                    "type": "boolean",
                    "description": "Allow AutoRP packets across sparse mode interface\n"
                },
                "bsrCandidateAcceptRpCandidate": {
                    "type": "string",
                    "description": "BSR RP candidate filter\n"
                },
                "bsrCandidateLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "bsrCandidateMask": {
                    "type": "integer",
                    "description": "Hash Mask length for RP selection - Range: `0`-`32`\n"
                },
                "bsrCandidatePriority": {
                    "type": "integer",
                    "description": "Priority value for candidate bootstrap router - Range: `0`-`255`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "rpAddress": {
                    "type": "string",
                    "description": "IP address of Rendezvous-point for group\n"
                },
                "rpAddressBidir": {
                    "type": "boolean",
                    "description": "Group range treated in bidirectional shared-tree mode\n"
                },
                "rpAddressOverride": {
                    "type": "boolean",
                    "description": "Overrides dynamically learnt RP mappings\n"
                },
                "rpAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/PimRpAddress:PimRpAddress"
                    },
                    "description": "PIM RP-address (Rendezvous Point)\n"
                },
                "rpCandidates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/PimRpCandidate:PimRpCandidate"
                    },
                    "description": "To be a PIM version 2 RP candidate\n"
                },
                "ssmDefault": {
                    "type": "boolean",
                    "description": "Use 232/8 group range for SSM\n"
                },
                "ssmRange": {
                    "type": "string",
                    "description": "ACL for group range to be used for SSM\n"
                }
            },
            "inputProperties": {
                "autorp": {
                    "type": "boolean",
                    "description": "Configure AutoRP global operations\n"
                },
                "autorpListener": {
                    "type": "boolean",
                    "description": "Allow AutoRP packets across sparse mode interface\n"
                },
                "bsrCandidateAcceptRpCandidate": {
                    "type": "string",
                    "description": "BSR RP candidate filter\n"
                },
                "bsrCandidateLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "bsrCandidateMask": {
                    "type": "integer",
                    "description": "Hash Mask length for RP selection - Range: `0`-`32`\n"
                },
                "bsrCandidatePriority": {
                    "type": "integer",
                    "description": "Priority value for candidate bootstrap router - Range: `0`-`255`\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "rpAddress": {
                    "type": "string",
                    "description": "IP address of Rendezvous-point for group\n"
                },
                "rpAddressBidir": {
                    "type": "boolean",
                    "description": "Group range treated in bidirectional shared-tree mode\n"
                },
                "rpAddressOverride": {
                    "type": "boolean",
                    "description": "Overrides dynamically learnt RP mappings\n"
                },
                "rpAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/PimRpAddress:PimRpAddress"
                    },
                    "description": "PIM RP-address (Rendezvous Point)\n"
                },
                "rpCandidates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/PimRpCandidate:PimRpCandidate"
                    },
                    "description": "To be a PIM version 2 RP candidate\n"
                },
                "ssmDefault": {
                    "type": "boolean",
                    "description": "Use 232/8 group range for SSM\n"
                },
                "ssmRange": {
                    "type": "string",
                    "description": "ACL for group range to be used for SSM\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Pim resources.\n",
                "properties": {
                    "autorp": {
                        "type": "boolean",
                        "description": "Configure AutoRP global operations\n"
                    },
                    "autorpListener": {
                        "type": "boolean",
                        "description": "Allow AutoRP packets across sparse mode interface\n"
                    },
                    "bsrCandidateAcceptRpCandidate": {
                        "type": "string",
                        "description": "BSR RP candidate filter\n"
                    },
                    "bsrCandidateLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    },
                    "bsrCandidateMask": {
                        "type": "integer",
                        "description": "Hash Mask length for RP selection - Range: `0`-`32`\n"
                    },
                    "bsrCandidatePriority": {
                        "type": "integer",
                        "description": "Priority value for candidate bootstrap router - Range: `0`-`255`\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "rpAddress": {
                        "type": "string",
                        "description": "IP address of Rendezvous-point for group\n"
                    },
                    "rpAddressBidir": {
                        "type": "boolean",
                        "description": "Group range treated in bidirectional shared-tree mode\n"
                    },
                    "rpAddressOverride": {
                        "type": "boolean",
                        "description": "Overrides dynamically learnt RP mappings\n"
                    },
                    "rpAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/PimRpAddress:PimRpAddress"
                        },
                        "description": "PIM RP-address (Rendezvous Point)\n"
                    },
                    "rpCandidates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/PimRpCandidate:PimRpCandidate"
                        },
                        "description": "To be a PIM version 2 RP candidate\n"
                    },
                    "ssmDefault": {
                        "type": "boolean",
                        "description": "Use 232/8 group range for SSM\n"
                    },
                    "ssmRange": {
                        "type": "string",
                        "description": "ACL for group range to be used for SSM\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/pimVrf:PimVrf": {
            "description": "This resource can manage the PIM VRF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.PimVrf;\nimport com.pulumi.iosxe.PimVrfArgs;\nimport com.pulumi.iosxe.inputs.PimVrfRpAddressArgs;\nimport com.pulumi.iosxe.inputs.PimVrfRpCandidateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PimVrf(\"example\", PimVrfArgs.builder()        \n            .autorp(false)\n            .autorpListener(false)\n            .bsrCandidateLoopback(100)\n            .bsrCandidateMask(30)\n            .bsrCandidatePriority(10)\n            .rpAddress(\"19.19.19.19\")\n            .rpAddressBidir(false)\n            .rpAddressOverride(false)\n            .rpAddresses(PimVrfRpAddressArgs.builder()\n                .access_list(\"10\")\n                .bidir(false)\n                .override(false)\n                .rp_address(\"10.10.10.10\")\n                .build())\n            .rpCandidates(PimVrfRpCandidateArgs.builder()\n                .bidir(false)\n                .interface_(\"Loopback100\")\n                .interval(100)\n                .priority(10)\n                .build())\n            .ssmDefault(false)\n            .ssmRange(\"10\")\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:PimVrf\n    properties:\n      autorp: false\n      autorpListener: false\n      bsrCandidateLoopback: 100\n      bsrCandidateMask: 30\n      bsrCandidatePriority: 10\n      rpAddress: 19.19.19.19\n      rpAddressBidir: false\n      rpAddressOverride: false\n      rpAddresses:\n        - access_list: '10'\n          bidir: false\n          override: false\n          rp_address: 10.10.10.10\n      rpCandidates:\n        - bidir: false\n          interface: Loopback100\n          interval: 100\n          priority: 10\n      ssmDefault: false\n      ssmRange: '10'\n      vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/pimVrf:PimVrf example \"Cisco-IOS-XE-native:native/ip/pim/Cisco-IOS-XE-multicast:vrf=VRF1\"\n```\n\n ",
            "properties": {
                "autorp": {
                    "type": "boolean",
                    "description": "Configure AutoRP global operations\n"
                },
                "autorpListener": {
                    "type": "boolean",
                    "description": "Allow AutoRP packets across sparse mode interface\n"
                },
                "bsrCandidateAcceptRpCandidate": {
                    "type": "string",
                    "description": "BSR RP candidate filter\n"
                },
                "bsrCandidateLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "bsrCandidateMask": {
                    "type": "integer",
                    "description": "Hash Mask length for RP selection - Range: `0`-`32`\n"
                },
                "bsrCandidatePriority": {
                    "type": "integer",
                    "description": "Priority value for candidate bootstrap router - Range: `0`-`255`\n"
                },
                "cacheRpfOif": {
                    "type": "boolean",
                    "description": "Cache outgoing interface RPF info\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "rpAddress": {
                    "type": "string",
                    "description": "IP address of Rendezvous-point for group\n"
                },
                "rpAddressBidir": {
                    "type": "boolean",
                    "description": "Group range treated in bidirectional shared-tree mode\n"
                },
                "rpAddressOverride": {
                    "type": "boolean",
                    "description": "Overrides dynamically learnt RP mappings\n"
                },
                "rpAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/PimVrfRpAddress:PimVrfRpAddress"
                    },
                    "description": "PIM RP-address (Rendezvous Point)\n"
                },
                "rpCandidates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/PimVrfRpCandidate:PimVrfRpCandidate"
                    },
                    "description": "To be a PIM version 2 RP candidate\n"
                },
                "ssmDefault": {
                    "type": "boolean",
                    "description": "Use 232/8 group range for SSM\n"
                },
                "ssmRange": {
                    "type": "string",
                    "description": "ACL for group range to be used for SSM\n"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "required": [
                "vrf"
            ],
            "inputProperties": {
                "autorp": {
                    "type": "boolean",
                    "description": "Configure AutoRP global operations\n"
                },
                "autorpListener": {
                    "type": "boolean",
                    "description": "Allow AutoRP packets across sparse mode interface\n"
                },
                "bsrCandidateAcceptRpCandidate": {
                    "type": "string",
                    "description": "BSR RP candidate filter\n"
                },
                "bsrCandidateLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "bsrCandidateMask": {
                    "type": "integer",
                    "description": "Hash Mask length for RP selection - Range: `0`-`32`\n"
                },
                "bsrCandidatePriority": {
                    "type": "integer",
                    "description": "Priority value for candidate bootstrap router - Range: `0`-`255`\n"
                },
                "cacheRpfOif": {
                    "type": "boolean",
                    "description": "Cache outgoing interface RPF info\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "rpAddress": {
                    "type": "string",
                    "description": "IP address of Rendezvous-point for group\n"
                },
                "rpAddressBidir": {
                    "type": "boolean",
                    "description": "Group range treated in bidirectional shared-tree mode\n"
                },
                "rpAddressOverride": {
                    "type": "boolean",
                    "description": "Overrides dynamically learnt RP mappings\n"
                },
                "rpAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/PimVrfRpAddress:PimVrfRpAddress"
                    },
                    "description": "PIM RP-address (Rendezvous Point)\n"
                },
                "rpCandidates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/PimVrfRpCandidate:PimVrfRpCandidate"
                    },
                    "description": "To be a PIM version 2 RP candidate\n"
                },
                "ssmDefault": {
                    "type": "boolean",
                    "description": "Use 232/8 group range for SSM\n"
                },
                "ssmRange": {
                    "type": "string",
                    "description": "ACL for group range to be used for SSM\n"
                },
                "vrf": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PimVrf resources.\n",
                "properties": {
                    "autorp": {
                        "type": "boolean",
                        "description": "Configure AutoRP global operations\n"
                    },
                    "autorpListener": {
                        "type": "boolean",
                        "description": "Allow AutoRP packets across sparse mode interface\n"
                    },
                    "bsrCandidateAcceptRpCandidate": {
                        "type": "string",
                        "description": "BSR RP candidate filter\n"
                    },
                    "bsrCandidateLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    },
                    "bsrCandidateMask": {
                        "type": "integer",
                        "description": "Hash Mask length for RP selection - Range: `0`-`32`\n"
                    },
                    "bsrCandidatePriority": {
                        "type": "integer",
                        "description": "Priority value for candidate bootstrap router - Range: `0`-`255`\n"
                    },
                    "cacheRpfOif": {
                        "type": "boolean",
                        "description": "Cache outgoing interface RPF info\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "rpAddress": {
                        "type": "string",
                        "description": "IP address of Rendezvous-point for group\n"
                    },
                    "rpAddressBidir": {
                        "type": "boolean",
                        "description": "Group range treated in bidirectional shared-tree mode\n"
                    },
                    "rpAddressOverride": {
                        "type": "boolean",
                        "description": "Overrides dynamically learnt RP mappings\n"
                    },
                    "rpAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/PimVrfRpAddress:PimVrfRpAddress"
                        },
                        "description": "PIM RP-address (Rendezvous Point)\n"
                    },
                    "rpCandidates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/PimVrfRpCandidate:PimVrfRpCandidate"
                        },
                        "description": "To be a PIM version 2 RP candidate\n"
                    },
                    "ssmDefault": {
                        "type": "boolean",
                        "description": "Use 232/8 group range for SSM\n"
                    },
                    "ssmRange": {
                        "type": "string",
                        "description": "ACL for group range to be used for SSM\n"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/policyMap:PolicyMap": {
            "description": "This resource can manage the Policy Map configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.PolicyMap(\"example\", {\n    subscriber: true,\n    type: \"control\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.PolicyMap(\"example\",\n    subscriber=True,\n    type=\"control\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.PolicyMap(\"example\", new()\n    {\n        Subscriber = true,\n        Type = \"control\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewPolicyMap(ctx, \"example\", \u0026iosxe.PolicyMapArgs{\n\t\t\tSubscriber: pulumi.Bool(true),\n\t\t\tType:       pulumi.String(\"control\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.PolicyMap;\nimport com.pulumi.iosxe.PolicyMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PolicyMap(\"example\", PolicyMapArgs.builder()        \n            .subscriber(true)\n            .type(\"control\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:PolicyMap\n    properties:\n      subscriber: true\n      type: control\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/policyMap:PolicyMap example \"Cisco-IOS-XE-native:native/policy/Cisco-IOS-XE-policy:policy-map=dot1x_policy\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy map\n"
                },
                "subscriber": {
                    "type": "boolean",
                    "description": "Domain name of the policy map\n"
                },
                "type": {
                    "type": "string",
                    "description": "type of the policy-map - Choices: `access-control`, `appnav`, `control`, `epbr`, `inspect`, `packet-service`,\n`performance-monitor`, `queueing`, `service`, `service-chain`, `umbrella`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy map\n"
                },
                "subscriber": {
                    "type": "boolean",
                    "description": "Domain name of the policy map\n"
                },
                "type": {
                    "type": "string",
                    "description": "type of the policy-map - Choices: `access-control`, `appnav`, `control`, `epbr`, `inspect`, `packet-service`,\n`performance-monitor`, `queueing`, `service`, `service-chain`, `umbrella`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy map\n"
                    },
                    "subscriber": {
                        "type": "boolean",
                        "description": "Domain name of the policy map\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of the policy-map - Choices: `access-control`, `appnav`, `control`, `epbr`, `inspect`, `packet-service`,\n`performance-monitor`, `queueing`, `service`, `service-chain`, `umbrella`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/policyMapEvent:PolicyMapEvent": {
            "description": "This resource can manage the Policy Map Event configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.PolicyMapEvent;\nimport com.pulumi.iosxe.PolicyMapEventArgs;\nimport com.pulumi.iosxe.inputs.PolicyMapEventClassNumberArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PolicyMapEvent(\"example\", PolicyMapEventArgs.builder()        \n            .classNumbers(PolicyMapEventClassNumberArgs.builder()\n                .action_numbers(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                .class_(\"MY_CLASS\")\n                .execution_type(\"do-until-failure\")\n                .number(10)\n                .build())\n            .eventType(\"authentication-success\")\n            .matchType(\"match-all\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:PolicyMapEvent\n    properties:\n      classNumbers:\n        - action_numbers:\n            - authenticateUsingMethod: dot1x\n              authenticateUsingPriority: 10\n              authenticateUsingRetries: 2\n              authenticateUsingRetryTime: 0\n              number: 10\n          class: MY_CLASS\n          execution_type: do-until-failure\n          number: 10\n      eventType: authentication-success\n      matchType: match-all\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/policyMapEvent:PolicyMapEvent example \"Cisco-IOS-XE-native:native/policy/Cisco-IOS-XE-policy:policy-map=dot1x_policy/event=authentication-success\"\n```\n\n ",
            "properties": {
                "classNumbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/PolicyMapEventClassNumber:PolicyMapEventClassNumber"
                    },
                    "description": "class number, 1 for 1st class, 2 for 2nd...\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "eventType": {
                    "type": "string",
                    "description": "- Choices: `aaa-available`, `absolute-timeout`, `agent-found`, `authentication-failure`, `authentication-success`,\n`authorization-failure`, `authorization-success`, `identity-update`, `inactivity-timeout`,\n`remote-authentication-failure`, `remote-authentication-success`, `remote-update`, `session-disconnected`,\n`session-started`, `tag-added`, `tag-removed`, `template-activated`, `template-activation-failed`,\n`template-deactivated`, `template-deactivation-failed`, `timer-expiry`, `violation`\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "- Choices: `match-all`, `match-first`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy map\n"
                }
            },
            "required": [
                "eventType",
                "name"
            ],
            "inputProperties": {
                "classNumbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/PolicyMapEventClassNumber:PolicyMapEventClassNumber"
                    },
                    "description": "class number, 1 for 1st class, 2 for 2nd...\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "eventType": {
                    "type": "string",
                    "description": "- Choices: `aaa-available`, `absolute-timeout`, `agent-found`, `authentication-failure`, `authentication-success`,\n`authorization-failure`, `authorization-success`, `identity-update`, `inactivity-timeout`,\n`remote-authentication-failure`, `remote-authentication-success`, `remote-update`, `session-disconnected`,\n`session-started`, `tag-added`, `tag-removed`, `template-activated`, `template-activation-failed`,\n`template-deactivated`, `template-deactivation-failed`, `timer-expiry`, `violation`\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "- Choices: `match-all`, `match-first`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy map\n"
                }
            },
            "requiredInputs": [
                "eventType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyMapEvent resources.\n",
                "properties": {
                    "classNumbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/PolicyMapEventClassNumber:PolicyMapEventClassNumber"
                        },
                        "description": "class number, 1 for 1st class, 2 for 2nd...\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "eventType": {
                        "type": "string",
                        "description": "- Choices: `aaa-available`, `absolute-timeout`, `agent-found`, `authentication-failure`, `authentication-success`,\n`authorization-failure`, `authorization-success`, `identity-update`, `inactivity-timeout`,\n`remote-authentication-failure`, `remote-authentication-success`, `remote-update`, `session-disconnected`,\n`session-started`, `tag-added`, `tag-removed`, `template-activated`, `template-activation-failed`,\n`template-deactivated`, `template-deactivation-failed`, `timer-expiry`, `violation`\n"
                    },
                    "matchType": {
                        "type": "string",
                        "description": "- Choices: `match-all`, `match-first`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy map\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/prefixList:PrefixList": {
            "description": "This resource can manage the Prefix List configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.PrefixList(\"example\", {prefixes: [{\n    action: \"permit\",\n    ge: 24,\n    ip: \"10.0.0.0/8\",\n    le: 32,\n    name: \"PREFIX_LIST_1\",\n    seq: 10,\n}]});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.PrefixList(\"example\", prefixes=[iosxe.PrefixListPrefixArgs(\n    action=\"permit\",\n    ge=24,\n    ip=\"10.0.0.0/8\",\n    le=32,\n    name=\"PREFIX_LIST_1\",\n    seq=10,\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.PrefixList(\"example\", new()\n    {\n        Prefixes = new[]\n        {\n            new Iosxe.Inputs.PrefixListPrefixArgs\n            {\n                Action = \"permit\",\n                Ge = 24,\n                Ip = \"10.0.0.0/8\",\n                Le = 32,\n                Name = \"PREFIX_LIST_1\",\n                Seq = 10,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewPrefixList(ctx, \"example\", \u0026iosxe.PrefixListArgs{\n\t\t\tPrefixes: iosxe.PrefixListPrefixArray{\n\t\t\t\t\u0026iosxe.PrefixListPrefixArgs{\n\t\t\t\t\tAction: pulumi.String(\"permit\"),\n\t\t\t\t\tGe:     pulumi.Int(24),\n\t\t\t\t\tIp:     pulumi.String(\"10.0.0.0/8\"),\n\t\t\t\t\tLe:     pulumi.Int(32),\n\t\t\t\t\tName:   pulumi.String(\"PREFIX_LIST_1\"),\n\t\t\t\t\tSeq:    pulumi.Int(10),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.PrefixList;\nimport com.pulumi.iosxe.PrefixListArgs;\nimport com.pulumi.iosxe.inputs.PrefixListPrefixArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PrefixList(\"example\", PrefixListArgs.builder()        \n            .prefixes(PrefixListPrefixArgs.builder()\n                .action(\"permit\")\n                .ge(24)\n                .ip(\"10.0.0.0/8\")\n                .le(32)\n                .name(\"PREFIX_LIST_1\")\n                .seq(10)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:PrefixList\n    properties:\n      prefixes:\n        - action: permit\n          ge: 24\n          ip: 10.0.0.0/8\n          le: 32\n          name: PREFIX_LIST_1\n          seq: 10\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/prefixList:PrefixList example \"Cisco-IOS-XE-native:native/ip/prefix-lists\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "prefixes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/PrefixListPrefix:PrefixListPrefix"
                    },
                    "description": "Build prefix-lists with name ans seq.no\n"
                }
            },
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "prefixes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/PrefixListPrefix:PrefixListPrefix"
                    },
                    "description": "Build prefix-lists with name ans seq.no\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrefixList resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "prefixes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/PrefixListPrefix:PrefixListPrefix"
                        },
                        "description": "Build prefix-lists with name ans seq.no\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/radius:Radius": {
            "description": "This resource can manage the Radius configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.Radius(\"example\", {\n    accountingPort: 1812,\n    authenticationPort: 1813,\n    automateTesterIgnoreAcctPort: true,\n    automateTesterProbeOnConfig: true,\n    automateTesterUsername: \"dummy\",\n    ipv4Address: \"10.10.15.12\",\n    key: \"123\",\n    pacKey: \"123\",\n    pacKeyEncryption: \"0\",\n    retransmit: 3,\n    timeout: 4,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.Radius(\"example\",\n    accounting_port=1812,\n    authentication_port=1813,\n    automate_tester_ignore_acct_port=True,\n    automate_tester_probe_on_config=True,\n    automate_tester_username=\"dummy\",\n    ipv4_address=\"10.10.15.12\",\n    key=\"123\",\n    pac_key=\"123\",\n    pac_key_encryption=\"0\",\n    retransmit=3,\n    timeout=4)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.Radius(\"example\", new()\n    {\n        AccountingPort = 1812,\n        AuthenticationPort = 1813,\n        AutomateTesterIgnoreAcctPort = true,\n        AutomateTesterProbeOnConfig = true,\n        AutomateTesterUsername = \"dummy\",\n        Ipv4Address = \"10.10.15.12\",\n        Key = \"123\",\n        PacKey = \"123\",\n        PacKeyEncryption = \"0\",\n        Retransmit = 3,\n        Timeout = 4,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewRadius(ctx, \"example\", \u0026iosxe.RadiusArgs{\n\t\t\tAccountingPort:               pulumi.Int(1812),\n\t\t\tAuthenticationPort:           pulumi.Int(1813),\n\t\t\tAutomateTesterIgnoreAcctPort: pulumi.Bool(true),\n\t\t\tAutomateTesterProbeOnConfig:  pulumi.Bool(true),\n\t\t\tAutomateTesterUsername:       pulumi.String(\"dummy\"),\n\t\t\tIpv4Address:                  pulumi.String(\"10.10.15.12\"),\n\t\t\tKey:                          pulumi.String(\"123\"),\n\t\t\tPacKey:                       pulumi.String(\"123\"),\n\t\t\tPacKeyEncryption:             pulumi.String(\"0\"),\n\t\t\tRetransmit:                   pulumi.Int(3),\n\t\t\tTimeout:                      pulumi.Int(4),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Radius;\nimport com.pulumi.iosxe.RadiusArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Radius(\"example\", RadiusArgs.builder()        \n            .accountingPort(1812)\n            .authenticationPort(1813)\n            .automateTesterIgnoreAcctPort(true)\n            .automateTesterProbeOnConfig(true)\n            .automateTesterUsername(\"dummy\")\n            .ipv4Address(\"10.10.15.12\")\n            .key(\"123\")\n            .pacKey(\"123\")\n            .pacKeyEncryption(\"0\")\n            .retransmit(3)\n            .timeout(4)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Radius\n    properties:\n      accountingPort: 1812\n      authenticationPort: 1813\n      automateTesterIgnoreAcctPort: true\n      automateTesterProbeOnConfig: true\n      automateTesterUsername: dummy\n      ipv4Address: 10.10.15.12\n      key: '123'\n      pacKey: '123'\n      pacKeyEncryption: '0'\n      retransmit: 3\n      timeout: 4\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/radius:Radius example \"Cisco-IOS-XE-native:native/radius/Cisco-IOS-XE-aaa:server=radius_10.10.15.12\"\n```\n\n ",
            "properties": {
                "accountingPort": {
                    "type": "integer",
                    "description": "UDP port for RADIUS accounting server (default is 1813) - Range: `0`-`65534`\n"
                },
                "authenticationPort": {
                    "type": "integer",
                    "description": "UDP port for RADIUS authentication server (default is 1812) - Range: `0`-`65534`\n"
                },
                "automateTesterIgnoreAcctPort": {
                    "type": "boolean",
                    "description": "Do not test accounting ports of the servers.\n"
                },
                "automateTesterProbeOnConfig": {
                    "type": "boolean",
                    "description": "Send a packet to verify the server status\n"
                },
                "automateTesterUsername": {
                    "type": "string"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4Address": {
                    "type": "string",
                    "description": "IPv4 address or Hostname for radius server\n"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name for the radius server configuration\n"
                },
                "pacKey": {
                    "type": "string",
                    "description": "The UNENCRYPTED (cleartext) server key\n"
                },
                "pacKeyEncryption": {
                    "type": "string",
                    "description": "0 - Specifies an UNENCRYPTED key will follow 6 - Specifies an ENCRYPTED key will follow 7 - Specifies HIDDEN key will\nfollow - Choices: `0`, `6`, `7`\n"
                },
                "retransmit": {
                    "type": "integer",
                    "description": "Number of retries to active server (overrides default) - Range: `0`-`100`\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Time to wait for a RADIUS server to reply (overrides default) - Range: `1`-`1000`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "accountingPort": {
                    "type": "integer",
                    "description": "UDP port for RADIUS accounting server (default is 1813) - Range: `0`-`65534`\n"
                },
                "authenticationPort": {
                    "type": "integer",
                    "description": "UDP port for RADIUS authentication server (default is 1812) - Range: `0`-`65534`\n"
                },
                "automateTesterIgnoreAcctPort": {
                    "type": "boolean",
                    "description": "Do not test accounting ports of the servers.\n"
                },
                "automateTesterProbeOnConfig": {
                    "type": "boolean",
                    "description": "Send a packet to verify the server status\n"
                },
                "automateTesterUsername": {
                    "type": "string"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4Address": {
                    "type": "string",
                    "description": "IPv4 address or Hostname for radius server\n"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name for the radius server configuration\n"
                },
                "pacKey": {
                    "type": "string",
                    "description": "The UNENCRYPTED (cleartext) server key\n"
                },
                "pacKeyEncryption": {
                    "type": "string",
                    "description": "0 - Specifies an UNENCRYPTED key will follow 6 - Specifies an ENCRYPTED key will follow 7 - Specifies HIDDEN key will\nfollow - Choices: `0`, `6`, `7`\n"
                },
                "retransmit": {
                    "type": "integer",
                    "description": "Number of retries to active server (overrides default) - Range: `0`-`100`\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Time to wait for a RADIUS server to reply (overrides default) - Range: `1`-`1000`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Radius resources.\n",
                "properties": {
                    "accountingPort": {
                        "type": "integer",
                        "description": "UDP port for RADIUS accounting server (default is 1813) - Range: `0`-`65534`\n"
                    },
                    "authenticationPort": {
                        "type": "integer",
                        "description": "UDP port for RADIUS authentication server (default is 1812) - Range: `0`-`65534`\n"
                    },
                    "automateTesterIgnoreAcctPort": {
                        "type": "boolean",
                        "description": "Do not test accounting ports of the servers.\n"
                    },
                    "automateTesterProbeOnConfig": {
                        "type": "boolean",
                        "description": "Send a packet to verify the server status\n"
                    },
                    "automateTesterUsername": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv4Address": {
                        "type": "string",
                        "description": "IPv4 address or Hostname for radius server\n"
                    },
                    "key": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the radius server configuration\n"
                    },
                    "pacKey": {
                        "type": "string",
                        "description": "The UNENCRYPTED (cleartext) server key\n"
                    },
                    "pacKeyEncryption": {
                        "type": "string",
                        "description": "0 - Specifies an UNENCRYPTED key will follow 6 - Specifies an ENCRYPTED key will follow 7 - Specifies HIDDEN key will\nfollow - Choices: `0`, `6`, `7`\n"
                    },
                    "retransmit": {
                        "type": "integer",
                        "description": "Number of retries to active server (overrides default) - Range: `0`-`100`\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Time to wait for a RADIUS server to reply (overrides default) - Range: `1`-`1000`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/radiusServer:RadiusServer": {
            "description": "This resource can manage the Radius Server configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.RadiusServer;\nimport com.pulumi.iosxe.RadiusServerArgs;\nimport com.pulumi.iosxe.inputs.RadiusServerAttributeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new RadiusServer(\"example\", RadiusServerArgs.builder()        \n            .attributes(RadiusServerAttributeArgs.builder()\n                .attribute_31_parameters(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                .number(\"31\")\n                .build())\n            .deadCriteriaTime(5)\n            .deadCriteriaTries(3)\n            .deadtime(3)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:RadiusServer\n    properties:\n      attributes:\n        - attribute_31_parameters:\n            - callingStationId: mac\n              idMacFormat: ietf\n              idMacLuCase: lower-case\n          number: '31'\n      deadCriteriaTime: 5\n      deadCriteriaTries: 3\n      deadtime: 3\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/radiusServer:RadiusServer example \"Cisco-IOS-XE-native:native/radius-server\"\n```\n\n ",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/RadiusServerAttribute:RadiusServerAttribute"
                    },
                    "description": "Customize selected radius attributes\n"
                },
                "deadCriteriaTime": {
                    "type": "integer",
                    "description": "The time during which no properly formed response must be received from the RADIUS server - Range: `1`-`120`\n"
                },
                "deadCriteriaTries": {
                    "type": "integer",
                    "description": "The number of times the router must fail to receive a response from the radius server to mark it as dead - Range:\n`1`-`100`\n"
                },
                "deadtime": {
                    "type": "integer",
                    "description": "Time to stop using a server that does not respond - Range: `1`-`1440`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "inputProperties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/RadiusServerAttribute:RadiusServerAttribute"
                    },
                    "description": "Customize selected radius attributes\n"
                },
                "deadCriteriaTime": {
                    "type": "integer",
                    "description": "The time during which no properly formed response must be received from the RADIUS server - Range: `1`-`120`\n"
                },
                "deadCriteriaTries": {
                    "type": "integer",
                    "description": "The number of times the router must fail to receive a response from the radius server to mark it as dead - Range:\n`1`-`100`\n"
                },
                "deadtime": {
                    "type": "integer",
                    "description": "Time to stop using a server that does not respond - Range: `1`-`1440`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RadiusServer resources.\n",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/RadiusServerAttribute:RadiusServerAttribute"
                        },
                        "description": "Customize selected radius attributes\n"
                    },
                    "deadCriteriaTime": {
                        "type": "integer",
                        "description": "The time during which no properly formed response must be received from the RADIUS server - Range: `1`-`120`\n"
                    },
                    "deadCriteriaTries": {
                        "type": "integer",
                        "description": "The number of times the router must fail to receive a response from the radius server to mark it as dead - Range:\n`1`-`100`\n"
                    },
                    "deadtime": {
                        "type": "integer",
                        "description": "Time to stop using a server that does not respond - Range: `1`-`1440`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/restconf:Restconf": {
            "description": "Manages IOS-XE objects via RESTCONF calls. This resource can only manage a single object. It is able to read the state and therefore reconcile configuration drift.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst simple = new iosxe.Restconf(\"simple\", {\n    attributes: {\n        banner: \"My Banner\",\n    },\n    path: \"Cisco-IOS-XE-native:native/banner/login\",\n});\nconst nestedList = new iosxe.Restconf(\"nestedList\", {\n    attributes: {\n        \"source-route\": \"true\",\n    },\n    lists: [{\n        items: [{\n            name: \"VRF1\",\n        }],\n        key: \"name\",\n        name: \"vrf\",\n    }],\n    path: \"Cisco-IOS-XE-native:native/ip\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nsimple = iosxe.Restconf(\"simple\",\n    attributes={\n        \"banner\": \"My Banner\",\n    },\n    path=\"Cisco-IOS-XE-native:native/banner/login\")\nnested_list = iosxe.Restconf(\"nestedList\",\n    attributes={\n        \"source-route\": \"true\",\n    },\n    lists=[iosxe.RestconfListArgs(\n        items=[{\n            \"name\": \"VRF1\",\n        }],\n        key=\"name\",\n        name=\"vrf\",\n    )],\n    path=\"Cisco-IOS-XE-native:native/ip\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var simple = new Iosxe.Restconf(\"simple\", new()\n    {\n        Attributes = \n        {\n            { \"banner\", \"My Banner\" },\n        },\n        Path = \"Cisco-IOS-XE-native:native/banner/login\",\n    });\n\n    var nestedList = new Iosxe.Restconf(\"nestedList\", new()\n    {\n        Attributes = \n        {\n            { \"source-route\", \"true\" },\n        },\n        Lists = new[]\n        {\n            new Iosxe.Inputs.RestconfListArgs\n            {\n                Items = new[]\n                {\n                    \n                    {\n                        { \"name\", \"VRF1\" },\n                    },\n                },\n                Key = \"name\",\n                Name = \"vrf\",\n            },\n        },\n        Path = \"Cisco-IOS-XE-native:native/ip\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewRestconf(ctx, \"simple\", \u0026iosxe.RestconfArgs{\n\t\t\tAttributes: pulumi.StringMap{\n\t\t\t\t\"banner\": pulumi.String(\"My Banner\"),\n\t\t\t},\n\t\t\tPath: pulumi.String(\"Cisco-IOS-XE-native:native/banner/login\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iosxe.NewRestconf(ctx, \"nestedList\", \u0026iosxe.RestconfArgs{\n\t\t\tAttributes: pulumi.StringMap{\n\t\t\t\t\"source-route\": pulumi.String(\"true\"),\n\t\t\t},\n\t\t\tLists: iosxe.RestconfListArray{\n\t\t\t\t\u0026iosxe.RestconfListArgs{\n\t\t\t\t\tItems: pulumi.StringMapArray{\n\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\"name\": pulumi.String(\"VRF1\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tKey:  pulumi.String(\"name\"),\n\t\t\t\t\tName: pulumi.String(\"vrf\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPath: pulumi.String(\"Cisco-IOS-XE-native:native/ip\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Restconf;\nimport com.pulumi.iosxe.RestconfArgs;\nimport com.pulumi.iosxe.inputs.RestconfListArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var simple = new Restconf(\"simple\", RestconfArgs.builder()        \n            .attributes(Map.of(\"banner\", \"My Banner\"))\n            .path(\"Cisco-IOS-XE-native:native/banner/login\")\n            .build());\n\n        var nestedList = new Restconf(\"nestedList\", RestconfArgs.builder()        \n            .attributes(Map.of(\"source-route\", \"true\"))\n            .lists(RestconfListArgs.builder()\n                .items(Map.of(\"name\", \"VRF1\"))\n                .key(\"name\")\n                .name(\"vrf\")\n                .build())\n            .path(\"Cisco-IOS-XE-native:native/ip\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  simple:\n    type: iosxe:Restconf\n    properties:\n      attributes:\n        banner: My Banner\n      path: Cisco-IOS-XE-native:native/banner/login\n  nestedList:\n    type: iosxe:Restconf\n    properties:\n      attributes:\n        source-route: 'true'\n      lists:\n        - items:\n            - name: VRF1\n          key: name\n          name: vrf\n      path: Cisco-IOS-XE-native:native/ip\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/restconf:Restconf example \"Cisco-IOS-XE-native:native/banner/login\"\n```\n\n ",
            "properties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of key-value pairs which represents the YANG leafs and its values.\n"
                },
                "delete": {
                    "type": "boolean",
                    "description": "Delete object during destroy operation. Default value is `true`.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/RestconfList:RestconfList"
                    },
                    "description": "YANG lists.\n"
                },
                "path": {
                    "type": "string",
                    "description": "A RESTCONF path, e.g. `openconfig-interfaces:interfaces`.\n"
                }
            },
            "required": [
                "attributes",
                "delete",
                "path"
            ],
            "inputProperties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of key-value pairs which represents the YANG leafs and its values.\n"
                },
                "delete": {
                    "type": "boolean",
                    "description": "Delete object during destroy operation. Default value is `true`.\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/RestconfList:RestconfList"
                    },
                    "description": "YANG lists.\n"
                },
                "path": {
                    "type": "string",
                    "description": "A RESTCONF path, e.g. `openconfig-interfaces:interfaces`.\n"
                }
            },
            "requiredInputs": [
                "path"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Restconf resources.\n",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of key-value pairs which represents the YANG leafs and its values.\n"
                    },
                    "delete": {
                        "type": "boolean",
                        "description": "Delete object during destroy operation. Default value is `true`.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "lists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/RestconfList:RestconfList"
                        },
                        "description": "YANG lists.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "A RESTCONF path, e.g. `openconfig-interfaces:interfaces`.\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/routeMap:RouteMap": {
            "description": "This resource can manage the Route Map configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.RouteMap;\nimport com.pulumi.iosxe.RouteMapArgs;\nimport com.pulumi.iosxe.inputs.RouteMapEntryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new RouteMap(\"example\", RouteMapArgs.builder()        \n            .entries(RouteMapEntryArgs.builder()\n                .continue_(false)\n                .description(\"Entry 10\")\n                .match_as_paths_legacy(10)\n                .match_community_lists_legacy(\"COMM1\")\n                .match_extcommunity_lists_legacy(\"EXTCOMM1\")\n                .match_interfaces(\"Loopback1\")\n                .match_ip_address_access_lists(\"ACL1\")\n                .match_ip_next_hop_access_lists(\"ACL1\")\n                .match_ipv6_address_access_lists(\"ACL1\")\n                .match_ipv6_next_hop_access_lists(\"ACL1\")\n                .match_local_preferences_legacy(100)\n                .match_route_type_external(true)\n                .match_route_type_external_type_1(true)\n                .match_route_type_external_type_2(true)\n                .match_route_type_internal(true)\n                .match_route_type_level_1(true)\n                .match_route_type_level_2(true)\n                .match_route_type_local(true)\n                .match_source_protocol_bgp(\"65000\")\n                .match_source_protocol_connected(true)\n                .match_source_protocol_eigrp(\"10\")\n                .match_source_protocol_isis(true)\n                .match_source_protocol_lisp(true)\n                .match_source_protocol_ospf(\"10\")\n                .match_source_protocol_ospfv3(\"10\")\n                .match_source_protocol_rip(true)\n                .match_source_protocol_static(true)\n                .match_tags(100)\n                .match_track(1)\n                .operation(\"permit\")\n                .seq(10)\n                .set_as_path_prepend_as_legacy(\"65001 65001\")\n                .set_as_path_prepend_last_as_legacy(5)\n                .set_as_path_tag_legacy(true)\n                .set_communities_additive_legacy(true)\n                .set_communities_legacy(\"1:2\")\n                .set_community_list_delete_legacy(true)\n                .set_community_list_name_legacy(\"COMML1\")\n                .set_default_interfaces(\"Loopback1\")\n                .set_extcomunity_rt_legacy(\"10:10\")\n                .set_extcomunity_soo_legacy(\"10:10\")\n                .set_extcomunity_vpn_distinguisher_legacy(\"10:10\")\n                .set_global(false)\n                .set_interfaces(\"Loopback1\")\n                .set_ip_address(\"PFL1\")\n                .set_ip_default_global_next_hop_address(\"1.2.3.4\")\n                .set_ip_default_next_hop_address(\"1.2.3.4\")\n                .set_ip_global_next_hop_address(\"1.2.3.4\")\n                .set_ip_next_hop_address(\"1.2.3.4\")\n                .set_ip_qos_group(1)\n                .set_ipv6_address(\"PFL2\")\n                .set_ipv6_default_global_next_hop(\"2001::1\")\n                .set_ipv6_default_next_hop(\"2001::1\")\n                .set_ipv6_next_hop(\"2001::1\")\n                .set_level_1(true)\n                .set_local_preference_legacy(110)\n                .set_metric_delay(\"10\")\n                .set_metric_loading(10)\n                .set_metric_mtu(1500)\n                .set_metric_reliability(90)\n                .set_metric_type(\"external\")\n                .set_metric_value(110)\n                .set_tag(100)\n                .set_weight_legacy(10000)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:RouteMap\n    properties:\n      entries:\n        - continue: false\n          description: Entry 10\n          match_as_paths_legacy:\n            - 10\n          match_community_lists_legacy:\n            - COMM1\n          match_extcommunity_lists_legacy:\n            - EXTCOMM1\n          match_interfaces:\n            - Loopback1\n          match_ip_address_access_lists:\n            - ACL1\n          match_ip_next_hop_access_lists:\n            - ACL1\n          match_ipv6_address_access_lists: ACL1\n          match_ipv6_next_hop_access_lists: ACL1\n          match_local_preferences_legacy:\n            - 100\n          match_route_type_external: true\n          match_route_type_external_type_1: true\n          match_route_type_external_type_2: true\n          match_route_type_internal: true\n          match_route_type_level_1: true\n          match_route_type_level_2: true\n          match_route_type_local: true\n          match_source_protocol_bgp:\n            - '65000'\n          match_source_protocol_connected: true\n          match_source_protocol_eigrp:\n            - '10'\n          match_source_protocol_isis: true\n          match_source_protocol_lisp: true\n          match_source_protocol_ospf:\n            - '10'\n          match_source_protocol_ospfv3:\n            - '10'\n          match_source_protocol_rip: true\n          match_source_protocol_static: true\n          match_tags:\n            - 100\n          match_track: 1\n          operation: permit\n          seq: 10\n          set_as_path_prepend_as_legacy: 65001 65001\n          set_as_path_prepend_last_as_legacy: 5\n          set_as_path_tag_legacy: true\n          set_communities_additive_legacy: true\n          set_communities_legacy:\n            - 1:2\n          set_community_list_delete_legacy: true\n          set_community_list_name_legacy: COMML1\n          set_default_interfaces:\n            - Loopback1\n          set_extcomunity_rt_legacy:\n            - 10:10\n          set_extcomunity_soo_legacy: 10:10\n          set_extcomunity_vpn_distinguisher_legacy: 10:10\n          set_global: false\n          set_interfaces:\n            - Loopback1\n          set_ip_address: PFL1\n          set_ip_default_global_next_hop_address:\n            - 1.2.3.4\n          set_ip_default_next_hop_address:\n            - 1.2.3.4\n          set_ip_global_next_hop_address:\n            - 1.2.3.4\n          set_ip_next_hop_address:\n            - 1.2.3.4\n          set_ip_qos_group: 1\n          set_ipv6_address:\n            - PFL2\n          set_ipv6_default_global_next_hop: 2001::1\n          set_ipv6_default_next_hop:\n            - 2001::1\n          set_ipv6_next_hop:\n            - 2001::1\n          set_level_1: true\n          set_local_preference_legacy: 110\n          set_metric_delay: '10'\n          set_metric_loading: 10\n          set_metric_mtu: 1500\n          set_metric_reliability: 90\n          set_metric_type: external\n          set_metric_value: 110\n          set_tag: 100\n          set_weight_legacy: 10000\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/routeMap:RouteMap example \"Cisco-IOS-XE-native:native/route-map=RM1\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/RouteMapEntry:RouteMapEntry"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "WORD;;Route map tag\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/RouteMapEntry:RouteMapEntry"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "WORD;;Route map tag\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteMap resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/RouteMapEntry:RouteMapEntry"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "WORD;;Route map tag\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/service:Service": {
            "description": "This resource can manage the Service configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.Service(\"example\", {\n    callHome: true,\n    compressConfig: true,\n    dhcp: true,\n    pad: true,\n    passwordEncryption: true,\n    passwordRecovery: true,\n    sequenceNumbers: true,\n    tcpKeepalivesIn: true,\n    tcpKeepalivesOut: true,\n    timestamps: true,\n    timestampsDebug: true,\n    timestampsDebugDatetime: true,\n    timestampsDebugDatetimeLocaltime: true,\n    timestampsDebugDatetimeMsec: true,\n    timestampsDebugDatetimeShowTimezone: true,\n    timestampsDebugDatetimeYear: true,\n    timestampsDebugUptime: true,\n    timestampsLog: true,\n    timestampsLogDatetime: true,\n    timestampsLogDatetimeLocaltime: true,\n    timestampsLogDatetimeMsec: true,\n    timestampsLogDatetimeShowTimezone: true,\n    timestampsLogDatetimeYear: true,\n    timestampsLogUptime: true,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.Service(\"example\",\n    call_home=True,\n    compress_config=True,\n    dhcp=True,\n    pad=True,\n    password_encryption=True,\n    password_recovery=True,\n    sequence_numbers=True,\n    tcp_keepalives_in=True,\n    tcp_keepalives_out=True,\n    timestamps=True,\n    timestamps_debug=True,\n    timestamps_debug_datetime=True,\n    timestamps_debug_datetime_localtime=True,\n    timestamps_debug_datetime_msec=True,\n    timestamps_debug_datetime_show_timezone=True,\n    timestamps_debug_datetime_year=True,\n    timestamps_debug_uptime=True,\n    timestamps_log=True,\n    timestamps_log_datetime=True,\n    timestamps_log_datetime_localtime=True,\n    timestamps_log_datetime_msec=True,\n    timestamps_log_datetime_show_timezone=True,\n    timestamps_log_datetime_year=True,\n    timestamps_log_uptime=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.Service(\"example\", new()\n    {\n        CallHome = true,\n        CompressConfig = true,\n        Dhcp = true,\n        Pad = true,\n        PasswordEncryption = true,\n        PasswordRecovery = true,\n        SequenceNumbers = true,\n        TcpKeepalivesIn = true,\n        TcpKeepalivesOut = true,\n        Timestamps = true,\n        TimestampsDebug = true,\n        TimestampsDebugDatetime = true,\n        TimestampsDebugDatetimeLocaltime = true,\n        TimestampsDebugDatetimeMsec = true,\n        TimestampsDebugDatetimeShowTimezone = true,\n        TimestampsDebugDatetimeYear = true,\n        TimestampsDebugUptime = true,\n        TimestampsLog = true,\n        TimestampsLogDatetime = true,\n        TimestampsLogDatetimeLocaltime = true,\n        TimestampsLogDatetimeMsec = true,\n        TimestampsLogDatetimeShowTimezone = true,\n        TimestampsLogDatetimeYear = true,\n        TimestampsLogUptime = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewService(ctx, \"example\", \u0026iosxe.ServiceArgs{\n\t\t\tCallHome:                            pulumi.Bool(true),\n\t\t\tCompressConfig:                      pulumi.Bool(true),\n\t\t\tDhcp:                                pulumi.Bool(true),\n\t\t\tPad:                                 pulumi.Bool(true),\n\t\t\tPasswordEncryption:                  pulumi.Bool(true),\n\t\t\tPasswordRecovery:                    pulumi.Bool(true),\n\t\t\tSequenceNumbers:                     pulumi.Bool(true),\n\t\t\tTcpKeepalivesIn:                     pulumi.Bool(true),\n\t\t\tTcpKeepalivesOut:                    pulumi.Bool(true),\n\t\t\tTimestamps:                          pulumi.Bool(true),\n\t\t\tTimestampsDebug:                     pulumi.Bool(true),\n\t\t\tTimestampsDebugDatetime:             pulumi.Bool(true),\n\t\t\tTimestampsDebugDatetimeLocaltime:    pulumi.Bool(true),\n\t\t\tTimestampsDebugDatetimeMsec:         pulumi.Bool(true),\n\t\t\tTimestampsDebugDatetimeShowTimezone: pulumi.Bool(true),\n\t\t\tTimestampsDebugDatetimeYear:         pulumi.Bool(true),\n\t\t\tTimestampsDebugUptime:               pulumi.Bool(true),\n\t\t\tTimestampsLog:                       pulumi.Bool(true),\n\t\t\tTimestampsLogDatetime:               pulumi.Bool(true),\n\t\t\tTimestampsLogDatetimeLocaltime:      pulumi.Bool(true),\n\t\t\tTimestampsLogDatetimeMsec:           pulumi.Bool(true),\n\t\t\tTimestampsLogDatetimeShowTimezone:   pulumi.Bool(true),\n\t\t\tTimestampsLogDatetimeYear:           pulumi.Bool(true),\n\t\t\tTimestampsLogUptime:                 pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Service;\nimport com.pulumi.iosxe.ServiceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Service(\"example\", ServiceArgs.builder()        \n            .callHome(true)\n            .compressConfig(true)\n            .dhcp(true)\n            .pad(true)\n            .passwordEncryption(true)\n            .passwordRecovery(true)\n            .sequenceNumbers(true)\n            .tcpKeepalivesIn(true)\n            .tcpKeepalivesOut(true)\n            .timestamps(true)\n            .timestampsDebug(true)\n            .timestampsDebugDatetime(true)\n            .timestampsDebugDatetimeLocaltime(true)\n            .timestampsDebugDatetimeMsec(true)\n            .timestampsDebugDatetimeShowTimezone(true)\n            .timestampsDebugDatetimeYear(true)\n            .timestampsDebugUptime(true)\n            .timestampsLog(true)\n            .timestampsLogDatetime(true)\n            .timestampsLogDatetimeLocaltime(true)\n            .timestampsLogDatetimeMsec(true)\n            .timestampsLogDatetimeShowTimezone(true)\n            .timestampsLogDatetimeYear(true)\n            .timestampsLogUptime(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Service\n    properties:\n      callHome: true\n      compressConfig: true\n      dhcp: true\n      pad: true\n      passwordEncryption: true\n      passwordRecovery: true\n      sequenceNumbers: true\n      tcpKeepalivesIn: true\n      tcpKeepalivesOut: true\n      timestamps: true\n      timestampsDebug: true\n      timestampsDebugDatetime: true\n      timestampsDebugDatetimeLocaltime: true\n      timestampsDebugDatetimeMsec: true\n      timestampsDebugDatetimeShowTimezone: true\n      timestampsDebugDatetimeYear: true\n      timestampsDebugUptime: true\n      timestampsLog: true\n      timestampsLogDatetime: true\n      timestampsLogDatetimeLocaltime: true\n      timestampsLogDatetimeMsec: true\n      timestampsLogDatetimeShowTimezone: true\n      timestampsLogDatetimeYear: true\n      timestampsLogUptime: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/service:Service example \"Cisco-IOS-XE-native:native/service\"\n```\n\n ",
            "properties": {
                "callHome": {
                    "type": "boolean",
                    "description": "Enable call-home service\n"
                },
                "compressConfig": {
                    "type": "boolean",
                    "description": "Compress the configuration file\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP server and relay agent\n"
                },
                "pad": {
                    "type": "boolean",
                    "description": "Enable PAD commands\n"
                },
                "passwordEncryption": {
                    "type": "boolean",
                    "description": "Encrypt system passwords\n"
                },
                "passwordRecovery": {
                    "type": "boolean",
                    "description": "Enable password recovery\n"
                },
                "sequenceNumbers": {
                    "type": "boolean",
                    "description": "Stamp logger messages with a sequence number\n"
                },
                "tcpKeepalivesIn": {
                    "type": "boolean",
                    "description": "Generate keepalives on idle incoming network connections\n"
                },
                "tcpKeepalivesOut": {
                    "type": "boolean",
                    "description": "Generate keepalives on idle outgoing network connections\n"
                },
                "timestamps": {
                    "type": "boolean",
                    "description": "Timestamp debug/log messages\n"
                },
                "timestampsDebug": {
                    "type": "boolean",
                    "description": "Timestamp debug messages\n"
                },
                "timestampsDebugDatetime": {
                    "type": "boolean",
                    "description": "Timestamp with date and time\n"
                },
                "timestampsDebugDatetimeLocaltime": {
                    "type": "boolean",
                    "description": "Use local time zone for timestamps\n"
                },
                "timestampsDebugDatetimeMsec": {
                    "type": "boolean",
                    "description": "Include milliseconds in timestamp\n"
                },
                "timestampsDebugDatetimeShowTimezone": {
                    "type": "boolean",
                    "description": "Add time zone information to timestamp\n"
                },
                "timestampsDebugDatetimeYear": {
                    "type": "boolean",
                    "description": "Include year in timestamp\n"
                },
                "timestampsDebugUptime": {
                    "type": "boolean",
                    "description": "Timestamp with system uptime\n"
                },
                "timestampsLog": {
                    "type": "boolean",
                    "description": "Timestamp log messages\n"
                },
                "timestampsLogDatetime": {
                    "type": "boolean",
                    "description": "Timestamp with date and time\n"
                },
                "timestampsLogDatetimeLocaltime": {
                    "type": "boolean",
                    "description": "Use local time zone for timestamps\n"
                },
                "timestampsLogDatetimeMsec": {
                    "type": "boolean",
                    "description": "Include milliseconds in timestamp\n"
                },
                "timestampsLogDatetimeShowTimezone": {
                    "type": "boolean",
                    "description": "Add time zone information to timestamp\n"
                },
                "timestampsLogDatetimeYear": {
                    "type": "boolean",
                    "description": "Include year in timestamp\n"
                },
                "timestampsLogUptime": {
                    "type": "boolean",
                    "description": "Timestamp with system uptime\n"
                }
            },
            "inputProperties": {
                "callHome": {
                    "type": "boolean",
                    "description": "Enable call-home service\n"
                },
                "compressConfig": {
                    "type": "boolean",
                    "description": "Compress the configuration file\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP server and relay agent\n"
                },
                "pad": {
                    "type": "boolean",
                    "description": "Enable PAD commands\n"
                },
                "passwordEncryption": {
                    "type": "boolean",
                    "description": "Encrypt system passwords\n"
                },
                "passwordRecovery": {
                    "type": "boolean",
                    "description": "Enable password recovery\n"
                },
                "sequenceNumbers": {
                    "type": "boolean",
                    "description": "Stamp logger messages with a sequence number\n"
                },
                "tcpKeepalivesIn": {
                    "type": "boolean",
                    "description": "Generate keepalives on idle incoming network connections\n"
                },
                "tcpKeepalivesOut": {
                    "type": "boolean",
                    "description": "Generate keepalives on idle outgoing network connections\n"
                },
                "timestamps": {
                    "type": "boolean",
                    "description": "Timestamp debug/log messages\n"
                },
                "timestampsDebug": {
                    "type": "boolean",
                    "description": "Timestamp debug messages\n"
                },
                "timestampsDebugDatetime": {
                    "type": "boolean",
                    "description": "Timestamp with date and time\n"
                },
                "timestampsDebugDatetimeLocaltime": {
                    "type": "boolean",
                    "description": "Use local time zone for timestamps\n"
                },
                "timestampsDebugDatetimeMsec": {
                    "type": "boolean",
                    "description": "Include milliseconds in timestamp\n"
                },
                "timestampsDebugDatetimeShowTimezone": {
                    "type": "boolean",
                    "description": "Add time zone information to timestamp\n"
                },
                "timestampsDebugDatetimeYear": {
                    "type": "boolean",
                    "description": "Include year in timestamp\n"
                },
                "timestampsDebugUptime": {
                    "type": "boolean",
                    "description": "Timestamp with system uptime\n"
                },
                "timestampsLog": {
                    "type": "boolean",
                    "description": "Timestamp log messages\n"
                },
                "timestampsLogDatetime": {
                    "type": "boolean",
                    "description": "Timestamp with date and time\n"
                },
                "timestampsLogDatetimeLocaltime": {
                    "type": "boolean",
                    "description": "Use local time zone for timestamps\n"
                },
                "timestampsLogDatetimeMsec": {
                    "type": "boolean",
                    "description": "Include milliseconds in timestamp\n"
                },
                "timestampsLogDatetimeShowTimezone": {
                    "type": "boolean",
                    "description": "Add time zone information to timestamp\n"
                },
                "timestampsLogDatetimeYear": {
                    "type": "boolean",
                    "description": "Include year in timestamp\n"
                },
                "timestampsLogUptime": {
                    "type": "boolean",
                    "description": "Timestamp with system uptime\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Service resources.\n",
                "properties": {
                    "callHome": {
                        "type": "boolean",
                        "description": "Enable call-home service\n"
                    },
                    "compressConfig": {
                        "type": "boolean",
                        "description": "Compress the configuration file\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dhcp": {
                        "type": "boolean",
                        "description": "Enable DHCP server and relay agent\n"
                    },
                    "pad": {
                        "type": "boolean",
                        "description": "Enable PAD commands\n"
                    },
                    "passwordEncryption": {
                        "type": "boolean",
                        "description": "Encrypt system passwords\n"
                    },
                    "passwordRecovery": {
                        "type": "boolean",
                        "description": "Enable password recovery\n"
                    },
                    "sequenceNumbers": {
                        "type": "boolean",
                        "description": "Stamp logger messages with a sequence number\n"
                    },
                    "tcpKeepalivesIn": {
                        "type": "boolean",
                        "description": "Generate keepalives on idle incoming network connections\n"
                    },
                    "tcpKeepalivesOut": {
                        "type": "boolean",
                        "description": "Generate keepalives on idle outgoing network connections\n"
                    },
                    "timestamps": {
                        "type": "boolean",
                        "description": "Timestamp debug/log messages\n"
                    },
                    "timestampsDebug": {
                        "type": "boolean",
                        "description": "Timestamp debug messages\n"
                    },
                    "timestampsDebugDatetime": {
                        "type": "boolean",
                        "description": "Timestamp with date and time\n"
                    },
                    "timestampsDebugDatetimeLocaltime": {
                        "type": "boolean",
                        "description": "Use local time zone for timestamps\n"
                    },
                    "timestampsDebugDatetimeMsec": {
                        "type": "boolean",
                        "description": "Include milliseconds in timestamp\n"
                    },
                    "timestampsDebugDatetimeShowTimezone": {
                        "type": "boolean",
                        "description": "Add time zone information to timestamp\n"
                    },
                    "timestampsDebugDatetimeYear": {
                        "type": "boolean",
                        "description": "Include year in timestamp\n"
                    },
                    "timestampsDebugUptime": {
                        "type": "boolean",
                        "description": "Timestamp with system uptime\n"
                    },
                    "timestampsLog": {
                        "type": "boolean",
                        "description": "Timestamp log messages\n"
                    },
                    "timestampsLogDatetime": {
                        "type": "boolean",
                        "description": "Timestamp with date and time\n"
                    },
                    "timestampsLogDatetimeLocaltime": {
                        "type": "boolean",
                        "description": "Use local time zone for timestamps\n"
                    },
                    "timestampsLogDatetimeMsec": {
                        "type": "boolean",
                        "description": "Include milliseconds in timestamp\n"
                    },
                    "timestampsLogDatetimeShowTimezone": {
                        "type": "boolean",
                        "description": "Add time zone information to timestamp\n"
                    },
                    "timestampsLogDatetimeYear": {
                        "type": "boolean",
                        "description": "Include year in timestamp\n"
                    },
                    "timestampsLogUptime": {
                        "type": "boolean",
                        "description": "Timestamp with system uptime\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/serviceTemplate:ServiceTemplate": {
            "description": "This resource can manage the Service Template configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.ServiceTemplate(\"example\", {\n    absoluteTimer: 45,\n    accessGroups: [{\n        name: \"ag1\",\n    }],\n    description: \"service_template_desc\",\n    dnsAclPreauth: \"dns_acl_name\",\n    ianctivityTimer: 25,\n    inactivityTimerProbe: false,\n    interfaceTemplates: [{\n        name: \"template1\",\n    }],\n    linksecPolicy: \"must-secure\",\n    redirectAppendClientMac: \"00:01:00:01:00:01\",\n    redirectAppendSwitchMac: \"00:01:00:01:00:02\",\n    redirectUrl: \"valid_url\",\n    redirectUrlMatchAcl: \"acl_name\",\n    redirectUrlMatchAction: \"redirect-on-no-match\",\n    servicePolicyQosInput: \"input_qos\",\n    servicePolicyQosOutput: \"output_qos\",\n    sgt: 57,\n    tags: [{\n        name: \"tag_name\",\n    }],\n    tunnelCapwapName: \"TUN1\",\n    vlan: 27,\n    vnid: \"12345\",\n    voiceVlan: false,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.ServiceTemplate(\"example\",\n    absolute_timer=45,\n    access_groups=[iosxe.ServiceTemplateAccessGroupArgs(\n        name=\"ag1\",\n    )],\n    description=\"service_template_desc\",\n    dns_acl_preauth=\"dns_acl_name\",\n    ianctivity_timer=25,\n    inactivity_timer_probe=False,\n    interface_templates=[iosxe.ServiceTemplateInterfaceTemplateArgs(\n        name=\"template1\",\n    )],\n    linksec_policy=\"must-secure\",\n    redirect_append_client_mac=\"00:01:00:01:00:01\",\n    redirect_append_switch_mac=\"00:01:00:01:00:02\",\n    redirect_url=\"valid_url\",\n    redirect_url_match_acl=\"acl_name\",\n    redirect_url_match_action=\"redirect-on-no-match\",\n    service_policy_qos_input=\"input_qos\",\n    service_policy_qos_output=\"output_qos\",\n    sgt=57,\n    tags=[iosxe.ServiceTemplateTagArgs(\n        name=\"tag_name\",\n    )],\n    tunnel_capwap_name=\"TUN1\",\n    vlan=27,\n    vnid=\"12345\",\n    voice_vlan=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.ServiceTemplate(\"example\", new()\n    {\n        AbsoluteTimer = 45,\n        AccessGroups = new[]\n        {\n            new Iosxe.Inputs.ServiceTemplateAccessGroupArgs\n            {\n                Name = \"ag1\",\n            },\n        },\n        Description = \"service_template_desc\",\n        DnsAclPreauth = \"dns_acl_name\",\n        IanctivityTimer = 25,\n        InactivityTimerProbe = false,\n        InterfaceTemplates = new[]\n        {\n            new Iosxe.Inputs.ServiceTemplateInterfaceTemplateArgs\n            {\n                Name = \"template1\",\n            },\n        },\n        LinksecPolicy = \"must-secure\",\n        RedirectAppendClientMac = \"00:01:00:01:00:01\",\n        RedirectAppendSwitchMac = \"00:01:00:01:00:02\",\n        RedirectUrl = \"valid_url\",\n        RedirectUrlMatchAcl = \"acl_name\",\n        RedirectUrlMatchAction = \"redirect-on-no-match\",\n        ServicePolicyQosInput = \"input_qos\",\n        ServicePolicyQosOutput = \"output_qos\",\n        Sgt = 57,\n        Tags = new[]\n        {\n            new Iosxe.Inputs.ServiceTemplateTagArgs\n            {\n                Name = \"tag_name\",\n            },\n        },\n        TunnelCapwapName = \"TUN1\",\n        Vlan = 27,\n        Vnid = \"12345\",\n        VoiceVlan = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewServiceTemplate(ctx, \"example\", \u0026iosxe.ServiceTemplateArgs{\n\t\t\tAbsoluteTimer: pulumi.Int(45),\n\t\t\tAccessGroups: iosxe.ServiceTemplateAccessGroupArray{\n\t\t\t\t\u0026iosxe.ServiceTemplateAccessGroupArgs{\n\t\t\t\t\tName: pulumi.String(\"ag1\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDescription:          pulumi.String(\"service_template_desc\"),\n\t\t\tDnsAclPreauth:        pulumi.String(\"dns_acl_name\"),\n\t\t\tIanctivityTimer:      pulumi.Int(25),\n\t\t\tInactivityTimerProbe: pulumi.Bool(false),\n\t\t\tInterfaceTemplates: iosxe.ServiceTemplateInterfaceTemplateArray{\n\t\t\t\t\u0026iosxe.ServiceTemplateInterfaceTemplateArgs{\n\t\t\t\t\tName: pulumi.String(\"template1\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tLinksecPolicy:           pulumi.String(\"must-secure\"),\n\t\t\tRedirectAppendClientMac: pulumi.String(\"00:01:00:01:00:01\"),\n\t\t\tRedirectAppendSwitchMac: pulumi.String(\"00:01:00:01:00:02\"),\n\t\t\tRedirectUrl:             pulumi.String(\"valid_url\"),\n\t\t\tRedirectUrlMatchAcl:     pulumi.String(\"acl_name\"),\n\t\t\tRedirectUrlMatchAction:  pulumi.String(\"redirect-on-no-match\"),\n\t\t\tServicePolicyQosInput:   pulumi.String(\"input_qos\"),\n\t\t\tServicePolicyQosOutput:  pulumi.String(\"output_qos\"),\n\t\t\tSgt:                     pulumi.Int(57),\n\t\t\tTags: iosxe.ServiceTemplateTagArray{\n\t\t\t\t\u0026iosxe.ServiceTemplateTagArgs{\n\t\t\t\t\tName: pulumi.String(\"tag_name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTunnelCapwapName: pulumi.String(\"TUN1\"),\n\t\t\tVlan:             pulumi.Int(27),\n\t\t\tVnid:             pulumi.String(\"12345\"),\n\t\t\tVoiceVlan:        pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.ServiceTemplate;\nimport com.pulumi.iosxe.ServiceTemplateArgs;\nimport com.pulumi.iosxe.inputs.ServiceTemplateAccessGroupArgs;\nimport com.pulumi.iosxe.inputs.ServiceTemplateInterfaceTemplateArgs;\nimport com.pulumi.iosxe.inputs.ServiceTemplateTagArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ServiceTemplate(\"example\", ServiceTemplateArgs.builder()        \n            .absoluteTimer(45)\n            .accessGroups(ServiceTemplateAccessGroupArgs.builder()\n                .name(\"ag1\")\n                .build())\n            .description(\"service_template_desc\")\n            .dnsAclPreauth(\"dns_acl_name\")\n            .ianctivityTimer(25)\n            .inactivityTimerProbe(false)\n            .interfaceTemplates(ServiceTemplateInterfaceTemplateArgs.builder()\n                .name(\"template1\")\n                .build())\n            .linksecPolicy(\"must-secure\")\n            .redirectAppendClientMac(\"00:01:00:01:00:01\")\n            .redirectAppendSwitchMac(\"00:01:00:01:00:02\")\n            .redirectUrl(\"valid_url\")\n            .redirectUrlMatchAcl(\"acl_name\")\n            .redirectUrlMatchAction(\"redirect-on-no-match\")\n            .servicePolicyQosInput(\"input_qos\")\n            .servicePolicyQosOutput(\"output_qos\")\n            .sgt(57)\n            .tags(ServiceTemplateTagArgs.builder()\n                .name(\"tag_name\")\n                .build())\n            .tunnelCapwapName(\"TUN1\")\n            .vlan(27)\n            .vnid(\"12345\")\n            .voiceVlan(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:ServiceTemplate\n    properties:\n      absoluteTimer: 45\n      accessGroups:\n        - name: ag1\n      description: service_template_desc\n      dnsAclPreauth: dns_acl_name\n      ianctivityTimer: 25\n      inactivityTimerProbe: false\n      interfaceTemplates:\n        - name: template1\n      linksecPolicy: must-secure\n      redirectAppendClientMac: 00:01:00:01:00:01\n      redirectAppendSwitchMac: 00:01:00:01:00:02\n      redirectUrl: valid_url\n      redirectUrlMatchAcl: acl_name\n      redirectUrlMatchAction: redirect-on-no-match\n      servicePolicyQosInput: input_qos\n      servicePolicyQosOutput: output_qos\n      sgt: 57\n      tags:\n        - name: tag_name\n      tunnelCapwapName: TUN1\n      vlan: 27\n      vnid: '12345'\n      voiceVlan: false\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/serviceTemplate:ServiceTemplate example \"Cisco-IOS-XE-native:native/Cisco-IOS-XE-switch:service-template=MY_TEMPLATE\"\n```\n\n ",
            "properties": {
                "absoluteTimer": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 1073741823 - Range: `1`-`1073741823`\n"
                },
                "accessGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/ServiceTemplateAccessGroup:ServiceTemplateAccessGroup"
                    },
                    "description": "Access list to be applied\n"
                },
                "description": {
                    "type": "string",
                    "description": "Enter a description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dnsAclPreauth": {
                    "type": "string",
                    "description": "pre-authentication\n"
                },
                "ianctivityTimer": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 65535 - Range: `1`-`65535`\n"
                },
                "inactivityTimerProbe": {
                    "type": "boolean",
                    "description": "ARP probe\n"
                },
                "interfaceTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/ServiceTemplateInterfaceTemplate:ServiceTemplateInterfaceTemplate"
                    },
                    "description": "Interface template to be applied\n"
                },
                "linksecPolicy": {
                    "type": "string",
                    "description": "Set the link security policy - Choices: `must-not-secure`, `must-secure`, `should-secure`\n"
                },
                "mdnsServicePolicy": {
                    "type": "string",
                    "description": "mdns policy to be applied\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specify a template name (maximum 48 characters)\n"
                },
                "redirectAppendClientMac": {
                    "type": "string",
                    "description": "Append client Mac Address in redirect URL\n"
                },
                "redirectAppendSwitchMac": {
                    "type": "string",
                    "description": "Append switch Mac Address in redirect URL\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "Specify a valid URL\n"
                },
                "redirectUrlMatchAcl": {
                    "type": "string",
                    "description": "Specify the access list name\n"
                },
                "redirectUrlMatchAction": {
                    "type": "string",
                    "description": "- Choices: `one-time-redirect`, `redirect-on-no-match`\n"
                },
                "servicePolicyQosInput": {
                    "type": "string",
                    "description": "Configure input Qos policy\n"
                },
                "servicePolicyQosOutput": {
                    "type": "string",
                    "description": "Configure output Qos policy\n"
                },
                "sgt": {
                    "type": "integer",
                    "description": "SGT tag - Range: `2`-`65519`\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/ServiceTemplateTag:ServiceTemplateTag"
                    },
                    "description": "tag name\n"
                },
                "tunnelCapwapName": {
                    "type": "string",
                    "description": "tunnel profile name\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "Vlan to be applied - Range: `1`-`4094`\n"
                },
                "vnid": {
                    "type": "string",
                    "description": "Vnid to be applied\n"
                },
                "voiceVlan": {
                    "type": "boolean",
                    "description": "Critical voice vlan\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "absoluteTimer": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 1073741823 - Range: `1`-`1073741823`\n"
                },
                "accessGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/ServiceTemplateAccessGroup:ServiceTemplateAccessGroup"
                    },
                    "description": "Access list to be applied\n"
                },
                "description": {
                    "type": "string",
                    "description": "Enter a description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "dnsAclPreauth": {
                    "type": "string",
                    "description": "pre-authentication\n"
                },
                "ianctivityTimer": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 65535 - Range: `1`-`65535`\n"
                },
                "inactivityTimerProbe": {
                    "type": "boolean",
                    "description": "ARP probe\n"
                },
                "interfaceTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/ServiceTemplateInterfaceTemplate:ServiceTemplateInterfaceTemplate"
                    },
                    "description": "Interface template to be applied\n"
                },
                "linksecPolicy": {
                    "type": "string",
                    "description": "Set the link security policy - Choices: `must-not-secure`, `must-secure`, `should-secure`\n"
                },
                "mdnsServicePolicy": {
                    "type": "string",
                    "description": "mdns policy to be applied\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specify a template name (maximum 48 characters)\n"
                },
                "redirectAppendClientMac": {
                    "type": "string",
                    "description": "Append client Mac Address in redirect URL\n"
                },
                "redirectAppendSwitchMac": {
                    "type": "string",
                    "description": "Append switch Mac Address in redirect URL\n"
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "Specify a valid URL\n"
                },
                "redirectUrlMatchAcl": {
                    "type": "string",
                    "description": "Specify the access list name\n"
                },
                "redirectUrlMatchAction": {
                    "type": "string",
                    "description": "- Choices: `one-time-redirect`, `redirect-on-no-match`\n"
                },
                "servicePolicyQosInput": {
                    "type": "string",
                    "description": "Configure input Qos policy\n"
                },
                "servicePolicyQosOutput": {
                    "type": "string",
                    "description": "Configure output Qos policy\n"
                },
                "sgt": {
                    "type": "integer",
                    "description": "SGT tag - Range: `2`-`65519`\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/ServiceTemplateTag:ServiceTemplateTag"
                    },
                    "description": "tag name\n"
                },
                "tunnelCapwapName": {
                    "type": "string",
                    "description": "tunnel profile name\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "Vlan to be applied - Range: `1`-`4094`\n"
                },
                "vnid": {
                    "type": "string",
                    "description": "Vnid to be applied\n"
                },
                "voiceVlan": {
                    "type": "boolean",
                    "description": "Critical voice vlan\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceTemplate resources.\n",
                "properties": {
                    "absoluteTimer": {
                        "type": "integer",
                        "description": "Enter a value between 1 and 1073741823 - Range: `1`-`1073741823`\n"
                    },
                    "accessGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/ServiceTemplateAccessGroup:ServiceTemplateAccessGroup"
                        },
                        "description": "Access list to be applied\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Enter a description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dnsAclPreauth": {
                        "type": "string",
                        "description": "pre-authentication\n"
                    },
                    "ianctivityTimer": {
                        "type": "integer",
                        "description": "Enter a value between 1 and 65535 - Range: `1`-`65535`\n"
                    },
                    "inactivityTimerProbe": {
                        "type": "boolean",
                        "description": "ARP probe\n"
                    },
                    "interfaceTemplates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/ServiceTemplateInterfaceTemplate:ServiceTemplateInterfaceTemplate"
                        },
                        "description": "Interface template to be applied\n"
                    },
                    "linksecPolicy": {
                        "type": "string",
                        "description": "Set the link security policy - Choices: `must-not-secure`, `must-secure`, `should-secure`\n"
                    },
                    "mdnsServicePolicy": {
                        "type": "string",
                        "description": "mdns policy to be applied\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specify a template name (maximum 48 characters)\n"
                    },
                    "redirectAppendClientMac": {
                        "type": "string",
                        "description": "Append client Mac Address in redirect URL\n"
                    },
                    "redirectAppendSwitchMac": {
                        "type": "string",
                        "description": "Append switch Mac Address in redirect URL\n"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "description": "Specify a valid URL\n"
                    },
                    "redirectUrlMatchAcl": {
                        "type": "string",
                        "description": "Specify the access list name\n"
                    },
                    "redirectUrlMatchAction": {
                        "type": "string",
                        "description": "- Choices: `one-time-redirect`, `redirect-on-no-match`\n"
                    },
                    "servicePolicyQosInput": {
                        "type": "string",
                        "description": "Configure input Qos policy\n"
                    },
                    "servicePolicyQosOutput": {
                        "type": "string",
                        "description": "Configure output Qos policy\n"
                    },
                    "sgt": {
                        "type": "integer",
                        "description": "SGT tag - Range: `2`-`65519`\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/ServiceTemplateTag:ServiceTemplateTag"
                        },
                        "description": "tag name\n"
                    },
                    "tunnelCapwapName": {
                        "type": "string",
                        "description": "tunnel profile name\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "Vlan to be applied - Range: `1`-`4094`\n"
                    },
                    "vnid": {
                        "type": "string",
                        "description": "Vnid to be applied\n"
                    },
                    "voiceVlan": {
                        "type": "boolean",
                        "description": "Critical voice vlan\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/snmpServer:SnmpServer": {
            "description": "This resource can manage the SNMP Server configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.SnmpServer;\nimport com.pulumi.iosxe.SnmpServerArgs;\nimport com.pulumi.iosxe.inputs.SnmpServerContextArgs;\nimport com.pulumi.iosxe.inputs.SnmpServerHostArgs;\nimport com.pulumi.iosxe.inputs.SnmpServerSnmpCommunityArgs;\nimport com.pulumi.iosxe.inputs.SnmpServerViewArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SnmpServer(\"example\", SnmpServerArgs.builder()        \n            .chassisId(\"R1\")\n            .contact(\"Contact1\")\n            .contexts(SnmpServerContextArgs.builder()\n                .name(\"CON1\")\n                .build())\n            .enableLoggingGetop(true)\n            .enableLoggingSetop(true)\n            .enableTraps(true)\n            .enableTrapsAuthFrameworkSecViolation(true)\n            .enableTrapsBfd(true)\n            .enableTrapsBulkstatCollection(true)\n            .enableTrapsBulkstatTransfer(true)\n            .enableTrapsCallHomeMessageSendFail(true)\n            .enableTrapsCallHomeServerFail(true)\n            .enableTrapsConfig(true)\n            .enableTrapsConfigCopy(true)\n            .enableTrapsConfigCtid(true)\n            .enableTrapsCpuThreshold(true)\n            .enableTrapsDhcp(true)\n            .enableTrapsEigrp(true)\n            .enableTrapsEntity(true)\n            .enableTrapsEventManager(true)\n            .enableTrapsFlashInsertion(true)\n            .enableTrapsFlashRemoval(true)\n            .enableTrapsFlowmon(true)\n            .enableTrapsFruCtrl(true)\n            .enableTrapsIkePolicyAdd(true)\n            .enableTrapsIkePolicyDelete(true)\n            .enableTrapsIkeTunnelStart(true)\n            .enableTrapsIkeTunnelStop(true)\n            .enableTrapsIpmulticast(true)\n            .enableTrapsIpsecCryptomapAdd(true)\n            .enableTrapsIpsecCryptomapAttach(true)\n            .enableTrapsIpsecCryptomapDelete(true)\n            .enableTrapsIpsecCryptomapDetach(true)\n            .enableTrapsIpsecTooManySas(true)\n            .enableTrapsIpsecTunnelStart(true)\n            .enableTrapsIpsecTunnelStop(true)\n            .enableTrapsIpsla(true)\n            .enableTrapsLicense(true)\n            .enableTrapsMemoryBufferpeak(true)\n            .enableTrapsMsdp(true)\n            .enableTrapsOspfConfigErrors(true)\n            .enableTrapsOspfConfigLsa(true)\n            .enableTrapsOspfConfigRetransmit(true)\n            .enableTrapsOspfConfigStateChange(true)\n            .enableTrapsOspfErrorsEnable(true)\n            .enableTrapsOspfLsaEnable(true)\n            .enableTrapsOspfNssaTransChange(true)\n            .enableTrapsOspfRetransmitEnable(true)\n            .enableTrapsOspfShamlinkInterface(true)\n            .enableTrapsOspfShamlinkNeighbor(true)\n            .enableTrapsOspfv3ConfigErrors(true)\n            .enableTrapsOspfv3ConfigStateChange(true)\n            .enableTrapsPimInvalidPimMessage(true)\n            .enableTrapsPimNeighborChange(true)\n            .enableTrapsPimRpMappingChange(true)\n            .enableTrapsPortSecurity(true)\n            .enableTrapsPwVc(true)\n            .enableTrapsRf(true)\n            .enableTrapsSmartLicense(true)\n            .enableTrapsSnmpAuthentication(true)\n            .enableTrapsSnmpColdstart(true)\n            .enableTrapsSnmpLinkdown(true)\n            .enableTrapsSnmpLinkup(true)\n            .enableTrapsSnmpWarmstart(true)\n            .enableTrapsSyslog(true)\n            .enableTrapsTransceiverAll(true)\n            .enableTrapsTty(true)\n            .enableTrapsVlancreate(true)\n            .enableTrapsVlandelete(true)\n            .enableTrapsVrfmibVnetTrunkDown(true)\n            .enableTrapsVrfmibVnetTrunkUp(true)\n            .enableTrapsVrfmibVrfDown(true)\n            .enableTrapsVrfmibVrfUp(true)\n            .enableTrapsVtp(true)\n            .hosts(SnmpServerHostArgs.builder()\n                .community_or_user(\"08116C5D1A0E550518\")\n                .encryption(\"7\")\n                .ip_address(\"11.1.1.1\")\n                .version(\"2c\")\n                .build())\n            .ifindexPersist(true)\n            .location(\"Location1\")\n            .packetsize(2000)\n            .queueLength(100)\n            .snmpCommunities(SnmpServerSnmpCommunityArgs.builder()\n                .access_list_name(\"1\")\n                .ipv6(\"ACL1\")\n                .name(\"COM1\")\n                .permission(\"ro\")\n                .view(\"VIEW1\")\n                .build())\n            .sourceInterfaceInformsLoopback(1)\n            .sourceInterfaceTrapsLoopback(1)\n            .systemShutdown(true)\n            .trapSourceLoopback(1)\n            .views(SnmpServerViewArgs.builder()\n                .inc_exl(\"included\")\n                .mib(\"interfaces\")\n                .name(\"VIEW1\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:SnmpServer\n    properties:\n      chassisId: R1\n      contact: Contact1\n      contexts:\n        - name: CON1\n      enableLoggingGetop: true\n      enableLoggingSetop: true\n      enableTraps: true\n      enableTrapsAuthFrameworkSecViolation: true\n      enableTrapsBfd: true\n      enableTrapsBulkstatCollection: true\n      enableTrapsBulkstatTransfer: true\n      enableTrapsCallHomeMessageSendFail: true\n      enableTrapsCallHomeServerFail: true\n      enableTrapsConfig: true\n      enableTrapsConfigCopy: true\n      enableTrapsConfigCtid: true\n      enableTrapsCpuThreshold: true\n      enableTrapsDhcp: true\n      enableTrapsEigrp: true\n      enableTrapsEntity: true\n      enableTrapsEventManager: true\n      enableTrapsFlashInsertion: true\n      enableTrapsFlashRemoval: true\n      enableTrapsFlowmon: true\n      enableTrapsFruCtrl: true\n      enableTrapsIkePolicyAdd: true\n      enableTrapsIkePolicyDelete: true\n      enableTrapsIkeTunnelStart: true\n      enableTrapsIkeTunnelStop: true\n      enableTrapsIpmulticast: true\n      enableTrapsIpsecCryptomapAdd: true\n      enableTrapsIpsecCryptomapAttach: true\n      enableTrapsIpsecCryptomapDelete: true\n      enableTrapsIpsecCryptomapDetach: true\n      enableTrapsIpsecTooManySas: true\n      enableTrapsIpsecTunnelStart: true\n      enableTrapsIpsecTunnelStop: true\n      enableTrapsIpsla: true\n      enableTrapsLicense: true\n      enableTrapsMemoryBufferpeak: true\n      enableTrapsMsdp: true\n      enableTrapsOspfConfigErrors: true\n      enableTrapsOspfConfigLsa: true\n      enableTrapsOspfConfigRetransmit: true\n      enableTrapsOspfConfigStateChange: true\n      enableTrapsOspfErrorsEnable: true\n      enableTrapsOspfLsaEnable: true\n      enableTrapsOspfNssaTransChange: true\n      enableTrapsOspfRetransmitEnable: true\n      enableTrapsOspfShamlinkInterface: true\n      enableTrapsOspfShamlinkNeighbor: true\n      enableTrapsOspfv3ConfigErrors: true\n      enableTrapsOspfv3ConfigStateChange: true\n      enableTrapsPimInvalidPimMessage: true\n      enableTrapsPimNeighborChange: true\n      enableTrapsPimRpMappingChange: true\n      enableTrapsPortSecurity: true\n      enableTrapsPwVc: true\n      enableTrapsRf: true\n      enableTrapsSmartLicense: true\n      enableTrapsSnmpAuthentication: true\n      enableTrapsSnmpColdstart: true\n      enableTrapsSnmpLinkdown: true\n      enableTrapsSnmpLinkup: true\n      enableTrapsSnmpWarmstart: true\n      enableTrapsSyslog: true\n      enableTrapsTransceiverAll: true\n      enableTrapsTty: true\n      enableTrapsVlancreate: true\n      enableTrapsVlandelete: true\n      enableTrapsVrfmibVnetTrunkDown: true\n      enableTrapsVrfmibVnetTrunkUp: true\n      enableTrapsVrfmibVrfDown: true\n      enableTrapsVrfmibVrfUp: true\n      enableTrapsVtp: true\n      hosts:\n        - community_or_user: 08116C5D1A0E550518\n          encryption: '7'\n          ip_address: 11.1.1.1\n          version: 2c\n      ifindexPersist: true\n      location: Location1\n      packetsize: 2000\n      queueLength: 100\n      snmpCommunities:\n        - access_list_name: '1'\n          ipv6: ACL1\n          name: COM1\n          permission: ro\n          view: VIEW1\n      sourceInterfaceInformsLoopback: 1\n      sourceInterfaceTrapsLoopback: 1\n      systemShutdown: true\n      trapSourceLoopback: 1\n      views:\n        - inc_exl: included\n          mib: interfaces\n          name: VIEW1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/snmpServer:SnmpServer example \"Cisco-IOS-XE-native:native/snmp-server\"\n```\n\n ",
            "properties": {
                "chassisId": {
                    "type": "string",
                    "description": "String to uniquely identify this chassis\n"
                },
                "contact": {
                    "type": "string",
                    "description": "Text for mib object sysContact\n"
                },
                "contexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/SnmpServerContext:SnmpServerContext"
                    },
                    "description": "Create/Delete a context apart from default\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enableInforms": {
                    "type": "boolean",
                    "description": "Enable SNMP Informs\n"
                },
                "enableLoggingGetop": {
                    "type": "boolean",
                    "description": "Enable SNMP GET Operation logging\n"
                },
                "enableLoggingSetop": {
                    "type": "boolean",
                    "description": "Enable SNMP SET Operation logging\n"
                },
                "enableTraps": {
                    "type": "boolean",
                    "description": "Enable SNMP Traps\n"
                },
                "enableTrapsAuthFrameworkSecViolation": {
                    "type": "boolean"
                },
                "enableTrapsBfd": {
                    "type": "boolean"
                },
                "enableTrapsBgpCbgp2": {
                    "type": "boolean",
                    "description": "Enable BGP MIBv2 traps\n"
                },
                "enableTrapsBridgeNewroot": {
                    "type": "boolean"
                },
                "enableTrapsBridgeTopologychange": {
                    "type": "boolean"
                },
                "enableTrapsBulkstatCollection": {
                    "type": "boolean",
                    "description": "Enable Data-Collection-MIB Collection notifications\n"
                },
                "enableTrapsBulkstatTransfer": {
                    "type": "boolean",
                    "description": "Enable Data-Collection-MIB Transfer notifications\n"
                },
                "enableTrapsCallHomeMessageSendFail": {
                    "type": "boolean"
                },
                "enableTrapsCallHomeServerFail": {
                    "type": "boolean"
                },
                "enableTrapsCefInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsCefPeerFibStateChange": {
                    "type": "boolean"
                },
                "enableTrapsCefPeerStateChange": {
                    "type": "boolean"
                },
                "enableTrapsCefResourceFailure": {
                    "type": "boolean"
                },
                "enableTrapsConfig": {
                    "type": "boolean",
                    "description": "Enable SNMP config traps\n"
                },
                "enableTrapsConfigCopy": {
                    "type": "boolean",
                    "description": "Enable SNMP config-copy traps\n"
                },
                "enableTrapsConfigCtid": {
                    "type": "boolean"
                },
                "enableTrapsCpuThreshold": {
                    "type": "boolean",
                    "description": "Allow CPU utilization threshold violation traps\n"
                },
                "enableTrapsDhcp": {
                    "type": "boolean",
                    "description": "Enable SNMP dhcp traps\n"
                },
                "enableTrapsEigrp": {
                    "type": "boolean",
                    "description": "Enable SNMP EIGRP traps\n"
                },
                "enableTrapsEnergywise": {
                    "type": "boolean"
                },
                "enableTrapsEntity": {
                    "type": "boolean",
                    "description": "Enable SNMP entity traps\n"
                },
                "enableTrapsEntityDiagBootUpFail": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagBootUpFailedNotif traps\n"
                },
                "enableTrapsEntityDiagHmTestRecover": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagHMTestRecoverNotif traps\n"
                },
                "enableTrapsEntityDiagHmThreshReached": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagHMThresholdReachedNotif traps\n"
                },
                "enableTrapsEntityDiagScheduledTestFail": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagScheduledTestFailedNotif traps\n"
                },
                "enableTrapsEntityPerfThroughputNotif": {
                    "type": "boolean",
                    "description": "Enable ENTITY PERFORMANCE MIB throughput traps\n"
                },
                "enableTrapsEnvmon": {
                    "type": "boolean",
                    "description": "Enable SNMP environmental monitor traps\n"
                },
                "enableTrapsErrdisable": {
                    "type": "boolean",
                    "description": "Enable SNMP errdisable notifications\n"
                },
                "enableTrapsEventManager": {
                    "type": "boolean",
                    "description": "Enable SNMP Embedded Event Manager traps\n"
                },
                "enableTrapsFastRerouteProtected": {
                    "type": "boolean"
                },
                "enableTrapsFlashInsertion": {
                    "type": "boolean",
                    "description": "Enable SNMP Flash Insertion notifications\n"
                },
                "enableTrapsFlashLowspace": {
                    "type": "boolean",
                    "description": "Enable SNMP Flash Lowspace notifications\n"
                },
                "enableTrapsFlashRemoval": {
                    "type": "boolean",
                    "description": "Enable SNMP Flash Removal notifications\n"
                },
                "enableTrapsFlowmon": {
                    "type": "boolean",
                    "description": "Enable SNMP flowmon notifications\n"
                },
                "enableTrapsFruCtrl": {
                    "type": "boolean",
                    "description": "Enable SNMP entity FRU control traps\n"
                },
                "enableTrapsHsrp": {
                    "type": "boolean",
                    "description": "Enable SNMP HSRP traps\n"
                },
                "enableTrapsIkePolicyAdd": {
                    "type": "boolean",
                    "description": "Enable IKE Policy add trap\n"
                },
                "enableTrapsIkePolicyDelete": {
                    "type": "boolean",
                    "description": "Enable IKE Policy delete trap\n"
                },
                "enableTrapsIkeTunnelStart": {
                    "type": "boolean",
                    "description": "Enable IKE Tunnel start trap\n"
                },
                "enableTrapsIkeTunnelStop": {
                    "type": "boolean",
                    "description": "Enable IKE Tunnel stop trap\n"
                },
                "enableTrapsIpmulticast": {
                    "type": "boolean",
                    "description": "Enable SNMP ipmulticast traps\n"
                },
                "enableTrapsIpsecCryptomapAdd": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap add trap\n"
                },
                "enableTrapsIpsecCryptomapAttach": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap Attach trap\n"
                },
                "enableTrapsIpsecCryptomapDelete": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap delete trap\n"
                },
                "enableTrapsIpsecCryptomapDetach": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap Detach trap\n"
                },
                "enableTrapsIpsecTooManySas": {
                    "type": "boolean",
                    "description": "Enable IPsec Tunnel Start trap\n"
                },
                "enableTrapsIpsecTunnelStart": {
                    "type": "boolean",
                    "description": "Enable IPsec Tunnel Start trap\n"
                },
                "enableTrapsIpsecTunnelStop": {
                    "type": "boolean",
                    "description": "Enable IPsec Tunnel Stop trap\n"
                },
                "enableTrapsIpsla": {
                    "type": "boolean",
                    "description": "Enable IPSLA traps traps\n"
                },
                "enableTrapsIsis": {
                    "type": "boolean",
                    "description": "Enable ISIS traps traps\n"
                },
                "enableTrapsLicense": {
                    "type": "boolean",
                    "description": "Enable license traps\n"
                },
                "enableTrapsLocalAuth": {
                    "type": "boolean",
                    "description": "Enable SNMP local auth traps\n"
                },
                "enableTrapsMacNotificationChange": {
                    "type": "boolean",
                    "description": "Enable SNMP Change traps\n"
                },
                "enableTrapsMacNotificationMove": {
                    "type": "boolean",
                    "description": "Enable SNMP Move traps\n"
                },
                "enableTrapsMacNotificationThreshold": {
                    "type": "boolean",
                    "description": "Enable SNMP Threshold traps\n"
                },
                "enableTrapsMemoryBufferpeak": {
                    "type": "boolean",
                    "description": "Enable SNMP Memory Bufferpeak traps\n"
                },
                "enableTrapsMplsLdp": {
                    "type": "boolean",
                    "description": "SNMP MPLS label distribution protocol traps\n"
                },
                "enableTrapsMplsRfcLdp": {
                    "type": "boolean"
                },
                "enableTrapsMplsTrafficEng": {
                    "type": "boolean"
                },
                "enableTrapsMplsVpn": {
                    "type": "boolean"
                },
                "enableTrapsMsdp": {
                    "type": "boolean",
                    "description": "Enable SNMP MSDP traps\n"
                },
                "enableTrapsNhrpNhc": {
                    "type": "boolean"
                },
                "enableTrapsNhrpNhp": {
                    "type": "boolean"
                },
                "enableTrapsNhrpNhs": {
                    "type": "boolean"
                },
                "enableTrapsNhrpQuotaExceeded": {
                    "type": "boolean"
                },
                "enableTrapsOspfConfigErrors": {
                    "type": "boolean",
                    "description": "Enable all traps of errors\n"
                },
                "enableTrapsOspfConfigLsa": {
                    "type": "boolean",
                    "description": "Enable all traps of lsa\n"
                },
                "enableTrapsOspfConfigRetransmit": {
                    "type": "boolean",
                    "description": "Enable all traps of retransmit\n"
                },
                "enableTrapsOspfConfigStateChange": {
                    "type": "boolean",
                    "description": "Enable all traps of state-change\n"
                },
                "enableTrapsOspfErrorsEnable": {
                    "type": "boolean",
                    "description": "Enable all traps of errors\n"
                },
                "enableTrapsOspfLsaEnable": {
                    "type": "boolean",
                    "description": "Enable all traps of lsa\n"
                },
                "enableTrapsOspfNssaTransChange": {
                    "type": "boolean",
                    "description": "Nssa translator state changes\n"
                },
                "enableTrapsOspfRetransmitEnable": {
                    "type": "boolean",
                    "description": "Enable all traps of retransmit\n"
                },
                "enableTrapsOspfShamlinkInterface": {
                    "type": "boolean",
                    "description": "Sham link interface state changes\n"
                },
                "enableTrapsOspfShamlinkNeighbor": {
                    "type": "boolean",
                    "description": "Sham link neighbor state changes\n"
                },
                "enableTrapsOspfv3ConfigErrors": {
                    "type": "boolean",
                    "description": "Enable all traps of errors\n"
                },
                "enableTrapsOspfv3ConfigStateChange": {
                    "type": "boolean",
                    "description": "Enable all traps of state-change\n"
                },
                "enableTrapsPimInvalidPimMessage": {
                    "type": "boolean",
                    "description": "Enable invalid pim message trap\n"
                },
                "enableTrapsPimNeighborChange": {
                    "type": "boolean",
                    "description": "Enable neighbor change trap\n"
                },
                "enableTrapsPimRpMappingChange": {
                    "type": "boolean",
                    "description": "Enable rp mapping change trap\n"
                },
                "enableTrapsPortSecurity": {
                    "type": "boolean",
                    "description": "Enable SNMP port security traps\n"
                },
                "enableTrapsPowerEthernetGroup": {
                    "type": "string",
                    "description": "Enable SNMP inline power group based traps\n"
                },
                "enableTrapsPowerEthernetPolice": {
                    "type": "boolean",
                    "description": "Enable Policing Trap\n"
                },
                "enableTrapsPwVc": {
                    "type": "boolean"
                },
                "enableTrapsRep": {
                    "type": "boolean"
                },
                "enableTrapsRf": {
                    "type": "boolean",
                    "description": "Enable all SNMP traps defined in CISCO-RF-MIB\n"
                },
                "enableTrapsSmartLicense": {
                    "type": "boolean",
                    "description": "Enable smart license traps\n"
                },
                "enableTrapsSnmpAuthentication": {
                    "type": "boolean",
                    "description": "Enable authentication trap\n"
                },
                "enableTrapsSnmpColdstart": {
                    "type": "boolean",
                    "description": "Enable coldStart trap\n"
                },
                "enableTrapsSnmpLinkdown": {
                    "type": "boolean",
                    "description": "Enable linkDown trap\n"
                },
                "enableTrapsSnmpLinkup": {
                    "type": "boolean",
                    "description": "Enable linkUp trap\n"
                },
                "enableTrapsSnmpWarmstart": {
                    "type": "boolean",
                    "description": "Enable warmStart trap\n"
                },
                "enableTrapsStackwise": {
                    "type": "boolean",
                    "description": "Enable SNMP stackwise traps\n"
                },
                "enableTrapsStpxInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsStpxLoopInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsStpxRootInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsSyslog": {
                    "type": "boolean",
                    "description": "Enable SNMP syslog traps\n"
                },
                "enableTrapsTransceiverAll": {
                    "type": "boolean"
                },
                "enableTrapsTty": {
                    "type": "boolean",
                    "description": "Enable TCP connection traps\n"
                },
                "enableTrapsUdldLinkFailRpt": {
                    "type": "boolean",
                    "description": "Enable SNMP cudldpFastHelloLinkFailRptNotification traps\n"
                },
                "enableTrapsUdldStatusChange": {
                    "type": "boolean",
                    "description": "Enable SNMP cudldpFastHelloStatusChangeNotification traps\n"
                },
                "enableTrapsVlanMembership": {
                    "type": "boolean"
                },
                "enableTrapsVlancreate": {
                    "type": "boolean"
                },
                "enableTrapsVlandelete": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVnetTrunkDown": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVnetTrunkUp": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVrfDown": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVrfUp": {
                    "type": "boolean"
                },
                "enableTrapsVtp": {
                    "type": "boolean"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/SnmpServerHost:SnmpServerHost"
                    },
                    "description": "Specify hosts keyed by (ip-address, community-or-user)\n"
                },
                "ifindexPersist": {
                    "type": "boolean",
                    "description": "Persist interface indices\n"
                },
                "location": {
                    "type": "string",
                    "description": "Text for mib object sysLocation\n"
                },
                "packetsize": {
                    "type": "integer",
                    "description": "Largest SNMP packet size - Range: `484`-`17892`\n"
                },
                "queueLength": {
                    "type": "integer",
                    "description": "Message queue length for each TRAP host - Range: `1`-`5000`\n"
                },
                "snmpCommunities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/SnmpServerSnmpCommunity:SnmpServerSnmpCommunity"
                    },
                    "description": "Enable SNMP; set community string and access privs\n"
                },
                "sourceInterfaceInformsFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "sourceInterfaceInformsGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "sourceInterfaceInformsHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "sourceInterfaceInformsLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "sourceInterfaceInformsPortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "sourceInterfaceInformsPortChannelSubinterface": {
                    "type": "string"
                },
                "sourceInterfaceInformsTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "sourceInterfaceInformsVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "sourceInterfaceTrapsFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "sourceInterfaceTrapsGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "sourceInterfaceTrapsHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "sourceInterfaceTrapsLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "sourceInterfaceTrapsPortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "sourceInterfaceTrapsPortChannelSubinterface": {
                    "type": "string"
                },
                "sourceInterfaceTrapsTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "sourceInterfaceTrapsVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "systemShutdown": {
                    "type": "boolean",
                    "description": "Enable use of the SNMP reload command\n"
                },
                "trapSourceFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "trapSourceGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "trapSourceHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "trapSourceLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "trapSourcePortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "trapSourcePortChannelSubinterface": {
                    "type": "string"
                },
                "trapSourceTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "trapSourceVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "views": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/SnmpServerView:SnmpServerView"
                    },
                    "description": "Define an SNMPv2 MIB view\n"
                }
            },
            "inputProperties": {
                "chassisId": {
                    "type": "string",
                    "description": "String to uniquely identify this chassis\n"
                },
                "contact": {
                    "type": "string",
                    "description": "Text for mib object sysContact\n"
                },
                "contexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/SnmpServerContext:SnmpServerContext"
                    },
                    "description": "Create/Delete a context apart from default\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enableInforms": {
                    "type": "boolean",
                    "description": "Enable SNMP Informs\n"
                },
                "enableLoggingGetop": {
                    "type": "boolean",
                    "description": "Enable SNMP GET Operation logging\n"
                },
                "enableLoggingSetop": {
                    "type": "boolean",
                    "description": "Enable SNMP SET Operation logging\n"
                },
                "enableTraps": {
                    "type": "boolean",
                    "description": "Enable SNMP Traps\n"
                },
                "enableTrapsAuthFrameworkSecViolation": {
                    "type": "boolean"
                },
                "enableTrapsBfd": {
                    "type": "boolean"
                },
                "enableTrapsBgpCbgp2": {
                    "type": "boolean",
                    "description": "Enable BGP MIBv2 traps\n"
                },
                "enableTrapsBridgeNewroot": {
                    "type": "boolean"
                },
                "enableTrapsBridgeTopologychange": {
                    "type": "boolean"
                },
                "enableTrapsBulkstatCollection": {
                    "type": "boolean",
                    "description": "Enable Data-Collection-MIB Collection notifications\n"
                },
                "enableTrapsBulkstatTransfer": {
                    "type": "boolean",
                    "description": "Enable Data-Collection-MIB Transfer notifications\n"
                },
                "enableTrapsCallHomeMessageSendFail": {
                    "type": "boolean"
                },
                "enableTrapsCallHomeServerFail": {
                    "type": "boolean"
                },
                "enableTrapsCefInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsCefPeerFibStateChange": {
                    "type": "boolean"
                },
                "enableTrapsCefPeerStateChange": {
                    "type": "boolean"
                },
                "enableTrapsCefResourceFailure": {
                    "type": "boolean"
                },
                "enableTrapsConfig": {
                    "type": "boolean",
                    "description": "Enable SNMP config traps\n"
                },
                "enableTrapsConfigCopy": {
                    "type": "boolean",
                    "description": "Enable SNMP config-copy traps\n"
                },
                "enableTrapsConfigCtid": {
                    "type": "boolean"
                },
                "enableTrapsCpuThreshold": {
                    "type": "boolean",
                    "description": "Allow CPU utilization threshold violation traps\n"
                },
                "enableTrapsDhcp": {
                    "type": "boolean",
                    "description": "Enable SNMP dhcp traps\n"
                },
                "enableTrapsEigrp": {
                    "type": "boolean",
                    "description": "Enable SNMP EIGRP traps\n"
                },
                "enableTrapsEnergywise": {
                    "type": "boolean"
                },
                "enableTrapsEntity": {
                    "type": "boolean",
                    "description": "Enable SNMP entity traps\n"
                },
                "enableTrapsEntityDiagBootUpFail": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagBootUpFailedNotif traps\n"
                },
                "enableTrapsEntityDiagHmTestRecover": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagHMTestRecoverNotif traps\n"
                },
                "enableTrapsEntityDiagHmThreshReached": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagHMThresholdReachedNotif traps\n"
                },
                "enableTrapsEntityDiagScheduledTestFail": {
                    "type": "boolean",
                    "description": "Enable SNMP ceDiagScheduledTestFailedNotif traps\n"
                },
                "enableTrapsEntityPerfThroughputNotif": {
                    "type": "boolean",
                    "description": "Enable ENTITY PERFORMANCE MIB throughput traps\n"
                },
                "enableTrapsEnvmon": {
                    "type": "boolean",
                    "description": "Enable SNMP environmental monitor traps\n"
                },
                "enableTrapsErrdisable": {
                    "type": "boolean",
                    "description": "Enable SNMP errdisable notifications\n"
                },
                "enableTrapsEventManager": {
                    "type": "boolean",
                    "description": "Enable SNMP Embedded Event Manager traps\n"
                },
                "enableTrapsFastRerouteProtected": {
                    "type": "boolean"
                },
                "enableTrapsFlashInsertion": {
                    "type": "boolean",
                    "description": "Enable SNMP Flash Insertion notifications\n"
                },
                "enableTrapsFlashLowspace": {
                    "type": "boolean",
                    "description": "Enable SNMP Flash Lowspace notifications\n"
                },
                "enableTrapsFlashRemoval": {
                    "type": "boolean",
                    "description": "Enable SNMP Flash Removal notifications\n"
                },
                "enableTrapsFlowmon": {
                    "type": "boolean",
                    "description": "Enable SNMP flowmon notifications\n"
                },
                "enableTrapsFruCtrl": {
                    "type": "boolean",
                    "description": "Enable SNMP entity FRU control traps\n"
                },
                "enableTrapsHsrp": {
                    "type": "boolean",
                    "description": "Enable SNMP HSRP traps\n"
                },
                "enableTrapsIkePolicyAdd": {
                    "type": "boolean",
                    "description": "Enable IKE Policy add trap\n"
                },
                "enableTrapsIkePolicyDelete": {
                    "type": "boolean",
                    "description": "Enable IKE Policy delete trap\n"
                },
                "enableTrapsIkeTunnelStart": {
                    "type": "boolean",
                    "description": "Enable IKE Tunnel start trap\n"
                },
                "enableTrapsIkeTunnelStop": {
                    "type": "boolean",
                    "description": "Enable IKE Tunnel stop trap\n"
                },
                "enableTrapsIpmulticast": {
                    "type": "boolean",
                    "description": "Enable SNMP ipmulticast traps\n"
                },
                "enableTrapsIpsecCryptomapAdd": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap add trap\n"
                },
                "enableTrapsIpsecCryptomapAttach": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap Attach trap\n"
                },
                "enableTrapsIpsecCryptomapDelete": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap delete trap\n"
                },
                "enableTrapsIpsecCryptomapDetach": {
                    "type": "boolean",
                    "description": "Enable IPsec Cryptomap Detach trap\n"
                },
                "enableTrapsIpsecTooManySas": {
                    "type": "boolean",
                    "description": "Enable IPsec Tunnel Start trap\n"
                },
                "enableTrapsIpsecTunnelStart": {
                    "type": "boolean",
                    "description": "Enable IPsec Tunnel Start trap\n"
                },
                "enableTrapsIpsecTunnelStop": {
                    "type": "boolean",
                    "description": "Enable IPsec Tunnel Stop trap\n"
                },
                "enableTrapsIpsla": {
                    "type": "boolean",
                    "description": "Enable IPSLA traps traps\n"
                },
                "enableTrapsIsis": {
                    "type": "boolean",
                    "description": "Enable ISIS traps traps\n"
                },
                "enableTrapsLicense": {
                    "type": "boolean",
                    "description": "Enable license traps\n"
                },
                "enableTrapsLocalAuth": {
                    "type": "boolean",
                    "description": "Enable SNMP local auth traps\n"
                },
                "enableTrapsMacNotificationChange": {
                    "type": "boolean",
                    "description": "Enable SNMP Change traps\n"
                },
                "enableTrapsMacNotificationMove": {
                    "type": "boolean",
                    "description": "Enable SNMP Move traps\n"
                },
                "enableTrapsMacNotificationThreshold": {
                    "type": "boolean",
                    "description": "Enable SNMP Threshold traps\n"
                },
                "enableTrapsMemoryBufferpeak": {
                    "type": "boolean",
                    "description": "Enable SNMP Memory Bufferpeak traps\n"
                },
                "enableTrapsMplsLdp": {
                    "type": "boolean",
                    "description": "SNMP MPLS label distribution protocol traps\n"
                },
                "enableTrapsMplsRfcLdp": {
                    "type": "boolean"
                },
                "enableTrapsMplsTrafficEng": {
                    "type": "boolean"
                },
                "enableTrapsMplsVpn": {
                    "type": "boolean"
                },
                "enableTrapsMsdp": {
                    "type": "boolean",
                    "description": "Enable SNMP MSDP traps\n"
                },
                "enableTrapsNhrpNhc": {
                    "type": "boolean"
                },
                "enableTrapsNhrpNhp": {
                    "type": "boolean"
                },
                "enableTrapsNhrpNhs": {
                    "type": "boolean"
                },
                "enableTrapsNhrpQuotaExceeded": {
                    "type": "boolean"
                },
                "enableTrapsOspfConfigErrors": {
                    "type": "boolean",
                    "description": "Enable all traps of errors\n"
                },
                "enableTrapsOspfConfigLsa": {
                    "type": "boolean",
                    "description": "Enable all traps of lsa\n"
                },
                "enableTrapsOspfConfigRetransmit": {
                    "type": "boolean",
                    "description": "Enable all traps of retransmit\n"
                },
                "enableTrapsOspfConfigStateChange": {
                    "type": "boolean",
                    "description": "Enable all traps of state-change\n"
                },
                "enableTrapsOspfErrorsEnable": {
                    "type": "boolean",
                    "description": "Enable all traps of errors\n"
                },
                "enableTrapsOspfLsaEnable": {
                    "type": "boolean",
                    "description": "Enable all traps of lsa\n"
                },
                "enableTrapsOspfNssaTransChange": {
                    "type": "boolean",
                    "description": "Nssa translator state changes\n"
                },
                "enableTrapsOspfRetransmitEnable": {
                    "type": "boolean",
                    "description": "Enable all traps of retransmit\n"
                },
                "enableTrapsOspfShamlinkInterface": {
                    "type": "boolean",
                    "description": "Sham link interface state changes\n"
                },
                "enableTrapsOspfShamlinkNeighbor": {
                    "type": "boolean",
                    "description": "Sham link neighbor state changes\n"
                },
                "enableTrapsOspfv3ConfigErrors": {
                    "type": "boolean",
                    "description": "Enable all traps of errors\n"
                },
                "enableTrapsOspfv3ConfigStateChange": {
                    "type": "boolean",
                    "description": "Enable all traps of state-change\n"
                },
                "enableTrapsPimInvalidPimMessage": {
                    "type": "boolean",
                    "description": "Enable invalid pim message trap\n"
                },
                "enableTrapsPimNeighborChange": {
                    "type": "boolean",
                    "description": "Enable neighbor change trap\n"
                },
                "enableTrapsPimRpMappingChange": {
                    "type": "boolean",
                    "description": "Enable rp mapping change trap\n"
                },
                "enableTrapsPortSecurity": {
                    "type": "boolean",
                    "description": "Enable SNMP port security traps\n"
                },
                "enableTrapsPowerEthernetGroup": {
                    "type": "string",
                    "description": "Enable SNMP inline power group based traps\n"
                },
                "enableTrapsPowerEthernetPolice": {
                    "type": "boolean",
                    "description": "Enable Policing Trap\n"
                },
                "enableTrapsPwVc": {
                    "type": "boolean"
                },
                "enableTrapsRep": {
                    "type": "boolean"
                },
                "enableTrapsRf": {
                    "type": "boolean",
                    "description": "Enable all SNMP traps defined in CISCO-RF-MIB\n"
                },
                "enableTrapsSmartLicense": {
                    "type": "boolean",
                    "description": "Enable smart license traps\n"
                },
                "enableTrapsSnmpAuthentication": {
                    "type": "boolean",
                    "description": "Enable authentication trap\n"
                },
                "enableTrapsSnmpColdstart": {
                    "type": "boolean",
                    "description": "Enable coldStart trap\n"
                },
                "enableTrapsSnmpLinkdown": {
                    "type": "boolean",
                    "description": "Enable linkDown trap\n"
                },
                "enableTrapsSnmpLinkup": {
                    "type": "boolean",
                    "description": "Enable linkUp trap\n"
                },
                "enableTrapsSnmpWarmstart": {
                    "type": "boolean",
                    "description": "Enable warmStart trap\n"
                },
                "enableTrapsStackwise": {
                    "type": "boolean",
                    "description": "Enable SNMP stackwise traps\n"
                },
                "enableTrapsStpxInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsStpxLoopInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsStpxRootInconsistency": {
                    "type": "boolean"
                },
                "enableTrapsSyslog": {
                    "type": "boolean",
                    "description": "Enable SNMP syslog traps\n"
                },
                "enableTrapsTransceiverAll": {
                    "type": "boolean"
                },
                "enableTrapsTty": {
                    "type": "boolean",
                    "description": "Enable TCP connection traps\n"
                },
                "enableTrapsUdldLinkFailRpt": {
                    "type": "boolean",
                    "description": "Enable SNMP cudldpFastHelloLinkFailRptNotification traps\n"
                },
                "enableTrapsUdldStatusChange": {
                    "type": "boolean",
                    "description": "Enable SNMP cudldpFastHelloStatusChangeNotification traps\n"
                },
                "enableTrapsVlanMembership": {
                    "type": "boolean"
                },
                "enableTrapsVlancreate": {
                    "type": "boolean"
                },
                "enableTrapsVlandelete": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVnetTrunkDown": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVnetTrunkUp": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVrfDown": {
                    "type": "boolean"
                },
                "enableTrapsVrfmibVrfUp": {
                    "type": "boolean"
                },
                "enableTrapsVtp": {
                    "type": "boolean"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/SnmpServerHost:SnmpServerHost"
                    },
                    "description": "Specify hosts keyed by (ip-address, community-or-user)\n"
                },
                "ifindexPersist": {
                    "type": "boolean",
                    "description": "Persist interface indices\n"
                },
                "location": {
                    "type": "string",
                    "description": "Text for mib object sysLocation\n"
                },
                "packetsize": {
                    "type": "integer",
                    "description": "Largest SNMP packet size - Range: `484`-`17892`\n"
                },
                "queueLength": {
                    "type": "integer",
                    "description": "Message queue length for each TRAP host - Range: `1`-`5000`\n"
                },
                "snmpCommunities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/SnmpServerSnmpCommunity:SnmpServerSnmpCommunity"
                    },
                    "description": "Enable SNMP; set community string and access privs\n"
                },
                "sourceInterfaceInformsFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "sourceInterfaceInformsGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "sourceInterfaceInformsHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "sourceInterfaceInformsLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "sourceInterfaceInformsPortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "sourceInterfaceInformsPortChannelSubinterface": {
                    "type": "string"
                },
                "sourceInterfaceInformsTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "sourceInterfaceInformsVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "sourceInterfaceTrapsFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "sourceInterfaceTrapsGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "sourceInterfaceTrapsHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "sourceInterfaceTrapsLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "sourceInterfaceTrapsPortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "sourceInterfaceTrapsPortChannelSubinterface": {
                    "type": "string"
                },
                "sourceInterfaceTrapsTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "sourceInterfaceTrapsVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "systemShutdown": {
                    "type": "boolean",
                    "description": "Enable use of the SNMP reload command\n"
                },
                "trapSourceFortyGigabitEthernet": {
                    "type": "string",
                    "description": "Forty GigabitEthernet\n"
                },
                "trapSourceGigabitEthernet": {
                    "type": "string",
                    "description": "GigabitEthernet IEEE 802.3z\n"
                },
                "trapSourceHundredGigE": {
                    "type": "string",
                    "description": "Hundred GigabitEthernet\n"
                },
                "trapSourceLoopback": {
                    "type": "integer",
                    "description": "Loopback interface - Range: `0`-`2147483647`\n"
                },
                "trapSourcePortChannel": {
                    "type": "integer",
                    "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                },
                "trapSourcePortChannelSubinterface": {
                    "type": "string"
                },
                "trapSourceTenGigabitEthernet": {
                    "type": "string",
                    "description": "Ten Gigabit Ethernet\n"
                },
                "trapSourceVlan": {
                    "type": "integer",
                    "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                },
                "views": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/SnmpServerView:SnmpServerView"
                    },
                    "description": "Define an SNMPv2 MIB view\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SnmpServer resources.\n",
                "properties": {
                    "chassisId": {
                        "type": "string",
                        "description": "String to uniquely identify this chassis\n"
                    },
                    "contact": {
                        "type": "string",
                        "description": "Text for mib object sysContact\n"
                    },
                    "contexts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/SnmpServerContext:SnmpServerContext"
                        },
                        "description": "Create/Delete a context apart from default\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "enableInforms": {
                        "type": "boolean",
                        "description": "Enable SNMP Informs\n"
                    },
                    "enableLoggingGetop": {
                        "type": "boolean",
                        "description": "Enable SNMP GET Operation logging\n"
                    },
                    "enableLoggingSetop": {
                        "type": "boolean",
                        "description": "Enable SNMP SET Operation logging\n"
                    },
                    "enableTraps": {
                        "type": "boolean",
                        "description": "Enable SNMP Traps\n"
                    },
                    "enableTrapsAuthFrameworkSecViolation": {
                        "type": "boolean"
                    },
                    "enableTrapsBfd": {
                        "type": "boolean"
                    },
                    "enableTrapsBgpCbgp2": {
                        "type": "boolean",
                        "description": "Enable BGP MIBv2 traps\n"
                    },
                    "enableTrapsBridgeNewroot": {
                        "type": "boolean"
                    },
                    "enableTrapsBridgeTopologychange": {
                        "type": "boolean"
                    },
                    "enableTrapsBulkstatCollection": {
                        "type": "boolean",
                        "description": "Enable Data-Collection-MIB Collection notifications\n"
                    },
                    "enableTrapsBulkstatTransfer": {
                        "type": "boolean",
                        "description": "Enable Data-Collection-MIB Transfer notifications\n"
                    },
                    "enableTrapsCallHomeMessageSendFail": {
                        "type": "boolean"
                    },
                    "enableTrapsCallHomeServerFail": {
                        "type": "boolean"
                    },
                    "enableTrapsCefInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsCefPeerFibStateChange": {
                        "type": "boolean"
                    },
                    "enableTrapsCefPeerStateChange": {
                        "type": "boolean"
                    },
                    "enableTrapsCefResourceFailure": {
                        "type": "boolean"
                    },
                    "enableTrapsConfig": {
                        "type": "boolean",
                        "description": "Enable SNMP config traps\n"
                    },
                    "enableTrapsConfigCopy": {
                        "type": "boolean",
                        "description": "Enable SNMP config-copy traps\n"
                    },
                    "enableTrapsConfigCtid": {
                        "type": "boolean"
                    },
                    "enableTrapsCpuThreshold": {
                        "type": "boolean",
                        "description": "Allow CPU utilization threshold violation traps\n"
                    },
                    "enableTrapsDhcp": {
                        "type": "boolean",
                        "description": "Enable SNMP dhcp traps\n"
                    },
                    "enableTrapsEigrp": {
                        "type": "boolean",
                        "description": "Enable SNMP EIGRP traps\n"
                    },
                    "enableTrapsEnergywise": {
                        "type": "boolean"
                    },
                    "enableTrapsEntity": {
                        "type": "boolean",
                        "description": "Enable SNMP entity traps\n"
                    },
                    "enableTrapsEntityDiagBootUpFail": {
                        "type": "boolean",
                        "description": "Enable SNMP ceDiagBootUpFailedNotif traps\n"
                    },
                    "enableTrapsEntityDiagHmTestRecover": {
                        "type": "boolean",
                        "description": "Enable SNMP ceDiagHMTestRecoverNotif traps\n"
                    },
                    "enableTrapsEntityDiagHmThreshReached": {
                        "type": "boolean",
                        "description": "Enable SNMP ceDiagHMThresholdReachedNotif traps\n"
                    },
                    "enableTrapsEntityDiagScheduledTestFail": {
                        "type": "boolean",
                        "description": "Enable SNMP ceDiagScheduledTestFailedNotif traps\n"
                    },
                    "enableTrapsEntityPerfThroughputNotif": {
                        "type": "boolean",
                        "description": "Enable ENTITY PERFORMANCE MIB throughput traps\n"
                    },
                    "enableTrapsEnvmon": {
                        "type": "boolean",
                        "description": "Enable SNMP environmental monitor traps\n"
                    },
                    "enableTrapsErrdisable": {
                        "type": "boolean",
                        "description": "Enable SNMP errdisable notifications\n"
                    },
                    "enableTrapsEventManager": {
                        "type": "boolean",
                        "description": "Enable SNMP Embedded Event Manager traps\n"
                    },
                    "enableTrapsFastRerouteProtected": {
                        "type": "boolean"
                    },
                    "enableTrapsFlashInsertion": {
                        "type": "boolean",
                        "description": "Enable SNMP Flash Insertion notifications\n"
                    },
                    "enableTrapsFlashLowspace": {
                        "type": "boolean",
                        "description": "Enable SNMP Flash Lowspace notifications\n"
                    },
                    "enableTrapsFlashRemoval": {
                        "type": "boolean",
                        "description": "Enable SNMP Flash Removal notifications\n"
                    },
                    "enableTrapsFlowmon": {
                        "type": "boolean",
                        "description": "Enable SNMP flowmon notifications\n"
                    },
                    "enableTrapsFruCtrl": {
                        "type": "boolean",
                        "description": "Enable SNMP entity FRU control traps\n"
                    },
                    "enableTrapsHsrp": {
                        "type": "boolean",
                        "description": "Enable SNMP HSRP traps\n"
                    },
                    "enableTrapsIkePolicyAdd": {
                        "type": "boolean",
                        "description": "Enable IKE Policy add trap\n"
                    },
                    "enableTrapsIkePolicyDelete": {
                        "type": "boolean",
                        "description": "Enable IKE Policy delete trap\n"
                    },
                    "enableTrapsIkeTunnelStart": {
                        "type": "boolean",
                        "description": "Enable IKE Tunnel start trap\n"
                    },
                    "enableTrapsIkeTunnelStop": {
                        "type": "boolean",
                        "description": "Enable IKE Tunnel stop trap\n"
                    },
                    "enableTrapsIpmulticast": {
                        "type": "boolean",
                        "description": "Enable SNMP ipmulticast traps\n"
                    },
                    "enableTrapsIpsecCryptomapAdd": {
                        "type": "boolean",
                        "description": "Enable IPsec Cryptomap add trap\n"
                    },
                    "enableTrapsIpsecCryptomapAttach": {
                        "type": "boolean",
                        "description": "Enable IPsec Cryptomap Attach trap\n"
                    },
                    "enableTrapsIpsecCryptomapDelete": {
                        "type": "boolean",
                        "description": "Enable IPsec Cryptomap delete trap\n"
                    },
                    "enableTrapsIpsecCryptomapDetach": {
                        "type": "boolean",
                        "description": "Enable IPsec Cryptomap Detach trap\n"
                    },
                    "enableTrapsIpsecTooManySas": {
                        "type": "boolean",
                        "description": "Enable IPsec Tunnel Start trap\n"
                    },
                    "enableTrapsIpsecTunnelStart": {
                        "type": "boolean",
                        "description": "Enable IPsec Tunnel Start trap\n"
                    },
                    "enableTrapsIpsecTunnelStop": {
                        "type": "boolean",
                        "description": "Enable IPsec Tunnel Stop trap\n"
                    },
                    "enableTrapsIpsla": {
                        "type": "boolean",
                        "description": "Enable IPSLA traps traps\n"
                    },
                    "enableTrapsIsis": {
                        "type": "boolean",
                        "description": "Enable ISIS traps traps\n"
                    },
                    "enableTrapsLicense": {
                        "type": "boolean",
                        "description": "Enable license traps\n"
                    },
                    "enableTrapsLocalAuth": {
                        "type": "boolean",
                        "description": "Enable SNMP local auth traps\n"
                    },
                    "enableTrapsMacNotificationChange": {
                        "type": "boolean",
                        "description": "Enable SNMP Change traps\n"
                    },
                    "enableTrapsMacNotificationMove": {
                        "type": "boolean",
                        "description": "Enable SNMP Move traps\n"
                    },
                    "enableTrapsMacNotificationThreshold": {
                        "type": "boolean",
                        "description": "Enable SNMP Threshold traps\n"
                    },
                    "enableTrapsMemoryBufferpeak": {
                        "type": "boolean",
                        "description": "Enable SNMP Memory Bufferpeak traps\n"
                    },
                    "enableTrapsMplsLdp": {
                        "type": "boolean",
                        "description": "SNMP MPLS label distribution protocol traps\n"
                    },
                    "enableTrapsMplsRfcLdp": {
                        "type": "boolean"
                    },
                    "enableTrapsMplsTrafficEng": {
                        "type": "boolean"
                    },
                    "enableTrapsMplsVpn": {
                        "type": "boolean"
                    },
                    "enableTrapsMsdp": {
                        "type": "boolean",
                        "description": "Enable SNMP MSDP traps\n"
                    },
                    "enableTrapsNhrpNhc": {
                        "type": "boolean"
                    },
                    "enableTrapsNhrpNhp": {
                        "type": "boolean"
                    },
                    "enableTrapsNhrpNhs": {
                        "type": "boolean"
                    },
                    "enableTrapsNhrpQuotaExceeded": {
                        "type": "boolean"
                    },
                    "enableTrapsOspfConfigErrors": {
                        "type": "boolean",
                        "description": "Enable all traps of errors\n"
                    },
                    "enableTrapsOspfConfigLsa": {
                        "type": "boolean",
                        "description": "Enable all traps of lsa\n"
                    },
                    "enableTrapsOspfConfigRetransmit": {
                        "type": "boolean",
                        "description": "Enable all traps of retransmit\n"
                    },
                    "enableTrapsOspfConfigStateChange": {
                        "type": "boolean",
                        "description": "Enable all traps of state-change\n"
                    },
                    "enableTrapsOspfErrorsEnable": {
                        "type": "boolean",
                        "description": "Enable all traps of errors\n"
                    },
                    "enableTrapsOspfLsaEnable": {
                        "type": "boolean",
                        "description": "Enable all traps of lsa\n"
                    },
                    "enableTrapsOspfNssaTransChange": {
                        "type": "boolean",
                        "description": "Nssa translator state changes\n"
                    },
                    "enableTrapsOspfRetransmitEnable": {
                        "type": "boolean",
                        "description": "Enable all traps of retransmit\n"
                    },
                    "enableTrapsOspfShamlinkInterface": {
                        "type": "boolean",
                        "description": "Sham link interface state changes\n"
                    },
                    "enableTrapsOspfShamlinkNeighbor": {
                        "type": "boolean",
                        "description": "Sham link neighbor state changes\n"
                    },
                    "enableTrapsOspfv3ConfigErrors": {
                        "type": "boolean",
                        "description": "Enable all traps of errors\n"
                    },
                    "enableTrapsOspfv3ConfigStateChange": {
                        "type": "boolean",
                        "description": "Enable all traps of state-change\n"
                    },
                    "enableTrapsPimInvalidPimMessage": {
                        "type": "boolean",
                        "description": "Enable invalid pim message trap\n"
                    },
                    "enableTrapsPimNeighborChange": {
                        "type": "boolean",
                        "description": "Enable neighbor change trap\n"
                    },
                    "enableTrapsPimRpMappingChange": {
                        "type": "boolean",
                        "description": "Enable rp mapping change trap\n"
                    },
                    "enableTrapsPortSecurity": {
                        "type": "boolean",
                        "description": "Enable SNMP port security traps\n"
                    },
                    "enableTrapsPowerEthernetGroup": {
                        "type": "string",
                        "description": "Enable SNMP inline power group based traps\n"
                    },
                    "enableTrapsPowerEthernetPolice": {
                        "type": "boolean",
                        "description": "Enable Policing Trap\n"
                    },
                    "enableTrapsPwVc": {
                        "type": "boolean"
                    },
                    "enableTrapsRep": {
                        "type": "boolean"
                    },
                    "enableTrapsRf": {
                        "type": "boolean",
                        "description": "Enable all SNMP traps defined in CISCO-RF-MIB\n"
                    },
                    "enableTrapsSmartLicense": {
                        "type": "boolean",
                        "description": "Enable smart license traps\n"
                    },
                    "enableTrapsSnmpAuthentication": {
                        "type": "boolean",
                        "description": "Enable authentication trap\n"
                    },
                    "enableTrapsSnmpColdstart": {
                        "type": "boolean",
                        "description": "Enable coldStart trap\n"
                    },
                    "enableTrapsSnmpLinkdown": {
                        "type": "boolean",
                        "description": "Enable linkDown trap\n"
                    },
                    "enableTrapsSnmpLinkup": {
                        "type": "boolean",
                        "description": "Enable linkUp trap\n"
                    },
                    "enableTrapsSnmpWarmstart": {
                        "type": "boolean",
                        "description": "Enable warmStart trap\n"
                    },
                    "enableTrapsStackwise": {
                        "type": "boolean",
                        "description": "Enable SNMP stackwise traps\n"
                    },
                    "enableTrapsStpxInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsStpxLoopInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsStpxRootInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsSyslog": {
                        "type": "boolean",
                        "description": "Enable SNMP syslog traps\n"
                    },
                    "enableTrapsTransceiverAll": {
                        "type": "boolean"
                    },
                    "enableTrapsTty": {
                        "type": "boolean",
                        "description": "Enable TCP connection traps\n"
                    },
                    "enableTrapsUdldLinkFailRpt": {
                        "type": "boolean",
                        "description": "Enable SNMP cudldpFastHelloLinkFailRptNotification traps\n"
                    },
                    "enableTrapsUdldStatusChange": {
                        "type": "boolean",
                        "description": "Enable SNMP cudldpFastHelloStatusChangeNotification traps\n"
                    },
                    "enableTrapsVlanMembership": {
                        "type": "boolean"
                    },
                    "enableTrapsVlancreate": {
                        "type": "boolean"
                    },
                    "enableTrapsVlandelete": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVnetTrunkDown": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVnetTrunkUp": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVrfDown": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVrfUp": {
                        "type": "boolean"
                    },
                    "enableTrapsVtp": {
                        "type": "boolean"
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/SnmpServerHost:SnmpServerHost"
                        },
                        "description": "Specify hosts keyed by (ip-address, community-or-user)\n"
                    },
                    "ifindexPersist": {
                        "type": "boolean",
                        "description": "Persist interface indices\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "Text for mib object sysLocation\n"
                    },
                    "packetsize": {
                        "type": "integer",
                        "description": "Largest SNMP packet size - Range: `484`-`17892`\n"
                    },
                    "queueLength": {
                        "type": "integer",
                        "description": "Message queue length for each TRAP host - Range: `1`-`5000`\n"
                    },
                    "snmpCommunities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/SnmpServerSnmpCommunity:SnmpServerSnmpCommunity"
                        },
                        "description": "Enable SNMP; set community string and access privs\n"
                    },
                    "sourceInterfaceInformsFortyGigabitEthernet": {
                        "type": "string",
                        "description": "Forty GigabitEthernet\n"
                    },
                    "sourceInterfaceInformsGigabitEthernet": {
                        "type": "string",
                        "description": "GigabitEthernet IEEE 802.3z\n"
                    },
                    "sourceInterfaceInformsHundredGigE": {
                        "type": "string",
                        "description": "Hundred GigabitEthernet\n"
                    },
                    "sourceInterfaceInformsLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    },
                    "sourceInterfaceInformsPortChannel": {
                        "type": "integer",
                        "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                    },
                    "sourceInterfaceInformsPortChannelSubinterface": {
                        "type": "string"
                    },
                    "sourceInterfaceInformsTenGigabitEthernet": {
                        "type": "string",
                        "description": "Ten Gigabit Ethernet\n"
                    },
                    "sourceInterfaceInformsVlan": {
                        "type": "integer",
                        "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                    },
                    "sourceInterfaceTrapsFortyGigabitEthernet": {
                        "type": "string",
                        "description": "Forty GigabitEthernet\n"
                    },
                    "sourceInterfaceTrapsGigabitEthernet": {
                        "type": "string",
                        "description": "GigabitEthernet IEEE 802.3z\n"
                    },
                    "sourceInterfaceTrapsHundredGigE": {
                        "type": "string",
                        "description": "Hundred GigabitEthernet\n"
                    },
                    "sourceInterfaceTrapsLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    },
                    "sourceInterfaceTrapsPortChannel": {
                        "type": "integer",
                        "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                    },
                    "sourceInterfaceTrapsPortChannelSubinterface": {
                        "type": "string"
                    },
                    "sourceInterfaceTrapsTenGigabitEthernet": {
                        "type": "string",
                        "description": "Ten Gigabit Ethernet\n"
                    },
                    "sourceInterfaceTrapsVlan": {
                        "type": "integer",
                        "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                    },
                    "systemShutdown": {
                        "type": "boolean",
                        "description": "Enable use of the SNMP reload command\n"
                    },
                    "trapSourceFortyGigabitEthernet": {
                        "type": "string",
                        "description": "Forty GigabitEthernet\n"
                    },
                    "trapSourceGigabitEthernet": {
                        "type": "string",
                        "description": "GigabitEthernet IEEE 802.3z\n"
                    },
                    "trapSourceHundredGigE": {
                        "type": "string",
                        "description": "Hundred GigabitEthernet\n"
                    },
                    "trapSourceLoopback": {
                        "type": "integer",
                        "description": "Loopback interface - Range: `0`-`2147483647`\n"
                    },
                    "trapSourcePortChannel": {
                        "type": "integer",
                        "description": "Ethernet Channel of interfaces - Range: `0`-`4294967295`\n"
                    },
                    "trapSourcePortChannelSubinterface": {
                        "type": "string"
                    },
                    "trapSourceTenGigabitEthernet": {
                        "type": "string",
                        "description": "Ten Gigabit Ethernet\n"
                    },
                    "trapSourceVlan": {
                        "type": "integer",
                        "description": "Iosxr Vlans - Range: `0`-`65535`\n"
                    },
                    "views": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/SnmpServerView:SnmpServerView"
                        },
                        "description": "Define an SNMPv2 MIB view\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/snmpServerGroup:SnmpServerGroup": {
            "description": "This resource can manage the SNMP Server Group configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.SnmpServerGroup;\nimport com.pulumi.iosxe.SnmpServerGroupArgs;\nimport com.pulumi.iosxe.inputs.SnmpServerGroupV3SecurityArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SnmpServerGroup(\"example\", SnmpServerGroupArgs.builder()        \n            .v3Securities(SnmpServerGroupV3SecurityArgs.builder()\n                .access_acl_name(\"ACL1\")\n                .access_ipv6_acl(\"V6ACL1\")\n                .context_node(\"CON1\")\n                .match_node(\"exact\")\n                .notify_node(\"VIEW3\")\n                .read_node(\"VIEW1\")\n                .security_level(\"priv\")\n                .write_node(\"VIEW2\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:SnmpServerGroup\n    properties:\n      v3Securities:\n        - access_acl_name: ACL1\n          access_ipv6_acl: V6ACL1\n          context_node: CON1\n          match_node: exact\n          notify_node: VIEW3\n          read_node: VIEW1\n          security_level: priv\n          write_node: VIEW2\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/snmpServerGroup:SnmpServerGroup example \"Cisco-IOS-XE-native:native/snmp-server/Cisco-IOS-XE-snmp:group=GROUP1\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "v3Securities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/SnmpServerGroupV3Security:SnmpServerGroupV3Security"
                    },
                    "description": "group using security Level\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "v3Securities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/SnmpServerGroupV3Security:SnmpServerGroupV3Security"
                    },
                    "description": "group using security Level\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SnmpServerGroup resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "v3Securities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/SnmpServerGroupV3Security:SnmpServerGroupV3Security"
                        },
                        "description": "group using security Level\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/snmpServerUser:SnmpServerUser": {
            "description": "This resource can manage the SNMP Server User configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.SnmpServerUser(\"example\", {\n    grpname: \"GROUP1\",\n    username: \"USER1\",\n    v3AuthAlgorithm: \"sha\",\n    v3AuthPassword: \"Cisco123\",\n    v3AuthPrivAesAccessAclName: \"ACL123\",\n    v3AuthPrivAesAccessIpv6Acl: \"V6ACL1\",\n    v3AuthPrivAesAlgorithm: \"128\",\n    v3AuthPrivAesPassword: \"Cisco123\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.SnmpServerUser(\"example\",\n    grpname=\"GROUP1\",\n    username=\"USER1\",\n    v3_auth_algorithm=\"sha\",\n    v3_auth_password=\"Cisco123\",\n    v3_auth_priv_aes_access_acl_name=\"ACL123\",\n    v3_auth_priv_aes_access_ipv6_acl=\"V6ACL1\",\n    v3_auth_priv_aes_algorithm=\"128\",\n    v3_auth_priv_aes_password=\"Cisco123\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.SnmpServerUser(\"example\", new()\n    {\n        Grpname = \"GROUP1\",\n        Username = \"USER1\",\n        V3AuthAlgorithm = \"sha\",\n        V3AuthPassword = \"Cisco123\",\n        V3AuthPrivAesAccessAclName = \"ACL123\",\n        V3AuthPrivAesAccessIpv6Acl = \"V6ACL1\",\n        V3AuthPrivAesAlgorithm = \"128\",\n        V3AuthPrivAesPassword = \"Cisco123\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewSnmpServerUser(ctx, \"example\", \u0026iosxe.SnmpServerUserArgs{\n\t\t\tGrpname:                    pulumi.String(\"GROUP1\"),\n\t\t\tUsername:                   pulumi.String(\"USER1\"),\n\t\t\tV3AuthAlgorithm:            pulumi.String(\"sha\"),\n\t\t\tV3AuthPassword:             pulumi.String(\"Cisco123\"),\n\t\t\tV3AuthPrivAesAccessAclName: pulumi.String(\"ACL123\"),\n\t\t\tV3AuthPrivAesAccessIpv6Acl: pulumi.String(\"V6ACL1\"),\n\t\t\tV3AuthPrivAesAlgorithm:     pulumi.String(\"128\"),\n\t\t\tV3AuthPrivAesPassword:      pulumi.String(\"Cisco123\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.SnmpServerUser;\nimport com.pulumi.iosxe.SnmpServerUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SnmpServerUser(\"example\", SnmpServerUserArgs.builder()        \n            .grpname(\"GROUP1\")\n            .username(\"USER1\")\n            .v3AuthAlgorithm(\"sha\")\n            .v3AuthPassword(\"Cisco123\")\n            .v3AuthPrivAesAccessAclName(\"ACL123\")\n            .v3AuthPrivAesAccessIpv6Acl(\"V6ACL1\")\n            .v3AuthPrivAesAlgorithm(\"128\")\n            .v3AuthPrivAesPassword(\"Cisco123\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:SnmpServerUser\n    properties:\n      grpname: GROUP1\n      username: USER1\n      v3AuthAlgorithm: sha\n      v3AuthPassword: Cisco123\n      v3AuthPrivAesAccessAclName: ACL123\n      v3AuthPrivAesAccessIpv6Acl: V6ACL1\n      v3AuthPrivAesAlgorithm: '128'\n      v3AuthPrivAesPassword: Cisco123\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/snmpServerUser:SnmpServerUser example \"Cisco-IOS-XE-native:native/snmp-server/Cisco-IOS-XE-snmp:user/names=USER1,GROUP1\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "grpname": {
                    "type": "string",
                    "description": "Group to which the user belongs\n"
                },
                "username": {
                    "type": "string",
                    "description": "Name of the user\n"
                },
                "v3AuthAccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthAccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthAccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthAlgorithm": {
                    "type": "string",
                    "description": "Use HMAC SHA/MD5 algorithm for authentication - Choices: `md5`, `sha`\n"
                },
                "v3AuthPassword": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                },
                "v3AuthPrivAesAccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthPrivAesAccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthPrivAesAccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthPrivAesAlgorithm": {
                    "type": "string",
                    "description": "- Choices: `128`, `192`, `256`\n"
                },
                "v3AuthPrivAesPassword": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                },
                "v3AuthPrivDes3AccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthPrivDes3AccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthPrivDes3AccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthPrivDes3Password": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                },
                "v3AuthPrivDesAccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthPrivDesAccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthPrivDesAccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthPrivDesPassword": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                }
            },
            "required": [
                "grpname",
                "username",
                "v3AuthAlgorithm",
                "v3AuthPassword"
            ],
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "grpname": {
                    "type": "string",
                    "description": "Group to which the user belongs\n"
                },
                "username": {
                    "type": "string",
                    "description": "Name of the user\n"
                },
                "v3AuthAccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthAccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthAccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthAlgorithm": {
                    "type": "string",
                    "description": "Use HMAC SHA/MD5 algorithm for authentication - Choices: `md5`, `sha`\n"
                },
                "v3AuthPassword": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                },
                "v3AuthPrivAesAccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthPrivAesAccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthPrivAesAccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthPrivAesAlgorithm": {
                    "type": "string",
                    "description": "- Choices: `128`, `192`, `256`\n"
                },
                "v3AuthPrivAesPassword": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                },
                "v3AuthPrivDes3AccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthPrivDes3AccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthPrivDes3AccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthPrivDes3Password": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                },
                "v3AuthPrivDesAccessAclName": {
                    "type": "string",
                    "description": "Access-list name\n"
                },
                "v3AuthPrivDesAccessIpv6Acl": {
                    "type": "string",
                    "description": "Specify IPv6 Named Access-List\n"
                },
                "v3AuthPrivDesAccessStandardAcl": {
                    "type": "integer",
                    "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                },
                "v3AuthPrivDesPassword": {
                    "type": "string",
                    "description": "Authentication password for user\n"
                }
            },
            "requiredInputs": [
                "grpname",
                "username",
                "v3AuthAlgorithm",
                "v3AuthPassword"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SnmpServerUser resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "grpname": {
                        "type": "string",
                        "description": "Group to which the user belongs\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Name of the user\n"
                    },
                    "v3AuthAccessAclName": {
                        "type": "string",
                        "description": "Access-list name\n"
                    },
                    "v3AuthAccessIpv6Acl": {
                        "type": "string",
                        "description": "Specify IPv6 Named Access-List\n"
                    },
                    "v3AuthAccessStandardAcl": {
                        "type": "integer",
                        "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                    },
                    "v3AuthAlgorithm": {
                        "type": "string",
                        "description": "Use HMAC SHA/MD5 algorithm for authentication - Choices: `md5`, `sha`\n"
                    },
                    "v3AuthPassword": {
                        "type": "string",
                        "description": "Authentication password for user\n"
                    },
                    "v3AuthPrivAesAccessAclName": {
                        "type": "string",
                        "description": "Access-list name\n"
                    },
                    "v3AuthPrivAesAccessIpv6Acl": {
                        "type": "string",
                        "description": "Specify IPv6 Named Access-List\n"
                    },
                    "v3AuthPrivAesAccessStandardAcl": {
                        "type": "integer",
                        "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                    },
                    "v3AuthPrivAesAlgorithm": {
                        "type": "string",
                        "description": "- Choices: `128`, `192`, `256`\n"
                    },
                    "v3AuthPrivAesPassword": {
                        "type": "string",
                        "description": "Authentication password for user\n"
                    },
                    "v3AuthPrivDes3AccessAclName": {
                        "type": "string",
                        "description": "Access-list name\n"
                    },
                    "v3AuthPrivDes3AccessIpv6Acl": {
                        "type": "string",
                        "description": "Specify IPv6 Named Access-List\n"
                    },
                    "v3AuthPrivDes3AccessStandardAcl": {
                        "type": "integer",
                        "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                    },
                    "v3AuthPrivDes3Password": {
                        "type": "string",
                        "description": "Authentication password for user\n"
                    },
                    "v3AuthPrivDesAccessAclName": {
                        "type": "string",
                        "description": "Access-list name\n"
                    },
                    "v3AuthPrivDesAccessIpv6Acl": {
                        "type": "string",
                        "description": "Specify IPv6 Named Access-List\n"
                    },
                    "v3AuthPrivDesAccessStandardAcl": {
                        "type": "integer",
                        "description": "Standard IP Access-list allowing access with this community string - Range: `1`-`99`\n"
                    },
                    "v3AuthPrivDesPassword": {
                        "type": "string",
                        "description": "Authentication password for user\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/staticRoute:StaticRoute": {
            "description": "This resource can manage the Static Route configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.StaticRoute;\nimport com.pulumi.iosxe.StaticRouteArgs;\nimport com.pulumi.iosxe.inputs.StaticRouteNextHopArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new StaticRoute(\"example\", StaticRouteArgs.builder()        \n            .mask(\"255.255.255.255\")\n            .nextHops(StaticRouteNextHopArgs.builder()\n                .global(false)\n                .metric(10)\n                .name(\"Route1\")\n                .next_hop(\"6.6.6.6\")\n                .permanent(true)\n                .tag(100)\n                .build())\n            .prefix(\"5.5.5.5\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:StaticRoute\n    properties:\n      mask: 255.255.255.255\n      nextHops:\n        - global: false\n          metric: 10\n          name: Route1\n          next_hop: 6.6.6.6\n          permanent: true\n          tag: 100\n      prefix: 5.5.5.5\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/staticRoute:StaticRoute example \"Cisco-IOS-XE-native:native/ip/route/ip-route-interface-forwarding-list=5.5.5.5,255.255.255.255\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "mask": {
                    "type": "string"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/StaticRouteNextHop:StaticRouteNextHop"
                    }
                },
                "prefix": {
                    "type": "string"
                }
            },
            "required": [
                "mask",
                "prefix"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "mask": {
                    "type": "string"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/StaticRouteNextHop:StaticRouteNextHop"
                    }
                },
                "prefix": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "mask",
                "prefix"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StaticRoute resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "mask": {
                        "type": "string"
                    },
                    "nextHops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/StaticRouteNextHop:StaticRouteNextHop"
                        }
                    },
                    "prefix": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/staticRouteVrf:StaticRouteVrf": {
            "description": "This resource can manage the Static Route VRF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.StaticRouteVrf;\nimport com.pulumi.iosxe.StaticRouteVrfArgs;\nimport com.pulumi.iosxe.inputs.StaticRouteVrfRouteArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new StaticRouteVrf(\"example\", StaticRouteVrfArgs.builder()        \n            .routes(StaticRouteVrfRouteArgs.builder()\n                .mask(\"255.255.255.255\")\n                .next_hops(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                .prefix(\"6.6.6.6\")\n                .build())\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:StaticRouteVrf\n    properties:\n      routes:\n        - mask: 255.255.255.255\n          next_hops:\n            - global: false\n              metric: 10\n              name: Route1\n              nextHop: 7.7.7.7\n              permanent: true\n              tag: 100\n          prefix: 6.6.6.6\n      vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/staticRouteVrf:StaticRouteVrf example \"Cisco-IOS-XE-native:native/ip/route/vrf=VRF1\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/StaticRouteVrfRoute:StaticRouteVrfRoute"
                    }
                },
                "vrf": {
                    "type": "string"
                }
            },
            "required": [
                "vrf"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/StaticRouteVrfRoute:StaticRouteVrfRoute"
                    }
                },
                "vrf": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "vrf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StaticRouteVrf resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/StaticRouteVrfRoute:StaticRouteVrfRoute"
                        }
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/system:System": {
            "description": "This resource can manage the System configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.System(\"example\", {\n    hostname: \"ROUTER-1\",\n    ipDomainLookup: false,\n    ipDomainName: \"test.com\",\n    ipSourceRoute: false,\n    ipv6UnicastRouting: true,\n    loginDelay: 10,\n    loginOnFailure: true,\n    loginOnFailureLog: true,\n    loginOnSuccess: true,\n    loginOnSuccessLog: true,\n    multicastRoutingVrfs: [{\n        vrf: \"VRF1\",\n    }],\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.System(\"example\",\n    hostname=\"ROUTER-1\",\n    ip_domain_lookup=False,\n    ip_domain_name=\"test.com\",\n    ip_source_route=False,\n    ipv6_unicast_routing=True,\n    login_delay=10,\n    login_on_failure=True,\n    login_on_failure_log=True,\n    login_on_success=True,\n    login_on_success_log=True,\n    multicast_routing_vrfs=[iosxe.SystemMulticastRoutingVrfArgs(\n        vrf=\"VRF1\",\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.System(\"example\", new()\n    {\n        Hostname = \"ROUTER-1\",\n        IpDomainLookup = false,\n        IpDomainName = \"test.com\",\n        IpSourceRoute = false,\n        Ipv6UnicastRouting = true,\n        LoginDelay = 10,\n        LoginOnFailure = true,\n        LoginOnFailureLog = true,\n        LoginOnSuccess = true,\n        LoginOnSuccessLog = true,\n        MulticastRoutingVrfs = new[]\n        {\n            new Iosxe.Inputs.SystemMulticastRoutingVrfArgs\n            {\n                Vrf = \"VRF1\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewSystem(ctx, \"example\", \u0026iosxe.SystemArgs{\n\t\t\tHostname:           pulumi.String(\"ROUTER-1\"),\n\t\t\tIpDomainLookup:     pulumi.Bool(false),\n\t\t\tIpDomainName:       pulumi.String(\"test.com\"),\n\t\t\tIpSourceRoute:      pulumi.Bool(false),\n\t\t\tIpv6UnicastRouting: pulumi.Bool(true),\n\t\t\tLoginDelay:         pulumi.Int(10),\n\t\t\tLoginOnFailure:     pulumi.Bool(true),\n\t\t\tLoginOnFailureLog:  pulumi.Bool(true),\n\t\t\tLoginOnSuccess:     pulumi.Bool(true),\n\t\t\tLoginOnSuccessLog:  pulumi.Bool(true),\n\t\t\tMulticastRoutingVrfs: iosxe.SystemMulticastRoutingVrfArray{\n\t\t\t\t\u0026iosxe.SystemMulticastRoutingVrfArgs{\n\t\t\t\t\tVrf: pulumi.String(\"VRF1\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.System;\nimport com.pulumi.iosxe.SystemArgs;\nimport com.pulumi.iosxe.inputs.SystemMulticastRoutingVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new System(\"example\", SystemArgs.builder()        \n            .hostname(\"ROUTER-1\")\n            .ipDomainLookup(false)\n            .ipDomainName(\"test.com\")\n            .ipSourceRoute(false)\n            .ipv6UnicastRouting(true)\n            .loginDelay(10)\n            .loginOnFailure(true)\n            .loginOnFailureLog(true)\n            .loginOnSuccess(true)\n            .loginOnSuccessLog(true)\n            .multicastRoutingVrfs(SystemMulticastRoutingVrfArgs.builder()\n                .vrf(\"VRF1\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:System\n    properties:\n      hostname: ROUTER-1\n      ipDomainLookup: false\n      ipDomainName: test.com\n      ipSourceRoute: false\n      ipv6UnicastRouting: true\n      loginDelay: 10\n      loginOnFailure: true\n      loginOnFailureLog: true\n      loginOnSuccess: true\n      loginOnSuccessLog: true\n      multicastRoutingVrfs:\n        - vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/system:System example \"Cisco-IOS-XE-native:native\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Set system's network name\n"
                },
                "ipDomainLookup": {
                    "type": "boolean",
                    "description": "Enable IP Domain Name System hostname translation\n"
                },
                "ipDomainName": {
                    "type": "string",
                    "description": "Define the default domain name\n"
                },
                "ipMulticastRouting": {
                    "type": "boolean",
                    "description": "Enable IP multicast forwarding\n"
                },
                "ipMulticastRoutingDistributed": {
                    "type": "boolean",
                    "description": "Distributed multicast switching\n"
                },
                "ipRouting": {
                    "type": "boolean",
                    "description": "Enable or disable IP routing\n"
                },
                "ipSourceRoute": {
                    "type": "boolean",
                    "description": "Process packets with source routing header options\n"
                },
                "ipv6UnicastRouting": {
                    "type": "boolean",
                    "description": "Enable unicast routing\n"
                },
                "loginDelay": {
                    "type": "integer",
                    "description": "Set delay between successive fail login - Range: `1`-`10`\n"
                },
                "loginOnFailure": {
                    "type": "boolean",
                    "description": "Set options for failed login attempt\n"
                },
                "loginOnFailureLog": {
                    "type": "boolean",
                    "description": "Generate syslogs on failure logins\n"
                },
                "loginOnSuccess": {
                    "type": "boolean",
                    "description": "Set options for successful login attempt\n"
                },
                "loginOnSuccessLog": {
                    "type": "boolean",
                    "description": "Generate syslogs on successful logins\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "- Range: `1500`-`9198`\n"
                },
                "multicastRoutingSwitch": {
                    "type": "boolean",
                    "description": "Enable IP multicast forwarding, some XE devices use this option instead of `multicast_routing`.\n"
                },
                "multicastRoutingVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/SystemMulticastRoutingVrf:SystemMulticastRoutingVrf"
                    },
                    "description": "Select VPN Routing/Forwarding instance\n"
                }
            },
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Set system's network name\n"
                },
                "ipDomainLookup": {
                    "type": "boolean",
                    "description": "Enable IP Domain Name System hostname translation\n"
                },
                "ipDomainName": {
                    "type": "string",
                    "description": "Define the default domain name\n"
                },
                "ipMulticastRouting": {
                    "type": "boolean",
                    "description": "Enable IP multicast forwarding\n"
                },
                "ipMulticastRoutingDistributed": {
                    "type": "boolean",
                    "description": "Distributed multicast switching\n"
                },
                "ipRouting": {
                    "type": "boolean",
                    "description": "Enable or disable IP routing\n"
                },
                "ipSourceRoute": {
                    "type": "boolean",
                    "description": "Process packets with source routing header options\n"
                },
                "ipv6UnicastRouting": {
                    "type": "boolean",
                    "description": "Enable unicast routing\n"
                },
                "loginDelay": {
                    "type": "integer",
                    "description": "Set delay between successive fail login - Range: `1`-`10`\n"
                },
                "loginOnFailure": {
                    "type": "boolean",
                    "description": "Set options for failed login attempt\n"
                },
                "loginOnFailureLog": {
                    "type": "boolean",
                    "description": "Generate syslogs on failure logins\n"
                },
                "loginOnSuccess": {
                    "type": "boolean",
                    "description": "Set options for successful login attempt\n"
                },
                "loginOnSuccessLog": {
                    "type": "boolean",
                    "description": "Generate syslogs on successful logins\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "- Range: `1500`-`9198`\n"
                },
                "multicastRoutingSwitch": {
                    "type": "boolean",
                    "description": "Enable IP multicast forwarding, some XE devices use this option instead of `multicast_routing`.\n"
                },
                "multicastRoutingVrfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/SystemMulticastRoutingVrf:SystemMulticastRoutingVrf"
                    },
                    "description": "Select VPN Routing/Forwarding instance\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering System resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Set system's network name\n"
                    },
                    "ipDomainLookup": {
                        "type": "boolean",
                        "description": "Enable IP Domain Name System hostname translation\n"
                    },
                    "ipDomainName": {
                        "type": "string",
                        "description": "Define the default domain name\n"
                    },
                    "ipMulticastRouting": {
                        "type": "boolean",
                        "description": "Enable IP multicast forwarding\n"
                    },
                    "ipMulticastRoutingDistributed": {
                        "type": "boolean",
                        "description": "Distributed multicast switching\n"
                    },
                    "ipRouting": {
                        "type": "boolean",
                        "description": "Enable or disable IP routing\n"
                    },
                    "ipSourceRoute": {
                        "type": "boolean",
                        "description": "Process packets with source routing header options\n"
                    },
                    "ipv6UnicastRouting": {
                        "type": "boolean",
                        "description": "Enable unicast routing\n"
                    },
                    "loginDelay": {
                        "type": "integer",
                        "description": "Set delay between successive fail login - Range: `1`-`10`\n"
                    },
                    "loginOnFailure": {
                        "type": "boolean",
                        "description": "Set options for failed login attempt\n"
                    },
                    "loginOnFailureLog": {
                        "type": "boolean",
                        "description": "Generate syslogs on failure logins\n"
                    },
                    "loginOnSuccess": {
                        "type": "boolean",
                        "description": "Set options for successful login attempt\n"
                    },
                    "loginOnSuccessLog": {
                        "type": "boolean",
                        "description": "Generate syslogs on successful logins\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "- Range: `1500`-`9198`\n"
                    },
                    "multicastRoutingSwitch": {
                        "type": "boolean",
                        "description": "Enable IP multicast forwarding, some XE devices use this option instead of `multicast_routing`.\n"
                    },
                    "multicastRoutingVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/SystemMulticastRoutingVrf:SystemMulticastRoutingVrf"
                        },
                        "description": "Select VPN Routing/Forwarding instance\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/tacacsServer:TacacsServer": {
            "description": "This resource can manage the TACACS Server configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.TacacsServer(\"example\", {\n    addressIpv4: \"10.10.15.13\",\n    key: \"123\",\n    timeout: 4,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.TacacsServer(\"example\",\n    address_ipv4=\"10.10.15.13\",\n    key=\"123\",\n    timeout=4)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.TacacsServer(\"example\", new()\n    {\n        AddressIpv4 = \"10.10.15.13\",\n        Key = \"123\",\n        Timeout = 4,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewTacacsServer(ctx, \"example\", \u0026iosxe.TacacsServerArgs{\n\t\t\tAddressIpv4: pulumi.String(\"10.10.15.13\"),\n\t\t\tKey:         pulumi.String(\"123\"),\n\t\t\tTimeout:     pulumi.Int(4),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.TacacsServer;\nimport com.pulumi.iosxe.TacacsServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new TacacsServer(\"example\", TacacsServerArgs.builder()        \n            .addressIpv4(\"10.10.15.13\")\n            .key(\"123\")\n            .timeout(4)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:TacacsServer\n    properties:\n      addressIpv4: 10.10.15.13\n      key: '123'\n      timeout: 4\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/tacacsServer:TacacsServer example \"Cisco-IOS-XE-native:native/tacacs/Cisco-IOS-XE-aaa:server=tacacs_10.10.15.13\"\n```\n\n ",
            "properties": {
                "addressIpv4": {
                    "type": "string",
                    "description": "IPv4 address or Hostname for tacacs server\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The UNENCRYPTED (cleartext) server key\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for the tacacs server configuration\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Time to wait for this TACACS server to reply (overrides default) - Range: `1`-`1000`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "addressIpv4": {
                    "type": "string",
                    "description": "IPv4 address or Hostname for tacacs server\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The UNENCRYPTED (cleartext) server key\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for the tacacs server configuration\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Time to wait for this TACACS server to reply (overrides default) - Range: `1`-`1000`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TacacsServer resources.\n",
                "properties": {
                    "addressIpv4": {
                        "type": "string",
                        "description": "IPv4 address or Hostname for tacacs server\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The UNENCRYPTED (cleartext) server key\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the tacacs server configuration\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Time to wait for this TACACS server to reply (overrides default) - Range: `1`-`1000`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/template:Template": {
            "description": "This resource can manage the Template configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Template;\nimport com.pulumi.iosxe.TemplateArgs;\nimport com.pulumi.iosxe.inputs.TemplateIpAccessGroupArgs;\nimport com.pulumi.iosxe.inputs.TemplateSwitchportPortSecurityMaximumRangeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Template(\"example\", TemplateArgs.builder()        \n            .accessSessionClosed(true)\n            .accessSessionControlDirection(\"both\")\n            .accessSessionHostMode(\"single-host\")\n            .accessSessionInterfaceTemplateSticky(true)\n            .accessSessionInterfaceTemplateStickyTimer(100)\n            .accessSessionMonitor(true)\n            .accessSessionPortControl(\"auto\")\n            .authenticationPeriodic(true)\n            .authenticationTimerReauthenticateServer(true)\n            .ctsManual(true)\n            .ctsManualPolicyStaticSgt(100)\n            .ctsManualPolicyStaticTrusted(false)\n            .ctsManualPropagateSgt(false)\n            .ctsRoleBasedEnforcement(false)\n            .deviceTracking(true)\n            .deviceTrackingVlanRange(\"100-199\")\n            .dot1xMaxReauthReq(3)\n            .dot1xMaxReq(3)\n            .dot1xPae(\"both\")\n            .dot1xTimeoutTxPeriod(2)\n            .ipAccessGroups(TemplateIpAccessGroupArgs.builder()\n                .access_list(\"ACL1\")\n                .direction(\"in\")\n                .build())\n            .ipDhcpSnoopingLimitRate(10)\n            .ipDhcpSnoopingTrust(true)\n            .loadInterval(30)\n            .mab(true)\n            .mabEap(true)\n            .servicePolicyInput(\"SP1\")\n            .servicePolicyOutput(\"SP2\")\n            .servicePolicyTypeControlSubscriber(\"dot1x_policy\")\n            .spanningTreeBpduguardEnable(true)\n            .spanningTreePortfast(true)\n            .spanningTreePortfastDisable(false)\n            .spanningTreePortfastEdge(false)\n            .spanningTreePortfastNetwork(false)\n            .stormControlActionShutdown(true)\n            .stormControlActionTrap(true)\n            .stormControlBroadcastLevelBpsThreshold(10)\n            .stormControlBroadcastLevelPpsThreshold(\"10\")\n            .stormControlBroadcastLevelThreshold(10)\n            .stormControlMulticastLevelBpsThreshold(10000)\n            .stormControlMulticastLevelPpsThreshold(\"10\")\n            .stormControlMulticastLevelThreshold(10)\n            .subscriberAgingProbe(true)\n            .switchportAccessVlan(200)\n            .switchportBlockUnicast(false)\n            .switchportModeAccess(false)\n            .switchportModeTrunk(true)\n            .switchportNonegotiate(false)\n            .switchportPortSecurity(true)\n            .switchportPortSecurityAgingStatic(false)\n            .switchportPortSecurityAgingTime(100)\n            .switchportPortSecurityAgingType(true)\n            .switchportPortSecurityAgingTypeInactivity(true)\n            .switchportPortSecurityMaximumRanges(TemplateSwitchportPortSecurityMaximumRangeArgs.builder()\n                .range(100)\n                .vlan(true)\n                .vlan_access(true)\n                .build())\n            .switchportPortSecurityViolationProtect(false)\n            .switchportPortSecurityViolationRestrict(false)\n            .switchportPortSecurityViolationShutdown(false)\n            .switchportPrivateVlanHostAssociationPrimaryRange(301)\n            .switchportPrivateVlanHostAssociationSecondaryRange(302)\n            .switchportTrunkAllowedVlans(\"500-599\")\n            .switchportTrunkNativeVlanVlanId(10)\n            .switchportVoiceVlan(201)\n            .templateName(\"TEMP1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Template\n    properties:\n      accessSessionClosed: true\n      accessSessionControlDirection: both\n      accessSessionHostMode: single-host\n      accessSessionInterfaceTemplateSticky: true\n      accessSessionInterfaceTemplateStickyTimer: 100\n      accessSessionMonitor: true\n      accessSessionPortControl: auto\n      authenticationPeriodic: true\n      authenticationTimerReauthenticateServer: true\n      ctsManual: true\n      ctsManualPolicyStaticSgt: 100\n      ctsManualPolicyStaticTrusted: false\n      ctsManualPropagateSgt: false\n      ctsRoleBasedEnforcement: false\n      deviceTracking: true\n      deviceTrackingVlanRange: 100-199\n      dot1xMaxReauthReq: 3\n      dot1xMaxReq: 3\n      dot1xPae: both\n      dot1xTimeoutTxPeriod: 2\n      ipAccessGroups:\n        - access_list: ACL1\n          direction: in\n      ipDhcpSnoopingLimitRate: 10\n      ipDhcpSnoopingTrust: true\n      loadInterval: 30\n      mab: true\n      mabEap: true\n      servicePolicyInput: SP1\n      servicePolicyOutput: SP2\n      servicePolicyTypeControlSubscriber: dot1x_policy\n      spanningTreeBpduguardEnable: true\n      spanningTreePortfast: true\n      spanningTreePortfastDisable: false\n      spanningTreePortfastEdge: false\n      spanningTreePortfastNetwork: false\n      stormControlActionShutdown: true\n      stormControlActionTrap: true\n      stormControlBroadcastLevelBpsThreshold: 10\n      stormControlBroadcastLevelPpsThreshold: '10'\n      stormControlBroadcastLevelThreshold: 10\n      stormControlMulticastLevelBpsThreshold: 10000\n      stormControlMulticastLevelPpsThreshold: '10'\n      stormControlMulticastLevelThreshold: 10\n      subscriberAgingProbe: true\n      switchportAccessVlan: 200\n      switchportBlockUnicast: false\n      switchportModeAccess: false\n      switchportModeTrunk: true\n      switchportNonegotiate: false\n      switchportPortSecurity: true\n      switchportPortSecurityAgingStatic: false\n      switchportPortSecurityAgingTime: 100\n      switchportPortSecurityAgingType: true\n      switchportPortSecurityAgingTypeInactivity: true\n      switchportPortSecurityMaximumRanges:\n        - range: 100\n          vlan: true\n          vlan_access: true\n      switchportPortSecurityViolationProtect: false\n      switchportPortSecurityViolationRestrict: false\n      switchportPortSecurityViolationShutdown: false\n      switchportPrivateVlanHostAssociationPrimaryRange: 301\n      switchportPrivateVlanHostAssociationSecondaryRange: 302\n      switchportTrunkAllowedVlans: 500-599\n      switchportTrunkNativeVlanVlanId: 10\n      switchportVoiceVlan: 201\n      templateName: TEMP1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/template:Template example \"Cisco-IOS-XE-native:native/template/Cisco-IOS-XE-template:template_details=TEMP1\"\n```\n\n ",
            "properties": {
                "accessSessionClosed": {
                    "type": "boolean",
                    "description": "Enable closed access on port (disabled by default, i.e. open access)\n"
                },
                "accessSessionControlDirection": {
                    "type": "string",
                    "description": "Set the control-direction on the interface - Choices: `both`, `in`\n"
                },
                "accessSessionHostMode": {
                    "type": "string",
                    "description": "Set the Host mode for authentication on this interface - Choices: `multi-auth`, `multi-domain`, `multi-host`,\n`single-host`\n"
                },
                "accessSessionInterfaceTemplateSticky": {
                    "type": "boolean",
                    "description": "Interface templates set to sticky\n"
                },
                "accessSessionInterfaceTemplateStickyTimer": {
                    "type": "integer",
                    "description": "Sticky timer value - Range: `1`-`65535`\n"
                },
                "accessSessionMonitor": {
                    "type": "boolean",
                    "description": "Apply template to monitor access sessions on the port\n"
                },
                "accessSessionPortControl": {
                    "type": "string",
                    "description": "Set the port-control value - Choices: `auto`, `force-authorized`, `force-unauthorized`\n"
                },
                "authenticationPeriodic": {
                    "type": "boolean",
                    "description": "Enable or Disable Reauthentication for this port\n"
                },
                "authenticationTimerReauthenticateRange": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 65535 - Range: `1`-`65535`\n"
                },
                "authenticationTimerReauthenticateServer": {
                    "type": "boolean",
                    "description": "Obtain re-authentication timeout value from the server\n"
                },
                "ctsManual": {
                    "type": "boolean",
                    "description": "Supply local configuration for CTS parameters\n"
                },
                "ctsManualPolicyStaticSgt": {
                    "type": "integer",
                    "description": "Source Security Group Tag to apply to untagged or non-trusted incoming traffic - Range: `2`-`65519`\n"
                },
                "ctsManualPolicyStaticTrusted": {
                    "type": "boolean",
                    "description": "Trust the Source Group Tags (SGT) that the peer uses for sending\n"
                },
                "ctsManualPropagateSgt": {
                    "type": "boolean",
                    "description": "CTS SGT Propagation configuration\n"
                },
                "ctsRoleBasedEnforcement": {
                    "type": "boolean",
                    "description": "Enable Role-based Access Control enforcement\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "deviceTracking": {
                    "type": "boolean",
                    "description": "Configure device-tracking on the interface\n"
                },
                "deviceTrackingAttachPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/TemplateDeviceTrackingAttachPolicy:TemplateDeviceTrackingAttachPolicy"
                    },
                    "description": "policy name for device tracking\n"
                },
                "deviceTrackingVlanRange": {
                    "type": "string",
                    "description": "VLAN IDs of the VLANs for which this policy applies\n"
                },
                "dot1xMaxReauthReq": {
                    "type": "integer",
                    "description": "Max No. of Reauthentication Attempts - Range: `1`-`10`\n"
                },
                "dot1xMaxReq": {
                    "type": "integer",
                    "description": "Max No. of Retries - Range: `1`-`10`\n"
                },
                "dot1xPae": {
                    "type": "string",
                    "description": "Set 802.1x interface pae type - Choices: `authenticator`, `both`, `supplicant`\n"
                },
                "dot1xTimeoutTxPeriod": {
                    "type": "integer",
                    "description": "Timeout for supplicant retries - Range: `1`-`65535`\n"
                },
                "ipAccessGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/TemplateIpAccessGroup:TemplateIpAccessGroup"
                    },
                    "description": "Access control list for IP packets\n"
                },
                "ipDhcpSnoopingLimitRate": {
                    "type": "integer",
                    "description": "DHCP snooping rate limit - Range: `1`-`2048`\n"
                },
                "ipDhcpSnoopingTrust": {
                    "type": "boolean",
                    "description": "DHCP Snooping trust config\n"
                },
                "loadInterval": {
                    "type": "integer",
                    "description": "Load interval delay in seconds - Range: `30`-`600`\n"
                },
                "mab": {
                    "type": "boolean",
                    "description": "MAC Authentication Bypass Interface Config Commands\n"
                },
                "mabEap": {
                    "type": "boolean",
                    "description": "Use EAP authentication for MAC Auth Bypass\n"
                },
                "servicePolicyInput": {
                    "type": "string",
                    "description": "policy-map name\n"
                },
                "servicePolicyOutput": {
                    "type": "string",
                    "description": "policy-map name\n"
                },
                "servicePolicyTypeControlSubscriber": {
                    "type": "string",
                    "description": "Apply a subscriber control policy to the interface\n"
                },
                "sourceTemplate": {
                    "type": "string",
                    "description": "Get config from a template\n"
                },
                "spanningTreeBpduguardEnable": {
                    "type": "boolean",
                    "description": "Enable BPDU guard for this interface\n"
                },
                "spanningTreePortfast": {
                    "type": "boolean",
                    "description": "Portfast options for the interface\n"
                },
                "spanningTreePortfastDisable": {
                    "type": "boolean",
                    "description": "Disable portfast for this interface\n"
                },
                "spanningTreePortfastEdge": {
                    "type": "boolean",
                    "description": "Enable portfast edge on the interface\n"
                },
                "spanningTreePortfastNetwork": {
                    "type": "boolean",
                    "description": "Enable portfast network on the interface\n"
                },
                "spanningTreeServicePolicy": {
                    "type": "boolean",
                    "description": "help\n"
                },
                "stormControlActionShutdown": {
                    "type": "boolean",
                    "description": "Shutdown this interface if a storm occurs\n"
                },
                "stormControlActionTrap": {
                    "type": "boolean",
                    "description": "Send SNMP trap if a storm occurs\n"
                },
                "stormControlBroadcastLevelBpsThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "stormControlBroadcastLevelPpsThreshold": {
                    "type": "string",
                    "description": "Enter threshold\n"
                },
                "stormControlBroadcastLevelThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "stormControlMulticastLevelBpsThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "stormControlMulticastLevelPpsThreshold": {
                    "type": "string",
                    "description": "Enter threshold\n"
                },
                "stormControlMulticastLevelThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "subscriberAgingInactivityTimerProbe": {
                    "type": "boolean",
                    "description": "ARP probe\n"
                },
                "subscriberAgingInactivityTimerValue": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 65535 in seconds - Range: `1`-`65535`\n"
                },
                "subscriberAgingProbe": {
                    "type": "boolean",
                    "description": "ARP probe\n"
                },
                "switchportAccessVlan": {
                    "type": "integer",
                    "description": "VLAN ID of the VLAN when this port is in access mode - Range: `1`-`4094`\n"
                },
                "switchportBlockUnicast": {
                    "type": "boolean",
                    "description": "Block unknown unicast addresses\n"
                },
                "switchportModeAccess": {
                    "type": "boolean",
                    "description": "Set trunking mode to ACCESS unconditionally\n"
                },
                "switchportModeTrunk": {
                    "type": "boolean",
                    "description": "Set trunking mode to TRUNK unconditionally\n"
                },
                "switchportNonegotiate": {
                    "type": "boolean",
                    "description": "Device will not engage in negotiation protocol on this interface\n"
                },
                "switchportPortSecurity": {
                    "type": "boolean",
                    "description": "Security related command\n"
                },
                "switchportPortSecurityAgingStatic": {
                    "type": "boolean",
                    "description": "Enable aging for configured secure addresses\n"
                },
                "switchportPortSecurityAgingTime": {
                    "type": "integer",
                    "description": "Port-security aging time - Range: `1`-`1440`\n"
                },
                "switchportPortSecurityAgingType": {
                    "type": "boolean",
                    "description": "Port-security aging type\n"
                },
                "switchportPortSecurityAgingTypeInactivity": {
                    "type": "boolean",
                    "description": "Aging based on inactivity time period\n"
                },
                "switchportPortSecurityMaximumRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/TemplateSwitchportPortSecurityMaximumRange:TemplateSwitchportPortSecurityMaximumRange"
                    }
                },
                "switchportPortSecurityViolationProtect": {
                    "type": "boolean",
                    "description": "Security violation protect mode\n"
                },
                "switchportPortSecurityViolationRestrict": {
                    "type": "boolean",
                    "description": "Security violation restrict mode\n"
                },
                "switchportPortSecurityViolationShutdown": {
                    "type": "boolean",
                    "description": "Security violation shutdown mode\n"
                },
                "switchportPrivateVlanHostAssociationPrimaryRange": {
                    "type": "integer",
                    "description": "Primary normal range VLAN ID of the private VLAN port association - Range: `2`-`1001`\n"
                },
                "switchportPrivateVlanHostAssociationSecondaryRange": {
                    "type": "integer",
                    "description": "Secondary normal range VLAN ID of the private VLAN host port association - Range: `2`-`1001`\n"
                },
                "switchportTrunkAllowedVlans": {
                    "type": "string",
                    "description": "VLAN IDs of the allowed VLANs when this port is in trunking mode\n"
                },
                "switchportTrunkAllowedVlansAll": {
                    "type": "boolean",
                    "description": "all VLANs\n"
                },
                "switchportTrunkAllowedVlansNone": {
                    "type": "boolean",
                    "description": "no VLANs\n"
                },
                "switchportTrunkNativeVlanTag": {
                    "type": "boolean",
                    "description": "Set native VLAN tagging state\n"
                },
                "switchportTrunkNativeVlanVlanId": {
                    "type": "integer",
                    "description": "VLAN ID of the native VLAN when this port is in trunking mode - Range: `1`-`4094`\n"
                },
                "switchportVoiceVlan": {
                    "type": "integer",
                    "description": "Vlan for voice traffic - Range: `1`-`4094`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n"
                }
            },
            "required": [
                "templateName"
            ],
            "inputProperties": {
                "accessSessionClosed": {
                    "type": "boolean",
                    "description": "Enable closed access on port (disabled by default, i.e. open access)\n"
                },
                "accessSessionControlDirection": {
                    "type": "string",
                    "description": "Set the control-direction on the interface - Choices: `both`, `in`\n"
                },
                "accessSessionHostMode": {
                    "type": "string",
                    "description": "Set the Host mode for authentication on this interface - Choices: `multi-auth`, `multi-domain`, `multi-host`,\n`single-host`\n"
                },
                "accessSessionInterfaceTemplateSticky": {
                    "type": "boolean",
                    "description": "Interface templates set to sticky\n"
                },
                "accessSessionInterfaceTemplateStickyTimer": {
                    "type": "integer",
                    "description": "Sticky timer value - Range: `1`-`65535`\n"
                },
                "accessSessionMonitor": {
                    "type": "boolean",
                    "description": "Apply template to monitor access sessions on the port\n"
                },
                "accessSessionPortControl": {
                    "type": "string",
                    "description": "Set the port-control value - Choices: `auto`, `force-authorized`, `force-unauthorized`\n"
                },
                "authenticationPeriodic": {
                    "type": "boolean",
                    "description": "Enable or Disable Reauthentication for this port\n"
                },
                "authenticationTimerReauthenticateRange": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 65535 - Range: `1`-`65535`\n"
                },
                "authenticationTimerReauthenticateServer": {
                    "type": "boolean",
                    "description": "Obtain re-authentication timeout value from the server\n"
                },
                "ctsManual": {
                    "type": "boolean",
                    "description": "Supply local configuration for CTS parameters\n"
                },
                "ctsManualPolicyStaticSgt": {
                    "type": "integer",
                    "description": "Source Security Group Tag to apply to untagged or non-trusted incoming traffic - Range: `2`-`65519`\n"
                },
                "ctsManualPolicyStaticTrusted": {
                    "type": "boolean",
                    "description": "Trust the Source Group Tags (SGT) that the peer uses for sending\n"
                },
                "ctsManualPropagateSgt": {
                    "type": "boolean",
                    "description": "CTS SGT Propagation configuration\n"
                },
                "ctsRoleBasedEnforcement": {
                    "type": "boolean",
                    "description": "Enable Role-based Access Control enforcement\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "deviceTracking": {
                    "type": "boolean",
                    "description": "Configure device-tracking on the interface\n"
                },
                "deviceTrackingAttachPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/TemplateDeviceTrackingAttachPolicy:TemplateDeviceTrackingAttachPolicy"
                    },
                    "description": "policy name for device tracking\n"
                },
                "deviceTrackingVlanRange": {
                    "type": "string",
                    "description": "VLAN IDs of the VLANs for which this policy applies\n"
                },
                "dot1xMaxReauthReq": {
                    "type": "integer",
                    "description": "Max No. of Reauthentication Attempts - Range: `1`-`10`\n"
                },
                "dot1xMaxReq": {
                    "type": "integer",
                    "description": "Max No. of Retries - Range: `1`-`10`\n"
                },
                "dot1xPae": {
                    "type": "string",
                    "description": "Set 802.1x interface pae type - Choices: `authenticator`, `both`, `supplicant`\n"
                },
                "dot1xTimeoutTxPeriod": {
                    "type": "integer",
                    "description": "Timeout for supplicant retries - Range: `1`-`65535`\n"
                },
                "ipAccessGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/TemplateIpAccessGroup:TemplateIpAccessGroup"
                    },
                    "description": "Access control list for IP packets\n"
                },
                "ipDhcpSnoopingLimitRate": {
                    "type": "integer",
                    "description": "DHCP snooping rate limit - Range: `1`-`2048`\n"
                },
                "ipDhcpSnoopingTrust": {
                    "type": "boolean",
                    "description": "DHCP Snooping trust config\n"
                },
                "loadInterval": {
                    "type": "integer",
                    "description": "Load interval delay in seconds - Range: `30`-`600`\n"
                },
                "mab": {
                    "type": "boolean",
                    "description": "MAC Authentication Bypass Interface Config Commands\n"
                },
                "mabEap": {
                    "type": "boolean",
                    "description": "Use EAP authentication for MAC Auth Bypass\n"
                },
                "servicePolicyInput": {
                    "type": "string",
                    "description": "policy-map name\n"
                },
                "servicePolicyOutput": {
                    "type": "string",
                    "description": "policy-map name\n"
                },
                "servicePolicyTypeControlSubscriber": {
                    "type": "string",
                    "description": "Apply a subscriber control policy to the interface\n"
                },
                "sourceTemplate": {
                    "type": "string",
                    "description": "Get config from a template\n"
                },
                "spanningTreeBpduguardEnable": {
                    "type": "boolean",
                    "description": "Enable BPDU guard for this interface\n"
                },
                "spanningTreePortfast": {
                    "type": "boolean",
                    "description": "Portfast options for the interface\n"
                },
                "spanningTreePortfastDisable": {
                    "type": "boolean",
                    "description": "Disable portfast for this interface\n"
                },
                "spanningTreePortfastEdge": {
                    "type": "boolean",
                    "description": "Enable portfast edge on the interface\n"
                },
                "spanningTreePortfastNetwork": {
                    "type": "boolean",
                    "description": "Enable portfast network on the interface\n"
                },
                "spanningTreeServicePolicy": {
                    "type": "boolean",
                    "description": "help\n"
                },
                "stormControlActionShutdown": {
                    "type": "boolean",
                    "description": "Shutdown this interface if a storm occurs\n"
                },
                "stormControlActionTrap": {
                    "type": "boolean",
                    "description": "Send SNMP trap if a storm occurs\n"
                },
                "stormControlBroadcastLevelBpsThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "stormControlBroadcastLevelPpsThreshold": {
                    "type": "string",
                    "description": "Enter threshold\n"
                },
                "stormControlBroadcastLevelThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "stormControlMulticastLevelBpsThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "stormControlMulticastLevelPpsThreshold": {
                    "type": "string",
                    "description": "Enter threshold\n"
                },
                "stormControlMulticastLevelThreshold": {
                    "type": "number",
                    "description": "Enter threshold\n"
                },
                "subscriberAgingInactivityTimerProbe": {
                    "type": "boolean",
                    "description": "ARP probe\n"
                },
                "subscriberAgingInactivityTimerValue": {
                    "type": "integer",
                    "description": "Enter a value between 1 and 65535 in seconds - Range: `1`-`65535`\n"
                },
                "subscriberAgingProbe": {
                    "type": "boolean",
                    "description": "ARP probe\n"
                },
                "switchportAccessVlan": {
                    "type": "integer",
                    "description": "VLAN ID of the VLAN when this port is in access mode - Range: `1`-`4094`\n"
                },
                "switchportBlockUnicast": {
                    "type": "boolean",
                    "description": "Block unknown unicast addresses\n"
                },
                "switchportModeAccess": {
                    "type": "boolean",
                    "description": "Set trunking mode to ACCESS unconditionally\n"
                },
                "switchportModeTrunk": {
                    "type": "boolean",
                    "description": "Set trunking mode to TRUNK unconditionally\n"
                },
                "switchportNonegotiate": {
                    "type": "boolean",
                    "description": "Device will not engage in negotiation protocol on this interface\n"
                },
                "switchportPortSecurity": {
                    "type": "boolean",
                    "description": "Security related command\n"
                },
                "switchportPortSecurityAgingStatic": {
                    "type": "boolean",
                    "description": "Enable aging for configured secure addresses\n"
                },
                "switchportPortSecurityAgingTime": {
                    "type": "integer",
                    "description": "Port-security aging time - Range: `1`-`1440`\n"
                },
                "switchportPortSecurityAgingType": {
                    "type": "boolean",
                    "description": "Port-security aging type\n"
                },
                "switchportPortSecurityAgingTypeInactivity": {
                    "type": "boolean",
                    "description": "Aging based on inactivity time period\n"
                },
                "switchportPortSecurityMaximumRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/TemplateSwitchportPortSecurityMaximumRange:TemplateSwitchportPortSecurityMaximumRange"
                    }
                },
                "switchportPortSecurityViolationProtect": {
                    "type": "boolean",
                    "description": "Security violation protect mode\n"
                },
                "switchportPortSecurityViolationRestrict": {
                    "type": "boolean",
                    "description": "Security violation restrict mode\n"
                },
                "switchportPortSecurityViolationShutdown": {
                    "type": "boolean",
                    "description": "Security violation shutdown mode\n"
                },
                "switchportPrivateVlanHostAssociationPrimaryRange": {
                    "type": "integer",
                    "description": "Primary normal range VLAN ID of the private VLAN port association - Range: `2`-`1001`\n"
                },
                "switchportPrivateVlanHostAssociationSecondaryRange": {
                    "type": "integer",
                    "description": "Secondary normal range VLAN ID of the private VLAN host port association - Range: `2`-`1001`\n"
                },
                "switchportTrunkAllowedVlans": {
                    "type": "string",
                    "description": "VLAN IDs of the allowed VLANs when this port is in trunking mode\n"
                },
                "switchportTrunkAllowedVlansAll": {
                    "type": "boolean",
                    "description": "all VLANs\n"
                },
                "switchportTrunkAllowedVlansNone": {
                    "type": "boolean",
                    "description": "no VLANs\n"
                },
                "switchportTrunkNativeVlanTag": {
                    "type": "boolean",
                    "description": "Set native VLAN tagging state\n"
                },
                "switchportTrunkNativeVlanVlanId": {
                    "type": "integer",
                    "description": "VLAN ID of the native VLAN when this port is in trunking mode - Range: `1`-`4094`\n"
                },
                "switchportVoiceVlan": {
                    "type": "integer",
                    "description": "Vlan for voice traffic - Range: `1`-`4094`\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n"
                }
            },
            "requiredInputs": [
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Template resources.\n",
                "properties": {
                    "accessSessionClosed": {
                        "type": "boolean",
                        "description": "Enable closed access on port (disabled by default, i.e. open access)\n"
                    },
                    "accessSessionControlDirection": {
                        "type": "string",
                        "description": "Set the control-direction on the interface - Choices: `both`, `in`\n"
                    },
                    "accessSessionHostMode": {
                        "type": "string",
                        "description": "Set the Host mode for authentication on this interface - Choices: `multi-auth`, `multi-domain`, `multi-host`,\n`single-host`\n"
                    },
                    "accessSessionInterfaceTemplateSticky": {
                        "type": "boolean",
                        "description": "Interface templates set to sticky\n"
                    },
                    "accessSessionInterfaceTemplateStickyTimer": {
                        "type": "integer",
                        "description": "Sticky timer value - Range: `1`-`65535`\n"
                    },
                    "accessSessionMonitor": {
                        "type": "boolean",
                        "description": "Apply template to monitor access sessions on the port\n"
                    },
                    "accessSessionPortControl": {
                        "type": "string",
                        "description": "Set the port-control value - Choices: `auto`, `force-authorized`, `force-unauthorized`\n"
                    },
                    "authenticationPeriodic": {
                        "type": "boolean",
                        "description": "Enable or Disable Reauthentication for this port\n"
                    },
                    "authenticationTimerReauthenticateRange": {
                        "type": "integer",
                        "description": "Enter a value between 1 and 65535 - Range: `1`-`65535`\n"
                    },
                    "authenticationTimerReauthenticateServer": {
                        "type": "boolean",
                        "description": "Obtain re-authentication timeout value from the server\n"
                    },
                    "ctsManual": {
                        "type": "boolean",
                        "description": "Supply local configuration for CTS parameters\n"
                    },
                    "ctsManualPolicyStaticSgt": {
                        "type": "integer",
                        "description": "Source Security Group Tag to apply to untagged or non-trusted incoming traffic - Range: `2`-`65519`\n"
                    },
                    "ctsManualPolicyStaticTrusted": {
                        "type": "boolean",
                        "description": "Trust the Source Group Tags (SGT) that the peer uses for sending\n"
                    },
                    "ctsManualPropagateSgt": {
                        "type": "boolean",
                        "description": "CTS SGT Propagation configuration\n"
                    },
                    "ctsRoleBasedEnforcement": {
                        "type": "boolean",
                        "description": "Enable Role-based Access Control enforcement\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "deviceTracking": {
                        "type": "boolean",
                        "description": "Configure device-tracking on the interface\n"
                    },
                    "deviceTrackingAttachPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/TemplateDeviceTrackingAttachPolicy:TemplateDeviceTrackingAttachPolicy"
                        },
                        "description": "policy name for device tracking\n"
                    },
                    "deviceTrackingVlanRange": {
                        "type": "string",
                        "description": "VLAN IDs of the VLANs for which this policy applies\n"
                    },
                    "dot1xMaxReauthReq": {
                        "type": "integer",
                        "description": "Max No. of Reauthentication Attempts - Range: `1`-`10`\n"
                    },
                    "dot1xMaxReq": {
                        "type": "integer",
                        "description": "Max No. of Retries - Range: `1`-`10`\n"
                    },
                    "dot1xPae": {
                        "type": "string",
                        "description": "Set 802.1x interface pae type - Choices: `authenticator`, `both`, `supplicant`\n"
                    },
                    "dot1xTimeoutTxPeriod": {
                        "type": "integer",
                        "description": "Timeout for supplicant retries - Range: `1`-`65535`\n"
                    },
                    "ipAccessGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/TemplateIpAccessGroup:TemplateIpAccessGroup"
                        },
                        "description": "Access control list for IP packets\n"
                    },
                    "ipDhcpSnoopingLimitRate": {
                        "type": "integer",
                        "description": "DHCP snooping rate limit - Range: `1`-`2048`\n"
                    },
                    "ipDhcpSnoopingTrust": {
                        "type": "boolean",
                        "description": "DHCP Snooping trust config\n"
                    },
                    "loadInterval": {
                        "type": "integer",
                        "description": "Load interval delay in seconds - Range: `30`-`600`\n"
                    },
                    "mab": {
                        "type": "boolean",
                        "description": "MAC Authentication Bypass Interface Config Commands\n"
                    },
                    "mabEap": {
                        "type": "boolean",
                        "description": "Use EAP authentication for MAC Auth Bypass\n"
                    },
                    "servicePolicyInput": {
                        "type": "string",
                        "description": "policy-map name\n"
                    },
                    "servicePolicyOutput": {
                        "type": "string",
                        "description": "policy-map name\n"
                    },
                    "servicePolicyTypeControlSubscriber": {
                        "type": "string",
                        "description": "Apply a subscriber control policy to the interface\n"
                    },
                    "sourceTemplate": {
                        "type": "string",
                        "description": "Get config from a template\n"
                    },
                    "spanningTreeBpduguardEnable": {
                        "type": "boolean",
                        "description": "Enable BPDU guard for this interface\n"
                    },
                    "spanningTreePortfast": {
                        "type": "boolean",
                        "description": "Portfast options for the interface\n"
                    },
                    "spanningTreePortfastDisable": {
                        "type": "boolean",
                        "description": "Disable portfast for this interface\n"
                    },
                    "spanningTreePortfastEdge": {
                        "type": "boolean",
                        "description": "Enable portfast edge on the interface\n"
                    },
                    "spanningTreePortfastNetwork": {
                        "type": "boolean",
                        "description": "Enable portfast network on the interface\n"
                    },
                    "spanningTreeServicePolicy": {
                        "type": "boolean",
                        "description": "help\n"
                    },
                    "stormControlActionShutdown": {
                        "type": "boolean",
                        "description": "Shutdown this interface if a storm occurs\n"
                    },
                    "stormControlActionTrap": {
                        "type": "boolean",
                        "description": "Send SNMP trap if a storm occurs\n"
                    },
                    "stormControlBroadcastLevelBpsThreshold": {
                        "type": "number",
                        "description": "Enter threshold\n"
                    },
                    "stormControlBroadcastLevelPpsThreshold": {
                        "type": "string",
                        "description": "Enter threshold\n"
                    },
                    "stormControlBroadcastLevelThreshold": {
                        "type": "number",
                        "description": "Enter threshold\n"
                    },
                    "stormControlMulticastLevelBpsThreshold": {
                        "type": "number",
                        "description": "Enter threshold\n"
                    },
                    "stormControlMulticastLevelPpsThreshold": {
                        "type": "string",
                        "description": "Enter threshold\n"
                    },
                    "stormControlMulticastLevelThreshold": {
                        "type": "number",
                        "description": "Enter threshold\n"
                    },
                    "subscriberAgingInactivityTimerProbe": {
                        "type": "boolean",
                        "description": "ARP probe\n"
                    },
                    "subscriberAgingInactivityTimerValue": {
                        "type": "integer",
                        "description": "Enter a value between 1 and 65535 in seconds - Range: `1`-`65535`\n"
                    },
                    "subscriberAgingProbe": {
                        "type": "boolean",
                        "description": "ARP probe\n"
                    },
                    "switchportAccessVlan": {
                        "type": "integer",
                        "description": "VLAN ID of the VLAN when this port is in access mode - Range: `1`-`4094`\n"
                    },
                    "switchportBlockUnicast": {
                        "type": "boolean",
                        "description": "Block unknown unicast addresses\n"
                    },
                    "switchportModeAccess": {
                        "type": "boolean",
                        "description": "Set trunking mode to ACCESS unconditionally\n"
                    },
                    "switchportModeTrunk": {
                        "type": "boolean",
                        "description": "Set trunking mode to TRUNK unconditionally\n"
                    },
                    "switchportNonegotiate": {
                        "type": "boolean",
                        "description": "Device will not engage in negotiation protocol on this interface\n"
                    },
                    "switchportPortSecurity": {
                        "type": "boolean",
                        "description": "Security related command\n"
                    },
                    "switchportPortSecurityAgingStatic": {
                        "type": "boolean",
                        "description": "Enable aging for configured secure addresses\n"
                    },
                    "switchportPortSecurityAgingTime": {
                        "type": "integer",
                        "description": "Port-security aging time - Range: `1`-`1440`\n"
                    },
                    "switchportPortSecurityAgingType": {
                        "type": "boolean",
                        "description": "Port-security aging type\n"
                    },
                    "switchportPortSecurityAgingTypeInactivity": {
                        "type": "boolean",
                        "description": "Aging based on inactivity time period\n"
                    },
                    "switchportPortSecurityMaximumRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/TemplateSwitchportPortSecurityMaximumRange:TemplateSwitchportPortSecurityMaximumRange"
                        }
                    },
                    "switchportPortSecurityViolationProtect": {
                        "type": "boolean",
                        "description": "Security violation protect mode\n"
                    },
                    "switchportPortSecurityViolationRestrict": {
                        "type": "boolean",
                        "description": "Security violation restrict mode\n"
                    },
                    "switchportPortSecurityViolationShutdown": {
                        "type": "boolean",
                        "description": "Security violation shutdown mode\n"
                    },
                    "switchportPrivateVlanHostAssociationPrimaryRange": {
                        "type": "integer",
                        "description": "Primary normal range VLAN ID of the private VLAN port association - Range: `2`-`1001`\n"
                    },
                    "switchportPrivateVlanHostAssociationSecondaryRange": {
                        "type": "integer",
                        "description": "Secondary normal range VLAN ID of the private VLAN host port association - Range: `2`-`1001`\n"
                    },
                    "switchportTrunkAllowedVlans": {
                        "type": "string",
                        "description": "VLAN IDs of the allowed VLANs when this port is in trunking mode\n"
                    },
                    "switchportTrunkAllowedVlansAll": {
                        "type": "boolean",
                        "description": "all VLANs\n"
                    },
                    "switchportTrunkAllowedVlansNone": {
                        "type": "boolean",
                        "description": "no VLANs\n"
                    },
                    "switchportTrunkNativeVlanTag": {
                        "type": "boolean",
                        "description": "Set native VLAN tagging state\n"
                    },
                    "switchportTrunkNativeVlanVlanId": {
                        "type": "integer",
                        "description": "VLAN ID of the native VLAN when this port is in trunking mode - Range: `1`-`4094`\n"
                    },
                    "switchportVoiceVlan": {
                        "type": "integer",
                        "description": "Vlan for voice traffic - Range: `1`-`4094`\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template name\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/udld:Udld": {
            "description": "This resource can manage the UDLD configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.Udld(\"example\", {\n    aggressive: true,\n    enable: true,\n    messageTime: 77,\n    recoveryInterval: 8640,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.Udld(\"example\",\n    aggressive=True,\n    enable=True,\n    message_time=77,\n    recovery_interval=8640)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.Udld(\"example\", new()\n    {\n        Aggressive = true,\n        Enable = true,\n        MessageTime = 77,\n        RecoveryInterval = 8640,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewUdld(ctx, \"example\", \u0026iosxe.UdldArgs{\n\t\t\tAggressive:       pulumi.Bool(true),\n\t\t\tEnable:           pulumi.Bool(true),\n\t\t\tMessageTime:      pulumi.Int(77),\n\t\t\tRecoveryInterval: pulumi.Int(8640),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Udld;\nimport com.pulumi.iosxe.UdldArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Udld(\"example\", UdldArgs.builder()        \n            .aggressive(true)\n            .enable(true)\n            .messageTime(77)\n            .recoveryInterval(8640)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Udld\n    properties:\n      aggressive: true\n      enable: true\n      messageTime: 77\n      recoveryInterval: 8640\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/udld:Udld example \"Cisco-IOS-XE-native:native/udld\"\n```\n\n ",
            "properties": {
                "aggressive": {
                    "type": "boolean",
                    "description": "Enable UDLD protocol in aggressive mode on fiber ports exceptwhere locally configured\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable UDLD protocol on fiber ports except where locally configured\n"
                },
                "messageTime": {
                    "type": "integer",
                    "description": "Set UDLD message time period - Range: `1`-`90`\n"
                },
                "recoveryInterval": {
                    "type": "integer",
                    "description": "timer-interval(sec) - Range: `30`-`86400`\n"
                }
            },
            "inputProperties": {
                "aggressive": {
                    "type": "boolean",
                    "description": "Enable UDLD protocol in aggressive mode on fiber ports exceptwhere locally configured\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable UDLD protocol on fiber ports except where locally configured\n"
                },
                "messageTime": {
                    "type": "integer",
                    "description": "Set UDLD message time period - Range: `1`-`90`\n"
                },
                "recoveryInterval": {
                    "type": "integer",
                    "description": "timer-interval(sec) - Range: `30`-`86400`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Udld resources.\n",
                "properties": {
                    "aggressive": {
                        "type": "boolean",
                        "description": "Enable UDLD protocol in aggressive mode on fiber ports exceptwhere locally configured\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable UDLD protocol on fiber ports except where locally configured\n"
                    },
                    "messageTime": {
                        "type": "integer",
                        "description": "Set UDLD message time period - Range: `1`-`90`\n"
                    },
                    "recoveryInterval": {
                        "type": "integer",
                        "description": "timer-interval(sec) - Range: `30`-`86400`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/username:Username": {
            "description": "This resource can manage the Username configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.Username(\"example\", {\n    description: \"User1 description\",\n    password: \"MyPassword\",\n    passwordEncryption: \"0\",\n    privilege: 15,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.Username(\"example\",\n    description=\"User1 description\",\n    password=\"MyPassword\",\n    password_encryption=\"0\",\n    privilege=15)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.Username(\"example\", new()\n    {\n        Description = \"User1 description\",\n        Password = \"MyPassword\",\n        PasswordEncryption = \"0\",\n        Privilege = 15,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewUsername(ctx, \"example\", \u0026iosxe.UsernameArgs{\n\t\t\tDescription:        pulumi.String(\"User1 description\"),\n\t\t\tPassword:           pulumi.String(\"MyPassword\"),\n\t\t\tPasswordEncryption: pulumi.String(\"0\"),\n\t\t\tPrivilege:          pulumi.Int(15),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Username;\nimport com.pulumi.iosxe.UsernameArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Username(\"example\", UsernameArgs.builder()        \n            .description(\"User1 description\")\n            .password(\"MyPassword\")\n            .passwordEncryption(\"0\")\n            .privilege(15)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Username\n    properties:\n      description: User1 description\n      password: MyPassword\n      passwordEncryption: '0'\n      privilege: 15\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/username:Username example \"Cisco-IOS-XE-native:native/username=user1\"\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description string with max 128 characters\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordEncryption": {
                    "type": "string",
                    "description": "- Choices: `0`, `6`, `7`\n"
                },
                "privilege": {
                    "type": "integer",
                    "description": "Set user privilege level - Range: `0`-`15`\n"
                },
                "secret": {
                    "type": "string"
                },
                "secretEncryption": {
                    "type": "string",
                    "description": "- Choices: `0`, `5`, `8`, `9`\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "description string with max 128 characters\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordEncryption": {
                    "type": "string",
                    "description": "- Choices: `0`, `6`, `7`\n"
                },
                "privilege": {
                    "type": "integer",
                    "description": "Set user privilege level - Range: `0`-`15`\n"
                },
                "secret": {
                    "type": "string"
                },
                "secretEncryption": {
                    "type": "string",
                    "description": "- Choices: `0`, `5`, `8`, `9`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Username resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "description string with max 128 characters\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "passwordEncryption": {
                        "type": "string",
                        "description": "- Choices: `0`, `6`, `7`\n"
                    },
                    "privilege": {
                        "type": "integer",
                        "description": "Set user privilege level - Range: `0`-`15`\n"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "secretEncryption": {
                        "type": "string",
                        "description": "- Choices: `0`, `5`, `8`, `9`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/vlan:Vlan": {
            "description": "This resource can manage the VLAN configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.Vlan(\"example\", {\n    shutdown: false,\n    vlanId: 123,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.Vlan(\"example\",\n    shutdown=False,\n    vlan_id=123)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.Vlan(\"example\", new()\n    {\n        Shutdown = false,\n        VlanId = 123,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewVlan(ctx, \"example\", \u0026iosxe.VlanArgs{\n\t\t\tShutdown: pulumi.Bool(false),\n\t\t\tVlanId:   pulumi.Int(123),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Vlan;\nimport com.pulumi.iosxe.VlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Vlan(\"example\", VlanArgs.builder()        \n            .shutdown(false)\n            .vlanId(123)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Vlan\n    properties:\n      shutdown: false\n      vlanId: 123\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/vlan:Vlan example \"Cisco-IOS-XE-native:native/vlan/Cisco-IOS-XE-vlan:vlan-list=123\"\n```\n\n ",
            "properties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Ascii name of the VLAN\n"
                },
                "privateVlanAssociation": {
                    "type": "string",
                    "description": "Configure association between private VLANs\n"
                },
                "privateVlanCommunity": {
                    "type": "boolean",
                    "description": "Configure the VLAN as a community private VLAN\n"
                },
                "privateVlanIsolated": {
                    "type": "boolean",
                    "description": "Configure the VLAN as an isolated private VLAN\n"
                },
                "privateVlanPrimary": {
                    "type": "boolean",
                    "description": "Configure the VLAN as a primary private VLAN\n"
                },
                "remoteSpan": {
                    "type": "boolean",
                    "description": "Configure as Remote SPAN VLAN\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown VLAN switching\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "a single VLAN id (allowed value range 1-4094)or Comma-separated VLAN id range.e.g. 99 or 1-30 or 1-20,30,40-50 - Range:\n`1`-`4094`\n"
                }
            },
            "required": [
                "name",
                "vlanId"
            ],
            "inputProperties": {
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Ascii name of the VLAN\n"
                },
                "privateVlanAssociation": {
                    "type": "string",
                    "description": "Configure association between private VLANs\n"
                },
                "privateVlanCommunity": {
                    "type": "boolean",
                    "description": "Configure the VLAN as a community private VLAN\n"
                },
                "privateVlanIsolated": {
                    "type": "boolean",
                    "description": "Configure the VLAN as an isolated private VLAN\n"
                },
                "privateVlanPrimary": {
                    "type": "boolean",
                    "description": "Configure the VLAN as a primary private VLAN\n"
                },
                "remoteSpan": {
                    "type": "boolean",
                    "description": "Configure as Remote SPAN VLAN\n"
                },
                "shutdown": {
                    "type": "boolean",
                    "description": "Shutdown VLAN switching\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "a single VLAN id (allowed value range 1-4094)or Comma-separated VLAN id range.e.g. 99 or 1-30 or 1-20,30,40-50 - Range:\n`1`-`4094`\n"
                }
            },
            "requiredInputs": [
                "vlanId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vlan resources.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Ascii name of the VLAN\n"
                    },
                    "privateVlanAssociation": {
                        "type": "string",
                        "description": "Configure association between private VLANs\n"
                    },
                    "privateVlanCommunity": {
                        "type": "boolean",
                        "description": "Configure the VLAN as a community private VLAN\n"
                    },
                    "privateVlanIsolated": {
                        "type": "boolean",
                        "description": "Configure the VLAN as an isolated private VLAN\n"
                    },
                    "privateVlanPrimary": {
                        "type": "boolean",
                        "description": "Configure the VLAN as a primary private VLAN\n"
                    },
                    "remoteSpan": {
                        "type": "boolean",
                        "description": "Configure as Remote SPAN VLAN\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown VLAN switching\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "a single VLAN id (allowed value range 1-4094)or Comma-separated VLAN id range.e.g. 99 or 1-30 or 1-20,30,40-50 - Range:\n`1`-`4094`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/vlanAccessMap:VlanAccessMap": {
            "description": "This resource can manage the VLAN Access Map configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.VlanAccessMap(\"example\", {\n    action: \"forward\",\n    matchIpAddresses: [\"ACL1\"],\n    matchIpv6Addresses: [\"ACL2\"],\n    sequence: 10,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.VlanAccessMap(\"example\",\n    action=\"forward\",\n    match_ip_addresses=[\"ACL1\"],\n    match_ipv6_addresses=[\"ACL2\"],\n    sequence=10)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.VlanAccessMap(\"example\", new()\n    {\n        Action = \"forward\",\n        MatchIpAddresses = new[]\n        {\n            \"ACL1\",\n        },\n        MatchIpv6Addresses = new[]\n        {\n            \"ACL2\",\n        },\n        Sequence = 10,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewVlanAccessMap(ctx, \"example\", \u0026iosxe.VlanAccessMapArgs{\n\t\t\tAction: pulumi.String(\"forward\"),\n\t\t\tMatchIpAddresses: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ACL1\"),\n\t\t\t},\n\t\t\tMatchIpv6Addresses: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ACL2\"),\n\t\t\t},\n\t\t\tSequence: pulumi.Int(10),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.VlanAccessMap;\nimport com.pulumi.iosxe.VlanAccessMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new VlanAccessMap(\"example\", VlanAccessMapArgs.builder()        \n            .action(\"forward\")\n            .matchIpAddresses(\"ACL1\")\n            .matchIpv6Addresses(\"ACL2\")\n            .sequence(10)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:VlanAccessMap\n    properties:\n      action: forward\n      matchIpAddresses:\n        - ACL1\n      matchIpv6Addresses:\n        - ACL2\n      sequence: 10\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/vlanAccessMap:VlanAccessMap example \"Cisco-IOS-XE-native:native/vlan/Cisco-IOS-XE-vlan:access-map=VAM1,10\"\n```\n\n ",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Take the action - Choices: `drop`, `forward`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchIpAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpv6Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Match IPv6 address to access control.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Vlan access map tag\n"
                },
                "sequence": {
                    "type": "integer",
                    "description": "Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`\n"
                }
            },
            "required": [
                "name",
                "sequence"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Take the action - Choices: `drop`, `forward`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "matchIpAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "matchIpv6Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Match IPv6 address to access control.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Vlan access map tag\n"
                },
                "sequence": {
                    "type": "integer",
                    "description": "Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`\n"
                }
            },
            "requiredInputs": [
                "sequence"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VlanAccessMap resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Take the action - Choices: `drop`, `forward`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "matchIpAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "matchIpv6Addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Match IPv6 address to access control.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Vlan access map tag\n"
                    },
                    "sequence": {
                        "type": "integer",
                        "description": "Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/vlanConfiguration:VlanConfiguration": {
            "description": "This resource can manage the VLAN Configuration configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.VlanConfiguration(\"example\", {\n    evpnInstance: 123,\n    evpnInstanceVni: 10123,\n    vlanId: 123,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.VlanConfiguration(\"example\",\n    evpn_instance=123,\n    evpn_instance_vni=10123,\n    vlan_id=123)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.VlanConfiguration(\"example\", new()\n    {\n        EvpnInstance = 123,\n        EvpnInstanceVni = 10123,\n        VlanId = 123,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewVlanConfiguration(ctx, \"example\", \u0026iosxe.VlanConfigurationArgs{\n\t\t\tEvpnInstance:    pulumi.Int(123),\n\t\t\tEvpnInstanceVni: pulumi.Int(10123),\n\t\t\tVlanId:          pulumi.Int(123),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.VlanConfiguration;\nimport com.pulumi.iosxe.VlanConfigurationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new VlanConfiguration(\"example\", VlanConfigurationArgs.builder()        \n            .evpnInstance(123)\n            .evpnInstanceVni(10123)\n            .vlanId(123)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:VlanConfiguration\n    properties:\n      evpnInstance: 123\n      evpnInstanceVni: 10123\n      vlanId: 123\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/vlanConfiguration:VlanConfiguration example \"Cisco-IOS-XE-native:native/vlan/Cisco-IOS-XE-vlan:configuration=123\"\n```\n\n ",
            "properties": {
                "accessVfi": {
                    "type": "string",
                    "description": "Enter VFI name\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "evpnInstance": {
                    "type": "integer",
                    "description": "- Range: `1`-`65535`\n"
                },
                "evpnInstanceVni": {
                    "type": "integer",
                    "description": "VxLAN VNI value - Range: `4096`-`16777215`\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "VLAN ID List Eg. 1-10,15 - Range: `1`-`4094`\n"
                },
                "vni": {
                    "type": "integer",
                    "description": "VxLAN VNI value - Range: `4096`-`16777215`\n"
                }
            },
            "required": [
                "vlanId"
            ],
            "inputProperties": {
                "accessVfi": {
                    "type": "string",
                    "description": "Enter VFI name\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "evpnInstance": {
                    "type": "integer",
                    "description": "- Range: `1`-`65535`\n"
                },
                "evpnInstanceVni": {
                    "type": "integer",
                    "description": "VxLAN VNI value - Range: `4096`-`16777215`\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "VLAN ID List Eg. 1-10,15 - Range: `1`-`4094`\n"
                },
                "vni": {
                    "type": "integer",
                    "description": "VxLAN VNI value - Range: `4096`-`16777215`\n"
                }
            },
            "requiredInputs": [
                "vlanId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VlanConfiguration resources.\n",
                "properties": {
                    "accessVfi": {
                        "type": "string",
                        "description": "Enter VFI name\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "evpnInstance": {
                        "type": "integer",
                        "description": "- Range: `1`-`65535`\n"
                    },
                    "evpnInstanceVni": {
                        "type": "integer",
                        "description": "VxLAN VNI value - Range: `4096`-`16777215`\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "VLAN ID List Eg. 1-10,15 - Range: `1`-`4094`\n"
                    },
                    "vni": {
                        "type": "integer",
                        "description": "VxLAN VNI value - Range: `4096`-`16777215`\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/vrf:Vrf": {
            "description": "This resource can manage the VRF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.Vrf(\"example\", {\n    addressFamilyIpv4: true,\n    addressFamilyIpv6: true,\n    description: \"VRF22 description\",\n    ipv4RouteTargetExports: [{\n        value: \"22:22\",\n    }],\n    ipv4RouteTargetExportStitchings: [{\n        value: \"22:22\",\n    }],\n    ipv4RouteTargetImports: [{\n        value: \"22:22\",\n    }],\n    ipv4RouteTargetImportStitchings: [{\n        value: \"22:22\",\n    }],\n    ipv6RouteTargetExports: [{\n        value: \"22:22\",\n    }],\n    ipv6RouteTargetExportStitchings: [{\n        value: \"22:22\",\n    }],\n    ipv6RouteTargetImports: [{\n        value: \"22:22\",\n    }],\n    ipv6RouteTargetImportStitchings: [{\n        value: \"22:22\",\n    }],\n    rd: \"22:22\",\n    routeTargetExports: [{\n        stitching: false,\n        value: \"22:22\",\n    }],\n    routeTargetImports: [{\n        stitching: false,\n        value: \"22:22\",\n    }],\n    vpnId: \"22:22\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.Vrf(\"example\",\n    address_family_ipv4=True,\n    address_family_ipv6=True,\n    description=\"VRF22 description\",\n    ipv4_route_target_exports=[iosxe.VrfIpv4RouteTargetExportArgs(\n        value=\"22:22\",\n    )],\n    ipv4_route_target_export_stitchings=[iosxe.VrfIpv4RouteTargetExportStitchingArgs(\n        value=\"22:22\",\n    )],\n    ipv4_route_target_imports=[iosxe.VrfIpv4RouteTargetImportArgs(\n        value=\"22:22\",\n    )],\n    ipv4_route_target_import_stitchings=[iosxe.VrfIpv4RouteTargetImportStitchingArgs(\n        value=\"22:22\",\n    )],\n    ipv6_route_target_exports=[iosxe.VrfIpv6RouteTargetExportArgs(\n        value=\"22:22\",\n    )],\n    ipv6_route_target_export_stitchings=[iosxe.VrfIpv6RouteTargetExportStitchingArgs(\n        value=\"22:22\",\n    )],\n    ipv6_route_target_imports=[iosxe.VrfIpv6RouteTargetImportArgs(\n        value=\"22:22\",\n    )],\n    ipv6_route_target_import_stitchings=[iosxe.VrfIpv6RouteTargetImportStitchingArgs(\n        value=\"22:22\",\n    )],\n    rd=\"22:22\",\n    route_target_exports=[iosxe.VrfRouteTargetExportArgs(\n        stitching=False,\n        value=\"22:22\",\n    )],\n    route_target_imports=[iosxe.VrfRouteTargetImportArgs(\n        stitching=False,\n        value=\"22:22\",\n    )],\n    vpn_id=\"22:22\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.Vrf(\"example\", new()\n    {\n        AddressFamilyIpv4 = true,\n        AddressFamilyIpv6 = true,\n        Description = \"VRF22 description\",\n        Ipv4RouteTargetExports = new[]\n        {\n            new Iosxe.Inputs.VrfIpv4RouteTargetExportArgs\n            {\n                Value = \"22:22\",\n            },\n        },\n        Ipv4RouteTargetExportStitchings = new[]\n        {\n            new Iosxe.Inputs.VrfIpv4RouteTargetExportStitchingArgs\n            {\n                Value = \"22:22\",\n            },\n        },\n        Ipv4RouteTargetImports = new[]\n        {\n            new Iosxe.Inputs.VrfIpv4RouteTargetImportArgs\n            {\n                Value = \"22:22\",\n            },\n        },\n        Ipv4RouteTargetImportStitchings = new[]\n        {\n            new Iosxe.Inputs.VrfIpv4RouteTargetImportStitchingArgs\n            {\n                Value = \"22:22\",\n            },\n        },\n        Ipv6RouteTargetExports = new[]\n        {\n            new Iosxe.Inputs.VrfIpv6RouteTargetExportArgs\n            {\n                Value = \"22:22\",\n            },\n        },\n        Ipv6RouteTargetExportStitchings = new[]\n        {\n            new Iosxe.Inputs.VrfIpv6RouteTargetExportStitchingArgs\n            {\n                Value = \"22:22\",\n            },\n        },\n        Ipv6RouteTargetImports = new[]\n        {\n            new Iosxe.Inputs.VrfIpv6RouteTargetImportArgs\n            {\n                Value = \"22:22\",\n            },\n        },\n        Ipv6RouteTargetImportStitchings = new[]\n        {\n            new Iosxe.Inputs.VrfIpv6RouteTargetImportStitchingArgs\n            {\n                Value = \"22:22\",\n            },\n        },\n        Rd = \"22:22\",\n        RouteTargetExports = new[]\n        {\n            new Iosxe.Inputs.VrfRouteTargetExportArgs\n            {\n                Stitching = false,\n                Value = \"22:22\",\n            },\n        },\n        RouteTargetImports = new[]\n        {\n            new Iosxe.Inputs.VrfRouteTargetImportArgs\n            {\n                Stitching = false,\n                Value = \"22:22\",\n            },\n        },\n        VpnId = \"22:22\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewVrf(ctx, \"example\", \u0026iosxe.VrfArgs{\n\t\t\tAddressFamilyIpv4: pulumi.Bool(true),\n\t\t\tAddressFamilyIpv6: pulumi.Bool(true),\n\t\t\tDescription:       pulumi.String(\"VRF22 description\"),\n\t\t\tIpv4RouteTargetExports: iosxe.VrfIpv4RouteTargetExportArray{\n\t\t\t\t\u0026iosxe.VrfIpv4RouteTargetExportArgs{\n\t\t\t\t\tValue: pulumi.String(\"22:22\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIpv4RouteTargetExportStitchings: iosxe.VrfIpv4RouteTargetExportStitchingArray{\n\t\t\t\t\u0026iosxe.VrfIpv4RouteTargetExportStitchingArgs{\n\t\t\t\t\tValue: pulumi.String(\"22:22\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIpv4RouteTargetImports: iosxe.VrfIpv4RouteTargetImportArray{\n\t\t\t\t\u0026iosxe.VrfIpv4RouteTargetImportArgs{\n\t\t\t\t\tValue: pulumi.String(\"22:22\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIpv4RouteTargetImportStitchings: iosxe.VrfIpv4RouteTargetImportStitchingArray{\n\t\t\t\t\u0026iosxe.VrfIpv4RouteTargetImportStitchingArgs{\n\t\t\t\t\tValue: pulumi.String(\"22:22\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIpv6RouteTargetExports: iosxe.VrfIpv6RouteTargetExportArray{\n\t\t\t\t\u0026iosxe.VrfIpv6RouteTargetExportArgs{\n\t\t\t\t\tValue: pulumi.String(\"22:22\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIpv6RouteTargetExportStitchings: iosxe.VrfIpv6RouteTargetExportStitchingArray{\n\t\t\t\t\u0026iosxe.VrfIpv6RouteTargetExportStitchingArgs{\n\t\t\t\t\tValue: pulumi.String(\"22:22\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIpv6RouteTargetImports: iosxe.VrfIpv6RouteTargetImportArray{\n\t\t\t\t\u0026iosxe.VrfIpv6RouteTargetImportArgs{\n\t\t\t\t\tValue: pulumi.String(\"22:22\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIpv6RouteTargetImportStitchings: iosxe.VrfIpv6RouteTargetImportStitchingArray{\n\t\t\t\t\u0026iosxe.VrfIpv6RouteTargetImportStitchingArgs{\n\t\t\t\t\tValue: pulumi.String(\"22:22\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tRd: pulumi.String(\"22:22\"),\n\t\t\tRouteTargetExports: iosxe.VrfRouteTargetExportArray{\n\t\t\t\t\u0026iosxe.VrfRouteTargetExportArgs{\n\t\t\t\t\tStitching: pulumi.Bool(false),\n\t\t\t\t\tValue:     pulumi.String(\"22:22\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tRouteTargetImports: iosxe.VrfRouteTargetImportArray{\n\t\t\t\t\u0026iosxe.VrfRouteTargetImportArgs{\n\t\t\t\t\tStitching: pulumi.Bool(false),\n\t\t\t\t\tValue:     pulumi.String(\"22:22\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tVpnId: pulumi.String(\"22:22\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Vrf;\nimport com.pulumi.iosxe.VrfArgs;\nimport com.pulumi.iosxe.inputs.VrfIpv4RouteTargetExportArgs;\nimport com.pulumi.iosxe.inputs.VrfIpv4RouteTargetExportStitchingArgs;\nimport com.pulumi.iosxe.inputs.VrfIpv4RouteTargetImportArgs;\nimport com.pulumi.iosxe.inputs.VrfIpv4RouteTargetImportStitchingArgs;\nimport com.pulumi.iosxe.inputs.VrfIpv6RouteTargetExportArgs;\nimport com.pulumi.iosxe.inputs.VrfIpv6RouteTargetExportStitchingArgs;\nimport com.pulumi.iosxe.inputs.VrfIpv6RouteTargetImportArgs;\nimport com.pulumi.iosxe.inputs.VrfIpv6RouteTargetImportStitchingArgs;\nimport com.pulumi.iosxe.inputs.VrfRouteTargetExportArgs;\nimport com.pulumi.iosxe.inputs.VrfRouteTargetImportArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Vrf(\"example\", VrfArgs.builder()        \n            .addressFamilyIpv4(true)\n            .addressFamilyIpv6(true)\n            .description(\"VRF22 description\")\n            .ipv4RouteTargetExports(VrfIpv4RouteTargetExportArgs.builder()\n                .value(\"22:22\")\n                .build())\n            .ipv4RouteTargetExportStitchings(VrfIpv4RouteTargetExportStitchingArgs.builder()\n                .value(\"22:22\")\n                .build())\n            .ipv4RouteTargetImports(VrfIpv4RouteTargetImportArgs.builder()\n                .value(\"22:22\")\n                .build())\n            .ipv4RouteTargetImportStitchings(VrfIpv4RouteTargetImportStitchingArgs.builder()\n                .value(\"22:22\")\n                .build())\n            .ipv6RouteTargetExports(VrfIpv6RouteTargetExportArgs.builder()\n                .value(\"22:22\")\n                .build())\n            .ipv6RouteTargetExportStitchings(VrfIpv6RouteTargetExportStitchingArgs.builder()\n                .value(\"22:22\")\n                .build())\n            .ipv6RouteTargetImports(VrfIpv6RouteTargetImportArgs.builder()\n                .value(\"22:22\")\n                .build())\n            .ipv6RouteTargetImportStitchings(VrfIpv6RouteTargetImportStitchingArgs.builder()\n                .value(\"22:22\")\n                .build())\n            .rd(\"22:22\")\n            .routeTargetExports(VrfRouteTargetExportArgs.builder()\n                .stitching(false)\n                .value(\"22:22\")\n                .build())\n            .routeTargetImports(VrfRouteTargetImportArgs.builder()\n                .stitching(false)\n                .value(\"22:22\")\n                .build())\n            .vpnId(\"22:22\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Vrf\n    properties:\n      addressFamilyIpv4: true\n      addressFamilyIpv6: true\n      description: VRF22 description\n      ipv4RouteTargetExports:\n        - value: 22:22\n      ipv4RouteTargetExportStitchings:\n        - value: 22:22\n      ipv4RouteTargetImports:\n        - value: 22:22\n      ipv4RouteTargetImportStitchings:\n        - value: 22:22\n      ipv6RouteTargetExports:\n        - value: 22:22\n      ipv6RouteTargetExportStitchings:\n        - value: 22:22\n      ipv6RouteTargetImports:\n        - value: 22:22\n      ipv6RouteTargetImportStitchings:\n        - value: 22:22\n      rd: 22:22\n      routeTargetExports:\n        - stitching: false\n          value: 22:22\n      routeTargetImports:\n        - stitching: false\n          value: 22:22\n      vpnId: 22:22\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/vrf:Vrf example \"Cisco-IOS-XE-native:native/vrf/definition=VRF22\"\n```\n\n ",
            "properties": {
                "addressFamilyIpv4": {
                    "type": "boolean",
                    "description": "Address family\n"
                },
                "addressFamilyIpv6": {
                    "type": "boolean",
                    "description": "Address family\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "VRF specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4RouteTargetExportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv4RouteTargetExportStitching:VrfIpv4RouteTargetExportStitching"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv4RouteTargetExports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv4RouteTargetExport:VrfIpv4RouteTargetExport"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv4RouteTargetImportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv4RouteTargetImportStitching:VrfIpv4RouteTargetImportStitching"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "ipv4RouteTargetImports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv4RouteTargetImport:VrfIpv4RouteTargetImport"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "ipv6RouteTargetExportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv6RouteTargetExportStitching:VrfIpv6RouteTargetExportStitching"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv6RouteTargetExports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv6RouteTargetExport:VrfIpv6RouteTargetExport"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv6RouteTargetImportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv6RouteTargetImportStitching:VrfIpv6RouteTargetImportStitching"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "ipv6RouteTargetImports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv6RouteTargetImport:VrfIpv6RouteTargetImport"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "name": {
                    "type": "string",
                    "description": "WORD;;VRF name\n"
                },
                "rd": {
                    "type": "string",
                    "description": "Specify Route Distinguisher\n"
                },
                "routeTargetExports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfRouteTargetExport:VrfRouteTargetExport"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "routeTargetImports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfRouteTargetImport:VrfRouteTargetImport"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "vpnId": {
                    "type": "string",
                    "description": "Configure VPN ID in rfc2685 format\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "addressFamilyIpv4": {
                    "type": "boolean",
                    "description": "Address family\n"
                },
                "addressFamilyIpv6": {
                    "type": "boolean",
                    "description": "Address family\n"
                },
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "description": {
                    "type": "string",
                    "description": "VRF specific description\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "ipv4RouteTargetExportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv4RouteTargetExportStitching:VrfIpv4RouteTargetExportStitching"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv4RouteTargetExports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv4RouteTargetExport:VrfIpv4RouteTargetExport"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv4RouteTargetImportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv4RouteTargetImportStitching:VrfIpv4RouteTargetImportStitching"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "ipv4RouteTargetImports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv4RouteTargetImport:VrfIpv4RouteTargetImport"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "ipv6RouteTargetExportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv6RouteTargetExportStitching:VrfIpv6RouteTargetExportStitching"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv6RouteTargetExports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv6RouteTargetExport:VrfIpv6RouteTargetExport"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "ipv6RouteTargetImportStitchings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv6RouteTargetImportStitching:VrfIpv6RouteTargetImportStitching"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "ipv6RouteTargetImports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfIpv6RouteTargetImport:VrfIpv6RouteTargetImport"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "name": {
                    "type": "string",
                    "description": "WORD;;VRF name\n"
                },
                "rd": {
                    "type": "string",
                    "description": "Specify Route Distinguisher\n"
                },
                "routeTargetExports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfRouteTargetExport:VrfRouteTargetExport"
                    },
                    "description": "Export Target-VPN community\n"
                },
                "routeTargetImports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/iosxe:index/VrfRouteTargetImport:VrfRouteTargetImport"
                    },
                    "description": "Import Target-VPN community\n"
                },
                "vpnId": {
                    "type": "string",
                    "description": "Configure VPN ID in rfc2685 format\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vrf resources.\n",
                "properties": {
                    "addressFamilyIpv4": {
                        "type": "boolean",
                        "description": "Address family\n"
                    },
                    "addressFamilyIpv6": {
                        "type": "boolean",
                        "description": "Address family\n"
                    },
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "VRF specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv4RouteTargetExportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/VrfIpv4RouteTargetExportStitching:VrfIpv4RouteTargetExportStitching"
                        },
                        "description": "Export Target-VPN community\n"
                    },
                    "ipv4RouteTargetExports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/VrfIpv4RouteTargetExport:VrfIpv4RouteTargetExport"
                        },
                        "description": "Export Target-VPN community\n"
                    },
                    "ipv4RouteTargetImportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/VrfIpv4RouteTargetImportStitching:VrfIpv4RouteTargetImportStitching"
                        },
                        "description": "Import Target-VPN community\n"
                    },
                    "ipv4RouteTargetImports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/VrfIpv4RouteTargetImport:VrfIpv4RouteTargetImport"
                        },
                        "description": "Import Target-VPN community\n"
                    },
                    "ipv6RouteTargetExportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/VrfIpv6RouteTargetExportStitching:VrfIpv6RouteTargetExportStitching"
                        },
                        "description": "Export Target-VPN community\n"
                    },
                    "ipv6RouteTargetExports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/VrfIpv6RouteTargetExport:VrfIpv6RouteTargetExport"
                        },
                        "description": "Export Target-VPN community\n"
                    },
                    "ipv6RouteTargetImportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/VrfIpv6RouteTargetImportStitching:VrfIpv6RouteTargetImportStitching"
                        },
                        "description": "Import Target-VPN community\n"
                    },
                    "ipv6RouteTargetImports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/VrfIpv6RouteTargetImport:VrfIpv6RouteTargetImport"
                        },
                        "description": "Import Target-VPN community\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "WORD;;VRF name\n"
                    },
                    "rd": {
                        "type": "string",
                        "description": "Specify Route Distinguisher\n"
                    },
                    "routeTargetExports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/VrfRouteTargetExport:VrfRouteTargetExport"
                        },
                        "description": "Export Target-VPN community\n"
                    },
                    "routeTargetImports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/VrfRouteTargetImport:VrfRouteTargetImport"
                        },
                        "description": "Import Target-VPN community\n"
                    },
                    "vpnId": {
                        "type": "string",
                        "description": "Configure VPN ID in rfc2685 format\n"
                    }
                },
                "type": "object"
            }
        },
        "iosxe:index/vtp:Vtp": {
            "description": "This resource can manage the VTP configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@lbrlabs/pulumi-iosxe\";\n\nconst example = new iosxe.Vtp(\"example\", {\n    domain: \"TESTDOMAIN\",\n    file: \"TEST\",\n    \"interface\": \"Gi1/0/1\",\n    modeClientMst: true,\n    modeClientUnknown: true,\n    modeClientVlan: true,\n    modeOffMst: true,\n    modeOffVlan: true,\n    modeServerMst: true,\n    modeServerUnknown: true,\n    modeServerVlan: true,\n    modeTransparentMst: true,\n    modeTransparentUnknown: true,\n    modeTransparentVlan: true,\n    password: \"test123\",\n    passwordHidden: true,\n    version: 3,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_iosxe as iosxe\n\nexample = iosxe.Vtp(\"example\",\n    domain=\"TESTDOMAIN\",\n    file=\"TEST\",\n    interface=\"Gi1/0/1\",\n    mode_client_mst=True,\n    mode_client_unknown=True,\n    mode_client_vlan=True,\n    mode_off_mst=True,\n    mode_off_vlan=True,\n    mode_server_mst=True,\n    mode_server_unknown=True,\n    mode_server_vlan=True,\n    mode_transparent_mst=True,\n    mode_transparent_unknown=True,\n    mode_transparent_vlan=True,\n    password=\"test123\",\n    password_hidden=True,\n    version=3)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Lbrlabs.PulumiPackage.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Iosxe.Vtp(\"example\", new()\n    {\n        Domain = \"TESTDOMAIN\",\n        File = \"TEST\",\n        Interface = \"Gi1/0/1\",\n        ModeClientMst = true,\n        ModeClientUnknown = true,\n        ModeClientVlan = true,\n        ModeOffMst = true,\n        ModeOffVlan = true,\n        ModeServerMst = true,\n        ModeServerUnknown = true,\n        ModeServerVlan = true,\n        ModeTransparentMst = true,\n        ModeTransparentUnknown = true,\n        ModeTransparentVlan = true,\n        Password = \"test123\",\n        PasswordHidden = true,\n        Version = 3,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.NewVtp(ctx, \"example\", \u0026iosxe.VtpArgs{\n\t\t\tDomain:                 pulumi.String(\"TESTDOMAIN\"),\n\t\t\tFile:                   pulumi.String(\"TEST\"),\n\t\t\tInterface:              pulumi.String(\"Gi1/0/1\"),\n\t\t\tModeClientMst:          pulumi.Bool(true),\n\t\t\tModeClientUnknown:      pulumi.Bool(true),\n\t\t\tModeClientVlan:         pulumi.Bool(true),\n\t\t\tModeOffMst:             pulumi.Bool(true),\n\t\t\tModeOffVlan:            pulumi.Bool(true),\n\t\t\tModeServerMst:          pulumi.Bool(true),\n\t\t\tModeServerUnknown:      pulumi.Bool(true),\n\t\t\tModeServerVlan:         pulumi.Bool(true),\n\t\t\tModeTransparentMst:     pulumi.Bool(true),\n\t\t\tModeTransparentUnknown: pulumi.Bool(true),\n\t\t\tModeTransparentVlan:    pulumi.Bool(true),\n\t\t\tPassword:               pulumi.String(\"test123\"),\n\t\t\tPasswordHidden:         pulumi.Bool(true),\n\t\t\tVersion:                pulumi.Int(3),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.Vtp;\nimport com.pulumi.iosxe.VtpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Vtp(\"example\", VtpArgs.builder()        \n            .domain(\"TESTDOMAIN\")\n            .file(\"TEST\")\n            .interface_(\"Gi1/0/1\")\n            .modeClientMst(true)\n            .modeClientUnknown(true)\n            .modeClientVlan(true)\n            .modeOffMst(true)\n            .modeOffVlan(true)\n            .modeServerMst(true)\n            .modeServerUnknown(true)\n            .modeServerVlan(true)\n            .modeTransparentMst(true)\n            .modeTransparentUnknown(true)\n            .modeTransparentVlan(true)\n            .password(\"test123\")\n            .passwordHidden(true)\n            .version(3)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: iosxe:Vtp\n    properties:\n      domain: TESTDOMAIN\n      file: TEST\n      interface: Gi1/0/1\n      modeClientMst: true\n      modeClientUnknown: true\n      modeClientVlan: true\n      modeOffMst: true\n      modeOffVlan: true\n      modeServerMst: true\n      modeServerUnknown: true\n      modeServerVlan: true\n      modeTransparentMst: true\n      modeTransparentUnknown: true\n      modeTransparentVlan: true\n      password: test123\n      passwordHidden: true\n      version: 3\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import iosxe:index/vtp:Vtp example \"Cisco-IOS-XE-native:native/vtp\"\n```\n\n ",
            "properties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Set the name of the VTP administrative domain.\n"
                },
                "file": {
                    "type": "string",
                    "description": "Configure IFS filesystem file where VTP configuration is stored.\n"
                },
                "interface": {
                    "type": "string",
                    "description": "The name of the interface providing the VTP updater ID for this device\n"
                },
                "interfaceOnly": {
                    "type": "boolean",
                    "description": "Use only this interface's IP address as the VTP IP updater address\n"
                },
                "modeClientMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeClientUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeClientVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "modeOffMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeOffUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeOffVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "modeServerMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeServerUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeServerVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "modeTransparentMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeTransparentUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeTransparentVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "password": {
                    "type": "string",
                    "description": "The ascii password for the VTP administrative domain\n"
                },
                "passwordHidden": {
                    "type": "boolean",
                    "description": "Set the VTP password hidden option\n"
                },
                "passwordSecret": {
                    "type": "boolean",
                    "description": "Specify the vtp password in encrypted form\n"
                },
                "pruning": {
                    "type": "boolean",
                    "description": "Set the administrative domain to permit pruning\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Set the administrative domain to VTP version - Range: `1`-`3`\n"
                }
            },
            "inputProperties": {
                "deleteMode": {
                    "type": "string",
                    "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                },
                "device": {
                    "type": "string",
                    "description": "A device name from the provider configuration.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Set the name of the VTP administrative domain.\n"
                },
                "file": {
                    "type": "string",
                    "description": "Configure IFS filesystem file where VTP configuration is stored.\n"
                },
                "interface": {
                    "type": "string",
                    "description": "The name of the interface providing the VTP updater ID for this device\n"
                },
                "interfaceOnly": {
                    "type": "boolean",
                    "description": "Use only this interface's IP address as the VTP IP updater address\n"
                },
                "modeClientMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeClientUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeClientVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "modeOffMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeOffUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeOffVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "modeServerMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeServerUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeServerVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "modeTransparentMst": {
                    "type": "boolean",
                    "description": "Set the mode for MST VTP instance\n"
                },
                "modeTransparentUnknown": {
                    "type": "boolean",
                    "description": "Set the mode for unknown VTP instances\n"
                },
                "modeTransparentVlan": {
                    "type": "boolean",
                    "description": "Set the mode for VLAN VTP instance\n"
                },
                "password": {
                    "type": "string",
                    "description": "The ascii password for the VTP administrative domain\n"
                },
                "passwordHidden": {
                    "type": "boolean",
                    "description": "Set the VTP password hidden option\n"
                },
                "passwordSecret": {
                    "type": "boolean",
                    "description": "Specify the vtp password in encrypted form\n"
                },
                "pruning": {
                    "type": "boolean",
                    "description": "Set the administrative domain to permit pruning\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Set the administrative domain to VTP version - Range: `1`-`3`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vtp resources.\n",
                "properties": {
                    "deleteMode": {
                        "type": "string",
                        "description": "Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being\nmanaged, or only delete the individual resource attributes configured explicitly and leave everything else as-is.\nDefault value is `all`. - Choices: `all`, `attributes`\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Set the name of the VTP administrative domain.\n"
                    },
                    "file": {
                        "type": "string",
                        "description": "Configure IFS filesystem file where VTP configuration is stored.\n"
                    },
                    "interface": {
                        "type": "string",
                        "description": "The name of the interface providing the VTP updater ID for this device\n"
                    },
                    "interfaceOnly": {
                        "type": "boolean",
                        "description": "Use only this interface's IP address as the VTP IP updater address\n"
                    },
                    "modeClientMst": {
                        "type": "boolean",
                        "description": "Set the mode for MST VTP instance\n"
                    },
                    "modeClientUnknown": {
                        "type": "boolean",
                        "description": "Set the mode for unknown VTP instances\n"
                    },
                    "modeClientVlan": {
                        "type": "boolean",
                        "description": "Set the mode for VLAN VTP instance\n"
                    },
                    "modeOffMst": {
                        "type": "boolean",
                        "description": "Set the mode for MST VTP instance\n"
                    },
                    "modeOffUnknown": {
                        "type": "boolean",
                        "description": "Set the mode for unknown VTP instances\n"
                    },
                    "modeOffVlan": {
                        "type": "boolean",
                        "description": "Set the mode for VLAN VTP instance\n"
                    },
                    "modeServerMst": {
                        "type": "boolean",
                        "description": "Set the mode for MST VTP instance\n"
                    },
                    "modeServerUnknown": {
                        "type": "boolean",
                        "description": "Set the mode for unknown VTP instances\n"
                    },
                    "modeServerVlan": {
                        "type": "boolean",
                        "description": "Set the mode for VLAN VTP instance\n"
                    },
                    "modeTransparentMst": {
                        "type": "boolean",
                        "description": "Set the mode for MST VTP instance\n"
                    },
                    "modeTransparentUnknown": {
                        "type": "boolean",
                        "description": "Set the mode for unknown VTP instances\n"
                    },
                    "modeTransparentVlan": {
                        "type": "boolean",
                        "description": "Set the mode for VLAN VTP instance\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The ascii password for the VTP administrative domain\n"
                    },
                    "passwordHidden": {
                        "type": "boolean",
                        "description": "Set the VTP password hidden option\n"
                    },
                    "passwordSecret": {
                        "type": "boolean",
                        "description": "Specify the vtp password in encrypted form\n"
                    },
                    "pruning": {
                        "type": "boolean",
                        "description": "Set the administrative domain to permit pruning\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Set the administrative domain to VTP version - Range: `1`-`3`\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "iosxe:index/getAaa:getAaa": {
            "description": "This data source can read the AAA configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getAaa({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_aaa()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetAaa.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupAaa(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetAaaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getAaa();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getAaa\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAaa.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAaa.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "groupServerRadii": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getAaaGroupServerRadius:getAaaGroupServerRadius"
                        },
                        "description": "Radius server-group definition\n"
                    },
                    "groupServerTacacspluses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getAaaGroupServerTacacsplus:getAaaGroupServerTacacsplus"
                        },
                        "description": "Tacacs+ server-group definition\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "newModel": {
                        "type": "boolean",
                        "description": "Enable NEW access control commands and functions.(Disables OLD commands.)\n"
                    },
                    "serverRadiusDynamicAuthor": {
                        "type": "boolean",
                        "description": "Local server profile for RFC 3576 support\n"
                    },
                    "serverRadiusDynamicAuthorClients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getAaaServerRadiusDynamicAuthorClient:getAaaServerRadiusDynamicAuthorClient"
                        },
                        "description": "Specify a RADIUS client\n"
                    },
                    "sessionId": {
                        "type": "string",
                        "description": "AAA Session ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "groupServerRadii",
                    "groupServerTacacspluses",
                    "id",
                    "newModel",
                    "serverRadiusDynamicAuthor",
                    "serverRadiusDynamicAuthorClients",
                    "sessionId"
                ]
            }
        },
        "iosxe:index/getAaaAccounting:getAaaAccounting": {
            "description": "This data source can read the AAA Accounting configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getAaaAccounting({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_aaa_accounting()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetAaaAccounting.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupAaaAccounting(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetAaaAccountingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getAaaAccounting();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getAaaAccounting\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAaaAccounting.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAaaAccounting.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "execs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getAaaAccountingExec:getAaaAccountingExec"
                        },
                        "description": "For starting an exec (shell).\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "identityDefaultStartStopGroup1": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "identityDefaultStartStopGroup2": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "identityDefaultStartStopGroup3": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "identityDefaultStartStopGroup4": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getAaaAccountingNetwork:getAaaAccountingNetwork"
                        },
                        "description": "For network services. (PPP, SLIP, ARAP)\n"
                    },
                    "systemGuaranteeFirst": {
                        "type": "boolean",
                        "description": "Guarantee system accounting as first record.\n"
                    },
                    "updateNewinfoPeriodic": {
                        "type": "integer",
                        "description": "Periodic intervals to send accounting update records(in minutes)\n"
                    }
                },
                "type": "object",
                "required": [
                    "execs",
                    "id",
                    "identityDefaultStartStopGroup1",
                    "identityDefaultStartStopGroup2",
                    "identityDefaultStartStopGroup3",
                    "identityDefaultStartStopGroup4",
                    "networks",
                    "systemGuaranteeFirst",
                    "updateNewinfoPeriodic"
                ]
            }
        },
        "iosxe:index/getAaaAuthentication:getAaaAuthentication": {
            "description": "This data source can read the AAA Authentication configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getAaaAuthentication({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_aaa_authentication()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetAaaAuthentication.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupAaaAuthentication(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetAaaAuthenticationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getAaaAuthentication();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getAaaAuthentication\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAaaAuthentication.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAaaAuthentication.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dot1xDefaultA1Group": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "dot1xDefaultA1Local": {
                        "type": "boolean",
                        "description": "Use local username authentication\n"
                    },
                    "dot1xDefaultA2Group": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "dot1xDefaultA2Local": {
                        "type": "boolean",
                        "description": "Use local username authentication\n"
                    },
                    "dot1xDefaultA3Group": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "dot1xDefaultA3Local": {
                        "type": "boolean",
                        "description": "Use local username authentication\n"
                    },
                    "dot1xDefaultA4Group": {
                        "type": "string",
                        "description": "Use Server-group\n"
                    },
                    "dot1xDefaultA4Local": {
                        "type": "boolean",
                        "description": "Use local username authentication\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "logins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getAaaAuthenticationLogin:getAaaAuthenticationLogin"
                        },
                        "description": "Set authentication lists for logins.\n"
                    }
                },
                "type": "object",
                "required": [
                    "dot1xDefaultA1Group",
                    "dot1xDefaultA1Local",
                    "dot1xDefaultA2Group",
                    "dot1xDefaultA2Local",
                    "dot1xDefaultA3Group",
                    "dot1xDefaultA3Local",
                    "dot1xDefaultA4Group",
                    "dot1xDefaultA4Local",
                    "id",
                    "logins"
                ]
            }
        },
        "iosxe:index/getAaaAuthorization:getAaaAuthorization": {
            "description": "This data source can read the AAA Authorization configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getAaaAuthorization({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_aaa_authorization()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetAaaAuthorization.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupAaaAuthorization(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetAaaAuthorizationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getAaaAuthorization();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getAaaAuthorization\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAaaAuthorization.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAaaAuthorization.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "execs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getAaaAuthorizationExec:getAaaAuthorizationExec"
                        },
                        "description": "For starting an exec (shell).\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getAaaAuthorizationNetwork:getAaaAuthorizationNetwork"
                        },
                        "description": "For network services. (PPP, SLIP, ARAP)\n"
                    }
                },
                "type": "object",
                "required": [
                    "execs",
                    "id",
                    "networks"
                ]
            }
        },
        "iosxe:index/getAccessListExtended:getAccessListExtended": {
            "description": "This data source can read the Access List Extended configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getAccessListExtended({\n    name: \"EACL1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_access_list_extended(name=\"EACL1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetAccessListExtended.Invoke(new()\n    {\n        Name = \"EACL1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupAccessListExtended(ctx, \u0026iosxe.LookupAccessListExtendedArgs{\n\t\t\tName: \"EACL1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetAccessListExtendedArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getAccessListExtended(GetAccessListExtendedArgs.builder()\n            .name(\"EACL1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getAccessListExtended\n      Arguments:\n        name: EACL1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAccessListExtended.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccessListExtended.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getAccessListExtendedEntry:getAccessListExtendedEntry"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "entries",
                    "id",
                    "name"
                ]
            }
        },
        "iosxe:index/getAccessListStandard:getAccessListStandard": {
            "description": "This data source can read the Access List Standard configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getAccessListStandard({\n    name: \"SACL1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_access_list_standard(name=\"SACL1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetAccessListStandard.Invoke(new()\n    {\n        Name = \"SACL1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupAccessListStandard(ctx, \u0026iosxe.LookupAccessListStandardArgs{\n\t\t\tName: \"SACL1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetAccessListStandardArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getAccessListStandard(GetAccessListStandardArgs.builder()\n            .name(\"SACL1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getAccessListStandard\n      Arguments:\n        name: SACL1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAccessListStandard.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccessListStandard.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getAccessListStandardEntry:getAccessListStandardEntry"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "entries",
                    "id",
                    "name"
                ]
            }
        },
        "iosxe:index/getArp:getArp": {
            "description": "This data source can read the ARP configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getArp({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_arp()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetArp.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupArp(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetArpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getArp();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getArp\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getArp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getArp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "entryLearn": {
                        "type": "integer",
                        "description": "Maximum learn entry limit\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "incompleteEntries": {
                        "type": "integer",
                        "description": "Specify the number of IP addresses to resolve\n"
                    },
                    "inspectionFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getArpInspectionFilter:getArpInspectionFilter"
                        },
                        "description": "Specify ARP acl to be applied\n"
                    },
                    "inspectionLogBufferEntries": {
                        "type": "integer",
                        "description": "Number of entries for log buffer\n"
                    },
                    "inspectionLogBufferLogsEntries": {
                        "type": "integer",
                        "description": "Number of entries for log buffer\n"
                    },
                    "inspectionLogBufferLogsInterval": {
                        "type": "integer",
                        "description": "Interval for controlling logging rate\n"
                    },
                    "inspectionValidateAllowZeros": {
                        "type": "boolean",
                        "description": "Allow 0.0.0.0 sender IP address\n"
                    },
                    "inspectionValidateDstMac": {
                        "type": "boolean",
                        "description": "Validate destination MAC address\n"
                    },
                    "inspectionValidateIp": {
                        "type": "boolean",
                        "description": "Validate IP addresses\n"
                    },
                    "inspectionValidateSrcMac": {
                        "type": "boolean",
                        "description": "Validate source MAC address\n"
                    },
                    "inspectionVlan": {
                        "type": "string",
                        "description": "Enable/Disable ARP Inspection on vlans\n"
                    },
                    "proxyDisable": {
                        "type": "boolean",
                        "description": "Disable proxy ARP on all interfaces\n"
                    }
                },
                "type": "object",
                "required": [
                    "entryLearn",
                    "id",
                    "incompleteEntries",
                    "inspectionFilters",
                    "inspectionLogBufferEntries",
                    "inspectionLogBufferLogsEntries",
                    "inspectionLogBufferLogsInterval",
                    "inspectionValidateAllowZeros",
                    "inspectionValidateDstMac",
                    "inspectionValidateIp",
                    "inspectionValidateSrcMac",
                    "inspectionVlan",
                    "proxyDisable"
                ]
            }
        },
        "iosxe:index/getBanner:getBanner": {
            "description": "This data source can read the Banner configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getBanner({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_banner()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetBanner.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupBanner(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetBannerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getBanner();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getBanner\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBanner.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBanner.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "execBanner": {
                        "type": "string",
                        "description": "Banner message\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "loginBanner": {
                        "type": "string",
                        "description": "Banner message\n"
                    },
                    "motdBanner": {
                        "type": "string",
                        "description": "Banner message\n"
                    },
                    "promptTimeoutBanner": {
                        "type": "string",
                        "description": "Banner message\n"
                    }
                },
                "type": "object",
                "required": [
                    "execBanner",
                    "id",
                    "loginBanner",
                    "motdBanner",
                    "promptTimeoutBanner"
                ]
            }
        },
        "iosxe:index/getBfd:getBfd": {
            "description": "This data source can read the BFD configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getBfd({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_bfd()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetBfd.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupBfd(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetBfdArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getBfd();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getBfd\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBfd.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBfd.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipv4BothVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBfdIpv4BothVrf:getBfdIpv4BothVrf"
                        },
                        "description": "IPv4 Address Family with vrf\n"
                    },
                    "ipv4WithDstVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBfdIpv4WithDstVrf:getBfdIpv4WithDstVrf"
                        },
                        "description": "IPv4 Address Family with vrf\n"
                    },
                    "ipv4WithSrcVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBfdIpv4WithSrcVrf:getBfdIpv4WithSrcVrf"
                        },
                        "description": "IPv4 Address Family with vrf\n"
                    },
                    "ipv4WithoutVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBfdIpv4WithoutVrf:getBfdIpv4WithoutVrf"
                        },
                        "description": "IPv4 Address Family with vrf\n"
                    },
                    "ipv6WithBothVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBfdIpv6WithBothVrf:getBfdIpv6WithBothVrf"
                        },
                        "description": "IPv6 Address Family with vrf\n"
                    },
                    "ipv6WithDstVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBfdIpv6WithDstVrf:getBfdIpv6WithDstVrf"
                        },
                        "description": "IPv6 Address Family with vrf\n"
                    },
                    "ipv6WithSrcVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBfdIpv6WithSrcVrf:getBfdIpv6WithSrcVrf"
                        },
                        "description": "IPv6 Address Family with vrf\n"
                    },
                    "ipv6WithoutVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBfdIpv6WithoutVrf:getBfdIpv6WithoutVrf"
                        },
                        "description": "IPv6 Address Family with vrf\n"
                    },
                    "slowTimers": {
                        "type": "integer",
                        "description": "Value in ms to use for slow timers\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "ipv4BothVrfs",
                    "ipv4WithDstVrfs",
                    "ipv4WithSrcVrfs",
                    "ipv4WithoutVrfs",
                    "ipv6WithBothVrfs",
                    "ipv6WithDstVrfs",
                    "ipv6WithSrcVrfs",
                    "ipv6WithoutVrfs",
                    "slowTimers"
                ]
            }
        },
        "iosxe:index/getBfdTemplateMultiHop:getBfdTemplateMultiHop": {
            "description": "This data source can read the BFD Template Multi Hop configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getBfdTemplateMultiHop({\n    name: \"T11\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_bfd_template_multi_hop(name=\"T11\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetBfdTemplateMultiHop.Invoke(new()\n    {\n        Name = \"T11\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupBfdTemplateMultiHop(ctx, \u0026iosxe.LookupBfdTemplateMultiHopArgs{\n\t\t\tName: \"T11\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetBfdTemplateMultiHopArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getBfdTemplateMultiHop(GetBfdTemplateMultiHopArgs.builder()\n            .name(\"T11\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getBfdTemplateMultiHop\n      Arguments:\n        name: T11\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBfdTemplateMultiHop.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBfdTemplateMultiHop.\n",
                "properties": {
                    "authenticationMd5Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationMeticulousMd5Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationMeticulousSha1keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationSha1Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "dampeningDownMonitoring": {
                        "type": "boolean",
                        "description": "down monitoring\n"
                    },
                    "dampeningHalfTime": {
                        "type": "integer",
                        "description": "Half-life time for the penalty\n"
                    },
                    "dampeningMaxSuppressingTime": {
                        "type": "integer",
                        "description": "Maximum duration to suppress a session\n"
                    },
                    "dampeningSuppressTime": {
                        "type": "integer",
                        "description": "Value to start suppressing a session\n"
                    },
                    "dampeningThreshold": {
                        "type": "integer",
                        "description": "Stability threshold to enter dampening in down dampened state(seconds)\n"
                    },
                    "dampeningUnsuppressTime": {
                        "type": "integer",
                        "description": "Value to unsuppress a session\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "echo": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "intervalMicroseconds": {
                        "type": "boolean",
                        "description": "Specify BFD timers in microseconds\n"
                    },
                    "intervalMicrosecondsBoth": {
                        "type": "integer",
                        "description": "Minimum transmit and receive interval capability\n"
                    },
                    "intervalMicrosecondsMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability\n"
                    },
                    "intervalMicrosecondsMinTx": {
                        "type": "integer",
                        "description": "Minimum transmit interval capability\n"
                    },
                    "intervalMicrosecondsMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown\n"
                    },
                    "intervalMillisecondsBoth": {
                        "type": "integer",
                        "description": "Minimum transmit and receive interval capability\n"
                    },
                    "intervalMillisecondsMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability\n"
                    },
                    "intervalMillisecondsMinTx": {
                        "type": "integer",
                        "description": "Minimum transmit interval capability\n"
                    },
                    "intervalMillisecondsMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "authenticationMd5Keychain",
                    "authenticationMeticulousMd5Keychain",
                    "authenticationMeticulousSha1keychain",
                    "authenticationSha1Keychain",
                    "dampeningDownMonitoring",
                    "dampeningHalfTime",
                    "dampeningMaxSuppressingTime",
                    "dampeningSuppressTime",
                    "dampeningThreshold",
                    "dampeningUnsuppressTime",
                    "echo",
                    "id",
                    "intervalMicroseconds",
                    "intervalMicrosecondsBoth",
                    "intervalMicrosecondsMinRx",
                    "intervalMicrosecondsMinTx",
                    "intervalMicrosecondsMultiplier",
                    "intervalMillisecondsBoth",
                    "intervalMillisecondsMinRx",
                    "intervalMillisecondsMinTx",
                    "intervalMillisecondsMultiplier",
                    "name"
                ]
            }
        },
        "iosxe:index/getBfdTemplateSingleHop:getBfdTemplateSingleHop": {
            "description": "This data source can read the BFD Template Single Hop configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getBfdTemplateSingleHop({\n    name: \"SH-TEMPLATE-1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_bfd_template_single_hop(name=\"SH-TEMPLATE-1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetBfdTemplateSingleHop.Invoke(new()\n    {\n        Name = \"SH-TEMPLATE-1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupBfdTemplateSingleHop(ctx, \u0026iosxe.LookupBfdTemplateSingleHopArgs{\n\t\t\tName: \"SH-TEMPLATE-1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetBfdTemplateSingleHopArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getBfdTemplateSingleHop(GetBfdTemplateSingleHopArgs.builder()\n            .name(\"SH-TEMPLATE-1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getBfdTemplateSingleHop\n      Arguments:\n        name: SH-TEMPLATE-1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBfdTemplateSingleHop.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBfdTemplateSingleHop.\n",
                "properties": {
                    "authenticationMd5Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationMeticulousMd5Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationMeticulousSha1Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "authenticationSha1Keychain": {
                        "type": "string",
                        "description": "keychain name\n"
                    },
                    "dampeningHalfTime": {
                        "type": "integer",
                        "description": "Half-life time for the penalty\n"
                    },
                    "dampeningMaxSuppressingTime": {
                        "type": "integer",
                        "description": "Maximum duration to suppress a session\n"
                    },
                    "dampeningSuppressTime": {
                        "type": "integer",
                        "description": "Value to start suppressing a session\n"
                    },
                    "dampeningUnsuppressTime": {
                        "type": "integer",
                        "description": "Value to unsuppress a session\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "echo": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "intervalMicrosecondsMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability\n"
                    },
                    "intervalMicrosecondsMinTx": {
                        "type": "integer",
                        "description": "Minimum transmit interval capability\n"
                    },
                    "intervalMillisecondsBoth": {
                        "type": "integer",
                        "description": "Minimum transmit and receive interval capability\n"
                    },
                    "intervalMillisecondsMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability\n"
                    },
                    "intervalMillisecondsMinTx": {
                        "type": "integer",
                        "description": "Minimum transmit interval capability\n"
                    },
                    "intervalMillisecondsMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "authenticationMd5Keychain",
                    "authenticationMeticulousMd5Keychain",
                    "authenticationMeticulousSha1Keychain",
                    "authenticationSha1Keychain",
                    "dampeningHalfTime",
                    "dampeningMaxSuppressingTime",
                    "dampeningSuppressTime",
                    "dampeningUnsuppressTime",
                    "echo",
                    "id",
                    "intervalMicrosecondsMinRx",
                    "intervalMicrosecondsMinTx",
                    "intervalMillisecondsBoth",
                    "intervalMillisecondsMinRx",
                    "intervalMillisecondsMinTx",
                    "intervalMillisecondsMultiplier",
                    "name"
                ]
            }
        },
        "iosxe:index/getBgp:getBgp": {
            "description": "This data source can read the BGP configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getBgp({\n    asn: \"65000\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_bgp(asn=\"65000\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetBgp.Invoke(new()\n    {\n        Asn = \"65000\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupBgp(ctx, \u0026iosxe.LookupBgpArgs{\n\t\t\tAsn: \"65000\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetBgpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getBgp(GetBgpArgs.builder()\n            .asn(\"65000\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getBgp\n      Arguments:\n        asn: '65000'\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgp.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object",
                "required": [
                    "asn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgp.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "defaultIpv4Unicast": {
                        "type": "boolean",
                        "description": "Activate ipv4-unicast for a peer by default\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "logNeighborChanges": {
                        "type": "boolean",
                        "description": "Log neighbor up/down and reset reason\n"
                    },
                    "routerIdLoopback": {
                        "type": "integer",
                        "description": "Loopback interface\n"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "defaultIpv4Unicast",
                    "id",
                    "logNeighborChanges",
                    "routerIdLoopback"
                ]
            }
        },
        "iosxe:index/getBgpAddressFamilyIpv4:getBgpAddressFamilyIpv4": {
            "description": "This data source can read the BGP Address Family IPv4 configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getBgpAddressFamilyIpv4({\n    afName: \"unicast\",\n    asn: \"65000\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_bgp_address_family_ipv4(af_name=\"unicast\",\n    asn=\"65000\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetBgpAddressFamilyIpv4.Invoke(new()\n    {\n        AfName = \"unicast\",\n        Asn = \"65000\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupBgpAddressFamilyIpv4(ctx, \u0026iosxe.LookupBgpAddressFamilyIpv4Args{\n\t\t\tAfName: \"unicast\",\n\t\t\tAsn:    \"65000\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetBgpAddressFamilyIpv4Args;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getBgpAddressFamilyIpv4(GetBgpAddressFamilyIpv4Args.builder()\n            .afName(\"unicast\")\n            .asn(\"65000\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getBgpAddressFamilyIpv4\n      Arguments:\n        afName: unicast\n        asn: '65000'\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpAddressFamilyIpv4.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpAddressFamilyIpv4.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipv4UnicastNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBgpAddressFamilyIpv4Ipv4UnicastNetwork:getBgpAddressFamilyIpv4Ipv4UnicastNetwork"
                        },
                        "description": "Specify a network to announce via BGP\n"
                    },
                    "ipv4UnicastNetworksMasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBgpAddressFamilyIpv4Ipv4UnicastNetworksMask:getBgpAddressFamilyIpv4Ipv4UnicastNetworksMask"
                        },
                        "description": "Specify a network to announce via BGP\n"
                    },
                    "ipv4UnicastRedistributeConnected": {
                        "type": "boolean",
                        "description": "Connected\n"
                    },
                    "ipv4UnicastRedistributeStatic": {
                        "type": "boolean",
                        "description": "Static routes\n"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn",
                    "id",
                    "ipv4UnicastNetworks",
                    "ipv4UnicastNetworksMasks",
                    "ipv4UnicastRedistributeConnected",
                    "ipv4UnicastRedistributeStatic"
                ]
            }
        },
        "iosxe:index/getBgpAddressFamilyIpv4Vrf:getBgpAddressFamilyIpv4Vrf": {
            "description": "This data source can read the BGP Address Family IPv4 VRF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getBgpAddressFamilyIpv4Vrf({\n    afName: \"unicast\",\n    asn: \"65000\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_bgp_address_family_ipv4_vrf(af_name=\"unicast\",\n    asn=\"65000\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetBgpAddressFamilyIpv4Vrf.Invoke(new()\n    {\n        AfName = \"unicast\",\n        Asn = \"65000\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupBgpAddressFamilyIpv4Vrf(ctx, \u0026iosxe.LookupBgpAddressFamilyIpv4VrfArgs{\n\t\t\tAfName: \"unicast\",\n\t\t\tAsn:    \"65000\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetBgpAddressFamilyIpv4VrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getBgpAddressFamilyIpv4Vrf(GetBgpAddressFamilyIpv4VrfArgs.builder()\n            .afName(\"unicast\")\n            .asn(\"65000\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getBgpAddressFamilyIpv4Vrf\n      Arguments:\n        afName: unicast\n        asn: '65000'\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpAddressFamilyIpv4Vrf.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpAddressFamilyIpv4Vrf.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "vrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBgpAddressFamilyIpv4VrfVrf:getBgpAddressFamilyIpv4VrfVrf"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn",
                    "id",
                    "vrfs"
                ]
            }
        },
        "iosxe:index/getBgpAddressFamilyIpv6:getBgpAddressFamilyIpv6": {
            "description": "This data source can read the BGP Address Family IPv6 configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getBgpAddressFamilyIpv6({\n    afName: \"unicast\",\n    asn: \"65000\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_bgp_address_family_ipv6(af_name=\"unicast\",\n    asn=\"65000\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetBgpAddressFamilyIpv6.Invoke(new()\n    {\n        AfName = \"unicast\",\n        Asn = \"65000\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupBgpAddressFamilyIpv6(ctx, \u0026iosxe.LookupBgpAddressFamilyIpv6Args{\n\t\t\tAfName: \"unicast\",\n\t\t\tAsn:    \"65000\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetBgpAddressFamilyIpv6Args;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getBgpAddressFamilyIpv6(GetBgpAddressFamilyIpv6Args.builder()\n            .afName(\"unicast\")\n            .asn(\"65000\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getBgpAddressFamilyIpv6\n      Arguments:\n        afName: unicast\n        asn: '65000'\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpAddressFamilyIpv6.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpAddressFamilyIpv6.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipv6UnicastNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBgpAddressFamilyIpv6Ipv6UnicastNetwork:getBgpAddressFamilyIpv6Ipv6UnicastNetwork"
                        },
                        "description": "Specify a network to announce via BGP\n"
                    },
                    "ipv6UnicastRedistributeConnected": {
                        "type": "boolean",
                        "description": "Connected\n"
                    },
                    "ipv6UnicastRedistributeStatic": {
                        "type": "boolean",
                        "description": "Static routes\n"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn",
                    "id",
                    "ipv6UnicastNetworks",
                    "ipv6UnicastRedistributeConnected",
                    "ipv6UnicastRedistributeStatic"
                ]
            }
        },
        "iosxe:index/getBgpAddressFamilyIpv6Vrf:getBgpAddressFamilyIpv6Vrf": {
            "description": "This data source can read the BGP Address Family IPv6 VRF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getBgpAddressFamilyIpv6Vrf({\n    afName: \"unicast\",\n    asn: \"65000\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_bgp_address_family_ipv6_vrf(af_name=\"unicast\",\n    asn=\"65000\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetBgpAddressFamilyIpv6Vrf.Invoke(new()\n    {\n        AfName = \"unicast\",\n        Asn = \"65000\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupBgpAddressFamilyIpv6Vrf(ctx, \u0026iosxe.LookupBgpAddressFamilyIpv6VrfArgs{\n\t\t\tAfName: \"unicast\",\n\t\t\tAsn:    \"65000\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetBgpAddressFamilyIpv6VrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getBgpAddressFamilyIpv6Vrf(GetBgpAddressFamilyIpv6VrfArgs.builder()\n            .afName(\"unicast\")\n            .asn(\"65000\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getBgpAddressFamilyIpv6Vrf\n      Arguments:\n        afName: unicast\n        asn: '65000'\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpAddressFamilyIpv6Vrf.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpAddressFamilyIpv6Vrf.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "vrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBgpAddressFamilyIpv6VrfVrf:getBgpAddressFamilyIpv6VrfVrf"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn",
                    "id",
                    "vrfs"
                ]
            }
        },
        "iosxe:index/getBgpAddressFamilyL2vpn:getBgpAddressFamilyL2vpn": {
            "description": "This data source can read the BGP Address Family L2VPN configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getBgpAddressFamilyL2vpn({\n    afName: \"evpn\",\n    asn: \"65000\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_bgp_address_family_l2vpn(af_name=\"evpn\",\n    asn=\"65000\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetBgpAddressFamilyL2vpn.Invoke(new()\n    {\n        AfName = \"evpn\",\n        Asn = \"65000\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupBgpAddressFamilyL2vpn(ctx, \u0026iosxe.LookupBgpAddressFamilyL2vpnArgs{\n\t\t\tAfName: \"evpn\",\n\t\t\tAsn:    \"65000\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetBgpAddressFamilyL2vpnArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getBgpAddressFamilyL2vpn(GetBgpAddressFamilyL2vpnArgs.builder()\n            .afName(\"evpn\")\n            .asn(\"65000\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getBgpAddressFamilyL2vpn\n      Arguments:\n        afName: evpn\n        asn: '65000'\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpAddressFamilyL2vpn.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpAddressFamilyL2vpn.\n",
                "properties": {
                    "afName": {
                        "type": "string"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "afName",
                    "asn",
                    "id"
                ]
            }
        },
        "iosxe:index/getBgpIpv4UnicastNeighbor:getBgpIpv4UnicastNeighbor": {
            "description": "This data source can read the BGP IPv4 Unicast Neighbor configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getBgpIpv4UnicastNeighbor({\n    asn: \"65000\",\n    ip: \"3.3.3.3\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_bgp_ipv4_unicast_neighbor(asn=\"65000\",\n    ip=\"3.3.3.3\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetBgpIpv4UnicastNeighbor.Invoke(new()\n    {\n        Asn = \"65000\",\n        Ip = \"3.3.3.3\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupBgpIpv4UnicastNeighbor(ctx, \u0026iosxe.LookupBgpIpv4UnicastNeighborArgs{\n\t\t\tAsn: \"65000\",\n\t\t\tIp:  \"3.3.3.3\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetBgpIpv4UnicastNeighborArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getBgpIpv4UnicastNeighbor(GetBgpIpv4UnicastNeighborArgs.builder()\n            .asn(\"65000\")\n            .ip(\"3.3.3.3\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getBgpIpv4UnicastNeighbor\n      Arguments:\n        asn: '65000'\n        ip: 3.3.3.3\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpIpv4UnicastNeighbor.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ip": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "ip"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpIpv4UnicastNeighbor.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "Enable the address family for this neighbor\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "routeMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBgpIpv4UnicastNeighborRouteMap:getBgpIpv4UnicastNeighborRouteMap"
                        },
                        "description": "Apply route map to neighbor\n"
                    },
                    "routeReflectorClient": {
                        "type": "boolean",
                        "description": "Configure a neighbor as Route Reflector client\n"
                    },
                    "sendCommunity": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "activate",
                    "asn",
                    "id",
                    "ip",
                    "routeMaps",
                    "routeReflectorClient",
                    "sendCommunity"
                ]
            }
        },
        "iosxe:index/getBgpIpv4UnicastVrfNeighbor:getBgpIpv4UnicastVrfNeighbor": {
            "description": "This data source can read the BGP IPv4 Unicast VRF Neighbor configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getBgpIpv4UnicastVrfNeighbor({\n    asn: \"65000\",\n    ip: \"3.3.3.3\",\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_bgp_ipv4_unicast_vrf_neighbor(asn=\"65000\",\n    ip=\"3.3.3.3\",\n    vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetBgpIpv4UnicastVrfNeighbor.Invoke(new()\n    {\n        Asn = \"65000\",\n        Ip = \"3.3.3.3\",\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupBgpIpv4UnicastVrfNeighbor(ctx, \u0026iosxe.LookupBgpIpv4UnicastVrfNeighborArgs{\n\t\t\tAsn: \"65000\",\n\t\t\tIp:  \"3.3.3.3\",\n\t\t\tVrf: \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetBgpIpv4UnicastVrfNeighborArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getBgpIpv4UnicastVrfNeighbor(GetBgpIpv4UnicastVrfNeighborArgs.builder()\n            .asn(\"65000\")\n            .ip(\"3.3.3.3\")\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getBgpIpv4UnicastVrfNeighbor\n      Arguments:\n        asn: '65000'\n        ip: 3.3.3.3\n        vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpIpv4UnicastVrfNeighbor.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "ip",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpIpv4UnicastVrfNeighbor.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "Enable the address family for this neighbor\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Neighbor specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "disableConnectedCheck": {
                        "type": "boolean",
                        "description": "one-hop away EBGP peer using loopback address\n"
                    },
                    "ebgpMultihop": {
                        "type": "boolean",
                        "description": "Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.\n"
                    },
                    "ebgpMultihopMaxHop": {
                        "type": "integer"
                    },
                    "fallOverBfdCheckControlPlaneFailure": {
                        "type": "boolean",
                        "description": "Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation\n"
                    },
                    "fallOverBfdMultiHop": {
                        "type": "boolean",
                        "description": "Force BFD multi-hop to detect failure\n"
                    },
                    "fallOverBfdSingleHop": {
                        "type": "boolean",
                        "description": "Force BFD single-hop to detect failure\n"
                    },
                    "fallOverBfdStrictMode": {
                        "type": "boolean",
                        "description": "Enable BFD strict-mode\n"
                    },
                    "fallOverDefaultRouteMap": {
                        "type": "string"
                    },
                    "fallOverMaximumMetricRouteMap": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "localAs": {
                        "type": "string"
                    },
                    "localAsDualAs": {
                        "type": "boolean",
                        "description": "Accept either real AS or local AS from the ebgp peer\n"
                    },
                    "localAsNoPrepend": {
                        "type": "boolean",
                        "description": "Do not prepend local-as to updates from ebgp peers\n"
                    },
                    "localAsReplaceAs": {
                        "type": "boolean",
                        "description": "Replace real AS with local AS in the EBGP updates\n"
                    },
                    "logNeighborChangesDisable": {
                        "type": "boolean",
                        "description": "disable\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "passwordType": {
                        "type": "integer",
                        "description": "Encryption type (0 to disable encryption, 7 for proprietary)\n"
                    },
                    "remoteAs": {
                        "type": "string",
                        "description": "Specify a BGP peer-group remote-as\n"
                    },
                    "routeMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBgpIpv4UnicastVrfNeighborRouteMap:getBgpIpv4UnicastVrfNeighborRouteMap"
                        },
                        "description": "Apply route map to neighbor\n"
                    },
                    "routeReflectorClient": {
                        "type": "boolean",
                        "description": "Configure a neighbor as Route Reflector client\n"
                    },
                    "sendCommunity": {
                        "type": "string"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Administratively shut down this neighbor\n"
                    },
                    "timersHoldtime": {
                        "type": "integer"
                    },
                    "timersKeepaliveInterval": {
                        "type": "integer"
                    },
                    "timersMinimumNeighborHold": {
                        "type": "integer"
                    },
                    "ttlSecurityHops": {
                        "type": "integer",
                        "description": "IP hops\n"
                    },
                    "updateSourceLoopback": {
                        "type": "string",
                        "description": "Loopback interface\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Set the BGP version to match a neighbor\n"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "activate",
                    "asn",
                    "clusterId",
                    "description",
                    "disableConnectedCheck",
                    "ebgpMultihop",
                    "ebgpMultihopMaxHop",
                    "fallOverBfdCheckControlPlaneFailure",
                    "fallOverBfdMultiHop",
                    "fallOverBfdSingleHop",
                    "fallOverBfdStrictMode",
                    "fallOverDefaultRouteMap",
                    "fallOverMaximumMetricRouteMap",
                    "id",
                    "ip",
                    "localAs",
                    "localAsDualAs",
                    "localAsNoPrepend",
                    "localAsReplaceAs",
                    "logNeighborChangesDisable",
                    "password",
                    "passwordType",
                    "remoteAs",
                    "routeMaps",
                    "routeReflectorClient",
                    "sendCommunity",
                    "shutdown",
                    "timersHoldtime",
                    "timersKeepaliveInterval",
                    "timersMinimumNeighborHold",
                    "ttlSecurityHops",
                    "updateSourceLoopback",
                    "version",
                    "vrf"
                ]
            }
        },
        "iosxe:index/getBgpIpv6UnicastNeighbor:getBgpIpv6UnicastNeighbor": {
            "description": "This data source can read the BGP IPv6 Unicast Neighbor configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getBgpIpv6UnicastNeighbor({\n    asn: \"65000\",\n    ip: \"3.3.3.3\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_bgp_ipv6_unicast_neighbor(asn=\"65000\",\n    ip=\"3.3.3.3\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetBgpIpv6UnicastNeighbor.Invoke(new()\n    {\n        Asn = \"65000\",\n        Ip = \"3.3.3.3\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupBgpIpv6UnicastNeighbor(ctx, \u0026iosxe.LookupBgpIpv6UnicastNeighborArgs{\n\t\t\tAsn: \"65000\",\n\t\t\tIp:  \"3.3.3.3\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetBgpIpv6UnicastNeighborArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getBgpIpv6UnicastNeighbor(GetBgpIpv6UnicastNeighborArgs.builder()\n            .asn(\"65000\")\n            .ip(\"3.3.3.3\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getBgpIpv6UnicastNeighbor\n      Arguments:\n        asn: '65000'\n        ip: 3.3.3.3\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpIpv6UnicastNeighbor.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ip": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "ip"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpIpv6UnicastNeighbor.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "Enable the address family for this neighbor\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "routeMaps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getBgpIpv6UnicastNeighborRouteMap:getBgpIpv6UnicastNeighborRouteMap"
                        },
                        "description": "Apply route map to neighbor\n"
                    },
                    "routeReflectorClient": {
                        "type": "boolean",
                        "description": "Configure a neighbor as Route Reflector client\n"
                    },
                    "sendCommunity": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "activate",
                    "asn",
                    "id",
                    "ip",
                    "routeMaps",
                    "routeReflectorClient",
                    "sendCommunity"
                ]
            }
        },
        "iosxe:index/getBgpL2vpnEvpnNeighbor:getBgpL2vpnEvpnNeighbor": {
            "description": "This data source can read the BGP L2VPN EVPN Neighbor configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getBgpL2vpnEvpnNeighbor({\n    asn: \"65000\",\n    ip: \"3.3.3.3\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_bgp_l2vpn_evpn_neighbor(asn=\"65000\",\n    ip=\"3.3.3.3\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetBgpL2vpnEvpnNeighbor.Invoke(new()\n    {\n        Asn = \"65000\",\n        Ip = \"3.3.3.3\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupBgpL2vpnEvpnNeighbor(ctx, \u0026iosxe.LookupBgpL2vpnEvpnNeighborArgs{\n\t\t\tAsn: \"65000\",\n\t\t\tIp:  \"3.3.3.3\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetBgpL2vpnEvpnNeighborArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getBgpL2vpnEvpnNeighbor(GetBgpL2vpnEvpnNeighborArgs.builder()\n            .asn(\"65000\")\n            .ip(\"3.3.3.3\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getBgpL2vpnEvpnNeighbor\n      Arguments:\n        asn: '65000'\n        ip: 3.3.3.3\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpL2vpnEvpnNeighbor.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ip": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "ip"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpL2vpnEvpnNeighbor.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "Enable the address family for this neighbor\n"
                    },
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "routeReflectorClient": {
                        "type": "boolean",
                        "description": "Configure a neighbor as Route Reflector client\n"
                    },
                    "sendCommunity": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "activate",
                    "asn",
                    "id",
                    "ip",
                    "routeReflectorClient",
                    "sendCommunity"
                ]
            }
        },
        "iosxe:index/getBgpNeighbor:getBgpNeighbor": {
            "description": "This data source can read the BGP Neighbor configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getBgpNeighbor({\n    asn: \"65000\",\n    ip: \"3.3.3.3\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_bgp_neighbor(asn=\"65000\",\n    ip=\"3.3.3.3\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetBgpNeighbor.Invoke(new()\n    {\n        Asn = \"65000\",\n        Ip = \"3.3.3.3\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupBgpNeighbor(ctx, \u0026iosxe.LookupBgpNeighborArgs{\n\t\t\tAsn: \"65000\",\n\t\t\tIp:  \"3.3.3.3\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetBgpNeighborArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getBgpNeighbor(GetBgpNeighborArgs.builder()\n            .asn(\"65000\")\n            .ip(\"3.3.3.3\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getBgpNeighbor\n      Arguments:\n        asn: '65000'\n        ip: 3.3.3.3\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getBgpNeighbor.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ip": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "ip"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBgpNeighbor.\n",
                "properties": {
                    "asn": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Neighbor specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "disableConnectedCheck": {
                        "type": "boolean",
                        "description": "one-hop away EBGP peer using loopback address\n"
                    },
                    "ebgpMultihop": {
                        "type": "boolean",
                        "description": "Allow EBGP neighbors not on directly connected networks. For single-hop ebgp peers, delete ebgp-multihop directly.\n"
                    },
                    "ebgpMultihopMaxHop": {
                        "type": "integer"
                    },
                    "fallOverBfdCheckControlPlaneFailure": {
                        "type": "boolean",
                        "description": "Retrieve control plane dependent failure info from BFD for BGP GR/NSR operation\n"
                    },
                    "fallOverBfdMultiHop": {
                        "type": "boolean",
                        "description": "Force BFD multi-hop to detect failure\n"
                    },
                    "fallOverBfdSingleHop": {
                        "type": "boolean",
                        "description": "Force BFD single-hop to detect failure\n"
                    },
                    "fallOverBfdStrictMode": {
                        "type": "boolean",
                        "description": "Enable BFD strict-mode\n"
                    },
                    "fallOverDefaultEnable": {
                        "type": "boolean"
                    },
                    "fallOverDefaultRouteMap": {
                        "type": "string"
                    },
                    "fallOverMaximumMetricRouteMap": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "localAs": {
                        "type": "string"
                    },
                    "localAsDualAs": {
                        "type": "boolean",
                        "description": "Accept either real AS or local AS from the ebgp peer\n"
                    },
                    "localAsNoPrepend": {
                        "type": "boolean",
                        "description": "Do not prepend local-as to updates from ebgp peers\n"
                    },
                    "localAsReplaceAs": {
                        "type": "boolean",
                        "description": "Replace real AS with local AS in the EBGP updates\n"
                    },
                    "logNeighborChanges": {
                        "type": "boolean",
                        "description": "Log neighbor up/down and reset reason\n"
                    },
                    "password": {
                        "type": "string"
                    },
                    "passwordType": {
                        "type": "integer",
                        "description": "Encryption type (0 to disable encryption, 7 for proprietary)\n"
                    },
                    "remoteAs": {
                        "type": "string",
                        "description": "Specify a BGP peer-group remote-as\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Administratively shut down this neighbor\n"
                    },
                    "timersHoldtime": {
                        "type": "integer"
                    },
                    "timersKeepaliveInterval": {
                        "type": "integer"
                    },
                    "timersMinimumNeighborHold": {
                        "type": "integer"
                    },
                    "ttlSecurityHops": {
                        "type": "integer",
                        "description": "IP hops\n"
                    },
                    "updateSourceLoopback": {
                        "type": "string",
                        "description": "Loopback interface\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Set the BGP version to match a neighbor\n"
                    }
                },
                "type": "object",
                "required": [
                    "asn",
                    "clusterId",
                    "description",
                    "disableConnectedCheck",
                    "ebgpMultihop",
                    "ebgpMultihopMaxHop",
                    "fallOverBfdCheckControlPlaneFailure",
                    "fallOverBfdMultiHop",
                    "fallOverBfdSingleHop",
                    "fallOverBfdStrictMode",
                    "fallOverDefaultEnable",
                    "fallOverDefaultRouteMap",
                    "fallOverMaximumMetricRouteMap",
                    "id",
                    "ip",
                    "localAs",
                    "localAsDualAs",
                    "localAsNoPrepend",
                    "localAsReplaceAs",
                    "logNeighborChanges",
                    "password",
                    "passwordType",
                    "remoteAs",
                    "shutdown",
                    "timersHoldtime",
                    "timersKeepaliveInterval",
                    "timersMinimumNeighborHold",
                    "ttlSecurityHops",
                    "updateSourceLoopback",
                    "version"
                ]
            }
        },
        "iosxe:index/getCdp:getCdp": {
            "description": "This data source can read the CDP configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getCdp({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_cdp()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetCdp.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupCdp(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetCdpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getCdp();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getCdp\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCdp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCdp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "filterTlvList": {
                        "type": "string",
                        "description": "Apply tlv-list globally\n"
                    },
                    "holdtime": {
                        "type": "integer",
                        "description": "Specify the holdtime (in sec) to be sent in packets\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "run": {
                        "type": "boolean",
                        "description": "Enable CDP\n"
                    },
                    "timer": {
                        "type": "integer",
                        "description": "Specify the rate at which CDP packets are sent (in sec)\n"
                    },
                    "tlvLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getCdpTlvList:getCdpTlvList"
                        },
                        "description": "Configure tlv-list\n"
                    }
                },
                "type": "object",
                "required": [
                    "filterTlvList",
                    "holdtime",
                    "id",
                    "run",
                    "timer",
                    "tlvLists"
                ]
            }
        },
        "iosxe:index/getClassMap:getClassMap": {
            "description": "This data source can read the Class Map configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getClassMap({\n    name: \"CM1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_class_map(name=\"CM1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetClassMap.Invoke(new()\n    {\n        Name = \"CM1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupClassMap(ctx, \u0026iosxe.LookupClassMapArgs{\n\t\t\tName: \"CM1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetClassMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getClassMap(GetClassMapArgs.builder()\n            .name(\"CM1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getClassMap\n      Arguments:\n        name: CM1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getClassMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the class map\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getClassMap.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Class-Map description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "matchActivatedServiceTemplates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getClassMapMatchActivatedServiceTemplate:getClassMapMatchActivatedServiceTemplate"
                        },
                        "description": "match name of service template activated on session\n"
                    },
                    "matchAuthorizationStatusAuthorized": {
                        "type": "boolean",
                        "description": "authorized\n"
                    },
                    "matchAuthorizationStatusUnauthorized": {
                        "type": "boolean",
                        "description": "unauthorized\n"
                    },
                    "matchAuthorizingMethodPriorityGreaterThans": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "greater than\n"
                    },
                    "matchMethodDot1x": {
                        "type": "boolean",
                        "description": "dot1x\n"
                    },
                    "matchMethodMab": {
                        "type": "boolean",
                        "description": "mab\n"
                    },
                    "matchResultTypeAaaTimeout": {
                        "type": "boolean",
                        "description": "aaa timeout type\n"
                    },
                    "matchResultTypeMethodDot1xAgentNotFound": {
                        "type": "boolean",
                        "description": "agent not found type\n"
                    },
                    "matchResultTypeMethodDot1xAuthoritative": {
                        "type": "boolean",
                        "description": "failure type\n"
                    },
                    "matchResultTypeMethodDot1xMethodTimeout": {
                        "type": "boolean",
                        "description": "method_timeout type\n"
                    },
                    "matchResultTypeMethodMabAuthoritative": {
                        "type": "boolean",
                        "description": "failure type\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the class map\n"
                    },
                    "prematch": {
                        "type": "string",
                        "description": "Logical-AND/Logical-OR of all matching statements under this class map\n"
                    },
                    "subscriber": {
                        "type": "boolean",
                        "description": "Domain name of the class map\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of the class-map\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "matchActivatedServiceTemplates",
                    "matchAuthorizationStatusAuthorized",
                    "matchAuthorizationStatusUnauthorized",
                    "matchAuthorizingMethodPriorityGreaterThans",
                    "matchMethodDot1x",
                    "matchMethodMab",
                    "matchResultTypeAaaTimeout",
                    "matchResultTypeMethodDot1xAgentNotFound",
                    "matchResultTypeMethodDot1xAuthoritative",
                    "matchResultTypeMethodDot1xMethodTimeout",
                    "matchResultTypeMethodMabAuthoritative",
                    "name",
                    "prematch",
                    "subscriber",
                    "type"
                ]
            }
        },
        "iosxe:index/getClock:getClock": {
            "description": "This data source can read the Clock configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getClock({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_clock()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetClock.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupClock(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetClockArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getClock();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getClock\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getClock.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getClock.\n",
                "properties": {
                    "calendarValid": {
                        "type": "boolean",
                        "description": "Calendar time is authoritative\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "summerTimeDate": {
                        "type": "boolean",
                        "description": "Configure absolute summer time\n"
                    },
                    "summerTimeDateEndDay": {
                        "type": "integer"
                    },
                    "summerTimeDateEndMonth": {
                        "type": "string"
                    },
                    "summerTimeDateEndTime": {
                        "type": "string"
                    },
                    "summerTimeDateEndYear": {
                        "type": "integer"
                    },
                    "summerTimeDateOffset": {
                        "type": "integer"
                    },
                    "summerTimeDateStartDay": {
                        "type": "integer"
                    },
                    "summerTimeDateStartMonth": {
                        "type": "string"
                    },
                    "summerTimeDateStartTime": {
                        "type": "string"
                    },
                    "summerTimeDateStartYear": {
                        "type": "integer"
                    },
                    "summerTimeRecurring": {
                        "type": "boolean",
                        "description": "Configure recurring summer time\n"
                    },
                    "summerTimeRecurringEndMonth": {
                        "type": "string"
                    },
                    "summerTimeRecurringEndTime": {
                        "type": "string"
                    },
                    "summerTimeRecurringEndWeek": {
                        "type": "string"
                    },
                    "summerTimeRecurringEndWeekday": {
                        "type": "string"
                    },
                    "summerTimeRecurringOffset": {
                        "type": "integer"
                    },
                    "summerTimeRecurringStartMonth": {
                        "type": "string"
                    },
                    "summerTimeRecurringStartTime": {
                        "type": "string"
                    },
                    "summerTimeRecurringStartWeek": {
                        "type": "string"
                    },
                    "summerTimeRecurringStartWeekday": {
                        "type": "string"
                    },
                    "summerTimeZone": {
                        "type": "string",
                        "description": "Name of time zone in summer\n"
                    }
                },
                "type": "object",
                "required": [
                    "calendarValid",
                    "id",
                    "summerTimeDate",
                    "summerTimeDateEndDay",
                    "summerTimeDateEndMonth",
                    "summerTimeDateEndTime",
                    "summerTimeDateEndYear",
                    "summerTimeDateOffset",
                    "summerTimeDateStartDay",
                    "summerTimeDateStartMonth",
                    "summerTimeDateStartTime",
                    "summerTimeDateStartYear",
                    "summerTimeRecurring",
                    "summerTimeRecurringEndMonth",
                    "summerTimeRecurringEndTime",
                    "summerTimeRecurringEndWeek",
                    "summerTimeRecurringEndWeekday",
                    "summerTimeRecurringOffset",
                    "summerTimeRecurringStartMonth",
                    "summerTimeRecurringStartTime",
                    "summerTimeRecurringStartWeek",
                    "summerTimeRecurringStartWeekday",
                    "summerTimeZone"
                ]
            }
        },
        "iosxe:index/getCryptoIkev2:getCryptoIkev2": {
            "description": "This data source can read the Crypto IKEv2 configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getCryptoIkev2({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_crypto_ikev2()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetCryptoIkev2.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupCryptoIkev2(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetCryptoIkev2Args;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getCryptoIkev2();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getCryptoIkev2\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCryptoIkev2.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCryptoIkev2.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dpd": {
                        "type": "integer",
                        "description": "Enable IKE liveness check for peers\n"
                    },
                    "dpdQuery": {
                        "type": "string"
                    },
                    "dpdRetryInterval": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "natKeepalive": {
                        "type": "integer",
                        "description": "Set NAT keepalive interval\n"
                    }
                },
                "type": "object",
                "required": [
                    "dpd",
                    "dpdQuery",
                    "dpdRetryInterval",
                    "id",
                    "natKeepalive"
                ]
            }
        },
        "iosxe:index/getCryptoIkev2Keyring:getCryptoIkev2Keyring": {
            "description": "This data source can read the Crypto IKEv2 Keyring configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getCryptoIkev2Keyring({\n    name: \"keyring1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_crypto_ikev2_keyring(name=\"keyring1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetCryptoIkev2Keyring.Invoke(new()\n    {\n        Name = \"keyring1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupCryptoIkev2Keyring(ctx, \u0026iosxe.LookupCryptoIkev2KeyringArgs{\n\t\t\tName: \"keyring1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetCryptoIkev2KeyringArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getCryptoIkev2Keyring(GetCryptoIkev2KeyringArgs.builder()\n            .name(\"keyring1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getCryptoIkev2Keyring\n      Arguments:\n        name: keyring1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCryptoIkev2Keyring.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCryptoIkev2Keyring.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getCryptoIkev2KeyringPeer:getCryptoIkev2KeyringPeer"
                        },
                        "description": "Configure a Peer and associated keys\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "peers"
                ]
            }
        },
        "iosxe:index/getCryptoIkev2Policy:getCryptoIkev2Policy": {
            "description": "This data source can read the Crypto IKEv2 Policy configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getCryptoIkev2Policy({\n    name: \"policy1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_crypto_ikev2_policy(name=\"policy1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetCryptoIkev2Policy.Invoke(new()\n    {\n        Name = \"policy1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupCryptoIkev2Policy(ctx, \u0026iosxe.LookupCryptoIkev2PolicyArgs{\n\t\t\tName: \"policy1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetCryptoIkev2PolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getCryptoIkev2Policy(GetCryptoIkev2PolicyArgs.builder()\n            .name(\"policy1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getCryptoIkev2Policy\n      Arguments:\n        name: policy1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCryptoIkev2Policy.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCryptoIkev2Policy.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "matchAddressLocalIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Local address\n"
                    },
                    "matchFvrf": {
                        "type": "string"
                    },
                    "matchFvrfAny": {
                        "type": "boolean",
                        "description": "Any fvrf\n"
                    },
                    "matchInboundOnly": {
                        "type": "boolean",
                        "description": "inbound only for controller\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "proposals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getCryptoIkev2PolicyProposal:getCryptoIkev2PolicyProposal"
                        },
                        "description": "Specify Proposal\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "matchAddressLocalIps",
                    "matchFvrf",
                    "matchFvrfAny",
                    "matchInboundOnly",
                    "name",
                    "proposals"
                ]
            }
        },
        "iosxe:index/getCryptoIkev2Profile:getCryptoIkev2Profile": {
            "description": "This data source can read the Crypto IKEv2 Profile configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getCryptoIkev2Profile({\n    name: \"profile1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_crypto_ikev2_profile(name=\"profile1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetCryptoIkev2Profile.Invoke(new()\n    {\n        Name = \"profile1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupCryptoIkev2Profile(ctx, \u0026iosxe.LookupCryptoIkev2ProfileArgs{\n\t\t\tName: \"profile1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetCryptoIkev2ProfileArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getCryptoIkev2Profile(GetCryptoIkev2ProfileArgs.builder()\n            .name(\"profile1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getCryptoIkev2Profile\n      Arguments:\n        name: profile1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCryptoIkev2Profile.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCryptoIkev2Profile.\n",
                "properties": {
                    "authenticationLocalPreShare": {
                        "type": "boolean",
                        "description": "Pre-Shared Key\n"
                    },
                    "authenticationRemotePreShare": {
                        "type": "boolean",
                        "description": "Pre-Shared Key\n"
                    },
                    "configExchangeRequest": {
                        "type": "boolean",
                        "description": "enable config-exchange request\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Specify a description of this profile\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dpdInterval": {
                        "type": "integer"
                    },
                    "dpdQuery": {
                        "type": "string"
                    },
                    "dpdRetry": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "identityLocalAddress": {
                        "type": "string",
                        "description": "address\n"
                    },
                    "identityLocalKeyId": {
                        "type": "string",
                        "description": "key-id opaque string - proprietary types of identification key-id string\n"
                    },
                    "keyringLocal": {
                        "type": "string",
                        "description": "Keyring name\n"
                    },
                    "matchAddressLocalIp": {
                        "type": "string"
                    },
                    "matchFvrf": {
                        "type": "string"
                    },
                    "matchFvrfAny": {
                        "type": "boolean",
                        "description": "Any fvrf\n"
                    },
                    "matchIdentityRemoteIpv4Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getCryptoIkev2ProfileMatchIdentityRemoteIpv4Address:getCryptoIkev2ProfileMatchIdentityRemoteIpv4Address"
                        }
                    },
                    "matchIdentityRemoteIpv6Prefixes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "matchIdentityRemoteKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "key-id opaque string\n"
                    },
                    "matchInboundOnly": {
                        "type": "boolean",
                        "description": "Match the profile for incoming connections only\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "authenticationLocalPreShare",
                    "authenticationRemotePreShare",
                    "configExchangeRequest",
                    "description",
                    "dpdInterval",
                    "dpdQuery",
                    "dpdRetry",
                    "id",
                    "identityLocalAddress",
                    "identityLocalKeyId",
                    "keyringLocal",
                    "matchAddressLocalIp",
                    "matchFvrf",
                    "matchFvrfAny",
                    "matchIdentityRemoteIpv4Addresses",
                    "matchIdentityRemoteIpv6Prefixes",
                    "matchIdentityRemoteKeys",
                    "matchInboundOnly",
                    "name"
                ]
            }
        },
        "iosxe:index/getCryptoIkev2Proposal:getCryptoIkev2Proposal": {
            "description": "This data source can read the Crypto IKEv2 Proposal configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getCryptoIkev2Proposal({\n    name: \"PROPOSAL1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_crypto_ikev2_proposal(name=\"PROPOSAL1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetCryptoIkev2Proposal.Invoke(new()\n    {\n        Name = \"PROPOSAL1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupCryptoIkev2Proposal(ctx, \u0026iosxe.LookupCryptoIkev2ProposalArgs{\n\t\t\tName: \"PROPOSAL1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetCryptoIkev2ProposalArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getCryptoIkev2Proposal(GetCryptoIkev2ProposalArgs.builder()\n            .name(\"PROPOSAL1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getCryptoIkev2Proposal\n      Arguments:\n        name: PROPOSAL1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCryptoIkev2Proposal.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCryptoIkev2Proposal.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encryptionAesCbc128": {
                        "type": "boolean",
                        "description": "AES-CBC-128\n"
                    },
                    "encryptionAesCbc192": {
                        "type": "boolean",
                        "description": "AES-CBC-192\n"
                    },
                    "encryptionAesCbc256": {
                        "type": "boolean",
                        "description": "AES-CBC-256\n"
                    },
                    "encryptionAesGcm128": {
                        "type": "boolean",
                        "description": "Combined-mode,128 bit key,16 byte ICV(Authentication Tag)\n"
                    },
                    "encryptionAesGcm256": {
                        "type": "boolean",
                        "description": "Combined-mode,256 bit key,16 byte ICV(Authentication Tag)\n"
                    },
                    "encryptionEn3des": {
                        "type": "boolean",
                        "description": "3DES\n"
                    },
                    "groupFifteen": {
                        "type": "boolean",
                        "description": "DH 3072 MODP\n"
                    },
                    "groupFourteen": {
                        "type": "boolean",
                        "description": "DH 2048 MODP\n"
                    },
                    "groupNineteen": {
                        "type": "boolean",
                        "description": "DH 256 ECP\n"
                    },
                    "groupOne": {
                        "type": "boolean",
                        "description": "DH 768 MODP\n"
                    },
                    "groupSixteen": {
                        "type": "boolean",
                        "description": "DH 4096 MODP\n"
                    },
                    "groupTwenty": {
                        "type": "boolean",
                        "description": "DH 384 ECP\n"
                    },
                    "groupTwentyFour": {
                        "type": "boolean",
                        "description": "DH 2048 (256 subgroup) MODP\n"
                    },
                    "groupTwentyOne": {
                        "type": "boolean",
                        "description": "DH 521 ECP\n"
                    },
                    "groupTwo": {
                        "type": "boolean",
                        "description": "DH 1024 MODP\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "integrityMd5": {
                        "type": "boolean",
                        "description": "Message Digest 5\n"
                    },
                    "integritySha1": {
                        "type": "boolean",
                        "description": "Secure Hash Standard\n"
                    },
                    "integritySha256": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (256 bit)\n"
                    },
                    "integritySha384": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (384 bit)\n"
                    },
                    "integritySha512": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (512 bit)\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "prfMd5": {
                        "type": "boolean",
                        "description": "Message Digest 5\n"
                    },
                    "prfSha1": {
                        "type": "boolean",
                        "description": "Secure Hash Standard\n"
                    },
                    "prfSha256": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (256 bit)\n"
                    },
                    "prfSha384": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (384 bit)\n"
                    },
                    "prfSha512": {
                        "type": "boolean",
                        "description": "Secure Hash Standard 2 (512 bit)\n"
                    }
                },
                "type": "object",
                "required": [
                    "encryptionAesCbc128",
                    "encryptionAesCbc192",
                    "encryptionAesCbc256",
                    "encryptionAesGcm128",
                    "encryptionAesGcm256",
                    "encryptionEn3des",
                    "groupFifteen",
                    "groupFourteen",
                    "groupNineteen",
                    "groupOne",
                    "groupSixteen",
                    "groupTwenty",
                    "groupTwentyFour",
                    "groupTwentyOne",
                    "groupTwo",
                    "id",
                    "integrityMd5",
                    "integritySha1",
                    "integritySha256",
                    "integritySha384",
                    "integritySha512",
                    "name",
                    "prfMd5",
                    "prfSha1",
                    "prfSha256",
                    "prfSha384",
                    "prfSha512"
                ]
            }
        },
        "iosxe:index/getCryptoIpsecProfile:getCryptoIpsecProfile": {
            "description": "This data source can read the Crypto IPSec Profile configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getCryptoIpsecProfile({\n    name: \"vpn200\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_crypto_ipsec_profile(name=\"vpn200\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetCryptoIpsecProfile.Invoke(new()\n    {\n        Name = \"vpn200\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupCryptoIpsecProfile(ctx, \u0026iosxe.LookupCryptoIpsecProfileArgs{\n\t\t\tName: \"vpn200\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetCryptoIpsecProfileArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getCryptoIpsecProfile(GetCryptoIpsecProfileArgs.builder()\n            .name(\"vpn200\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getCryptoIpsecProfile\n      Arguments:\n        name: vpn200\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCryptoIpsecProfile.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCryptoIpsecProfile.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "setIsakmpProfileIkev2ProfileIkev2ProfileCaseIkev2Profile": {
                        "type": "string",
                        "description": "Specify ikev2 Profile\n"
                    },
                    "setIsakmpProfileIkev2ProfileIsakmpProfileCaseIsakmpProfile": {
                        "type": "string",
                        "description": "Specify isakmp Profile\n"
                    },
                    "setTransformSets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specify list of transform sets in priority order\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "setIsakmpProfileIkev2ProfileIkev2ProfileCaseIkev2Profile",
                    "setIsakmpProfileIkev2ProfileIsakmpProfileCaseIsakmpProfile",
                    "setTransformSets"
                ]
            }
        },
        "iosxe:index/getCryptoIpsecTransformSet:getCryptoIpsecTransformSet": {
            "description": "This data source can read the Crypto IPSec Transform Set configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getCryptoIpsecTransformSet({\n    name: \"TEST\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_crypto_ipsec_transform_set(name=\"TEST\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetCryptoIpsecTransformSet.Invoke(new()\n    {\n        Name = \"TEST\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupCryptoIpsecTransformSet(ctx, \u0026iosxe.LookupCryptoIpsecTransformSetArgs{\n\t\t\tName: \"TEST\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetCryptoIpsecTransformSetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getCryptoIpsecTransformSet(GetCryptoIpsecTransformSetArgs.builder()\n            .name(\"TEST\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getCryptoIpsecTransformSet\n      Arguments:\n        name: TEST\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCryptoIpsecTransformSet.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCryptoIpsecTransformSet.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "esp": {
                        "type": "string"
                    },
                    "espHmac": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "modeTunnel": {
                        "type": "boolean",
                        "description": "tunnel (datagram encapsulation) mode\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "esp",
                    "espHmac",
                    "id",
                    "modeTunnel",
                    "name"
                ]
            }
        },
        "iosxe:index/getCts:getCts": {
            "description": "This data source can read the CTS configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getCts({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_cts()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetCts.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupCts(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetCtsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getCts();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getCts\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCts.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCts.\n",
                "properties": {
                    "authorizationList": {
                        "type": "string",
                        "description": "Local authorization list to use for CTS\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authorizationList",
                    "id"
                ]
            }
        },
        "iosxe:index/getDhcp:getDhcp": {
            "description": "This data source can read the DHCP configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getDhcp({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_dhcp()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetDhcp.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupDhcp(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetDhcpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getDhcp();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getDhcp\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDhcp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDhcp.\n",
                "properties": {
                    "compatibilitySuboptionLinkSelection": {
                        "type": "string"
                    },
                    "compatibilitySuboptionServerOverride": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "relayInformationOptionDefault": {
                        "type": "boolean",
                        "description": "Default option, no vpn\n"
                    },
                    "relayInformationOptionVpn": {
                        "type": "boolean",
                        "description": "Insert VPN sub-options and change the giaddr to the outgoing interface\n"
                    },
                    "relayInformationTrustAll": {
                        "type": "boolean",
                        "description": "Received DHCP packets may contain relay info option with zero giaddr\n"
                    },
                    "snooping": {
                        "type": "boolean",
                        "description": "DHCP Snooping\n"
                    },
                    "snoopingInformationOptionFormatRemoteIdHostname": {
                        "type": "boolean",
                        "description": "Use configured hostname for remote id\n"
                    },
                    "snoopingVlans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getDhcpSnoopingVlan:getDhcpSnoopingVlan"
                        },
                        "description": "DHCP Snooping vlan\n"
                    }
                },
                "type": "object",
                "required": [
                    "compatibilitySuboptionLinkSelection",
                    "compatibilitySuboptionServerOverride",
                    "id",
                    "relayInformationOptionDefault",
                    "relayInformationOptionVpn",
                    "relayInformationTrustAll",
                    "snooping",
                    "snoopingInformationOptionFormatRemoteIdHostname",
                    "snoopingVlans"
                ]
            }
        },
        "iosxe:index/getDot1x:getDot1x": {
            "description": "This data source can read the Dot1x configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getDot1x({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_dot1x()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetDot1x.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupDot1x(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetDot1xArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getDot1x();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getDot1x\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDot1x.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDot1x.\n",
                "properties": {
                    "authFailEapol": {
                        "type": "boolean",
                        "description": "Send EAPOL-Success on successful auth-fail Authorization\n"
                    },
                    "credentials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getDot1xCredential:getDot1xCredential"
                        },
                        "description": "Configure 802.1X credentials profiles\n"
                    },
                    "criticalEapolConfigBlock": {
                        "type": "boolean",
                        "description": "Block all EAPoL transaction on Critical Authentication\n"
                    },
                    "criticalRecoveryDelay": {
                        "type": "integer",
                        "description": "Set 802.1x Critical Authentication Recovery Delay period\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "loggingVerbose": {
                        "type": "boolean",
                        "description": "Show verbose messages in system logs\n"
                    },
                    "supplicantControlledTransient": {
                        "type": "boolean",
                        "description": "Controlled access is only applied during authentication\n"
                    },
                    "supplicantForceMulticast": {
                        "type": "boolean",
                        "description": "Force 802.1X supplicant to send multicast packets\n"
                    },
                    "systemAuthControl": {
                        "type": "boolean",
                        "description": "Enable or Disable SysAuthControl\n"
                    },
                    "testTimeout": {
                        "type": "integer",
                        "description": "Timeout for device EAPOL capabilities test in seconds\n"
                    }
                },
                "type": "object",
                "required": [
                    "authFailEapol",
                    "credentials",
                    "criticalEapolConfigBlock",
                    "criticalRecoveryDelay",
                    "id",
                    "loggingVerbose",
                    "supplicantControlledTransient",
                    "supplicantForceMulticast",
                    "systemAuthControl",
                    "testTimeout"
                ]
            }
        },
        "iosxe:index/getErrdisable:getErrdisable": {
            "description": "This data source can read the Errdisable configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getErrdisable({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_errdisable()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetErrdisable.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupErrdisable(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetErrdisableArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getErrdisable();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getErrdisable\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getErrdisable.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getErrdisable.\n",
                "properties": {
                    "detectCauseAll": {
                        "type": "boolean",
                        "description": "Enable error detection on all cases\n"
                    },
                    "detectCauseArpInspection": {
                        "type": "boolean",
                        "description": "Enable error detection for arp inspection\n"
                    },
                    "detectCauseBpduguard": {
                        "type": "boolean",
                        "description": "Enable error detection on bpdu-guard\n"
                    },
                    "detectCauseDhcpRateLimit": {
                        "type": "boolean",
                        "description": "Enable error detection on dhcp-rate-limit\n"
                    },
                    "detectCauseDtpFlap": {
                        "type": "boolean",
                        "description": "Enable error detection on dtp-flapping\n"
                    },
                    "detectCauseGbicInvalid": {
                        "type": "boolean",
                        "description": "Enable error detection on gbic-invalid\n"
                    },
                    "detectCauseInlinePower": {
                        "type": "boolean",
                        "description": "Enable error detection for inline-power\n"
                    },
                    "detectCauseL2ptguard": {
                        "type": "boolean",
                        "description": "Enable timer to recover from l2protocol-tunnel error disable state\n"
                    },
                    "detectCauseLinkFlap": {
                        "type": "boolean",
                        "description": "Enable error detection on linkstate-flapping\n"
                    },
                    "detectCauseLoopback": {
                        "type": "boolean",
                        "description": "Enable error detection on loopback\n"
                    },
                    "detectCauseLoopdetect": {
                        "type": "boolean",
                        "description": "Enable error detection on loop detect\n"
                    },
                    "detectCauseMlacpMinlink": {
                        "type": "boolean"
                    },
                    "detectCausePagpFlap": {
                        "type": "boolean",
                        "description": "Enable error detection on pagp-flapping\n"
                    },
                    "detectCausePppoeIaRateLimit": {
                        "type": "boolean",
                        "description": "Enable error detection on PPPoE IA rate-limit\n"
                    },
                    "detectCauseSecurityViolationShutdownVlan": {
                        "type": "boolean",
                        "description": "Shutdown vlan on 802.1x-guard violation\n"
                    },
                    "detectCauseSfpConfigMismatch": {
                        "type": "boolean",
                        "description": "Enable error detection on SFP config mismatch\n"
                    },
                    "detectCauseSmallFrame": {
                        "type": "boolean",
                        "description": "Enable error detection on small_frame\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "flapSettingCauseDtpFlapMaxFlaps": {
                        "type": "integer",
                        "description": "maximum flaps allowed before setting to errdisable\n"
                    },
                    "flapSettingCauseDtpFlapTime": {
                        "type": "integer",
                        "description": "time period the flaps are counted\n"
                    },
                    "flapSettingCauseLinkFlapMaxFlaps": {
                        "type": "integer",
                        "description": "maximum flaps allowed before setting to errdisable\n"
                    },
                    "flapSettingCauseLinkFlapTime": {
                        "type": "integer",
                        "description": "time period the flaps are counted\n"
                    },
                    "flapSettingCausePagpFlapMaxFlaps": {
                        "type": "integer",
                        "description": "maximum flaps allowed before setting to errdisable\n"
                    },
                    "flapSettingCausePagpFlapTime": {
                        "type": "integer",
                        "description": "time period the flaps are counted\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "recoveryCauseAll": {
                        "type": "boolean",
                        "description": "Enable timer to recover from all error causes\n"
                    },
                    "recoveryCauseArpInspection": {
                        "type": "boolean",
                        "description": "Enable timer to recover from arp inspection error disable state\n"
                    },
                    "recoveryCauseBpduguard": {
                        "type": "boolean",
                        "description": "Enable timer to recover from BPDU Guard error\n"
                    },
                    "recoveryCauseChannelMisconfig": {
                        "type": "boolean",
                        "description": "(STP)  Enable timer to recover from channel misconfiguration error\n"
                    },
                    "recoveryCauseDhcpRateLimit": {
                        "type": "boolean",
                        "description": "Enable timer to recover from dhcp-rate-limit error\n"
                    },
                    "recoveryCauseDtpFlap": {
                        "type": "boolean",
                        "description": "Enable timer to recover from dtp-flap error\n"
                    },
                    "recoveryCauseGbicInvalid": {
                        "type": "boolean",
                        "description": "Enable timer to recover from invalid GBIC error\n"
                    },
                    "recoveryCauseInlinePower": {
                        "type": "boolean",
                        "description": "Enable timer to recover from inline-power error\n"
                    },
                    "recoveryCauseL2ptguard": {
                        "type": "boolean",
                        "description": "Enable timer to recover from l2protocol-tunnel error disable state\n"
                    },
                    "recoveryCauseLinkFlap": {
                        "type": "boolean",
                        "description": "Enable timer to recover from link-flap error\n"
                    },
                    "recoveryCauseLinkMonitorFailure": {
                        "type": "boolean"
                    },
                    "recoveryCauseLoopback": {
                        "type": "boolean",
                        "description": "Enable timer to recover from loopback error\n"
                    },
                    "recoveryCauseLoopdetect": {
                        "type": "boolean",
                        "description": "Enable timer to recover from loop detect error\n"
                    },
                    "recoveryCauseMacLimit": {
                        "type": "boolean",
                        "description": "Enable timer to recover from mac limit disable state\n"
                    },
                    "recoveryCauseMlacpMinlink": {
                        "type": "boolean"
                    },
                    "recoveryCausePagpFlap": {
                        "type": "boolean",
                        "description": "Enable timer to recover from pagp-flap error\n"
                    },
                    "recoveryCausePortModeFailure": {
                        "type": "boolean",
                        "description": "Enable timer to recover from port mode change failure\n"
                    },
                    "recoveryCausePppoeIaRateLimit": {
                        "type": "boolean",
                        "description": "Enable timer to recover from PPPoE IA rate-limit error\n"
                    },
                    "recoveryCausePsecureViolation": {
                        "type": "boolean",
                        "description": "Enable timer to recover from psecure violation error\n"
                    },
                    "recoveryCausePsp": {
                        "type": "boolean"
                    },
                    "recoveryCauseSecurityViolation": {
                        "type": "boolean",
                        "description": "Enable timer to recover from 802.1x violation error\n"
                    },
                    "recoveryCauseSfpConfigMismatch": {
                        "type": "boolean",
                        "description": "Enable timer to recover from SFP config mismatch error\n"
                    },
                    "recoveryCauseSmallFrame": {
                        "type": "boolean",
                        "description": "Enable timer to recover from small frame error\n"
                    },
                    "recoveryCauseStormControl": {
                        "type": "boolean",
                        "description": "Enable timer to recover from storm-control error\n"
                    },
                    "recoveryCauseUdld": {
                        "type": "boolean",
                        "description": "Enable timer to recover from udld error\n"
                    },
                    "recoveryCauseUnicastFlood": {
                        "type": "boolean"
                    },
                    "recoveryCauseVmps": {
                        "type": "boolean",
                        "description": "Enable timer to recover from vmps shutdown error\n"
                    },
                    "recoveryInterval": {
                        "type": "integer",
                        "description": "Error disable recovery timer value\n"
                    }
                },
                "type": "object",
                "required": [
                    "detectCauseAll",
                    "detectCauseArpInspection",
                    "detectCauseBpduguard",
                    "detectCauseDhcpRateLimit",
                    "detectCauseDtpFlap",
                    "detectCauseGbicInvalid",
                    "detectCauseInlinePower",
                    "detectCauseL2ptguard",
                    "detectCauseLinkFlap",
                    "detectCauseLoopback",
                    "detectCauseLoopdetect",
                    "detectCauseMlacpMinlink",
                    "detectCausePagpFlap",
                    "detectCausePppoeIaRateLimit",
                    "detectCauseSecurityViolationShutdownVlan",
                    "detectCauseSfpConfigMismatch",
                    "detectCauseSmallFrame",
                    "flapSettingCauseDtpFlapMaxFlaps",
                    "flapSettingCauseDtpFlapTime",
                    "flapSettingCauseLinkFlapMaxFlaps",
                    "flapSettingCauseLinkFlapTime",
                    "flapSettingCausePagpFlapMaxFlaps",
                    "flapSettingCausePagpFlapTime",
                    "id",
                    "recoveryCauseAll",
                    "recoveryCauseArpInspection",
                    "recoveryCauseBpduguard",
                    "recoveryCauseChannelMisconfig",
                    "recoveryCauseDhcpRateLimit",
                    "recoveryCauseDtpFlap",
                    "recoveryCauseGbicInvalid",
                    "recoveryCauseInlinePower",
                    "recoveryCauseL2ptguard",
                    "recoveryCauseLinkFlap",
                    "recoveryCauseLinkMonitorFailure",
                    "recoveryCauseLoopback",
                    "recoveryCauseLoopdetect",
                    "recoveryCauseMacLimit",
                    "recoveryCauseMlacpMinlink",
                    "recoveryCausePagpFlap",
                    "recoveryCausePortModeFailure",
                    "recoveryCausePppoeIaRateLimit",
                    "recoveryCausePsecureViolation",
                    "recoveryCausePsp",
                    "recoveryCauseSecurityViolation",
                    "recoveryCauseSfpConfigMismatch",
                    "recoveryCauseSmallFrame",
                    "recoveryCauseStormControl",
                    "recoveryCauseUdld",
                    "recoveryCauseUnicastFlood",
                    "recoveryCauseVmps",
                    "recoveryInterval"
                ]
            }
        },
        "iosxe:index/getEvpn:getEvpn": {
            "description": "This data source can read the EVPN configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getEvpn({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_evpn()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetEvpn.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupEvpn(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetEvpnArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getEvpn();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getEvpn\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getEvpn.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEvpn.\n",
                "properties": {
                    "defaultGatewayAdvertise": {
                        "type": "boolean",
                        "description": "Advertise Default Gateway MAC/IP routes\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipDuplicationLimit": {
                        "type": "integer",
                        "description": "Number of IP moves within specified time interval\n"
                    },
                    "ipDuplicationTime": {
                        "type": "integer",
                        "description": "IP duplication timer\n"
                    },
                    "loggingPeerState": {
                        "type": "boolean",
                        "description": "Peer state transition logging\n"
                    },
                    "macDuplicationLimit": {
                        "type": "integer",
                        "description": "Number of MAC moves within specified time interval\n"
                    },
                    "macDuplicationTime": {
                        "type": "integer",
                        "description": "MAC duplication timer\n"
                    },
                    "replicationTypeIngress": {
                        "type": "boolean",
                        "description": "Ingress replication\n"
                    },
                    "replicationTypeMp2mp": {
                        "type": "boolean",
                        "description": "mp2mp replication\n"
                    },
                    "replicationTypeP2mp": {
                        "type": "boolean",
                        "description": "p2mp replication\n"
                    },
                    "replicationTypeStatic": {
                        "type": "boolean",
                        "description": "Static replication\n"
                    },
                    "routeTargetAutoVni": {
                        "type": "boolean",
                        "description": "Set vni-based route-target\n"
                    },
                    "routerIdLoopback": {
                        "type": "integer",
                        "description": "Loopback interface\n"
                    }
                },
                "type": "object",
                "required": [
                    "defaultGatewayAdvertise",
                    "id",
                    "ipDuplicationLimit",
                    "ipDuplicationTime",
                    "loggingPeerState",
                    "macDuplicationLimit",
                    "macDuplicationTime",
                    "replicationTypeIngress",
                    "replicationTypeMp2mp",
                    "replicationTypeP2mp",
                    "replicationTypeStatic",
                    "routeTargetAutoVni",
                    "routerIdLoopback"
                ]
            }
        },
        "iosxe:index/getEvpnInstance:getEvpnInstance": {
            "description": "This data source can read the EVPN Instance configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getEvpnInstance({\n    evpnInstanceNum: 10,\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_evpn_instance(evpn_instance_num=10)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetEvpnInstance.Invoke(new()\n    {\n        EvpnInstanceNum = 10,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupEvpnInstance(ctx, \u0026iosxe.LookupEvpnInstanceArgs{\n\t\t\tEvpnInstanceNum: 10,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetEvpnInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getEvpnInstance(GetEvpnInstanceArgs.builder()\n            .evpnInstanceNum(10)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getEvpnInstance\n      Arguments:\n        evpnInstanceNum: 10\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getEvpnInstance.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "evpnInstanceNum": {
                        "type": "integer",
                        "description": "evpn instance number\n"
                    }
                },
                "type": "object",
                "required": [
                    "evpnInstanceNum"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEvpnInstance.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "evpnInstanceNum": {
                        "type": "integer",
                        "description": "evpn instance number\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "vlanBasedAutoRouteTarget": {
                        "type": "boolean",
                        "description": "Automatically set a route-target\n"
                    },
                    "vlanBasedDefaultGatewayAdvertise": {
                        "type": "string",
                        "description": "Advertise Default Gateway MAC/IP routes\n"
                    },
                    "vlanBasedEncapsulation": {
                        "type": "string",
                        "description": "Data encapsulation method\n"
                    },
                    "vlanBasedIpLocalLearningDisable": {
                        "type": "boolean",
                        "description": "Disable IP local learning from dataplane\n"
                    },
                    "vlanBasedIpLocalLearningEnable": {
                        "type": "boolean",
                        "description": "Enable IP local learning from dataplane\n"
                    },
                    "vlanBasedRd": {
                        "type": "string",
                        "description": "ASN:nn or IP-address:nn\n"
                    },
                    "vlanBasedReOriginateRouteType5": {
                        "type": "boolean",
                        "description": "Re-originate route-type 5\n"
                    },
                    "vlanBasedReplicationTypeIngress": {
                        "type": "boolean",
                        "description": "Ingress replication\n"
                    },
                    "vlanBasedReplicationTypeMp2mp": {
                        "type": "boolean",
                        "description": "mp2mp replication\n"
                    },
                    "vlanBasedReplicationTypeP2mp": {
                        "type": "boolean",
                        "description": "p2mp replication\n"
                    },
                    "vlanBasedReplicationTypeStatic": {
                        "type": "boolean",
                        "description": "Static replication\n"
                    },
                    "vlanBasedRouteTarget": {
                        "type": "string",
                        "description": "ASN:nn or IP-address:nn\n"
                    },
                    "vlanBasedRouteTargetBoth": {
                        "type": "string",
                        "description": "ASN:nn or IP-address:nn\n"
                    },
                    "vlanBasedRouteTargetExport": {
                        "type": "string",
                        "description": "ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)\n"
                    },
                    "vlanBasedRouteTargetImport": {
                        "type": "string",
                        "description": "ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)\n"
                    }
                },
                "type": "object",
                "required": [
                    "evpnInstanceNum",
                    "id",
                    "vlanBasedAutoRouteTarget",
                    "vlanBasedDefaultGatewayAdvertise",
                    "vlanBasedEncapsulation",
                    "vlanBasedIpLocalLearningDisable",
                    "vlanBasedIpLocalLearningEnable",
                    "vlanBasedRd",
                    "vlanBasedReOriginateRouteType5",
                    "vlanBasedReplicationTypeIngress",
                    "vlanBasedReplicationTypeMp2mp",
                    "vlanBasedReplicationTypeP2mp",
                    "vlanBasedReplicationTypeStatic",
                    "vlanBasedRouteTarget",
                    "vlanBasedRouteTargetBoth",
                    "vlanBasedRouteTargetExport",
                    "vlanBasedRouteTargetImport"
                ]
            }
        },
        "iosxe:index/getInterfaceEthernet:getInterfaceEthernet": {
            "description": "This data source can read the Interface Ethernet configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getInterfaceEthernet({\n    name: \"3\",\n    type: \"GigabitEthernet\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_interface_ethernet(name=\"3\",\n    type=\"GigabitEthernet\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetInterfaceEthernet.Invoke(new()\n    {\n        Name = \"3\",\n        Type = \"GigabitEthernet\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupInterfaceEthernet(ctx, \u0026iosxe.LookupInterfaceEthernetArgs{\n\t\t\tName: \"3\",\n\t\t\tType: \"GigabitEthernet\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetInterfaceEthernetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getInterfaceEthernet(GetInterfaceEthernetArgs.builder()\n            .name(\"3\")\n            .type(\"GigabitEthernet\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getInterfaceEthernet\n      Arguments:\n        name: '3'\n        type: GigabitEthernet\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceEthernet.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceEthernet.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer",
                        "description": "Set ARP cache timeout\n"
                    },
                    "autoQosClassify": {
                        "type": "boolean",
                        "description": "Configure classification for untrusted devices\n"
                    },
                    "autoQosClassifyPolice": {
                        "type": "boolean",
                        "description": "Configure QoS policing for untrusted devices\n"
                    },
                    "autoQosTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "autoQosTrustCos": {
                        "type": "boolean",
                        "description": "Trust the CoS marking\n"
                    },
                    "autoQosTrustDscp": {
                        "type": "boolean",
                        "description": "Trust the DSCP marking\n"
                    },
                    "autoQosVideoCts": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                    },
                    "autoQosVideoIpCamera": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                    },
                    "autoQosVideoMediaPlayer": {
                        "type": "boolean",
                        "description": "Trust the Qos marking of the Cisco Media Player\n"
                    },
                    "autoQosVoip": {
                        "type": "boolean",
                        "description": "Configure AutoQoS for VoIP\n"
                    },
                    "autoQosVoipCiscoPhone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP Phone\n"
                    },
                    "autoQosVoipCiscoSoftphone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                    },
                    "autoQosVoipTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "bfdEcho": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "bfdEnable": {
                        "type": "boolean",
                        "description": "Enable BFD under the interface\n"
                    },
                    "bfdInterval": {
                        "type": "integer"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability\n"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown\n"
                    },
                    "bfdLocalAddress": {
                        "type": "string",
                        "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                    },
                    "bfdTemplate": {
                        "type": "string",
                        "description": "BFD template\n"
                    },
                    "channelGroupMode": {
                        "type": "string",
                        "description": "Etherchannel Mode of the interface\n"
                    },
                    "channelGroupNumber": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encapsulationDot1qVlanId": {
                        "type": "integer"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceEthernetHelperAddress:getInterfaceEthernetHelperAddress"
                        },
                        "description": "Specify a destination address for UDP broadcasts\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipArpInspectionLimitRate": {
                        "type": "integer",
                        "description": "Rate Limit\n"
                    },
                    "ipArpInspectionTrust": {
                        "type": "boolean",
                        "description": "Configure Trust state\n"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string",
                        "description": "Set source interface for relayed messages\n"
                    },
                    "ipDhcpSnoopingTrust": {
                        "type": "boolean",
                        "description": "DHCP Snooping trust config\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceEthernetIpv6Address:getInterfaceEthernetIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceEthernetIpv6LinkLocalAddress:getInterfaceEthernetIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "mediaType": {
                        "type": "string",
                        "description": "Media type\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "sourceTemplates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceEthernetSourceTemplate:getInterfaceEthernetSourceTemplate"
                        }
                    },
                    "spanningTreeGuard": {
                        "type": "string",
                        "description": "Change an interface's spanning tree guard mode\n"
                    },
                    "spanningTreeLinkType": {
                        "type": "string",
                        "description": "Specify a link type for spanning tree tree protocol use\n"
                    },
                    "spanningTreePortfastTrunk": {
                        "type": "boolean",
                        "description": "Enable portfast on the interface even in trunk mode\n"
                    },
                    "switchport": {
                        "type": "boolean"
                    },
                    "trustDevice": {
                        "type": "string",
                        "description": "trusted device class\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type\n"
                    },
                    "unnumbered": {
                        "type": "string",
                        "description": "Enable IP processing without an explicit address\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object",
                "required": [
                    "arpTimeout",
                    "autoQosClassify",
                    "autoQosClassifyPolice",
                    "autoQosTrust",
                    "autoQosTrustCos",
                    "autoQosTrustDscp",
                    "autoQosVideoCts",
                    "autoQosVideoIpCamera",
                    "autoQosVideoMediaPlayer",
                    "autoQosVoip",
                    "autoQosVoipCiscoPhone",
                    "autoQosVoipCiscoSoftphone",
                    "autoQosVoipTrust",
                    "bfdEcho",
                    "bfdEnable",
                    "bfdInterval",
                    "bfdIntervalMinRx",
                    "bfdIntervalMultiplier",
                    "bfdLocalAddress",
                    "bfdTemplate",
                    "channelGroupMode",
                    "channelGroupNumber",
                    "description",
                    "encapsulationDot1qVlanId",
                    "helperAddresses",
                    "id",
                    "ipAccessGroupIn",
                    "ipAccessGroupInEnable",
                    "ipAccessGroupOut",
                    "ipAccessGroupOutEnable",
                    "ipArpInspectionLimitRate",
                    "ipArpInspectionTrust",
                    "ipDhcpRelaySourceInterface",
                    "ipDhcpSnoopingTrust",
                    "ipProxyArp",
                    "ipRedirects",
                    "ipUnreachables",
                    "ipv4Address",
                    "ipv4AddressMask",
                    "ipv6AddressAutoconfigDefault",
                    "ipv6AddressDhcp",
                    "ipv6Addresses",
                    "ipv6Enable",
                    "ipv6LinkLocalAddresses",
                    "ipv6Mtu",
                    "ipv6NdRaSuppressAll",
                    "mediaType",
                    "name",
                    "shutdown",
                    "sourceTemplates",
                    "spanningTreeGuard",
                    "spanningTreeLinkType",
                    "spanningTreePortfastTrunk",
                    "switchport",
                    "trustDevice",
                    "type",
                    "unnumbered",
                    "vrfForwarding"
                ]
            }
        },
        "iosxe:index/getInterfaceLoopback:getInterfaceLoopback": {
            "description": "This data source can read the Interface Loopback configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getInterfaceLoopback({\n    name: 100,\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_interface_loopback(name=100)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetInterfaceLoopback.Invoke(new()\n    {\n        Name = 100,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupInterfaceLoopback(ctx, \u0026iosxe.LookupInterfaceLoopbackArgs{\n\t\t\tName: 100,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetInterfaceLoopbackArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getInterfaceLoopback(GetInterfaceLoopbackArgs.builder()\n            .name(100)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getInterfaceLoopback\n      Arguments:\n        name: 100\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceLoopback.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceLoopback.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer",
                        "description": "Set ARP cache timeout\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceLoopbackIpv6Address:getInterfaceLoopbackIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceLoopbackIpv6LinkLocalAddress:getInterfaceLoopbackIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "name": {
                        "type": "integer"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object",
                "required": [
                    "arpTimeout",
                    "description",
                    "id",
                    "ipAccessGroupIn",
                    "ipAccessGroupInEnable",
                    "ipAccessGroupOut",
                    "ipAccessGroupOutEnable",
                    "ipProxyArp",
                    "ipRedirects",
                    "ipUnreachables",
                    "ipv4Address",
                    "ipv4AddressMask",
                    "ipv6AddressAutoconfigDefault",
                    "ipv6AddressDhcp",
                    "ipv6Addresses",
                    "ipv6Enable",
                    "ipv6LinkLocalAddresses",
                    "ipv6Mtu",
                    "ipv6NdRaSuppressAll",
                    "name",
                    "shutdown",
                    "vrfForwarding"
                ]
            }
        },
        "iosxe:index/getInterfaceMpls:getInterfaceMpls": {
            "description": "This data source can read the Interface MPLS configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getInterfaceMpls({\n    name: \"1\",\n    type: \"Loopback\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_interface_mpls(name=\"1\",\n    type=\"Loopback\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetInterfaceMpls.Invoke(new()\n    {\n        Name = \"1\",\n        Type = \"Loopback\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupInterfaceMpls(ctx, \u0026iosxe.LookupInterfaceMplsArgs{\n\t\t\tName: \"1\",\n\t\t\tType: \"Loopback\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetInterfaceMplsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getInterfaceMpls(GetInterfaceMplsArgs.builder()\n            .name(\"1\")\n            .type(\"Loopback\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getInterfaceMpls\n      Arguments:\n        name: '1'\n        type: Loopback\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceMpls.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceMpls.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ip": {
                        "type": "boolean",
                        "description": "Configure dynamic MPLS forwarding for IP\n"
                    },
                    "mtu": {
                        "type": "string",
                        "description": "Set MPLS Maximum Transmission Unit\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "ip",
                    "mtu",
                    "name",
                    "type"
                ]
            }
        },
        "iosxe:index/getInterfaceNve:getInterfaceNve": {
            "description": "This data source can read the Interface NVE configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getInterfaceNve({\n    name: 1,\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_interface_nve(name=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetInterfaceNve.Invoke(new()\n    {\n        Name = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupInterfaceNve(ctx, \u0026iosxe.LookupInterfaceNveArgs{\n\t\t\tName: 1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetInterfaceNveArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getInterfaceNve(GetInterfaceNveArgs.builder()\n            .name(1)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getInterfaceNve\n      Arguments:\n        name: 1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceNve.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceNve.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "hostReachabilityProtocolBgp": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "name": {
                        "type": "integer"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "sourceInterfaceLoopback": {
                        "type": "integer",
                        "description": "Loopback interface\n"
                    },
                    "vniVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceNveVniVrf:getInterfaceNveVniVrf"
                        },
                        "description": "Configure VNI information\n"
                    },
                    "vnis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceNveVni:getInterfaceNveVni"
                        },
                        "description": "Configure VNI information\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "hostReachabilityProtocolBgp",
                    "id",
                    "name",
                    "shutdown",
                    "sourceInterfaceLoopback",
                    "vniVrfs",
                    "vnis"
                ]
            }
        },
        "iosxe:index/getInterfaceOspf:getInterfaceOspf": {
            "description": "This data source can read the Interface OSPF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getInterfaceOspf({\n    name: \"1\",\n    type: \"Loopback\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_interface_ospf(name=\"1\",\n    type=\"Loopback\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetInterfaceOspf.Invoke(new()\n    {\n        Name = \"1\",\n        Type = \"Loopback\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupInterfaceOspf(ctx, \u0026iosxe.LookupInterfaceOspfArgs{\n\t\t\tName: \"1\",\n\t\t\tType: \"Loopback\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetInterfaceOspfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getInterfaceOspf(GetInterfaceOspfArgs.builder()\n            .name(\"1\")\n            .type(\"Loopback\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getInterfaceOspf\n      Arguments:\n        name: '1'\n        type: Loopback\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceOspf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceOspf.\n",
                "properties": {
                    "cost": {
                        "type": "integer",
                        "description": "Route cost of this interface\n"
                    },
                    "deadInterval": {
                        "type": "integer",
                        "description": "Interval after which a neighbor is declared dead\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helloInterval": {
                        "type": "integer",
                        "description": "Time between HELLO packets\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "messageDigestKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceOspfMessageDigestKey:getInterfaceOspfMessageDigestKey"
                        },
                        "description": "Message digest authentication password (key)\n"
                    },
                    "mtuIgnore": {
                        "type": "boolean",
                        "description": "Ignores the MTU in DBD packets\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkTypeBroadcast": {
                        "type": "boolean",
                        "description": "Specify OSPF broadcast multi-access network\n"
                    },
                    "networkTypeNonBroadcast": {
                        "type": "boolean",
                        "description": "Specify OSPF NBMA network\n"
                    },
                    "networkTypePointToMultipoint": {
                        "type": "boolean",
                        "description": "Specify OSPF point-to-multipoint network\n"
                    },
                    "networkTypePointToPoint": {
                        "type": "boolean",
                        "description": "Specify OSPF point-to-point network\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Router priority\n"
                    },
                    "processIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceOspfProcessId:getInterfaceOspfProcessId"
                        }
                    },
                    "ttlSecurityHops": {
                        "type": "integer",
                        "description": "IP hops\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type\n"
                    }
                },
                "type": "object",
                "required": [
                    "cost",
                    "deadInterval",
                    "helloInterval",
                    "id",
                    "messageDigestKeys",
                    "mtuIgnore",
                    "name",
                    "networkTypeBroadcast",
                    "networkTypeNonBroadcast",
                    "networkTypePointToMultipoint",
                    "networkTypePointToPoint",
                    "priority",
                    "processIds",
                    "ttlSecurityHops",
                    "type"
                ]
            }
        },
        "iosxe:index/getInterfaceOspfv3:getInterfaceOspfv3": {
            "description": "This data source can read the Interface OSPFv3 configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getInterfaceOspfv3({\n    name: \"1\",\n    type: \"Loopback\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_interface_ospfv3(name=\"1\",\n    type=\"Loopback\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetInterfaceOspfv3.Invoke(new()\n    {\n        Name = \"1\",\n        Type = \"Loopback\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupInterfaceOspfv3(ctx, \u0026iosxe.LookupInterfaceOspfv3Args{\n\t\t\tName: \"1\",\n\t\t\tType: \"Loopback\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetInterfaceOspfv3Args;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getInterfaceOspfv3(GetInterfaceOspfv3Args.builder()\n            .name(\"1\")\n            .type(\"Loopback\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getInterfaceOspfv3\n      Arguments:\n        name: '1'\n        type: Loopback\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceOspfv3.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceOspfv3.\n",
                "properties": {
                    "cost": {
                        "type": "integer",
                        "description": "Static route cost value of the interface\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkTypeBroadcast": {
                        "type": "boolean",
                        "description": "Specify OSPF broadcast multi-access network\n"
                    },
                    "networkTypeNonBroadcast": {
                        "type": "boolean",
                        "description": "Specify OSPF NBMA network\n"
                    },
                    "networkTypePointToMultipoint": {
                        "type": "boolean",
                        "description": "Specify OSPF point-to-multipoint network\n"
                    },
                    "networkTypePointToPoint": {
                        "type": "boolean",
                        "description": "Specify OSPF point-to-point network\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type\n"
                    }
                },
                "type": "object",
                "required": [
                    "cost",
                    "id",
                    "name",
                    "networkTypeBroadcast",
                    "networkTypeNonBroadcast",
                    "networkTypePointToMultipoint",
                    "networkTypePointToPoint",
                    "type"
                ]
            }
        },
        "iosxe:index/getInterfacePim:getInterfacePim": {
            "description": "This data source can read the Interface PIM configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getInterfacePim({\n    name: \"100\",\n    type: \"Loopback\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_interface_pim(name=\"100\",\n    type=\"Loopback\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetInterfacePim.Invoke(new()\n    {\n        Name = \"100\",\n        Type = \"Loopback\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupInterfacePim(ctx, \u0026iosxe.LookupInterfacePimArgs{\n\t\t\tName: \"100\",\n\t\t\tType: \"Loopback\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetInterfacePimArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getInterfacePim(GetInterfacePimArgs.builder()\n            .name(\"100\")\n            .type(\"Loopback\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getInterfacePim\n      Arguments:\n        name: '100'\n        type: Loopback\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInterfacePim.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfacePim.\n",
                "properties": {
                    "bfd": {
                        "type": "boolean",
                        "description": "Configure BFD\n"
                    },
                    "border": {
                        "type": "boolean",
                        "description": "Border of PIM domain\n"
                    },
                    "bsrBorder": {
                        "type": "boolean",
                        "description": "Border of PIM domain\n"
                    },
                    "denseMode": {
                        "type": "boolean",
                        "description": "Enable PIM dense-mode operation\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "drPriority": {
                        "type": "integer",
                        "description": "PIM router DR priority\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "passive": {
                        "type": "boolean",
                        "description": "Enable PIM passive interface operation\n"
                    },
                    "sparseDenseMode": {
                        "type": "boolean",
                        "description": "Enable PIM sparse-dense-mode operation\n"
                    },
                    "sparseMode": {
                        "type": "boolean",
                        "description": "Enable PIM sparse-mode operation\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type\n"
                    }
                },
                "type": "object",
                "required": [
                    "bfd",
                    "border",
                    "bsrBorder",
                    "denseMode",
                    "drPriority",
                    "id",
                    "name",
                    "passive",
                    "sparseDenseMode",
                    "sparseMode",
                    "type"
                ]
            }
        },
        "iosxe:index/getInterfacePortChannel:getInterfacePortChannel": {
            "description": "This data source can read the Interface Port Channel configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getInterfacePortChannel({\n    name: 10,\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_interface_port_channel(name=10)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetInterfacePortChannel.Invoke(new()\n    {\n        Name = 10,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupInterfacePortChannel(ctx, \u0026iosxe.LookupInterfacePortChannelArgs{\n\t\t\tName: 10,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetInterfacePortChannelArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getInterfacePortChannel(GetInterfacePortChannelArgs.builder()\n            .name(10)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getInterfacePortChannel\n      Arguments:\n        name: 10\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInterfacePortChannel.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfacePortChannel.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer",
                        "description": "Set ARP cache timeout\n"
                    },
                    "autoQosClassify": {
                        "type": "boolean",
                        "description": "Configure classification for untrusted devices\n"
                    },
                    "autoQosClassifyPolice": {
                        "type": "boolean",
                        "description": "Configure QoS policing for untrusted devices\n"
                    },
                    "autoQosTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "autoQosTrustCos": {
                        "type": "boolean",
                        "description": "Trust the CoS marking\n"
                    },
                    "autoQosTrustDscp": {
                        "type": "boolean",
                        "description": "Trust the DSCP marking\n"
                    },
                    "autoQosVideoCts": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                    },
                    "autoQosVideoIpCamera": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                    },
                    "autoQosVideoMediaPlayer": {
                        "type": "boolean",
                        "description": "Trust the Qos marking of the Cisco Media Player\n"
                    },
                    "autoQosVoip": {
                        "type": "boolean",
                        "description": "Configure AutoQoS for VoIP\n"
                    },
                    "autoQosVoipCiscoPhone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP Phone\n"
                    },
                    "autoQosVoipCiscoSoftphone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                    },
                    "autoQosVoipTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "bfdEcho": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "bfdEnable": {
                        "type": "boolean",
                        "description": "Enable BFD under the interface\n"
                    },
                    "bfdInterval": {
                        "type": "integer"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability\n"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown\n"
                    },
                    "bfdLocalAddress": {
                        "type": "string",
                        "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                    },
                    "bfdTemplate": {
                        "type": "string",
                        "description": "BFD template\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfacePortChannelHelperAddress:getInterfacePortChannelHelperAddress"
                        },
                        "description": "Specify a destination address for UDP broadcasts\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipArpInspectionLimitRate": {
                        "type": "integer",
                        "description": "Rate Limit\n"
                    },
                    "ipArpInspectionTrust": {
                        "type": "boolean",
                        "description": "Configure Trust state\n"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string",
                        "description": "Set source interface for relayed messages\n"
                    },
                    "ipDhcpSnoopingTrust": {
                        "type": "boolean",
                        "description": "DHCP Snooping trust config\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfacePortChannelIpv6Address:getInterfacePortChannelIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfacePortChannelIpv6LinkLocalAddress:getInterfacePortChannelIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "name": {
                        "type": "integer"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "spanningTreeGuard": {
                        "type": "string",
                        "description": "Change an interface's spanning tree guard mode\n"
                    },
                    "spanningTreeLinkType": {
                        "type": "string",
                        "description": "Specify a link type for spanning tree tree protocol use\n"
                    },
                    "switchport": {
                        "type": "boolean"
                    },
                    "trustDevice": {
                        "type": "string",
                        "description": "trusted device class\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object",
                "required": [
                    "arpTimeout",
                    "autoQosClassify",
                    "autoQosClassifyPolice",
                    "autoQosTrust",
                    "autoQosTrustCos",
                    "autoQosTrustDscp",
                    "autoQosVideoCts",
                    "autoQosVideoIpCamera",
                    "autoQosVideoMediaPlayer",
                    "autoQosVoip",
                    "autoQosVoipCiscoPhone",
                    "autoQosVoipCiscoSoftphone",
                    "autoQosVoipTrust",
                    "bfdEcho",
                    "bfdEnable",
                    "bfdInterval",
                    "bfdIntervalMinRx",
                    "bfdIntervalMultiplier",
                    "bfdLocalAddress",
                    "bfdTemplate",
                    "description",
                    "helperAddresses",
                    "id",
                    "ipAccessGroupIn",
                    "ipAccessGroupInEnable",
                    "ipAccessGroupOut",
                    "ipAccessGroupOutEnable",
                    "ipArpInspectionLimitRate",
                    "ipArpInspectionTrust",
                    "ipDhcpRelaySourceInterface",
                    "ipDhcpSnoopingTrust",
                    "ipProxyArp",
                    "ipRedirects",
                    "ipUnreachables",
                    "ipv4Address",
                    "ipv4AddressMask",
                    "ipv6AddressAutoconfigDefault",
                    "ipv6AddressDhcp",
                    "ipv6Addresses",
                    "ipv6Enable",
                    "ipv6LinkLocalAddresses",
                    "ipv6Mtu",
                    "ipv6NdRaSuppressAll",
                    "name",
                    "shutdown",
                    "spanningTreeGuard",
                    "spanningTreeLinkType",
                    "switchport",
                    "trustDevice",
                    "vrfForwarding"
                ]
            }
        },
        "iosxe:index/getInterfacePortChannelSubinterface:getInterfacePortChannelSubinterface": {
            "description": "This data source can read the Interface Port Channel Subinterface configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getInterfacePortChannelSubinterface({\n    name: \"10.666\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_interface_port_channel_subinterface(name=\"10.666\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetInterfacePortChannelSubinterface.Invoke(new()\n    {\n        Name = \"10.666\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupInterfacePortChannelSubinterface(ctx, \u0026iosxe.LookupInterfacePortChannelSubinterfaceArgs{\n\t\t\tName: \"10.666\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetInterfacePortChannelSubinterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getInterfacePortChannelSubinterface(GetInterfacePortChannelSubinterfaceArgs.builder()\n            .name(\"10.666\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getInterfacePortChannelSubinterface\n      Arguments:\n        name: '10.666'\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInterfacePortChannelSubinterface.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfacePortChannelSubinterface.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer",
                        "description": "Set ARP cache timeout\n"
                    },
                    "autoQosClassify": {
                        "type": "boolean",
                        "description": "Configure classification for untrusted devices\n"
                    },
                    "autoQosClassifyPolice": {
                        "type": "boolean",
                        "description": "Configure QoS policing for untrusted devices\n"
                    },
                    "autoQosTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "autoQosTrustCos": {
                        "type": "boolean",
                        "description": "Trust the CoS marking\n"
                    },
                    "autoQosTrustDscp": {
                        "type": "boolean",
                        "description": "Trust the DSCP marking\n"
                    },
                    "autoQosVideoCts": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Cisco Telepresence System\n"
                    },
                    "autoQosVideoIpCamera": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of the Ip Video Surveillance camera\n"
                    },
                    "autoQosVideoMediaPlayer": {
                        "type": "boolean",
                        "description": "Trust the Qos marking of the Cisco Media Player\n"
                    },
                    "autoQosVoip": {
                        "type": "boolean",
                        "description": "Configure AutoQoS for VoIP\n"
                    },
                    "autoQosVoipCiscoPhone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP Phone\n"
                    },
                    "autoQosVoipCiscoSoftphone": {
                        "type": "boolean",
                        "description": "Trust the QoS marking of Cisco IP SoftPhone\n"
                    },
                    "autoQosVoipTrust": {
                        "type": "boolean",
                        "description": "Trust the DSCP/CoS marking\n"
                    },
                    "bfdEcho": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "bfdEnable": {
                        "type": "boolean",
                        "description": "Enable BFD under the interface\n"
                    },
                    "bfdInterval": {
                        "type": "integer"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability\n"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown\n"
                    },
                    "bfdLocalAddress": {
                        "type": "string",
                        "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                    },
                    "bfdTemplate": {
                        "type": "string",
                        "description": "BFD template\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encapsulationDot1qVlanId": {
                        "type": "integer"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfacePortChannelSubinterfaceHelperAddress:getInterfacePortChannelSubinterfaceHelperAddress"
                        },
                        "description": "Specify a destination address for UDP broadcasts\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipArpInspectionLimitRate": {
                        "type": "integer",
                        "description": "Rate Limit\n"
                    },
                    "ipArpInspectionTrust": {
                        "type": "boolean",
                        "description": "Configure Trust state\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfacePortChannelSubinterfaceIpv6Address:getInterfacePortChannelSubinterfaceIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfacePortChannelSubinterfaceIpv6LinkLocalAddress:getInterfacePortChannelSubinterfaceIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "trustDevice": {
                        "type": "string",
                        "description": "trusted device class\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object",
                "required": [
                    "arpTimeout",
                    "autoQosClassify",
                    "autoQosClassifyPolice",
                    "autoQosTrust",
                    "autoQosTrustCos",
                    "autoQosTrustDscp",
                    "autoQosVideoCts",
                    "autoQosVideoIpCamera",
                    "autoQosVideoMediaPlayer",
                    "autoQosVoip",
                    "autoQosVoipCiscoPhone",
                    "autoQosVoipCiscoSoftphone",
                    "autoQosVoipTrust",
                    "bfdEcho",
                    "bfdEnable",
                    "bfdInterval",
                    "bfdIntervalMinRx",
                    "bfdIntervalMultiplier",
                    "bfdLocalAddress",
                    "bfdTemplate",
                    "description",
                    "encapsulationDot1qVlanId",
                    "helperAddresses",
                    "id",
                    "ipAccessGroupIn",
                    "ipAccessGroupInEnable",
                    "ipAccessGroupOut",
                    "ipAccessGroupOutEnable",
                    "ipArpInspectionLimitRate",
                    "ipArpInspectionTrust",
                    "ipProxyArp",
                    "ipRedirects",
                    "ipUnreachables",
                    "ipv4Address",
                    "ipv4AddressMask",
                    "ipv6AddressAutoconfigDefault",
                    "ipv6AddressDhcp",
                    "ipv6Addresses",
                    "ipv6Enable",
                    "ipv6LinkLocalAddresses",
                    "ipv6Mtu",
                    "ipv6NdRaSuppressAll",
                    "name",
                    "shutdown",
                    "trustDevice",
                    "vrfForwarding"
                ]
            }
        },
        "iosxe:index/getInterfaceSwitchport:getInterfaceSwitchport": {
            "description": "This data source can read the Interface Switchport configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getInterfaceSwitchport({\n    name: \"1/0/3\",\n    type: \"GigabitEthernet\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_interface_switchport(name=\"1/0/3\",\n    type=\"GigabitEthernet\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetInterfaceSwitchport.Invoke(new()\n    {\n        Name = \"1/0/3\",\n        Type = \"GigabitEthernet\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupInterfaceSwitchport(ctx, \u0026iosxe.LookupInterfaceSwitchportArgs{\n\t\t\tName: \"1/0/3\",\n\t\t\tType: \"GigabitEthernet\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetInterfaceSwitchportArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getInterfaceSwitchport(GetInterfaceSwitchportArgs.builder()\n            .name(\"1/0/3\")\n            .type(\"GigabitEthernet\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getInterfaceSwitchport\n      Arguments:\n        name: 1/0/3\n        type: GigabitEthernet\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceSwitchport.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceSwitchport.\n",
                "properties": {
                    "accessVlan": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "host": {
                        "type": "boolean",
                        "description": "Set port host\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "modeAccess": {
                        "type": "boolean",
                        "description": "Set trunking mode to ACCESS unconditionally\n"
                    },
                    "modeDot1qTunnel": {
                        "type": "boolean",
                        "description": "set trunking mode to TUNNEL unconditionally\n"
                    },
                    "modePrivateVlanHost": {
                        "type": "boolean",
                        "description": "Set the mode to private-vlan host\n"
                    },
                    "modePrivateVlanPromiscuous": {
                        "type": "boolean",
                        "description": "Set the mode to private-vlan promiscuous\n"
                    },
                    "modePrivateVlanTrunk": {
                        "type": "boolean",
                        "description": "Set the mode to private-vlan trunk\n"
                    },
                    "modeTrunk": {
                        "type": "boolean",
                        "description": "Set trunking mode to TRUNK unconditionally\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nonegotiate": {
                        "type": "boolean",
                        "description": "Device will not engage in negotiation protocol on this interface\n"
                    },
                    "trunkAllowedVlans": {
                        "type": "string"
                    },
                    "trunkAllowedVlansNone": {
                        "type": "boolean",
                        "description": "no VLANs\n"
                    },
                    "trunkNativeVlan": {
                        "type": "integer"
                    },
                    "trunkNativeVlanTag": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interface type\n"
                    }
                },
                "type": "object",
                "required": [
                    "accessVlan",
                    "host",
                    "id",
                    "modeAccess",
                    "modeDot1qTunnel",
                    "modePrivateVlanHost",
                    "modePrivateVlanPromiscuous",
                    "modePrivateVlanTrunk",
                    "modeTrunk",
                    "name",
                    "nonegotiate",
                    "trunkAllowedVlans",
                    "trunkAllowedVlansNone",
                    "trunkNativeVlan",
                    "trunkNativeVlanTag",
                    "type"
                ]
            }
        },
        "iosxe:index/getInterfaceTunnel:getInterfaceTunnel": {
            "description": "This data source can read the Interface Tunnel configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getInterfaceTunnel({\n    name: 90,\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_interface_tunnel(name=90)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetInterfaceTunnel.Invoke(new()\n    {\n        Name = 90,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupInterfaceTunnel(ctx, \u0026iosxe.LookupInterfaceTunnelArgs{\n\t\t\tName: 90,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetInterfaceTunnelArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getInterfaceTunnel(GetInterfaceTunnelArgs.builder()\n            .name(90)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getInterfaceTunnel\n      Arguments:\n        name: 90\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceTunnel.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceTunnel.\n",
                "properties": {
                    "arpTimeout": {
                        "type": "integer",
                        "description": "Set ARP cache timeout\n"
                    },
                    "bfdEcho": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "bfdEnable": {
                        "type": "boolean",
                        "description": "Enable BFD under the interface\n"
                    },
                    "bfdInterval": {
                        "type": "integer"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability\n"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown\n"
                    },
                    "bfdLocalAddress": {
                        "type": "string",
                        "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                    },
                    "bfdTemplate": {
                        "type": "string",
                        "description": "BFD template\n"
                    },
                    "cryptoIpsecDfBit": {
                        "type": "string",
                        "description": "Handling of encapsulated DF bit.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceTunnelHelperAddress:getInterfaceTunnelHelperAddress"
                        },
                        "description": "Specify a destination address for UDP broadcasts\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string",
                        "description": "Set source interface for relayed messages\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceTunnelIpv6Address:getInterfaceTunnelIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceTunnelIpv6LinkLocalAddress:getInterfaceTunnelIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "name": {
                        "type": "integer"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "tunnelDestinationIpv4": {
                        "type": "string",
                        "description": "ip address or host name\n"
                    },
                    "tunnelModeIpsecIpv4": {
                        "type": "boolean",
                        "description": "over IPv4\n"
                    },
                    "tunnelProtectionIpsecProfile": {
                        "type": "string",
                        "description": "Determine the ipsec policy profile to use.\n"
                    },
                    "tunnelSource": {
                        "type": "string",
                        "description": "source of tunnel packets\n"
                    },
                    "unnumbered": {
                        "type": "string",
                        "description": "Enable IP processing without an explicit address\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object",
                "required": [
                    "arpTimeout",
                    "bfdEcho",
                    "bfdEnable",
                    "bfdInterval",
                    "bfdIntervalMinRx",
                    "bfdIntervalMultiplier",
                    "bfdLocalAddress",
                    "bfdTemplate",
                    "cryptoIpsecDfBit",
                    "description",
                    "helperAddresses",
                    "id",
                    "ipAccessGroupIn",
                    "ipAccessGroupInEnable",
                    "ipAccessGroupOut",
                    "ipAccessGroupOutEnable",
                    "ipDhcpRelaySourceInterface",
                    "ipProxyArp",
                    "ipRedirects",
                    "ipUnreachables",
                    "ipv4Address",
                    "ipv4AddressMask",
                    "ipv6AddressAutoconfigDefault",
                    "ipv6AddressDhcp",
                    "ipv6Addresses",
                    "ipv6Enable",
                    "ipv6LinkLocalAddresses",
                    "ipv6Mtu",
                    "ipv6NdRaSuppressAll",
                    "name",
                    "shutdown",
                    "tunnelDestinationIpv4",
                    "tunnelModeIpsecIpv4",
                    "tunnelProtectionIpsecProfile",
                    "tunnelSource",
                    "unnumbered",
                    "vrfForwarding"
                ]
            }
        },
        "iosxe:index/getInterfaceVlan:getInterfaceVlan": {
            "description": "This data source can read the Interface VLAN configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getInterfaceVlan({\n    name: 10,\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_interface_vlan(name=10)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetInterfaceVlan.Invoke(new()\n    {\n        Name = 10,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupInterfaceVlan(ctx, \u0026iosxe.LookupInterfaceVlanArgs{\n\t\t\tName: 10,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetInterfaceVlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getInterfaceVlan(GetInterfaceVlanArgs.builder()\n            .name(10)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getInterfaceVlan\n      Arguments:\n        name: 10\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInterfaceVlan.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInterfaceVlan.\n",
                "properties": {
                    "autostate": {
                        "type": "boolean",
                        "description": "Enable auto-state determination for VLAN\n"
                    },
                    "bfdEcho": {
                        "type": "boolean",
                        "description": "Use echo adjunct as bfd detection mechanism\n"
                    },
                    "bfdEnable": {
                        "type": "boolean",
                        "description": "Enable BFD under the interface\n"
                    },
                    "bfdInterval": {
                        "type": "integer"
                    },
                    "bfdIntervalMinRx": {
                        "type": "integer",
                        "description": "Minimum receive interval capability\n"
                    },
                    "bfdIntervalMultiplier": {
                        "type": "integer",
                        "description": "Multiplier value used to compute holddown\n"
                    },
                    "bfdLocalAddress": {
                        "type": "string",
                        "description": "The Source IP address to be used for BFD sessions over this interface.\n"
                    },
                    "bfdTemplate": {
                        "type": "string",
                        "description": "BFD template\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Interface specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "helperAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceVlanHelperAddress:getInterfaceVlanHelperAddress"
                        },
                        "description": "Specify a destination address for UDP broadcasts\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipAccessGroupIn": {
                        "type": "string"
                    },
                    "ipAccessGroupInEnable": {
                        "type": "boolean",
                        "description": "inbound packets\n"
                    },
                    "ipAccessGroupOut": {
                        "type": "string"
                    },
                    "ipAccessGroupOutEnable": {
                        "type": "boolean",
                        "description": "outbound packets\n"
                    },
                    "ipDhcpRelaySourceInterface": {
                        "type": "string",
                        "description": "Set source interface for relayed messages\n"
                    },
                    "ipProxyArp": {
                        "type": "boolean",
                        "description": "Enable proxy ARP\n"
                    },
                    "ipRedirects": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Redirect messages\n"
                    },
                    "ipUnreachables": {
                        "type": "boolean",
                        "description": "Enable sending ICMP Unreachable messages\n"
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4AddressMask": {
                        "type": "string"
                    },
                    "ipv6AddressAutoconfigDefault": {
                        "type": "boolean",
                        "description": "Insert default route\n"
                    },
                    "ipv6AddressDhcp": {
                        "type": "boolean",
                        "description": "Obtain IPv6 address from DHCP server\n"
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceVlanIpv6Address:getInterfaceVlanIpv6Address"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Enable IPv6 on interface\n"
                    },
                    "ipv6LinkLocalAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getInterfaceVlanIpv6LinkLocalAddress:getInterfaceVlanIpv6LinkLocalAddress"
                        }
                    },
                    "ipv6Mtu": {
                        "type": "integer",
                        "description": "Set IPv6 Maximum Transmission Unit\n"
                    },
                    "ipv6NdRaSuppressAll": {
                        "type": "boolean",
                        "description": "Suppress all IPv6 RA\n"
                    },
                    "name": {
                        "type": "integer"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the selected interface\n"
                    },
                    "unnumbered": {
                        "type": "string",
                        "description": "Enable IP processing without an explicit address\n"
                    },
                    "vrfForwarding": {
                        "type": "string",
                        "description": "Configure forwarding table\n"
                    }
                },
                "type": "object",
                "required": [
                    "autostate",
                    "bfdEcho",
                    "bfdEnable",
                    "bfdInterval",
                    "bfdIntervalMinRx",
                    "bfdIntervalMultiplier",
                    "bfdLocalAddress",
                    "bfdTemplate",
                    "description",
                    "helperAddresses",
                    "id",
                    "ipAccessGroupIn",
                    "ipAccessGroupInEnable",
                    "ipAccessGroupOut",
                    "ipAccessGroupOutEnable",
                    "ipDhcpRelaySourceInterface",
                    "ipProxyArp",
                    "ipRedirects",
                    "ipUnreachables",
                    "ipv4Address",
                    "ipv4AddressMask",
                    "ipv6AddressAutoconfigDefault",
                    "ipv6AddressDhcp",
                    "ipv6Addresses",
                    "ipv6Enable",
                    "ipv6LinkLocalAddresses",
                    "ipv6Mtu",
                    "ipv6NdRaSuppressAll",
                    "name",
                    "shutdown",
                    "unnumbered",
                    "vrfForwarding"
                ]
            }
        },
        "iosxe:index/getLine:getLine": {
            "description": "This data source can read the Line configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getLine({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_line()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetLine.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupLine(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetLineArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getLine();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getLine\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getLine.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLine.\n",
                "properties": {
                    "consoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLineConsole:getLineConsole"
                        },
                        "description": "Primary terminal line\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "vties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLineVty:getLineVty"
                        },
                        "description": "Virtual terminal\n"
                    }
                },
                "type": "object",
                "required": [
                    "consoles",
                    "id",
                    "vties"
                ]
            }
        },
        "iosxe:index/getLogging:getLogging": {
            "description": "This data source can read the Logging configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getLogging({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_logging()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetLogging.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupLogging(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetLoggingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getLogging();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getLogging\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getLogging.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLogging.\n",
                "properties": {
                    "bufferedSeverity": {
                        "type": "string",
                        "description": "Logging severity level\n"
                    },
                    "bufferedSize": {
                        "type": "integer",
                        "description": "Logging buffer size\n"
                    },
                    "consoleSeverity": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "facility": {
                        "type": "string",
                        "description": "Facility parameter for syslog messages\n"
                    },
                    "fileMaxSize": {
                        "type": "integer"
                    },
                    "fileMinSize": {
                        "type": "integer"
                    },
                    "fileName": {
                        "type": "string"
                    },
                    "fileSeverity": {
                        "type": "string"
                    },
                    "historySeverity": {
                        "type": "string"
                    },
                    "historySize": {
                        "type": "integer",
                        "description": "Set history table size\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipv4Hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv4Host:getLoggingIpv4Host"
                        }
                    },
                    "ipv4VrfHosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv4VrfHost:getLoggingIpv4VrfHost"
                        }
                    },
                    "ipv6Hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv6Host:getLoggingIpv6Host"
                        }
                    },
                    "ipv6VrfHosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv6VrfHost:getLoggingIpv6VrfHost"
                        }
                    },
                    "monitorSeverity": {
                        "type": "string"
                    },
                    "originIdName": {
                        "type": "string",
                        "description": "Define a unique text string as ID\n"
                    },
                    "originIdType": {
                        "type": "string",
                        "description": "Use origin hostname/ip/ipv6 as ID\n"
                    },
                    "sourceInterface": {
                        "type": "string"
                    },
                    "sourceInterfacesVrves": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingSourceInterfacesVrf:getLoggingSourceInterfacesVrf"
                        },
                        "description": "Specify interface and vrf for source address in logging transactions\n"
                    },
                    "trap": {
                        "type": "boolean",
                        "description": "Set trap server logging level\n"
                    },
                    "trapSeverity": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bufferedSeverity",
                    "bufferedSize",
                    "consoleSeverity",
                    "facility",
                    "fileMaxSize",
                    "fileMinSize",
                    "fileName",
                    "fileSeverity",
                    "historySeverity",
                    "historySize",
                    "id",
                    "ipv4Hosts",
                    "ipv4VrfHosts",
                    "ipv6Hosts",
                    "ipv6VrfHosts",
                    "monitorSeverity",
                    "originIdName",
                    "originIdType",
                    "sourceInterface",
                    "sourceInterfacesVrves",
                    "trap",
                    "trapSeverity"
                ]
            }
        },
        "iosxe:index/getLoggingIpv4HostTransport:getLoggingIpv4HostTransport": {
            "description": "This data source can read the Logging IPv4 Host Transport configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getLoggingIpv4HostTransport({\n    ipv4Host: \"2.2.2.2\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_logging_ipv4_host_transport(ipv4_host=\"2.2.2.2\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetLoggingIpv4HostTransport.Invoke(new()\n    {\n        Ipv4Host = \"2.2.2.2\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupLoggingIpv4HostTransport(ctx, \u0026iosxe.LookupLoggingIpv4HostTransportArgs{\n\t\t\tIpv4Host: \"2.2.2.2\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetLoggingIpv4HostTransportArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getLoggingIpv4HostTransport(GetLoggingIpv4HostTransportArgs.builder()\n            .ipv4Host(\"2.2.2.2\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getLoggingIpv4HostTransport\n      Arguments:\n        ipv4Host: 2.2.2.2\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getLoggingIpv4HostTransport.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv4Host": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "ipv4Host"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoggingIpv4HostTransport.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipv4Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv4HostTransportTransportTcpPort:getLoggingIpv4HostTransportTransportTcpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv4HostTransportTransportTlsPort:getLoggingIpv4HostTransportTransportTlsPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv4HostTransportTransportUdpPort:getLoggingIpv4HostTransportTransportUdpPort"
                        },
                        "description": "Port Number List\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "ipv4Host",
                    "transportTcpPorts",
                    "transportTlsPorts",
                    "transportUdpPorts"
                ]
            }
        },
        "iosxe:index/getLoggingIpv4HostVrfTransport:getLoggingIpv4HostVrfTransport": {
            "description": "This data source can read the Logging IPv4 Host VRF Transport configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getLoggingIpv4HostVrfTransport({\n    ipv4Host: \"2.2.2.2\",\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_logging_ipv4_host_vrf_transport(ipv4_host=\"2.2.2.2\",\n    vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetLoggingIpv4HostVrfTransport.Invoke(new()\n    {\n        Ipv4Host = \"2.2.2.2\",\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupLoggingIpv4HostVrfTransport(ctx, \u0026iosxe.LookupLoggingIpv4HostVrfTransportArgs{\n\t\t\tIpv4Host: \"2.2.2.2\",\n\t\t\tVrf:      \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetLoggingIpv4HostVrfTransportArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getLoggingIpv4HostVrfTransport(GetLoggingIpv4HostVrfTransportArgs.builder()\n            .ipv4Host(\"2.2.2.2\")\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getLoggingIpv4HostVrfTransport\n      Arguments:\n        ipv4Host: 2.2.2.2\n        vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getLoggingIpv4HostVrfTransport.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv4Host": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "Set VRF option\n"
                    }
                },
                "type": "object",
                "required": [
                    "ipv4Host",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoggingIpv4HostVrfTransport.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipv4Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv4HostVrfTransportTransportTcpPort:getLoggingIpv4HostVrfTransportTransportTcpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv4HostVrfTransportTransportTlsPort:getLoggingIpv4HostVrfTransportTransportTlsPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv4HostVrfTransportTransportUdpPort:getLoggingIpv4HostVrfTransportTransportUdpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "Set VRF option\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "ipv4Host",
                    "transportTcpPorts",
                    "transportTlsPorts",
                    "transportUdpPorts",
                    "vrf"
                ]
            }
        },
        "iosxe:index/getLoggingIpv6HostTransport:getLoggingIpv6HostTransport": {
            "description": "This data source can read the Logging IPv6 Host Transport configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getLoggingIpv6HostTransport({\n    ipv6Host: \"2001::1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_logging_ipv6_host_transport(ipv6_host=\"2001::1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetLoggingIpv6HostTransport.Invoke(new()\n    {\n        Ipv6Host = \"2001::1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupLoggingIpv6HostTransport(ctx, \u0026iosxe.LookupLoggingIpv6HostTransportArgs{\n\t\t\tIpv6Host: \"2001::1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetLoggingIpv6HostTransportArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getLoggingIpv6HostTransport(GetLoggingIpv6HostTransportArgs.builder()\n            .ipv6Host(\"2001::1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getLoggingIpv6HostTransport\n      Arguments:\n        ipv6Host: 2001::1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getLoggingIpv6HostTransport.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv6Host": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "ipv6Host"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoggingIpv6HostTransport.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipv6Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv6HostTransportTransportTcpPort:getLoggingIpv6HostTransportTransportTcpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv6HostTransportTransportTlsPort:getLoggingIpv6HostTransportTransportTlsPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv6HostTransportTransportUdpPort:getLoggingIpv6HostTransportTransportUdpPort"
                        },
                        "description": "Port Number List\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "ipv6Host",
                    "transportTcpPorts",
                    "transportTlsPorts",
                    "transportUdpPorts"
                ]
            }
        },
        "iosxe:index/getLoggingIpv6HostVrfTransport:getLoggingIpv6HostVrfTransport": {
            "description": "This data source can read the Logging IPv6 Host VRF Transport configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getLoggingIpv6HostVrfTransport({\n    ipv6Host: \"2001::1\",\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_logging_ipv6_host_vrf_transport(ipv6_host=\"2001::1\",\n    vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetLoggingIpv6HostVrfTransport.Invoke(new()\n    {\n        Ipv6Host = \"2001::1\",\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupLoggingIpv6HostVrfTransport(ctx, \u0026iosxe.LookupLoggingIpv6HostVrfTransportArgs{\n\t\t\tIpv6Host: \"2001::1\",\n\t\t\tVrf:      \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetLoggingIpv6HostVrfTransportArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getLoggingIpv6HostVrfTransport(GetLoggingIpv6HostVrfTransportArgs.builder()\n            .ipv6Host(\"2001::1\")\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getLoggingIpv6HostVrfTransport\n      Arguments:\n        ipv6Host: 2001::1\n        vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getLoggingIpv6HostVrfTransport.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "ipv6Host": {
                        "type": "string"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "Set VRF option\n"
                    }
                },
                "type": "object",
                "required": [
                    "ipv6Host",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoggingIpv6HostVrfTransport.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipv6Host": {
                        "type": "string"
                    },
                    "transportTcpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv6HostVrfTransportTransportTcpPort:getLoggingIpv6HostVrfTransportTransportTcpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportTlsPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv6HostVrfTransportTransportTlsPort:getLoggingIpv6HostVrfTransportTransportTlsPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "transportUdpPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getLoggingIpv6HostVrfTransportTransportUdpPort:getLoggingIpv6HostVrfTransportTransportUdpPort"
                        },
                        "description": "Port Number List\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "Set VRF option\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "ipv6Host",
                    "transportTcpPorts",
                    "transportTlsPorts",
                    "transportUdpPorts",
                    "vrf"
                ]
            }
        },
        "iosxe:index/getMdtSubscription:getMdtSubscription": {
            "description": "This data source can read the MDT Subscription configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getMdtSubscription({\n    subscriptionId: 101,\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_mdt_subscription(subscription_id=101)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetMdtSubscription.Invoke(new()\n    {\n        SubscriptionId = 101,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupMdtSubscription(ctx, \u0026iosxe.LookupMdtSubscriptionArgs{\n\t\t\tSubscriptionId: 101,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetMdtSubscriptionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getMdtSubscription(GetMdtSubscriptionArgs.builder()\n            .subscriptionId(101)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getMdtSubscription\n      Arguments:\n        subscriptionId: 101\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMdtSubscription.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "subscriptionId": {
                        "type": "integer",
                        "description": "Unique subscription identifier.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subscriptionId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMdtSubscription.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "encoding": {
                        "type": "string",
                        "description": "Update notification encoding\n"
                    },
                    "filterXpath": {
                        "type": "string",
                        "description": "XPath expression describing the set of objects wanted as part of the subscription\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "receivers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getMdtSubscriptionReceiver:getMdtSubscriptionReceiver"
                        },
                        "description": "Configuration of receivers of configured subscriptions. Use of this is deprecated. Use mdt-receiver-names instead.\n"
                    },
                    "sourceAddress": {
                        "type": "string",
                        "description": "The source address for the notifications\n"
                    },
                    "sourceVrf": {
                        "type": "string",
                        "description": "Network instance name for the VRF\n"
                    },
                    "stream": {
                        "type": "string",
                        "description": "The name of the event stream being subscribed to\n"
                    },
                    "subscriptionId": {
                        "type": "integer",
                        "description": "Unique subscription identifier.\n"
                    },
                    "updatePolicyOnChange": {
                        "type": "boolean",
                        "description": "If true, there is no initial update notification with the current value of all the data. NOT CURRENTLY SUPPORTED. If specified, must be false\n"
                    },
                    "updatePolicyPeriodic": {
                        "type": "integer",
                        "description": "Period of update notifications in hundredths of a second\n"
                    }
                },
                "type": "object",
                "required": [
                    "encoding",
                    "filterXpath",
                    "id",
                    "receivers",
                    "sourceAddress",
                    "sourceVrf",
                    "stream",
                    "subscriptionId",
                    "updatePolicyOnChange",
                    "updatePolicyPeriodic"
                ]
            }
        },
        "iosxe:index/getMsdp:getMsdp": {
            "description": "This data source can read the MSDP configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getMsdp({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_msdp()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetMsdp.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupMsdp(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetMsdpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getMsdp();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getMsdp\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMsdp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMsdp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "originatorId": {
                        "type": "string",
                        "description": "Configure MSDP Originator ID\n"
                    },
                    "passwords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getMsdpPassword:getMsdpPassword"
                        },
                        "description": "MSDP peer on which the password is to be set\n"
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getMsdpPeer:getMsdpPeer"
                        },
                        "description": "Configure an MSDP peer\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "originatorId",
                    "passwords",
                    "peers"
                ]
            }
        },
        "iosxe:index/getMsdpVrf:getMsdpVrf": {
            "description": "This data source can read the MSDP VRF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getMsdpVrf({\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_msdp_vrf(vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetMsdpVrf.Invoke(new()\n    {\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupMsdpVrf(ctx, \u0026iosxe.LookupMsdpVrfArgs{\n\t\t\tVrf: \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetMsdpVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getMsdpVrf(GetMsdpVrfArgs.builder()\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getMsdpVrf\n      Arguments:\n        vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMsdpVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMsdpVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "originatorId": {
                        "type": "string",
                        "description": "Configure MSDP Originator ID\n"
                    },
                    "passwords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getMsdpVrfPassword:getMsdpVrfPassword"
                        },
                        "description": "MSDP peer on which the password is to be set\n"
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getMsdpVrfPeer:getMsdpVrfPeer"
                        },
                        "description": "Configure an MSDP peer\n"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "originatorId",
                    "passwords",
                    "peers",
                    "vrf"
                ]
            }
        },
        "iosxe:index/getNtp:getNtp": {
            "description": "This data source can read the NTP configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getNtp({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_ntp()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetNtp.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupNtp(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetNtpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getNtp();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getNtp\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getNtp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNtp.\n",
                "properties": {
                    "accessGroupPeerAcl": {
                        "type": "string"
                    },
                    "accessGroupQueryOnlyAcl": {
                        "type": "string"
                    },
                    "accessGroupServeAcl": {
                        "type": "string"
                    },
                    "accessGroupServeOnlyAcl": {
                        "type": "string"
                    },
                    "authenticate": {
                        "type": "boolean",
                        "description": "Authenticate time sources\n"
                    },
                    "authenticationKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getNtpAuthenticationKey:getNtpAuthenticationKey"
                        },
                        "description": "Authentication key for trusted time sources\n"
                    },
                    "clockPeriod": {
                        "type": "integer",
                        "description": "Length of hardware clock tick\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "logging": {
                        "type": "boolean",
                        "description": "Enable NTP message logging\n"
                    },
                    "master": {
                        "type": "boolean",
                        "description": "Act as NTP master clock\n"
                    },
                    "masterStratum": {
                        "type": "integer"
                    },
                    "passive": {
                        "type": "boolean",
                        "description": "NTP passive mode\n"
                    },
                    "peerVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getNtpPeerVrf:getNtpPeerVrf"
                        },
                        "description": "VPN Routing/Forwarding Information\n"
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getNtpPeer:getNtpPeer"
                        }
                    },
                    "serverVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getNtpServerVrf:getNtpServerVrf"
                        },
                        "description": "VPN Routing/Forwarding Information\n"
                    },
                    "servers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getNtpServer:getNtpServer"
                        }
                    },
                    "trapSourceFortyGigabitEthernet": {
                        "type": "string",
                        "description": "Forty GigabitEthernet\n"
                    },
                    "trapSourceGigabitEthernet": {
                        "type": "string",
                        "description": "GigabitEthernet IEEE 802.3z\n"
                    },
                    "trapSourceHundredGigE": {
                        "type": "string",
                        "description": "Hundred GigabitEthernet\n"
                    },
                    "trapSourceLoopback": {
                        "type": "integer",
                        "description": "Loopback interface\n"
                    },
                    "trapSourcePortChannel": {
                        "type": "integer",
                        "description": "Ethernet Channel of interfaces\n"
                    },
                    "trapSourcePortChannelSubinterface": {
                        "type": "string"
                    },
                    "trapSourceTenGigabitEthernet": {
                        "type": "string",
                        "description": "Ten Gigabit Ethernet\n"
                    },
                    "trapSourceVlan": {
                        "type": "integer",
                        "description": "Iosxr Vlans\n"
                    },
                    "updateCalendar": {
                        "type": "boolean",
                        "description": "Periodically update calendar with NTP time\n"
                    }
                },
                "type": "object",
                "required": [
                    "accessGroupPeerAcl",
                    "accessGroupQueryOnlyAcl",
                    "accessGroupServeAcl",
                    "accessGroupServeOnlyAcl",
                    "authenticate",
                    "authenticationKeys",
                    "clockPeriod",
                    "id",
                    "logging",
                    "master",
                    "masterStratum",
                    "passive",
                    "peerVrfs",
                    "peers",
                    "serverVrfs",
                    "servers",
                    "trapSourceFortyGigabitEthernet",
                    "trapSourceGigabitEthernet",
                    "trapSourceHundredGigE",
                    "trapSourceLoopback",
                    "trapSourcePortChannel",
                    "trapSourcePortChannelSubinterface",
                    "trapSourceTenGigabitEthernet",
                    "trapSourceVlan",
                    "updateCalendar"
                ]
            }
        },
        "iosxe:index/getOspf:getOspf": {
            "description": "This data source can read the OSPF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getOspf({\n    processId: 1,\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_ospf(process_id=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetOspf.Invoke(new()\n    {\n        ProcessId = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupOspf(ctx, \u0026iosxe.LookupOspfArgs{\n\t\t\tProcessId: 1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetOspfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getOspf(GetOspfArgs.builder()\n            .processId(1)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getOspf\n      Arguments:\n        processId: 1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOspf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "processId": {
                        "type": "integer",
                        "description": "Process ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "processId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOspf.\n",
                "properties": {
                    "areas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getOspfArea:getOspfArea"
                        },
                        "description": "OSPF area parameters\n"
                    },
                    "bfdAllInterfaces": {
                        "type": "boolean",
                        "description": "Enable BFD on all interfaces\n"
                    },
                    "defaultInformationOriginate": {
                        "type": "boolean",
                        "description": "Distribute a default route\n"
                    },
                    "defaultInformationOriginateAlways": {
                        "type": "boolean",
                        "description": "Always advertise default route\n"
                    },
                    "defaultMetric": {
                        "type": "integer",
                        "description": "Set metric of redistributed routes\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "distance": {
                        "type": "integer",
                        "description": "Administrative distance\n"
                    },
                    "domainTag": {
                        "type": "integer",
                        "description": "OSPF domain-tag\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "mplsLdpAutoconfig": {
                        "type": "boolean",
                        "description": "Configure LDP automatic configuration\n"
                    },
                    "mplsLdpSync": {
                        "type": "boolean",
                        "description": "Configure LDP-IGP Synchronization\n"
                    },
                    "neighbors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getOspfNeighbor:getOspfNeighbor"
                        },
                        "description": "Specify a neighbor router\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getOspfNetwork:getOspfNetwork"
                        },
                        "description": "Enable routing on an IP network\n"
                    },
                    "passiveInterfaceDefault": {
                        "type": "boolean",
                        "description": "Suppress routing updates on all interfaces\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "OSPF topology priority\n"
                    },
                    "processId": {
                        "type": "integer",
                        "description": "Process ID\n"
                    },
                    "routerId": {
                        "type": "string",
                        "description": "Override configured router identifier (peers will reset)\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the OSPF protocol under the current instance\n"
                    },
                    "summaryAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getOspfSummaryAddress:getOspfSummaryAddress"
                        },
                        "description": "Configure IP address summaries\n"
                    }
                },
                "type": "object",
                "required": [
                    "areas",
                    "bfdAllInterfaces",
                    "defaultInformationOriginate",
                    "defaultInformationOriginateAlways",
                    "defaultMetric",
                    "distance",
                    "domainTag",
                    "id",
                    "mplsLdpAutoconfig",
                    "mplsLdpSync",
                    "neighbors",
                    "networks",
                    "passiveInterfaceDefault",
                    "priority",
                    "processId",
                    "routerId",
                    "shutdown",
                    "summaryAddresses"
                ]
            }
        },
        "iosxe:index/getOspfVrf:getOspfVrf": {
            "description": "This data source can read the OSPF VRF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getOspfVrf({\n    processId: 2,\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_ospf_vrf(process_id=2,\n    vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetOspfVrf.Invoke(new()\n    {\n        ProcessId = 2,\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupOspfVrf(ctx, \u0026iosxe.LookupOspfVrfArgs{\n\t\t\tProcessId: 2,\n\t\t\tVrf:       \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetOspfVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getOspfVrf(GetOspfVrfArgs.builder()\n            .processId(2)\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getOspfVrf\n      Arguments:\n        processId: 2\n        vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOspfVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "processId": {
                        "type": "integer",
                        "description": "Process ID\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VPN Routing/Forwarding Instance\n"
                    }
                },
                "type": "object",
                "required": [
                    "processId",
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOspfVrf.\n",
                "properties": {
                    "areas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getOspfVrfArea:getOspfVrfArea"
                        },
                        "description": "OSPF area parameters\n"
                    },
                    "bfdAllInterfaces": {
                        "type": "boolean",
                        "description": "Enable BFD on all interfaces\n"
                    },
                    "defaultInformationOriginate": {
                        "type": "boolean",
                        "description": "Distribute a default route\n"
                    },
                    "defaultInformationOriginateAlways": {
                        "type": "boolean",
                        "description": "Always advertise default route\n"
                    },
                    "defaultMetric": {
                        "type": "integer",
                        "description": "Set metric of redistributed routes\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "distance": {
                        "type": "integer",
                        "description": "Administrative distance\n"
                    },
                    "domainTag": {
                        "type": "integer",
                        "description": "OSPF domain-tag\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "mplsLdpAutoconfig": {
                        "type": "boolean",
                        "description": "Configure LDP automatic configuration\n"
                    },
                    "mplsLdpSync": {
                        "type": "boolean",
                        "description": "Configure LDP-IGP Synchronization\n"
                    },
                    "neighbors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getOspfVrfNeighbor:getOspfVrfNeighbor"
                        },
                        "description": "Specify a neighbor router\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getOspfVrfNetwork:getOspfVrfNetwork"
                        },
                        "description": "Enable routing on an IP network\n"
                    },
                    "passiveInterfaceDefault": {
                        "type": "boolean",
                        "description": "Suppress routing updates on all interfaces\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "OSPF topology priority\n"
                    },
                    "processId": {
                        "type": "integer",
                        "description": "Process ID\n"
                    },
                    "routerId": {
                        "type": "string",
                        "description": "Override configured router identifier (peers will reset)\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown the OSPF protocol under the current instance\n"
                    },
                    "summaryAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getOspfVrfSummaryAddress:getOspfVrfSummaryAddress"
                        },
                        "description": "Configure IP address summaries\n"
                    },
                    "vrf": {
                        "type": "string",
                        "description": "VPN Routing/Forwarding Instance\n"
                    }
                },
                "type": "object",
                "required": [
                    "areas",
                    "bfdAllInterfaces",
                    "defaultInformationOriginate",
                    "defaultInformationOriginateAlways",
                    "defaultMetric",
                    "distance",
                    "domainTag",
                    "id",
                    "mplsLdpAutoconfig",
                    "mplsLdpSync",
                    "neighbors",
                    "networks",
                    "passiveInterfaceDefault",
                    "priority",
                    "processId",
                    "routerId",
                    "shutdown",
                    "summaryAddresses",
                    "vrf"
                ]
            }
        },
        "iosxe:index/getPim:getPim": {
            "description": "This data source can read the PIM configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getPim({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_pim()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetPim.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupPim(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetPimArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getPim();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getPim\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPim.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPim.\n",
                "properties": {
                    "autorp": {
                        "type": "boolean",
                        "description": "Configure AutoRP global operations\n"
                    },
                    "autorpListener": {
                        "type": "boolean",
                        "description": "Allow AutoRP packets across sparse mode interface\n"
                    },
                    "bsrCandidateAcceptRpCandidate": {
                        "type": "string",
                        "description": "BSR RP candidate filter\n"
                    },
                    "bsrCandidateLoopback": {
                        "type": "integer",
                        "description": "Loopback interface\n"
                    },
                    "bsrCandidateMask": {
                        "type": "integer",
                        "description": "Hash Mask length for RP selection\n"
                    },
                    "bsrCandidatePriority": {
                        "type": "integer",
                        "description": "Priority value for candidate bootstrap router\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "rpAddress": {
                        "type": "string",
                        "description": "IP address of Rendezvous-point for group\n"
                    },
                    "rpAddressBidir": {
                        "type": "boolean",
                        "description": "Group range treated in bidirectional shared-tree mode\n"
                    },
                    "rpAddressOverride": {
                        "type": "boolean",
                        "description": "Overrides dynamically learnt RP mappings\n"
                    },
                    "rpAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getPimRpAddress:getPimRpAddress"
                        },
                        "description": "PIM RP-address (Rendezvous Point)\n"
                    },
                    "rpCandidates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getPimRpCandidate:getPimRpCandidate"
                        },
                        "description": "To be a PIM version 2 RP candidate\n"
                    },
                    "ssmDefault": {
                        "type": "boolean",
                        "description": "Use 232/8 group range for SSM\n"
                    },
                    "ssmRange": {
                        "type": "string",
                        "description": "ACL for group range to be used for SSM\n"
                    }
                },
                "type": "object",
                "required": [
                    "autorp",
                    "autorpListener",
                    "bsrCandidateAcceptRpCandidate",
                    "bsrCandidateLoopback",
                    "bsrCandidateMask",
                    "bsrCandidatePriority",
                    "id",
                    "rpAddress",
                    "rpAddressBidir",
                    "rpAddressOverride",
                    "rpAddresses",
                    "rpCandidates",
                    "ssmDefault",
                    "ssmRange"
                ]
            }
        },
        "iosxe:index/getPimVrf:getPimVrf": {
            "description": "This data source can read the PIM VRF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getPimVrf({\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_pim_vrf(vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetPimVrf.Invoke(new()\n    {\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupPimVrf(ctx, \u0026iosxe.LookupPimVrfArgs{\n\t\t\tVrf: \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetPimVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getPimVrf(GetPimVrfArgs.builder()\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getPimVrf\n      Arguments:\n        vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPimVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPimVrf.\n",
                "properties": {
                    "autorp": {
                        "type": "boolean",
                        "description": "Configure AutoRP global operations\n"
                    },
                    "autorpListener": {
                        "type": "boolean",
                        "description": "Allow AutoRP packets across sparse mode interface\n"
                    },
                    "bsrCandidateAcceptRpCandidate": {
                        "type": "string",
                        "description": "BSR RP candidate filter\n"
                    },
                    "bsrCandidateLoopback": {
                        "type": "integer",
                        "description": "Loopback interface\n"
                    },
                    "bsrCandidateMask": {
                        "type": "integer",
                        "description": "Hash Mask length for RP selection\n"
                    },
                    "bsrCandidatePriority": {
                        "type": "integer",
                        "description": "Priority value for candidate bootstrap router\n"
                    },
                    "cacheRpfOif": {
                        "type": "boolean",
                        "description": "Cache outgoing interface RPF info\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "rpAddress": {
                        "type": "string",
                        "description": "IP address of Rendezvous-point for group\n"
                    },
                    "rpAddressBidir": {
                        "type": "boolean",
                        "description": "Group range treated in bidirectional shared-tree mode\n"
                    },
                    "rpAddressOverride": {
                        "type": "boolean",
                        "description": "Overrides dynamically learnt RP mappings\n"
                    },
                    "rpAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getPimVrfRpAddress:getPimVrfRpAddress"
                        },
                        "description": "PIM RP-address (Rendezvous Point)\n"
                    },
                    "rpCandidates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getPimVrfRpCandidate:getPimVrfRpCandidate"
                        },
                        "description": "To be a PIM version 2 RP candidate\n"
                    },
                    "ssmDefault": {
                        "type": "boolean",
                        "description": "Use 232/8 group range for SSM\n"
                    },
                    "ssmRange": {
                        "type": "string",
                        "description": "ACL for group range to be used for SSM\n"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "autorp",
                    "autorpListener",
                    "bsrCandidateAcceptRpCandidate",
                    "bsrCandidateLoopback",
                    "bsrCandidateMask",
                    "bsrCandidatePriority",
                    "cacheRpfOif",
                    "id",
                    "rpAddress",
                    "rpAddressBidir",
                    "rpAddressOverride",
                    "rpAddresses",
                    "rpCandidates",
                    "ssmDefault",
                    "ssmRange",
                    "vrf"
                ]
            }
        },
        "iosxe:index/getPolicyMap:getPolicyMap": {
            "description": "This data source can read the Policy Map configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getPolicyMap({\n    name: \"dot1x_policy\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_policy_map(name=\"dot1x_policy\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetPolicyMap.Invoke(new()\n    {\n        Name = \"dot1x_policy\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupPolicyMap(ctx, \u0026iosxe.LookupPolicyMapArgs{\n\t\t\tName: \"dot1x_policy\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetPolicyMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getPolicyMap(GetPolicyMapArgs.builder()\n            .name(\"dot1x_policy\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getPolicyMap\n      Arguments:\n        name: dot1x_policy\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy map\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy map\n"
                    },
                    "subscriber": {
                        "type": "boolean",
                        "description": "Domain name of the policy map\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of the policy-map\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "subscriber",
                    "type"
                ]
            }
        },
        "iosxe:index/getPolicyMapEvent:getPolicyMapEvent": {
            "description": "This data source can read the Policy Map Event configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getPolicyMapEvent({\n    eventType: \"authentication-success\",\n    name: \"dot1x_policy\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_policy_map_event(event_type=\"authentication-success\",\n    name=\"dot1x_policy\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetPolicyMapEvent.Invoke(new()\n    {\n        EventType = \"authentication-success\",\n        Name = \"dot1x_policy\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupPolicyMapEvent(ctx, \u0026iosxe.LookupPolicyMapEventArgs{\n\t\t\tEventType: \"authentication-success\",\n\t\t\tName:      \"dot1x_policy\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetPolicyMapEventArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getPolicyMapEvent(GetPolicyMapEventArgs.builder()\n            .eventType(\"authentication-success\")\n            .name(\"dot1x_policy\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getPolicyMapEvent\n      Arguments:\n        eventType: authentication-success\n        name: dot1x_policy\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPolicyMapEvent.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "eventType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy map\n"
                    }
                },
                "type": "object",
                "required": [
                    "eventType",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPolicyMapEvent.\n",
                "properties": {
                    "classNumbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getPolicyMapEventClassNumber:getPolicyMapEventClassNumber"
                        },
                        "description": "class number, 1 for 1st class, 2 for 2nd...\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "eventType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "matchType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy map\n"
                    }
                },
                "type": "object",
                "required": [
                    "classNumbers",
                    "eventType",
                    "id",
                    "matchType",
                    "name"
                ]
            }
        },
        "iosxe:index/getPrefixList:getPrefixList": {
            "description": "This data source can read the Prefix List configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getPrefixList({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_prefix_list()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetPrefixList.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupPrefixList(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetPrefixListArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getPrefixList();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getPrefixList\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPrefixList.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPrefixList.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "prefixes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getPrefixListPrefix:getPrefixListPrefix"
                        },
                        "description": "Build prefix-lists with name ans seq.no\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "prefixes"
                ]
            }
        },
        "iosxe:index/getRadius:getRadius": {
            "description": "This data source can read the Radius configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getRadius({\n    name: \"radius_10.10.15.12\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_radius(name=\"radius_10.10.15.12\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetRadius.Invoke(new()\n    {\n        Name = \"radius_10.10.15.12\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupRadius(ctx, \u0026iosxe.LookupRadiusArgs{\n\t\t\tName: \"radius_10.10.15.12\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetRadiusArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getRadius(GetRadiusArgs.builder()\n            .name(\"radius_10.10.15.12\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getRadius\n      Arguments:\n        name: radius_10.10.15.12\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRadius.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the radius server configuration\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRadius.\n",
                "properties": {
                    "accountingPort": {
                        "type": "integer",
                        "description": "UDP port for RADIUS accounting server (default is 1813)\n"
                    },
                    "authenticationPort": {
                        "type": "integer",
                        "description": "UDP port for RADIUS authentication server (default is 1812)\n"
                    },
                    "automateTesterIgnoreAcctPort": {
                        "type": "boolean",
                        "description": "Do not test accounting ports of the servers.\n"
                    },
                    "automateTesterProbeOnConfig": {
                        "type": "boolean",
                        "description": "Send a packet to verify the server status\n"
                    },
                    "automateTesterUsername": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipv4Address": {
                        "type": "string",
                        "description": "IPv4 address or Hostname for radius server\n"
                    },
                    "key": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the radius server configuration\n"
                    },
                    "pacKey": {
                        "type": "string",
                        "description": "The UNENCRYPTED (cleartext) server key\n"
                    },
                    "pacKeyEncryption": {
                        "type": "string",
                        "description": "0 - Specifies an UNENCRYPTED key will follow 6 - Specifies an ENCRYPTED key will follow 7 - Specifies HIDDEN key will follow\n"
                    },
                    "retransmit": {
                        "type": "integer",
                        "description": "Number of retries to active server (overrides default)\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Time to wait for a RADIUS server to reply (overrides default)\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountingPort",
                    "authenticationPort",
                    "automateTesterIgnoreAcctPort",
                    "automateTesterProbeOnConfig",
                    "automateTesterUsername",
                    "id",
                    "ipv4Address",
                    "key",
                    "name",
                    "pacKey",
                    "pacKeyEncryption",
                    "retransmit",
                    "timeout"
                ]
            }
        },
        "iosxe:index/getRadiusServer:getRadiusServer": {
            "description": "This data source can read the Radius Server configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getRadiusServer({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_radius_server()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetRadiusServer.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupRadiusServer(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetRadiusServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getRadiusServer();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getRadiusServer\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRadiusServer.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRadiusServer.\n",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getRadiusServerAttribute:getRadiusServerAttribute"
                        },
                        "description": "Customize selected radius attributes\n"
                    },
                    "deadCriteriaTime": {
                        "type": "integer",
                        "description": "The time during which no properly formed response must be received from the RADIUS server\n"
                    },
                    "deadCriteriaTries": {
                        "type": "integer",
                        "description": "The number of times the router must fail to receive a response from the radius server to mark it as dead\n"
                    },
                    "deadtime": {
                        "type": "integer",
                        "description": "Time to stop using a server that does not respond\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "attributes",
                    "deadCriteriaTime",
                    "deadCriteriaTries",
                    "deadtime",
                    "id"
                ]
            }
        },
        "iosxe:index/getRestconf:getRestconf": {
            "description": "This data source can retrieve one or more attributes via RESTCONF.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getRestconf({\n    path: \"Cisco-IOS-XE-native:native/banner/login\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_restconf(path=\"Cisco-IOS-XE-native:native/banner/login\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetRestconf.Invoke(new()\n    {\n        Path = \"Cisco-IOS-XE-native:native/banner/login\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupRestconf(ctx, \u0026iosxe.LookupRestconfArgs{\n\t\t\tPath: \"Cisco-IOS-XE-native:native/banner/login\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetRestconfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getRestconf(GetRestconfArgs.builder()\n            .path(\"Cisco-IOS-XE-native:native/banner/login\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getRestconf\n      Arguments:\n        path: Cisco-IOS-XE-native:native/banner/login\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRestconf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "A RESTCONF path, e.g. `openconfig-interfaces:interfaces`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "path"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRestconf.\n",
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of key-value pairs which represents the attributes and its values.\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "A RESTCONF path, e.g. `openconfig-interfaces:interfaces`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "attributes",
                    "id",
                    "path"
                ]
            }
        },
        "iosxe:index/getRouteMap:getRouteMap": {
            "description": "This data source can read the Route Map configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getRouteMap({\n    name: \"RM1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_route_map(name=\"RM1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetRouteMap.Invoke(new()\n    {\n        Name = \"RM1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupRouteMap(ctx, \u0026iosxe.LookupRouteMapArgs{\n\t\t\tName: \"RM1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetRouteMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getRouteMap(GetRouteMapArgs.builder()\n            .name(\"RM1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getRouteMap\n      Arguments:\n        name: RM1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRouteMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "WORD;;Route map tag\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getRouteMapEntry:getRouteMapEntry"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "WORD;;Route map tag\n"
                    }
                },
                "type": "object",
                "required": [
                    "entries",
                    "id",
                    "name"
                ]
            }
        },
        "iosxe:index/getService:getService": {
            "description": "This data source can read the Service configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getService({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_service()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetService.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupService(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetServiceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getService();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getService\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getService.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getService.\n",
                "properties": {
                    "callHome": {
                        "type": "boolean",
                        "description": "Enable call-home service\n"
                    },
                    "compressConfig": {
                        "type": "boolean",
                        "description": "Compress the configuration file\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dhcp": {
                        "type": "boolean",
                        "description": "Enable DHCP server and relay agent\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "pad": {
                        "type": "boolean",
                        "description": "Enable PAD commands\n"
                    },
                    "passwordEncryption": {
                        "type": "boolean",
                        "description": "Encrypt system passwords\n"
                    },
                    "passwordRecovery": {
                        "type": "boolean",
                        "description": "Enable password recovery\n"
                    },
                    "sequenceNumbers": {
                        "type": "boolean",
                        "description": "Stamp logger messages with a sequence number\n"
                    },
                    "tcpKeepalivesIn": {
                        "type": "boolean",
                        "description": "Generate keepalives on idle incoming network connections\n"
                    },
                    "tcpKeepalivesOut": {
                        "type": "boolean",
                        "description": "Generate keepalives on idle outgoing network connections\n"
                    },
                    "timestamps": {
                        "type": "boolean",
                        "description": "Timestamp debug/log messages\n"
                    },
                    "timestampsDebug": {
                        "type": "boolean",
                        "description": "Timestamp debug messages\n"
                    },
                    "timestampsDebugDatetime": {
                        "type": "boolean",
                        "description": "Timestamp with date and time\n"
                    },
                    "timestampsDebugDatetimeLocaltime": {
                        "type": "boolean",
                        "description": "Use local time zone for timestamps\n"
                    },
                    "timestampsDebugDatetimeMsec": {
                        "type": "boolean",
                        "description": "Include milliseconds in timestamp\n"
                    },
                    "timestampsDebugDatetimeShowTimezone": {
                        "type": "boolean",
                        "description": "Add time zone information to timestamp\n"
                    },
                    "timestampsDebugDatetimeYear": {
                        "type": "boolean",
                        "description": "Include year in timestamp\n"
                    },
                    "timestampsDebugUptime": {
                        "type": "boolean",
                        "description": "Timestamp with system uptime\n"
                    },
                    "timestampsLog": {
                        "type": "boolean",
                        "description": "Timestamp log messages\n"
                    },
                    "timestampsLogDatetime": {
                        "type": "boolean",
                        "description": "Timestamp with date and time\n"
                    },
                    "timestampsLogDatetimeLocaltime": {
                        "type": "boolean",
                        "description": "Use local time zone for timestamps\n"
                    },
                    "timestampsLogDatetimeMsec": {
                        "type": "boolean",
                        "description": "Include milliseconds in timestamp\n"
                    },
                    "timestampsLogDatetimeShowTimezone": {
                        "type": "boolean",
                        "description": "Add time zone information to timestamp\n"
                    },
                    "timestampsLogDatetimeYear": {
                        "type": "boolean",
                        "description": "Include year in timestamp\n"
                    },
                    "timestampsLogUptime": {
                        "type": "boolean",
                        "description": "Timestamp with system uptime\n"
                    }
                },
                "type": "object",
                "required": [
                    "callHome",
                    "compressConfig",
                    "dhcp",
                    "id",
                    "pad",
                    "passwordEncryption",
                    "passwordRecovery",
                    "sequenceNumbers",
                    "tcpKeepalivesIn",
                    "tcpKeepalivesOut",
                    "timestamps",
                    "timestampsDebug",
                    "timestampsDebugDatetime",
                    "timestampsDebugDatetimeLocaltime",
                    "timestampsDebugDatetimeMsec",
                    "timestampsDebugDatetimeShowTimezone",
                    "timestampsDebugDatetimeYear",
                    "timestampsDebugUptime",
                    "timestampsLog",
                    "timestampsLogDatetime",
                    "timestampsLogDatetimeLocaltime",
                    "timestampsLogDatetimeMsec",
                    "timestampsLogDatetimeShowTimezone",
                    "timestampsLogDatetimeYear",
                    "timestampsLogUptime"
                ]
            }
        },
        "iosxe:index/getServiceTemplate:getServiceTemplate": {
            "description": "This data source can read the Service Template configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getServiceTemplate({\n    name: \"MY_TEMPLATE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_service_template(name=\"MY_TEMPLATE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetServiceTemplate.Invoke(new()\n    {\n        Name = \"MY_TEMPLATE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupServiceTemplate(ctx, \u0026iosxe.LookupServiceTemplateArgs{\n\t\t\tName: \"MY_TEMPLATE\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetServiceTemplateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getServiceTemplate(GetServiceTemplateArgs.builder()\n            .name(\"MY_TEMPLATE\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getServiceTemplate\n      Arguments:\n        name: MY_TEMPLATE\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServiceTemplate.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specify a template name (maximum 48 characters)\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceTemplate.\n",
                "properties": {
                    "absoluteTimer": {
                        "type": "integer",
                        "description": "Enter a value between 1 and 1073741823\n"
                    },
                    "accessGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getServiceTemplateAccessGroup:getServiceTemplateAccessGroup"
                        },
                        "description": "Access list to be applied\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Enter a description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "dnsAclPreauth": {
                        "type": "string",
                        "description": "pre-authentication\n"
                    },
                    "ianctivityTimer": {
                        "type": "integer",
                        "description": "Enter a value between 1 and 65535\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "inactivityTimerProbe": {
                        "type": "boolean",
                        "description": "ARP probe\n"
                    },
                    "interfaceTemplates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getServiceTemplateInterfaceTemplate:getServiceTemplateInterfaceTemplate"
                        },
                        "description": "Interface template to be applied\n"
                    },
                    "linksecPolicy": {
                        "type": "string",
                        "description": "Set the link security policy\n"
                    },
                    "mdnsServicePolicy": {
                        "type": "string",
                        "description": "mdns policy to be applied\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specify a template name (maximum 48 characters)\n"
                    },
                    "redirectAppendClientMac": {
                        "type": "string",
                        "description": "Append client Mac Address in redirect URL\n"
                    },
                    "redirectAppendSwitchMac": {
                        "type": "string",
                        "description": "Append switch Mac Address in redirect URL\n"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "description": "Specify a valid URL\n"
                    },
                    "redirectUrlMatchAcl": {
                        "type": "string",
                        "description": "Specify the access list name\n"
                    },
                    "redirectUrlMatchAction": {
                        "type": "string"
                    },
                    "servicePolicyQosInput": {
                        "type": "string",
                        "description": "Configure input Qos policy\n"
                    },
                    "servicePolicyQosOutput": {
                        "type": "string",
                        "description": "Configure output Qos policy\n"
                    },
                    "sgt": {
                        "type": "integer",
                        "description": "SGT tag\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getServiceTemplateTag:getServiceTemplateTag"
                        },
                        "description": "tag name\n"
                    },
                    "tunnelCapwapName": {
                        "type": "string",
                        "description": "tunnel profile name\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "Vlan to be applied\n"
                    },
                    "vnid": {
                        "type": "string",
                        "description": "Vnid to be applied\n"
                    },
                    "voiceVlan": {
                        "type": "boolean",
                        "description": "Critical voice vlan\n"
                    }
                },
                "type": "object",
                "required": [
                    "absoluteTimer",
                    "accessGroups",
                    "description",
                    "dnsAclPreauth",
                    "ianctivityTimer",
                    "id",
                    "inactivityTimerProbe",
                    "interfaceTemplates",
                    "linksecPolicy",
                    "mdnsServicePolicy",
                    "name",
                    "redirectAppendClientMac",
                    "redirectAppendSwitchMac",
                    "redirectUrl",
                    "redirectUrlMatchAcl",
                    "redirectUrlMatchAction",
                    "servicePolicyQosInput",
                    "servicePolicyQosOutput",
                    "sgt",
                    "tags",
                    "tunnelCapwapName",
                    "vlan",
                    "vnid",
                    "voiceVlan"
                ]
            }
        },
        "iosxe:index/getSnmpServer:getSnmpServer": {
            "description": "This data source can read the SNMP Server configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getSnmpServer({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_snmp_server()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetSnmpServer.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupSnmpServer(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetSnmpServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getSnmpServer();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getSnmpServer\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSnmpServer.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSnmpServer.\n",
                "properties": {
                    "chassisId": {
                        "type": "string",
                        "description": "String to uniquely identify this chassis\n"
                    },
                    "contact": {
                        "type": "string",
                        "description": "Text for mib object sysContact\n"
                    },
                    "contexts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getSnmpServerContext:getSnmpServerContext"
                        },
                        "description": "Create/Delete a context apart from default\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "enableInforms": {
                        "type": "boolean",
                        "description": "Enable SNMP Informs\n"
                    },
                    "enableLoggingGetop": {
                        "type": "boolean",
                        "description": "Enable SNMP GET Operation logging\n"
                    },
                    "enableLoggingSetop": {
                        "type": "boolean",
                        "description": "Enable SNMP SET Operation logging\n"
                    },
                    "enableTraps": {
                        "type": "boolean",
                        "description": "Enable SNMP Traps\n"
                    },
                    "enableTrapsAuthFrameworkSecViolation": {
                        "type": "boolean"
                    },
                    "enableTrapsBfd": {
                        "type": "boolean"
                    },
                    "enableTrapsBgpCbgp2": {
                        "type": "boolean",
                        "description": "Enable BGP MIBv2 traps\n"
                    },
                    "enableTrapsBridgeNewroot": {
                        "type": "boolean"
                    },
                    "enableTrapsBridgeTopologychange": {
                        "type": "boolean"
                    },
                    "enableTrapsBulkstatCollection": {
                        "type": "boolean",
                        "description": "Enable Data-Collection-MIB Collection notifications\n"
                    },
                    "enableTrapsBulkstatTransfer": {
                        "type": "boolean",
                        "description": "Enable Data-Collection-MIB Transfer notifications\n"
                    },
                    "enableTrapsCallHomeMessageSendFail": {
                        "type": "boolean"
                    },
                    "enableTrapsCallHomeServerFail": {
                        "type": "boolean"
                    },
                    "enableTrapsCefInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsCefPeerFibStateChange": {
                        "type": "boolean"
                    },
                    "enableTrapsCefPeerStateChange": {
                        "type": "boolean"
                    },
                    "enableTrapsCefResourceFailure": {
                        "type": "boolean"
                    },
                    "enableTrapsConfig": {
                        "type": "boolean",
                        "description": "Enable SNMP config traps\n"
                    },
                    "enableTrapsConfigCopy": {
                        "type": "boolean",
                        "description": "Enable SNMP config-copy traps\n"
                    },
                    "enableTrapsConfigCtid": {
                        "type": "boolean"
                    },
                    "enableTrapsCpuThreshold": {
                        "type": "boolean",
                        "description": "Allow CPU utilization threshold violation traps\n"
                    },
                    "enableTrapsDhcp": {
                        "type": "boolean",
                        "description": "Enable SNMP dhcp traps\n"
                    },
                    "enableTrapsEigrp": {
                        "type": "boolean",
                        "description": "Enable SNMP EIGRP traps\n"
                    },
                    "enableTrapsEnergywise": {
                        "type": "boolean"
                    },
                    "enableTrapsEntity": {
                        "type": "boolean",
                        "description": "Enable SNMP entity traps\n"
                    },
                    "enableTrapsEntityDiagBootUpFail": {
                        "type": "boolean",
                        "description": "Enable SNMP ceDiagBootUpFailedNotif traps\n"
                    },
                    "enableTrapsEntityDiagHmTestRecover": {
                        "type": "boolean",
                        "description": "Enable SNMP ceDiagHMTestRecoverNotif traps\n"
                    },
                    "enableTrapsEntityDiagHmThreshReached": {
                        "type": "boolean",
                        "description": "Enable SNMP ceDiagHMThresholdReachedNotif traps\n"
                    },
                    "enableTrapsEntityDiagScheduledTestFail": {
                        "type": "boolean",
                        "description": "Enable SNMP ceDiagScheduledTestFailedNotif traps\n"
                    },
                    "enableTrapsEntityPerfThroughputNotif": {
                        "type": "boolean",
                        "description": "Enable ENTITY PERFORMANCE MIB throughput traps\n"
                    },
                    "enableTrapsEnvmon": {
                        "type": "boolean",
                        "description": "Enable SNMP environmental monitor traps\n"
                    },
                    "enableTrapsErrdisable": {
                        "type": "boolean",
                        "description": "Enable SNMP errdisable notifications\n"
                    },
                    "enableTrapsEventManager": {
                        "type": "boolean",
                        "description": "Enable SNMP Embedded Event Manager traps\n"
                    },
                    "enableTrapsFastRerouteProtected": {
                        "type": "boolean"
                    },
                    "enableTrapsFlashInsertion": {
                        "type": "boolean",
                        "description": "Enable SNMP Flash Insertion notifications\n"
                    },
                    "enableTrapsFlashLowspace": {
                        "type": "boolean",
                        "description": "Enable SNMP Flash Lowspace notifications\n"
                    },
                    "enableTrapsFlashRemoval": {
                        "type": "boolean",
                        "description": "Enable SNMP Flash Removal notifications\n"
                    },
                    "enableTrapsFlowmon": {
                        "type": "boolean",
                        "description": "Enable SNMP flowmon notifications\n"
                    },
                    "enableTrapsFruCtrl": {
                        "type": "boolean",
                        "description": "Enable SNMP entity FRU control traps\n"
                    },
                    "enableTrapsHsrp": {
                        "type": "boolean",
                        "description": "Enable SNMP HSRP traps\n"
                    },
                    "enableTrapsIkePolicyAdd": {
                        "type": "boolean",
                        "description": "Enable IKE Policy add trap\n"
                    },
                    "enableTrapsIkePolicyDelete": {
                        "type": "boolean",
                        "description": "Enable IKE Policy delete trap\n"
                    },
                    "enableTrapsIkeTunnelStart": {
                        "type": "boolean",
                        "description": "Enable IKE Tunnel start trap\n"
                    },
                    "enableTrapsIkeTunnelStop": {
                        "type": "boolean",
                        "description": "Enable IKE Tunnel stop trap\n"
                    },
                    "enableTrapsIpmulticast": {
                        "type": "boolean",
                        "description": "Enable SNMP ipmulticast traps\n"
                    },
                    "enableTrapsIpsecCryptomapAdd": {
                        "type": "boolean",
                        "description": "Enable IPsec Cryptomap add trap\n"
                    },
                    "enableTrapsIpsecCryptomapAttach": {
                        "type": "boolean",
                        "description": "Enable IPsec Cryptomap Attach trap\n"
                    },
                    "enableTrapsIpsecCryptomapDelete": {
                        "type": "boolean",
                        "description": "Enable IPsec Cryptomap delete trap\n"
                    },
                    "enableTrapsIpsecCryptomapDetach": {
                        "type": "boolean",
                        "description": "Enable IPsec Cryptomap Detach trap\n"
                    },
                    "enableTrapsIpsecTooManySas": {
                        "type": "boolean",
                        "description": "Enable IPsec Tunnel Start trap\n"
                    },
                    "enableTrapsIpsecTunnelStart": {
                        "type": "boolean",
                        "description": "Enable IPsec Tunnel Start trap\n"
                    },
                    "enableTrapsIpsecTunnelStop": {
                        "type": "boolean",
                        "description": "Enable IPsec Tunnel Stop trap\n"
                    },
                    "enableTrapsIpsla": {
                        "type": "boolean",
                        "description": "Enable IPSLA traps traps\n"
                    },
                    "enableTrapsIsis": {
                        "type": "boolean",
                        "description": "Enable ISIS traps traps\n"
                    },
                    "enableTrapsLicense": {
                        "type": "boolean",
                        "description": "Enable license traps\n"
                    },
                    "enableTrapsLocalAuth": {
                        "type": "boolean",
                        "description": "Enable SNMP local auth traps\n"
                    },
                    "enableTrapsMacNotificationChange": {
                        "type": "boolean",
                        "description": "Enable SNMP Change traps\n"
                    },
                    "enableTrapsMacNotificationMove": {
                        "type": "boolean",
                        "description": "Enable SNMP Move traps\n"
                    },
                    "enableTrapsMacNotificationThreshold": {
                        "type": "boolean",
                        "description": "Enable SNMP Threshold traps\n"
                    },
                    "enableTrapsMemoryBufferpeak": {
                        "type": "boolean",
                        "description": "Enable SNMP Memory Bufferpeak traps\n"
                    },
                    "enableTrapsMplsLdp": {
                        "type": "boolean",
                        "description": "SNMP MPLS label distribution protocol traps\n"
                    },
                    "enableTrapsMplsRfcLdp": {
                        "type": "boolean"
                    },
                    "enableTrapsMplsTrafficEng": {
                        "type": "boolean"
                    },
                    "enableTrapsMplsVpn": {
                        "type": "boolean"
                    },
                    "enableTrapsMsdp": {
                        "type": "boolean",
                        "description": "Enable SNMP MSDP traps\n"
                    },
                    "enableTrapsNhrpNhc": {
                        "type": "boolean"
                    },
                    "enableTrapsNhrpNhp": {
                        "type": "boolean"
                    },
                    "enableTrapsNhrpNhs": {
                        "type": "boolean"
                    },
                    "enableTrapsNhrpQuotaExceeded": {
                        "type": "boolean"
                    },
                    "enableTrapsOspfConfigErrors": {
                        "type": "boolean",
                        "description": "Enable all traps of errors\n"
                    },
                    "enableTrapsOspfConfigLsa": {
                        "type": "boolean",
                        "description": "Enable all traps of lsa\n"
                    },
                    "enableTrapsOspfConfigRetransmit": {
                        "type": "boolean",
                        "description": "Enable all traps of retransmit\n"
                    },
                    "enableTrapsOspfConfigStateChange": {
                        "type": "boolean",
                        "description": "Enable all traps of state-change\n"
                    },
                    "enableTrapsOspfErrorsEnable": {
                        "type": "boolean",
                        "description": "Enable all traps of errors\n"
                    },
                    "enableTrapsOspfLsaEnable": {
                        "type": "boolean",
                        "description": "Enable all traps of lsa\n"
                    },
                    "enableTrapsOspfNssaTransChange": {
                        "type": "boolean",
                        "description": "Nssa translator state changes\n"
                    },
                    "enableTrapsOspfRetransmitEnable": {
                        "type": "boolean",
                        "description": "Enable all traps of retransmit\n"
                    },
                    "enableTrapsOspfShamlinkInterface": {
                        "type": "boolean",
                        "description": "Sham link interface state changes\n"
                    },
                    "enableTrapsOspfShamlinkNeighbor": {
                        "type": "boolean",
                        "description": "Sham link neighbor state changes\n"
                    },
                    "enableTrapsOspfv3ConfigErrors": {
                        "type": "boolean",
                        "description": "Enable all traps of errors\n"
                    },
                    "enableTrapsOspfv3ConfigStateChange": {
                        "type": "boolean",
                        "description": "Enable all traps of state-change\n"
                    },
                    "enableTrapsPimInvalidPimMessage": {
                        "type": "boolean",
                        "description": "Enable invalid pim message trap\n"
                    },
                    "enableTrapsPimNeighborChange": {
                        "type": "boolean",
                        "description": "Enable neighbor change trap\n"
                    },
                    "enableTrapsPimRpMappingChange": {
                        "type": "boolean",
                        "description": "Enable rp mapping change trap\n"
                    },
                    "enableTrapsPortSecurity": {
                        "type": "boolean",
                        "description": "Enable SNMP port security traps\n"
                    },
                    "enableTrapsPowerEthernetGroup": {
                        "type": "string",
                        "description": "Enable SNMP inline power group based traps\n"
                    },
                    "enableTrapsPowerEthernetPolice": {
                        "type": "boolean",
                        "description": "Enable Policing Trap\n"
                    },
                    "enableTrapsPwVc": {
                        "type": "boolean"
                    },
                    "enableTrapsRep": {
                        "type": "boolean"
                    },
                    "enableTrapsRf": {
                        "type": "boolean",
                        "description": "Enable all SNMP traps defined in CISCO-RF-MIB\n"
                    },
                    "enableTrapsSmartLicense": {
                        "type": "boolean",
                        "description": "Enable smart license traps\n"
                    },
                    "enableTrapsSnmpAuthentication": {
                        "type": "boolean",
                        "description": "Enable authentication trap\n"
                    },
                    "enableTrapsSnmpColdstart": {
                        "type": "boolean",
                        "description": "Enable coldStart trap\n"
                    },
                    "enableTrapsSnmpLinkdown": {
                        "type": "boolean",
                        "description": "Enable linkDown trap\n"
                    },
                    "enableTrapsSnmpLinkup": {
                        "type": "boolean",
                        "description": "Enable linkUp trap\n"
                    },
                    "enableTrapsSnmpWarmstart": {
                        "type": "boolean",
                        "description": "Enable warmStart trap\n"
                    },
                    "enableTrapsStackwise": {
                        "type": "boolean",
                        "description": "Enable SNMP stackwise traps\n"
                    },
                    "enableTrapsStpxInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsStpxLoopInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsStpxRootInconsistency": {
                        "type": "boolean"
                    },
                    "enableTrapsSyslog": {
                        "type": "boolean",
                        "description": "Enable SNMP syslog traps\n"
                    },
                    "enableTrapsTransceiverAll": {
                        "type": "boolean"
                    },
                    "enableTrapsTty": {
                        "type": "boolean",
                        "description": "Enable TCP connection traps\n"
                    },
                    "enableTrapsUdldLinkFailRpt": {
                        "type": "boolean",
                        "description": "Enable SNMP cudldpFastHelloLinkFailRptNotification traps\n"
                    },
                    "enableTrapsUdldStatusChange": {
                        "type": "boolean",
                        "description": "Enable SNMP cudldpFastHelloStatusChangeNotification traps\n"
                    },
                    "enableTrapsVlanMembership": {
                        "type": "boolean"
                    },
                    "enableTrapsVlancreate": {
                        "type": "boolean"
                    },
                    "enableTrapsVlandelete": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVnetTrunkDown": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVnetTrunkUp": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVrfDown": {
                        "type": "boolean"
                    },
                    "enableTrapsVrfmibVrfUp": {
                        "type": "boolean"
                    },
                    "enableTrapsVtp": {
                        "type": "boolean"
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getSnmpServerHost:getSnmpServerHost"
                        },
                        "description": "Specify hosts keyed by (ip-address, community-or-user)\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ifindexPersist": {
                        "type": "boolean",
                        "description": "Persist interface indices\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "Text for mib object sysLocation\n"
                    },
                    "packetsize": {
                        "type": "integer",
                        "description": "Largest SNMP packet size\n"
                    },
                    "queueLength": {
                        "type": "integer",
                        "description": "Message queue length for each TRAP host\n"
                    },
                    "snmpCommunities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getSnmpServerSnmpCommunity:getSnmpServerSnmpCommunity"
                        },
                        "description": "Enable SNMP; set community string and access privs\n"
                    },
                    "sourceInterfaceInformsFortyGigabitEthernet": {
                        "type": "string",
                        "description": "Forty GigabitEthernet\n"
                    },
                    "sourceInterfaceInformsGigabitEthernet": {
                        "type": "string",
                        "description": "GigabitEthernet IEEE 802.3z\n"
                    },
                    "sourceInterfaceInformsHundredGigE": {
                        "type": "string",
                        "description": "Hundred GigabitEthernet\n"
                    },
                    "sourceInterfaceInformsLoopback": {
                        "type": "integer",
                        "description": "Loopback interface\n"
                    },
                    "sourceInterfaceInformsPortChannel": {
                        "type": "integer",
                        "description": "Ethernet Channel of interfaces\n"
                    },
                    "sourceInterfaceInformsPortChannelSubinterface": {
                        "type": "string"
                    },
                    "sourceInterfaceInformsTenGigabitEthernet": {
                        "type": "string",
                        "description": "Ten Gigabit Ethernet\n"
                    },
                    "sourceInterfaceInformsVlan": {
                        "type": "integer",
                        "description": "Iosxr Vlans\n"
                    },
                    "sourceInterfaceTrapsFortyGigabitEthernet": {
                        "type": "string",
                        "description": "Forty GigabitEthernet\n"
                    },
                    "sourceInterfaceTrapsGigabitEthernet": {
                        "type": "string",
                        "description": "GigabitEthernet IEEE 802.3z\n"
                    },
                    "sourceInterfaceTrapsHundredGigE": {
                        "type": "string",
                        "description": "Hundred GigabitEthernet\n"
                    },
                    "sourceInterfaceTrapsLoopback": {
                        "type": "integer",
                        "description": "Loopback interface\n"
                    },
                    "sourceInterfaceTrapsPortChannel": {
                        "type": "integer",
                        "description": "Ethernet Channel of interfaces\n"
                    },
                    "sourceInterfaceTrapsPortChannelSubinterface": {
                        "type": "string"
                    },
                    "sourceInterfaceTrapsTenGigabitEthernet": {
                        "type": "string",
                        "description": "Ten Gigabit Ethernet\n"
                    },
                    "sourceInterfaceTrapsVlan": {
                        "type": "integer",
                        "description": "Iosxr Vlans\n"
                    },
                    "systemShutdown": {
                        "type": "boolean",
                        "description": "Enable use of the SNMP reload command\n"
                    },
                    "trapSourceFortyGigabitEthernet": {
                        "type": "string",
                        "description": "Forty GigabitEthernet\n"
                    },
                    "trapSourceGigabitEthernet": {
                        "type": "string",
                        "description": "GigabitEthernet IEEE 802.3z\n"
                    },
                    "trapSourceHundredGigE": {
                        "type": "string",
                        "description": "Hundred GigabitEthernet\n"
                    },
                    "trapSourceLoopback": {
                        "type": "integer",
                        "description": "Loopback interface\n"
                    },
                    "trapSourcePortChannel": {
                        "type": "integer",
                        "description": "Ethernet Channel of interfaces\n"
                    },
                    "trapSourcePortChannelSubinterface": {
                        "type": "string"
                    },
                    "trapSourceTenGigabitEthernet": {
                        "type": "string",
                        "description": "Ten Gigabit Ethernet\n"
                    },
                    "trapSourceVlan": {
                        "type": "integer",
                        "description": "Iosxr Vlans\n"
                    },
                    "views": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getSnmpServerView:getSnmpServerView"
                        },
                        "description": "Define an SNMPv2 MIB view\n"
                    }
                },
                "type": "object",
                "required": [
                    "chassisId",
                    "contact",
                    "contexts",
                    "enableInforms",
                    "enableLoggingGetop",
                    "enableLoggingSetop",
                    "enableTraps",
                    "enableTrapsAuthFrameworkSecViolation",
                    "enableTrapsBfd",
                    "enableTrapsBgpCbgp2",
                    "enableTrapsBridgeNewroot",
                    "enableTrapsBridgeTopologychange",
                    "enableTrapsBulkstatCollection",
                    "enableTrapsBulkstatTransfer",
                    "enableTrapsCallHomeMessageSendFail",
                    "enableTrapsCallHomeServerFail",
                    "enableTrapsCefInconsistency",
                    "enableTrapsCefPeerFibStateChange",
                    "enableTrapsCefPeerStateChange",
                    "enableTrapsCefResourceFailure",
                    "enableTrapsConfig",
                    "enableTrapsConfigCopy",
                    "enableTrapsConfigCtid",
                    "enableTrapsCpuThreshold",
                    "enableTrapsDhcp",
                    "enableTrapsEigrp",
                    "enableTrapsEnergywise",
                    "enableTrapsEntity",
                    "enableTrapsEntityDiagBootUpFail",
                    "enableTrapsEntityDiagHmTestRecover",
                    "enableTrapsEntityDiagHmThreshReached",
                    "enableTrapsEntityDiagScheduledTestFail",
                    "enableTrapsEntityPerfThroughputNotif",
                    "enableTrapsEnvmon",
                    "enableTrapsErrdisable",
                    "enableTrapsEventManager",
                    "enableTrapsFastRerouteProtected",
                    "enableTrapsFlashInsertion",
                    "enableTrapsFlashLowspace",
                    "enableTrapsFlashRemoval",
                    "enableTrapsFlowmon",
                    "enableTrapsFruCtrl",
                    "enableTrapsHsrp",
                    "enableTrapsIkePolicyAdd",
                    "enableTrapsIkePolicyDelete",
                    "enableTrapsIkeTunnelStart",
                    "enableTrapsIkeTunnelStop",
                    "enableTrapsIpmulticast",
                    "enableTrapsIpsecCryptomapAdd",
                    "enableTrapsIpsecCryptomapAttach",
                    "enableTrapsIpsecCryptomapDelete",
                    "enableTrapsIpsecCryptomapDetach",
                    "enableTrapsIpsecTooManySas",
                    "enableTrapsIpsecTunnelStart",
                    "enableTrapsIpsecTunnelStop",
                    "enableTrapsIpsla",
                    "enableTrapsIsis",
                    "enableTrapsLicense",
                    "enableTrapsLocalAuth",
                    "enableTrapsMacNotificationChange",
                    "enableTrapsMacNotificationMove",
                    "enableTrapsMacNotificationThreshold",
                    "enableTrapsMemoryBufferpeak",
                    "enableTrapsMplsLdp",
                    "enableTrapsMplsRfcLdp",
                    "enableTrapsMplsTrafficEng",
                    "enableTrapsMplsVpn",
                    "enableTrapsMsdp",
                    "enableTrapsNhrpNhc",
                    "enableTrapsNhrpNhp",
                    "enableTrapsNhrpNhs",
                    "enableTrapsNhrpQuotaExceeded",
                    "enableTrapsOspfConfigErrors",
                    "enableTrapsOspfConfigLsa",
                    "enableTrapsOspfConfigRetransmit",
                    "enableTrapsOspfConfigStateChange",
                    "enableTrapsOspfErrorsEnable",
                    "enableTrapsOspfLsaEnable",
                    "enableTrapsOspfNssaTransChange",
                    "enableTrapsOspfRetransmitEnable",
                    "enableTrapsOspfShamlinkInterface",
                    "enableTrapsOspfShamlinkNeighbor",
                    "enableTrapsOspfv3ConfigErrors",
                    "enableTrapsOspfv3ConfigStateChange",
                    "enableTrapsPimInvalidPimMessage",
                    "enableTrapsPimNeighborChange",
                    "enableTrapsPimRpMappingChange",
                    "enableTrapsPortSecurity",
                    "enableTrapsPowerEthernetGroup",
                    "enableTrapsPowerEthernetPolice",
                    "enableTrapsPwVc",
                    "enableTrapsRep",
                    "enableTrapsRf",
                    "enableTrapsSmartLicense",
                    "enableTrapsSnmpAuthentication",
                    "enableTrapsSnmpColdstart",
                    "enableTrapsSnmpLinkdown",
                    "enableTrapsSnmpLinkup",
                    "enableTrapsSnmpWarmstart",
                    "enableTrapsStackwise",
                    "enableTrapsStpxInconsistency",
                    "enableTrapsStpxLoopInconsistency",
                    "enableTrapsStpxRootInconsistency",
                    "enableTrapsSyslog",
                    "enableTrapsTransceiverAll",
                    "enableTrapsTty",
                    "enableTrapsUdldLinkFailRpt",
                    "enableTrapsUdldStatusChange",
                    "enableTrapsVlanMembership",
                    "enableTrapsVlancreate",
                    "enableTrapsVlandelete",
                    "enableTrapsVrfmibVnetTrunkDown",
                    "enableTrapsVrfmibVnetTrunkUp",
                    "enableTrapsVrfmibVrfDown",
                    "enableTrapsVrfmibVrfUp",
                    "enableTrapsVtp",
                    "hosts",
                    "id",
                    "ifindexPersist",
                    "location",
                    "packetsize",
                    "queueLength",
                    "snmpCommunities",
                    "sourceInterfaceInformsFortyGigabitEthernet",
                    "sourceInterfaceInformsGigabitEthernet",
                    "sourceInterfaceInformsHundredGigE",
                    "sourceInterfaceInformsLoopback",
                    "sourceInterfaceInformsPortChannel",
                    "sourceInterfaceInformsPortChannelSubinterface",
                    "sourceInterfaceInformsTenGigabitEthernet",
                    "sourceInterfaceInformsVlan",
                    "sourceInterfaceTrapsFortyGigabitEthernet",
                    "sourceInterfaceTrapsGigabitEthernet",
                    "sourceInterfaceTrapsHundredGigE",
                    "sourceInterfaceTrapsLoopback",
                    "sourceInterfaceTrapsPortChannel",
                    "sourceInterfaceTrapsPortChannelSubinterface",
                    "sourceInterfaceTrapsTenGigabitEthernet",
                    "sourceInterfaceTrapsVlan",
                    "systemShutdown",
                    "trapSourceFortyGigabitEthernet",
                    "trapSourceGigabitEthernet",
                    "trapSourceHundredGigE",
                    "trapSourceLoopback",
                    "trapSourcePortChannel",
                    "trapSourcePortChannelSubinterface",
                    "trapSourceTenGigabitEthernet",
                    "trapSourceVlan",
                    "views"
                ]
            }
        },
        "iosxe:index/getSnmpServerGroup:getSnmpServerGroup": {
            "description": "This data source can read the SNMP Server Group configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getSnmpServerGroup({\n    name: \"GROUP1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_snmp_server_group(name=\"GROUP1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetSnmpServerGroup.Invoke(new()\n    {\n        Name = \"GROUP1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupSnmpServerGroup(ctx, \u0026iosxe.LookupSnmpServerGroupArgs{\n\t\t\tName: \"GROUP1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetSnmpServerGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getSnmpServerGroup(GetSnmpServerGroupArgs.builder()\n            .name(\"GROUP1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getSnmpServerGroup\n      Arguments:\n        name: GROUP1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSnmpServerGroup.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSnmpServerGroup.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "v3Securities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getSnmpServerGroupV3Security:getSnmpServerGroupV3Security"
                        },
                        "description": "group using security Level\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "v3Securities"
                ]
            }
        },
        "iosxe:index/getSnmpServerUser:getSnmpServerUser": {
            "description": "This data source can read the SNMP Server User configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getSnmpServerUser({\n    grpname: \"GROUP1\",\n    username: \"USER1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_snmp_server_user(grpname=\"GROUP1\",\n    username=\"USER1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetSnmpServerUser.Invoke(new()\n    {\n        Grpname = \"GROUP1\",\n        Username = \"USER1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupSnmpServerUser(ctx, \u0026iosxe.LookupSnmpServerUserArgs{\n\t\t\tGrpname:  \"GROUP1\",\n\t\t\tUsername: \"USER1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetSnmpServerUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getSnmpServerUser(GetSnmpServerUserArgs.builder()\n            .grpname(\"GROUP1\")\n            .username(\"USER1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getSnmpServerUser\n      Arguments:\n        grpname: GROUP1\n        username: USER1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSnmpServerUser.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "grpname": {
                        "type": "string",
                        "description": "Group to which the user belongs\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Name of the user\n"
                    }
                },
                "type": "object",
                "required": [
                    "grpname",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSnmpServerUser.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "grpname": {
                        "type": "string",
                        "description": "Group to which the user belongs\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Name of the user\n"
                    },
                    "v3AuthAccessAclName": {
                        "type": "string",
                        "description": "Access-list name\n"
                    },
                    "v3AuthAccessIpv6Acl": {
                        "type": "string",
                        "description": "Specify IPv6 Named Access-List\n"
                    },
                    "v3AuthAccessStandardAcl": {
                        "type": "integer",
                        "description": "Standard IP Access-list allowing access with this community string\n"
                    },
                    "v3AuthAlgorithm": {
                        "type": "string",
                        "description": "Use HMAC SHA/MD5 algorithm for authentication\n"
                    },
                    "v3AuthPassword": {
                        "type": "string",
                        "description": "Authentication password for user\n"
                    },
                    "v3AuthPrivAesAccessAclName": {
                        "type": "string",
                        "description": "Access-list name\n"
                    },
                    "v3AuthPrivAesAccessIpv6Acl": {
                        "type": "string",
                        "description": "Specify IPv6 Named Access-List\n"
                    },
                    "v3AuthPrivAesAccessStandardAcl": {
                        "type": "integer",
                        "description": "Standard IP Access-list allowing access with this community string\n"
                    },
                    "v3AuthPrivAesAlgorithm": {
                        "type": "string"
                    },
                    "v3AuthPrivAesPassword": {
                        "type": "string",
                        "description": "Authentication password for user\n"
                    },
                    "v3AuthPrivDes3AccessAclName": {
                        "type": "string",
                        "description": "Access-list name\n"
                    },
                    "v3AuthPrivDes3AccessIpv6Acl": {
                        "type": "string",
                        "description": "Specify IPv6 Named Access-List\n"
                    },
                    "v3AuthPrivDes3AccessStandardAcl": {
                        "type": "integer",
                        "description": "Standard IP Access-list allowing access with this community string\n"
                    },
                    "v3AuthPrivDes3Password": {
                        "type": "string",
                        "description": "Authentication password for user\n"
                    },
                    "v3AuthPrivDesAccessAclName": {
                        "type": "string",
                        "description": "Access-list name\n"
                    },
                    "v3AuthPrivDesAccessIpv6Acl": {
                        "type": "string",
                        "description": "Specify IPv6 Named Access-List\n"
                    },
                    "v3AuthPrivDesAccessStandardAcl": {
                        "type": "integer",
                        "description": "Standard IP Access-list allowing access with this community string\n"
                    },
                    "v3AuthPrivDesPassword": {
                        "type": "string",
                        "description": "Authentication password for user\n"
                    }
                },
                "type": "object",
                "required": [
                    "grpname",
                    "id",
                    "username",
                    "v3AuthAccessAclName",
                    "v3AuthAccessIpv6Acl",
                    "v3AuthAccessStandardAcl",
                    "v3AuthAlgorithm",
                    "v3AuthPassword",
                    "v3AuthPrivAesAccessAclName",
                    "v3AuthPrivAesAccessIpv6Acl",
                    "v3AuthPrivAesAccessStandardAcl",
                    "v3AuthPrivAesAlgorithm",
                    "v3AuthPrivAesPassword",
                    "v3AuthPrivDes3AccessAclName",
                    "v3AuthPrivDes3AccessIpv6Acl",
                    "v3AuthPrivDes3AccessStandardAcl",
                    "v3AuthPrivDes3Password",
                    "v3AuthPrivDesAccessAclName",
                    "v3AuthPrivDesAccessIpv6Acl",
                    "v3AuthPrivDesAccessStandardAcl",
                    "v3AuthPrivDesPassword"
                ]
            }
        },
        "iosxe:index/getStaticRoute:getStaticRoute": {
            "description": "This data source can read the Static Route configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getStaticRoute({\n    mask: \"255.255.255.255\",\n    prefix: \"5.5.5.5\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_static_route(mask=\"255.255.255.255\",\n    prefix=\"5.5.5.5\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetStaticRoute.Invoke(new()\n    {\n        Mask = \"255.255.255.255\",\n        Prefix = \"5.5.5.5\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupStaticRoute(ctx, \u0026iosxe.LookupStaticRouteArgs{\n\t\t\tMask:   \"255.255.255.255\",\n\t\t\tPrefix: \"5.5.5.5\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetStaticRouteArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getStaticRoute(GetStaticRouteArgs.builder()\n            .mask(\"255.255.255.255\")\n            .prefix(\"5.5.5.5\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getStaticRoute\n      Arguments:\n        mask: 255.255.255.255\n        prefix: 5.5.5.5\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getStaticRoute.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "mask": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "mask",
                    "prefix"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getStaticRoute.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "mask": {
                        "type": "string"
                    },
                    "nextHops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getStaticRouteNextHop:getStaticRouteNextHop"
                        }
                    },
                    "prefix": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "mask",
                    "nextHops",
                    "prefix"
                ]
            }
        },
        "iosxe:index/getStaticRouteVrf:getStaticRouteVrf": {
            "description": "This data source can read the Static Route VRF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getStaticRouteVrf({\n    vrf: \"VRF1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_static_route_vrf(vrf=\"VRF1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetStaticRouteVrf.Invoke(new()\n    {\n        Vrf = \"VRF1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupStaticRouteVrf(ctx, \u0026iosxe.LookupStaticRouteVrfArgs{\n\t\t\tVrf: \"VRF1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetStaticRouteVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getStaticRouteVrf(GetStaticRouteVrfArgs.builder()\n            .vrf(\"VRF1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getStaticRouteVrf\n      Arguments:\n        vrf: VRF1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getStaticRouteVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "vrf"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getStaticRouteVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getStaticRouteVrfRoute:getStaticRouteVrfRoute"
                        }
                    },
                    "vrf": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "routes",
                    "vrf"
                ]
            }
        },
        "iosxe:index/getSystem:getSystem": {
            "description": "This data source can read the System configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getSystem({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_system()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetSystem.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupSystem(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetSystemArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getSystem();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getSystem\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSystem.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSystem.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Set system's network name\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipDomainLookup": {
                        "type": "boolean",
                        "description": "Enable IP Domain Name System hostname translation\n"
                    },
                    "ipDomainName": {
                        "type": "string",
                        "description": "Define the default domain name\n"
                    },
                    "ipMulticastRouting": {
                        "type": "boolean",
                        "description": "Enable IP multicast forwarding\n"
                    },
                    "ipMulticastRoutingDistributed": {
                        "type": "boolean",
                        "description": "Distributed multicast switching\n"
                    },
                    "ipRouting": {
                        "type": "boolean",
                        "description": "Enable or disable IP routing\n"
                    },
                    "ipSourceRoute": {
                        "type": "boolean",
                        "description": "Process packets with source routing header options\n"
                    },
                    "ipv6UnicastRouting": {
                        "type": "boolean",
                        "description": "Enable unicast routing\n"
                    },
                    "loginDelay": {
                        "type": "integer",
                        "description": "Set delay between successive fail login\n"
                    },
                    "loginOnFailure": {
                        "type": "boolean",
                        "description": "Set options for failed login attempt\n"
                    },
                    "loginOnFailureLog": {
                        "type": "boolean",
                        "description": "Generate syslogs on failure logins\n"
                    },
                    "loginOnSuccess": {
                        "type": "boolean",
                        "description": "Set options for successful login attempt\n"
                    },
                    "loginOnSuccessLog": {
                        "type": "boolean",
                        "description": "Generate syslogs on successful logins\n"
                    },
                    "mtu": {
                        "type": "integer"
                    },
                    "multicastRoutingSwitch": {
                        "type": "boolean",
                        "description": "Enable IP multicast forwarding, some XE devices use this option instead of `multicast_routing`.\n"
                    },
                    "multicastRoutingVrfs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getSystemMulticastRoutingVrf:getSystemMulticastRoutingVrf"
                        },
                        "description": "Select VPN Routing/Forwarding instance\n"
                    }
                },
                "type": "object",
                "required": [
                    "hostname",
                    "id",
                    "ipDomainLookup",
                    "ipDomainName",
                    "ipMulticastRouting",
                    "ipMulticastRoutingDistributed",
                    "ipRouting",
                    "ipSourceRoute",
                    "ipv6UnicastRouting",
                    "loginDelay",
                    "loginOnFailure",
                    "loginOnFailureLog",
                    "loginOnSuccess",
                    "loginOnSuccessLog",
                    "mtu",
                    "multicastRoutingSwitch",
                    "multicastRoutingVrfs"
                ]
            }
        },
        "iosxe:index/getTacacsServer:getTacacsServer": {
            "description": "This data source can read the TACACS Server configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getTacacsServer({\n    name: \"tacacs_10.10.15.13\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_tacacs_server(name=\"tacacs_10.10.15.13\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetTacacsServer.Invoke(new()\n    {\n        Name = \"tacacs_10.10.15.13\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupTacacsServer(ctx, \u0026iosxe.LookupTacacsServerArgs{\n\t\t\tName: \"tacacs_10.10.15.13\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetTacacsServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getTacacsServer(GetTacacsServerArgs.builder()\n            .name(\"tacacs_10.10.15.13\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getTacacsServer\n      Arguments:\n        name: tacacs_10.10.15.13\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTacacsServer.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the tacacs server configuration\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTacacsServer.\n",
                "properties": {
                    "addressIpv4": {
                        "type": "string",
                        "description": "IPv4 address or Hostname for tacacs server\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The UNENCRYPTED (cleartext) server key\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the tacacs server configuration\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Time to wait for this TACACS server to reply (overrides default)\n"
                    }
                },
                "type": "object",
                "required": [
                    "addressIpv4",
                    "id",
                    "key",
                    "name",
                    "timeout"
                ]
            }
        },
        "iosxe:index/getTemplate:getTemplate": {
            "description": "This data source can read the Template configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getTemplate({\n    templateName: \"TEMP1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_template(template_name=\"TEMP1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetTemplate.Invoke(new()\n    {\n        TemplateName = \"TEMP1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupTemplate(ctx, \u0026iosxe.LookupTemplateArgs{\n\t\t\tTemplateName: \"TEMP1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetTemplateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getTemplate(GetTemplateArgs.builder()\n            .templateName(\"TEMP1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getTemplate\n      Arguments:\n        templateName: TEMP1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTemplate.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template name\n"
                    }
                },
                "type": "object",
                "required": [
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTemplate.\n",
                "properties": {
                    "accessSessionClosed": {
                        "type": "boolean",
                        "description": "Enable closed access on port (disabled by default, i.e. open access)\n"
                    },
                    "accessSessionControlDirection": {
                        "type": "string",
                        "description": "Set the control-direction on the interface\n"
                    },
                    "accessSessionHostMode": {
                        "type": "string",
                        "description": "Set the Host mode for authentication on this interface\n"
                    },
                    "accessSessionInterfaceTemplateSticky": {
                        "type": "boolean",
                        "description": "Interface templates set to sticky\n"
                    },
                    "accessSessionInterfaceTemplateStickyTimer": {
                        "type": "integer",
                        "description": "Sticky timer value\n"
                    },
                    "accessSessionMonitor": {
                        "type": "boolean",
                        "description": "Apply template to monitor access sessions on the port\n"
                    },
                    "accessSessionPortControl": {
                        "type": "string",
                        "description": "Set the port-control value\n"
                    },
                    "authenticationPeriodic": {
                        "type": "boolean",
                        "description": "Enable or Disable Reauthentication for this port\n"
                    },
                    "authenticationTimerReauthenticateRange": {
                        "type": "integer",
                        "description": "Enter a value between 1 and 65535\n"
                    },
                    "authenticationTimerReauthenticateServer": {
                        "type": "boolean",
                        "description": "Obtain re-authentication timeout value from the server\n"
                    },
                    "ctsManual": {
                        "type": "boolean",
                        "description": "Supply local configuration for CTS parameters\n"
                    },
                    "ctsManualPolicyStaticSgt": {
                        "type": "integer",
                        "description": "Source Security Group Tag to apply to untagged or non-trusted incoming traffic\n"
                    },
                    "ctsManualPolicyStaticTrusted": {
                        "type": "boolean",
                        "description": "Trust the Source Group Tags (SGT) that the peer uses for sending\n"
                    },
                    "ctsManualPropagateSgt": {
                        "type": "boolean",
                        "description": "CTS SGT Propagation configuration\n"
                    },
                    "ctsRoleBasedEnforcement": {
                        "type": "boolean",
                        "description": "Enable Role-based Access Control enforcement\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "deviceTracking": {
                        "type": "boolean",
                        "description": "Configure device-tracking on the interface\n"
                    },
                    "deviceTrackingAttachPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getTemplateDeviceTrackingAttachPolicy:getTemplateDeviceTrackingAttachPolicy"
                        },
                        "description": "policy name for device tracking\n"
                    },
                    "deviceTrackingVlanRange": {
                        "type": "string",
                        "description": "VLAN IDs of the VLANs for which this policy applies\n"
                    },
                    "dot1xMaxReauthReq": {
                        "type": "integer",
                        "description": "Max No. of Reauthentication Attempts\n"
                    },
                    "dot1xMaxReq": {
                        "type": "integer",
                        "description": "Max No. of Retries\n"
                    },
                    "dot1xPae": {
                        "type": "string",
                        "description": "Set 802.1x interface pae type\n"
                    },
                    "dot1xTimeoutTxPeriod": {
                        "type": "integer",
                        "description": "Timeout for supplicant retries\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipAccessGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getTemplateIpAccessGroup:getTemplateIpAccessGroup"
                        },
                        "description": "Access control list for IP packets\n"
                    },
                    "ipDhcpSnoopingLimitRate": {
                        "type": "integer",
                        "description": "DHCP snooping rate limit\n"
                    },
                    "ipDhcpSnoopingTrust": {
                        "type": "boolean",
                        "description": "DHCP Snooping trust config\n"
                    },
                    "loadInterval": {
                        "type": "integer",
                        "description": "Load interval delay in seconds\n"
                    },
                    "mab": {
                        "type": "boolean",
                        "description": "MAC Authentication Bypass Interface Config Commands\n"
                    },
                    "mabEap": {
                        "type": "boolean",
                        "description": "Use EAP authentication for MAC Auth Bypass\n"
                    },
                    "servicePolicyInput": {
                        "type": "string",
                        "description": "policy-map name\n"
                    },
                    "servicePolicyOutput": {
                        "type": "string",
                        "description": "policy-map name\n"
                    },
                    "servicePolicyTypeControlSubscriber": {
                        "type": "string",
                        "description": "Apply a subscriber control policy to the interface\n"
                    },
                    "sourceTemplate": {
                        "type": "string",
                        "description": "Get config from a template\n"
                    },
                    "spanningTreeBpduguardEnable": {
                        "type": "boolean",
                        "description": "Enable BPDU guard for this interface\n"
                    },
                    "spanningTreePortfast": {
                        "type": "boolean",
                        "description": "Portfast options for the interface\n"
                    },
                    "spanningTreePortfastDisable": {
                        "type": "boolean",
                        "description": "Disable portfast for this interface\n"
                    },
                    "spanningTreePortfastEdge": {
                        "type": "boolean",
                        "description": "Enable portfast edge on the interface\n"
                    },
                    "spanningTreePortfastNetwork": {
                        "type": "boolean",
                        "description": "Enable portfast network on the interface\n"
                    },
                    "spanningTreeServicePolicy": {
                        "type": "boolean",
                        "description": "help\n"
                    },
                    "stormControlActionShutdown": {
                        "type": "boolean",
                        "description": "Shutdown this interface if a storm occurs\n"
                    },
                    "stormControlActionTrap": {
                        "type": "boolean",
                        "description": "Send SNMP trap if a storm occurs\n"
                    },
                    "stormControlBroadcastLevelBpsThreshold": {
                        "type": "number",
                        "description": "Enter threshold\n"
                    },
                    "stormControlBroadcastLevelPpsThreshold": {
                        "type": "string",
                        "description": "Enter threshold\n"
                    },
                    "stormControlBroadcastLevelThreshold": {
                        "type": "number",
                        "description": "Enter threshold\n"
                    },
                    "stormControlMulticastLevelBpsThreshold": {
                        "type": "number",
                        "description": "Enter threshold\n"
                    },
                    "stormControlMulticastLevelPpsThreshold": {
                        "type": "string",
                        "description": "Enter threshold\n"
                    },
                    "stormControlMulticastLevelThreshold": {
                        "type": "number",
                        "description": "Enter threshold\n"
                    },
                    "subscriberAgingInactivityTimerProbe": {
                        "type": "boolean",
                        "description": "ARP probe\n"
                    },
                    "subscriberAgingInactivityTimerValue": {
                        "type": "integer",
                        "description": "Enter a value between 1 and 65535 in seconds\n"
                    },
                    "subscriberAgingProbe": {
                        "type": "boolean",
                        "description": "ARP probe\n"
                    },
                    "switchportAccessVlan": {
                        "type": "integer",
                        "description": "VLAN ID of the VLAN when this port is in access mode\n"
                    },
                    "switchportBlockUnicast": {
                        "type": "boolean",
                        "description": "Block unknown unicast addresses\n"
                    },
                    "switchportModeAccess": {
                        "type": "boolean",
                        "description": "Set trunking mode to ACCESS unconditionally\n"
                    },
                    "switchportModeTrunk": {
                        "type": "boolean",
                        "description": "Set trunking mode to TRUNK unconditionally\n"
                    },
                    "switchportNonegotiate": {
                        "type": "boolean",
                        "description": "Device will not engage in negotiation protocol on this interface\n"
                    },
                    "switchportPortSecurity": {
                        "type": "boolean",
                        "description": "Security related command\n"
                    },
                    "switchportPortSecurityAgingStatic": {
                        "type": "boolean",
                        "description": "Enable aging for configured secure addresses\n"
                    },
                    "switchportPortSecurityAgingTime": {
                        "type": "integer",
                        "description": "Port-security aging time\n"
                    },
                    "switchportPortSecurityAgingType": {
                        "type": "boolean",
                        "description": "Port-security aging type\n"
                    },
                    "switchportPortSecurityAgingTypeInactivity": {
                        "type": "boolean",
                        "description": "Aging based on inactivity time period\n"
                    },
                    "switchportPortSecurityMaximumRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getTemplateSwitchportPortSecurityMaximumRange:getTemplateSwitchportPortSecurityMaximumRange"
                        }
                    },
                    "switchportPortSecurityViolationProtect": {
                        "type": "boolean",
                        "description": "Security violation protect mode\n"
                    },
                    "switchportPortSecurityViolationRestrict": {
                        "type": "boolean",
                        "description": "Security violation restrict mode\n"
                    },
                    "switchportPortSecurityViolationShutdown": {
                        "type": "boolean",
                        "description": "Security violation shutdown mode\n"
                    },
                    "switchportPrivateVlanHostAssociationPrimaryRange": {
                        "type": "integer",
                        "description": "Primary normal range VLAN ID of the private VLAN port association\n"
                    },
                    "switchportPrivateVlanHostAssociationSecondaryRange": {
                        "type": "integer",
                        "description": "Secondary normal range VLAN ID of the private VLAN host port association\n"
                    },
                    "switchportTrunkAllowedVlans": {
                        "type": "string",
                        "description": "VLAN IDs of the allowed VLANs when this port is in trunking mode\n"
                    },
                    "switchportTrunkAllowedVlansAll": {
                        "type": "boolean",
                        "description": "all VLANs\n"
                    },
                    "switchportTrunkAllowedVlansNone": {
                        "type": "boolean",
                        "description": "no VLANs\n"
                    },
                    "switchportTrunkNativeVlanTag": {
                        "type": "boolean",
                        "description": "Set native VLAN tagging state\n"
                    },
                    "switchportTrunkNativeVlanVlanId": {
                        "type": "integer",
                        "description": "VLAN ID of the native VLAN when this port is in trunking mode\n"
                    },
                    "switchportVoiceVlan": {
                        "type": "integer",
                        "description": "Vlan for voice traffic\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template name\n"
                    }
                },
                "type": "object",
                "required": [
                    "accessSessionClosed",
                    "accessSessionControlDirection",
                    "accessSessionHostMode",
                    "accessSessionInterfaceTemplateSticky",
                    "accessSessionInterfaceTemplateStickyTimer",
                    "accessSessionMonitor",
                    "accessSessionPortControl",
                    "authenticationPeriodic",
                    "authenticationTimerReauthenticateRange",
                    "authenticationTimerReauthenticateServer",
                    "ctsManual",
                    "ctsManualPolicyStaticSgt",
                    "ctsManualPolicyStaticTrusted",
                    "ctsManualPropagateSgt",
                    "ctsRoleBasedEnforcement",
                    "deviceTracking",
                    "deviceTrackingAttachPolicies",
                    "deviceTrackingVlanRange",
                    "dot1xMaxReauthReq",
                    "dot1xMaxReq",
                    "dot1xPae",
                    "dot1xTimeoutTxPeriod",
                    "id",
                    "ipAccessGroups",
                    "ipDhcpSnoopingLimitRate",
                    "ipDhcpSnoopingTrust",
                    "loadInterval",
                    "mab",
                    "mabEap",
                    "servicePolicyInput",
                    "servicePolicyOutput",
                    "servicePolicyTypeControlSubscriber",
                    "sourceTemplate",
                    "spanningTreeBpduguardEnable",
                    "spanningTreePortfast",
                    "spanningTreePortfastDisable",
                    "spanningTreePortfastEdge",
                    "spanningTreePortfastNetwork",
                    "spanningTreeServicePolicy",
                    "stormControlActionShutdown",
                    "stormControlActionTrap",
                    "stormControlBroadcastLevelBpsThreshold",
                    "stormControlBroadcastLevelPpsThreshold",
                    "stormControlBroadcastLevelThreshold",
                    "stormControlMulticastLevelBpsThreshold",
                    "stormControlMulticastLevelPpsThreshold",
                    "stormControlMulticastLevelThreshold",
                    "subscriberAgingInactivityTimerProbe",
                    "subscriberAgingInactivityTimerValue",
                    "subscriberAgingProbe",
                    "switchportAccessVlan",
                    "switchportBlockUnicast",
                    "switchportModeAccess",
                    "switchportModeTrunk",
                    "switchportNonegotiate",
                    "switchportPortSecurity",
                    "switchportPortSecurityAgingStatic",
                    "switchportPortSecurityAgingTime",
                    "switchportPortSecurityAgingType",
                    "switchportPortSecurityAgingTypeInactivity",
                    "switchportPortSecurityMaximumRanges",
                    "switchportPortSecurityViolationProtect",
                    "switchportPortSecurityViolationRestrict",
                    "switchportPortSecurityViolationShutdown",
                    "switchportPrivateVlanHostAssociationPrimaryRange",
                    "switchportPrivateVlanHostAssociationSecondaryRange",
                    "switchportTrunkAllowedVlans",
                    "switchportTrunkAllowedVlansAll",
                    "switchportTrunkAllowedVlansNone",
                    "switchportTrunkNativeVlanTag",
                    "switchportTrunkNativeVlanVlanId",
                    "switchportVoiceVlan",
                    "templateName"
                ]
            }
        },
        "iosxe:index/getUdld:getUdld": {
            "description": "This data source can read the UDLD configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getUdld({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_udld()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetUdld.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupUdld(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetUdldArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getUdld();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getUdld\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUdld.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUdld.\n",
                "properties": {
                    "aggressive": {
                        "type": "boolean",
                        "description": "Enable UDLD protocol in aggressive mode on fiber ports exceptwhere locally configured\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable UDLD protocol on fiber ports except where locally configured\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "messageTime": {
                        "type": "integer",
                        "description": "Set UDLD message time period\n"
                    },
                    "recoveryInterval": {
                        "type": "integer",
                        "description": "timer-interval(sec)\n"
                    }
                },
                "type": "object",
                "required": [
                    "aggressive",
                    "enable",
                    "id",
                    "messageTime",
                    "recoveryInterval"
                ]
            }
        },
        "iosxe:index/getUsername:getUsername": {
            "description": "This data source can read the Username configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getUsername({\n    name: \"user1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_username(name=\"user1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetUsername.Invoke(new()\n    {\n        Name = \"user1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupUsername(ctx, \u0026iosxe.LookupUsernameArgs{\n\t\t\tName: \"user1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetUsernameArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getUsername(GetUsernameArgs.builder()\n            .name(\"user1\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getUsername\n      Arguments:\n        name: user1\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUsername.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUsername.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "description string with max 128 characters\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "passwordEncryption": {
                        "type": "string"
                    },
                    "privilege": {
                        "type": "integer",
                        "description": "Set user privilege level\n"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "secretEncryption": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "name",
                    "password",
                    "passwordEncryption",
                    "privilege",
                    "secret",
                    "secretEncryption"
                ]
            }
        },
        "iosxe:index/getVlan:getVlan": {
            "description": "This data source can read the VLAN configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getVlan({\n    vlanId: 123,\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_vlan(vlan_id=123)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetVlan.Invoke(new()\n    {\n        VlanId = 123,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupVlan(ctx, \u0026iosxe.LookupVlanArgs{\n\t\t\tVlanId: 123,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetVlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getVlan(GetVlanArgs.builder()\n            .vlanId(123)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getVlan\n      Arguments:\n        vlanId: 123\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVlan.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "a single VLAN id (allowed value range 1-4094)or Comma-separated VLAN id range.e.g. 99 or 1-30 or  1-20,30,40-50\n"
                    }
                },
                "type": "object",
                "required": [
                    "vlanId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVlan.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Ascii name of the VLAN\n"
                    },
                    "privateVlanAssociation": {
                        "type": "string",
                        "description": "Configure association between private VLANs\n"
                    },
                    "privateVlanCommunity": {
                        "type": "boolean",
                        "description": "Configure the VLAN as a community private VLAN\n"
                    },
                    "privateVlanIsolated": {
                        "type": "boolean",
                        "description": "Configure the VLAN as an isolated private VLAN\n"
                    },
                    "privateVlanPrimary": {
                        "type": "boolean",
                        "description": "Configure the VLAN as a primary private VLAN\n"
                    },
                    "remoteSpan": {
                        "type": "boolean",
                        "description": "Configure as Remote SPAN VLAN\n"
                    },
                    "shutdown": {
                        "type": "boolean",
                        "description": "Shutdown VLAN switching\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "a single VLAN id (allowed value range 1-4094)or Comma-separated VLAN id range.e.g. 99 or 1-30 or  1-20,30,40-50\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "privateVlanAssociation",
                    "privateVlanCommunity",
                    "privateVlanIsolated",
                    "privateVlanPrimary",
                    "remoteSpan",
                    "shutdown",
                    "vlanId"
                ]
            }
        },
        "iosxe:index/getVlanAccessMap:getVlanAccessMap": {
            "description": "This data source can read the VLAN Access Map configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getVlanAccessMap({\n    name: \"VAM1\",\n    sequence: 10,\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_vlan_access_map(name=\"VAM1\",\n    sequence=10)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetVlanAccessMap.Invoke(new()\n    {\n        Name = \"VAM1\",\n        Sequence = 10,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupVlanAccessMap(ctx, \u0026iosxe.LookupVlanAccessMapArgs{\n\t\t\tName:     \"VAM1\",\n\t\t\tSequence: 10,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetVlanAccessMapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getVlanAccessMap(GetVlanAccessMapArgs.builder()\n            .name(\"VAM1\")\n            .sequence(10)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getVlanAccessMap\n      Arguments:\n        name: VAM1\n        sequence: 10\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVlanAccessMap.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Vlan access map tag\n"
                    },
                    "sequence": {
                        "type": "integer",
                        "description": "Sequence to insert to/delete from existing vlan access-map entry\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "sequence"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVlanAccessMap.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Take the action\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "matchIpAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "matchIpv6Addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Match IPv6 address to access control.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Vlan access map tag\n"
                    },
                    "sequence": {
                        "type": "integer",
                        "description": "Sequence to insert to/delete from existing vlan access-map entry\n"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "id",
                    "matchIpAddresses",
                    "matchIpv6Addresses",
                    "name",
                    "sequence"
                ]
            }
        },
        "iosxe:index/getVlanConfiguration:getVlanConfiguration": {
            "description": "This data source can read the VLAN Configuration configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getVlanConfiguration({\n    vlanId: 123,\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_vlan_configuration(vlan_id=123)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetVlanConfiguration.Invoke(new()\n    {\n        VlanId = 123,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupVlanConfiguration(ctx, \u0026iosxe.LookupVlanConfigurationArgs{\n\t\t\tVlanId: 123,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetVlanConfigurationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getVlanConfiguration(GetVlanConfigurationArgs.builder()\n            .vlanId(123)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getVlanConfiguration\n      Arguments:\n        vlanId: 123\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVlanConfiguration.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "VLAN ID List Eg. 1-10,15\n"
                    }
                },
                "type": "object",
                "required": [
                    "vlanId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVlanConfiguration.\n",
                "properties": {
                    "accessVfi": {
                        "type": "string",
                        "description": "Enter VFI name\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "evpnInstance": {
                        "type": "integer"
                    },
                    "evpnInstanceVni": {
                        "type": "integer",
                        "description": "VxLAN VNI value\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "VLAN ID List Eg. 1-10,15\n"
                    },
                    "vni": {
                        "type": "integer",
                        "description": "VxLAN VNI value\n"
                    }
                },
                "type": "object",
                "required": [
                    "accessVfi",
                    "evpnInstance",
                    "evpnInstanceVni",
                    "id",
                    "vlanId",
                    "vni"
                ]
            }
        },
        "iosxe:index/getVrf:getVrf": {
            "description": "This data source can read the VRF configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getVrf({\n    name: \"VRF22\",\n});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_vrf(name=\"VRF22\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetVrf.Invoke(new()\n    {\n        Name = \"VRF22\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupVrf(ctx, \u0026iosxe.LookupVrfArgs{\n\t\t\tName: \"VRF22\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetVrfArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getVrf(GetVrfArgs.builder()\n            .name(\"VRF22\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getVrf\n      Arguments:\n        name: VRF22\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVrf.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "WORD;;VRF name\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrf.\n",
                "properties": {
                    "addressFamilyIpv4": {
                        "type": "boolean",
                        "description": "Address family\n"
                    },
                    "addressFamilyIpv6": {
                        "type": "boolean",
                        "description": "Address family\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "VRF specific description\n"
                    },
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "ipv4RouteTargetExportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getVrfIpv4RouteTargetExportStitching:getVrfIpv4RouteTargetExportStitching"
                        },
                        "description": "Export Target-VPN community\n"
                    },
                    "ipv4RouteTargetExports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getVrfIpv4RouteTargetExport:getVrfIpv4RouteTargetExport"
                        },
                        "description": "Export Target-VPN community\n"
                    },
                    "ipv4RouteTargetImportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getVrfIpv4RouteTargetImportStitching:getVrfIpv4RouteTargetImportStitching"
                        },
                        "description": "Import Target-VPN community\n"
                    },
                    "ipv4RouteTargetImports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getVrfIpv4RouteTargetImport:getVrfIpv4RouteTargetImport"
                        },
                        "description": "Import Target-VPN community\n"
                    },
                    "ipv6RouteTargetExportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getVrfIpv6RouteTargetExportStitching:getVrfIpv6RouteTargetExportStitching"
                        },
                        "description": "Export Target-VPN community\n"
                    },
                    "ipv6RouteTargetExports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getVrfIpv6RouteTargetExport:getVrfIpv6RouteTargetExport"
                        },
                        "description": "Export Target-VPN community\n"
                    },
                    "ipv6RouteTargetImportStitchings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getVrfIpv6RouteTargetImportStitching:getVrfIpv6RouteTargetImportStitching"
                        },
                        "description": "Import Target-VPN community\n"
                    },
                    "ipv6RouteTargetImports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getVrfIpv6RouteTargetImport:getVrfIpv6RouteTargetImport"
                        },
                        "description": "Import Target-VPN community\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "WORD;;VRF name\n"
                    },
                    "rd": {
                        "type": "string",
                        "description": "Specify Route Distinguisher\n"
                    },
                    "routeTargetExports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getVrfRouteTargetExport:getVrfRouteTargetExport"
                        },
                        "description": "Export Target-VPN community\n"
                    },
                    "routeTargetImports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/iosxe:index/getVrfRouteTargetImport:getVrfRouteTargetImport"
                        },
                        "description": "Import Target-VPN community\n"
                    },
                    "vpnId": {
                        "type": "string",
                        "description": "Configure VPN ID in rfc2685 format\n"
                    }
                },
                "type": "object",
                "required": [
                    "addressFamilyIpv4",
                    "addressFamilyIpv6",
                    "description",
                    "id",
                    "ipv4RouteTargetExports",
                    "ipv4RouteTargetExportStitchings",
                    "ipv4RouteTargetImports",
                    "ipv4RouteTargetImportStitchings",
                    "ipv6RouteTargetExports",
                    "ipv6RouteTargetExportStitchings",
                    "ipv6RouteTargetImports",
                    "ipv6RouteTargetImportStitchings",
                    "name",
                    "rd",
                    "routeTargetExports",
                    "routeTargetImports",
                    "vpnId"
                ]
            }
        },
        "iosxe:index/getVtp:getVtp": {
            "description": "This data source can read the VTP configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as iosxe from \"@pulumi/iosxe\";\n\nconst example = iosxe.getVtp({});\n```\n```python\nimport pulumi\nimport pulumi_iosxe as iosxe\n\nexample = iosxe.get_vtp()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Iosxe = Pulumi.Iosxe;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Iosxe.GetVtp.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-iosxe/sdk/go/iosxe\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iosxe.LookupVtp(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.iosxe.IosxeFunctions;\nimport com.pulumi.iosxe.inputs.GetVtpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IosxeFunctions.getVtp();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: iosxe:getVtp\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVtp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVtp.\n",
                "properties": {
                    "device": {
                        "type": "string",
                        "description": "A device name from the provider configuration.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Set the name of the VTP administrative domain.\n"
                    },
                    "file": {
                        "type": "string",
                        "description": "Configure IFS filesystem file where VTP configuration is stored.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The path of the retrieved object.\n"
                    },
                    "interface": {
                        "type": "string",
                        "description": "The name of the interface providing the VTP updater ID for this device\n"
                    },
                    "interfaceOnly": {
                        "type": "boolean",
                        "description": "Use only this interface's IP address as the VTP IP updater address\n"
                    },
                    "modeClientMst": {
                        "type": "boolean",
                        "description": "Set the mode for MST VTP instance\n"
                    },
                    "modeClientUnknown": {
                        "type": "boolean",
                        "description": "Set the mode for unknown VTP instances\n"
                    },
                    "modeClientVlan": {
                        "type": "boolean",
                        "description": "Set the mode for VLAN VTP instance\n"
                    },
                    "modeOffMst": {
                        "type": "boolean",
                        "description": "Set the mode for MST VTP instance\n"
                    },
                    "modeOffUnknown": {
                        "type": "boolean",
                        "description": "Set the mode for unknown VTP instances\n"
                    },
                    "modeOffVlan": {
                        "type": "boolean",
                        "description": "Set the mode for VLAN VTP instance\n"
                    },
                    "modeServerMst": {
                        "type": "boolean",
                        "description": "Set the mode for MST VTP instance\n"
                    },
                    "modeServerUnknown": {
                        "type": "boolean",
                        "description": "Set the mode for unknown VTP instances\n"
                    },
                    "modeServerVlan": {
                        "type": "boolean",
                        "description": "Set the mode for VLAN VTP instance\n"
                    },
                    "modeTransparentMst": {
                        "type": "boolean",
                        "description": "Set the mode for MST VTP instance\n"
                    },
                    "modeTransparentUnknown": {
                        "type": "boolean",
                        "description": "Set the mode for unknown VTP instances\n"
                    },
                    "modeTransparentVlan": {
                        "type": "boolean",
                        "description": "Set the mode for VLAN VTP instance\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The ascii password for the VTP administrative domain\n"
                    },
                    "passwordHidden": {
                        "type": "boolean",
                        "description": "Set the VTP password hidden option\n"
                    },
                    "passwordSecret": {
                        "type": "boolean",
                        "description": "Specify the vtp password in encrypted form\n"
                    },
                    "pruning": {
                        "type": "boolean",
                        "description": "Set the administrative domain to permit pruning\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Set the administrative domain to VTP version\n"
                    }
                },
                "type": "object",
                "required": [
                    "domain",
                    "file",
                    "id",
                    "interface",
                    "interfaceOnly",
                    "modeClientMst",
                    "modeClientUnknown",
                    "modeClientVlan",
                    "modeOffMst",
                    "modeOffUnknown",
                    "modeOffVlan",
                    "modeServerMst",
                    "modeServerUnknown",
                    "modeServerVlan",
                    "modeTransparentMst",
                    "modeTransparentUnknown",
                    "modeTransparentVlan",
                    "password",
                    "passwordHidden",
                    "passwordSecret",
                    "pruning",
                    "version"
                ]
            }
        }
    }
}